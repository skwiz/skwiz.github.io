define("discourse/lib/export-result", ["exports", "I18n", "bootbox"], function (_exports, _I18n, _bootbox) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.outputExportResult = outputExportResult;

  function outputExportResult(result) {
    if (result.success) {
      _bootbox.default.alert(_I18n.default.t("admin.export_csv.success"));
    } else {
      _bootbox.default.alert(_I18n.default.t("admin.export_csv.failed"));
    }
  }
});
define("admin/adapters/api-key", ["exports", "discourse/adapters/rest"], function (_exports, _rest) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _rest.default.extend({
    jsonMode: true,
    basePath: function basePath() {
      return "/admin/api/";
    },
    apiNameFor: function apiNameFor() {
      return "key";
    }
  });

  _exports.default = _default;
});
define("admin/adapters/build-plugin", ["exports", "discourse/adapters/rest"], function (_exports, _rest) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = buildPluginAdapter;

  function buildPluginAdapter(pluginName) {
    return _rest.default.extend({
      pathFor: function pathFor(store, type, findArgs) {
        return "/admin/plugins/" + pluginName + this._super(store, type, findArgs);
      }
    });
  }
});
define("admin/adapters/customization-base", ["exports", "discourse/adapters/rest"], function (_exports, _rest) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _rest.default.extend({
    basePath: function basePath() {
      return "/admin/customize/";
    }
  });

  _exports.default = _default;
});
define("admin/adapters/email-style", ["exports", "discourse/adapters/rest"], function (_exports, _rest) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _rest.default.extend({
    pathFor: function pathFor() {
      return "/admin/customize/email_style";
    }
  });

  _exports.default = _default;
});
define("admin/adapters/embedding", ["exports", "discourse/adapters/rest"], function (_exports, _rest) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _rest.default.extend({
    pathFor: function pathFor() {
      return "/admin/customize/embedding";
    }
  });

  _exports.default = _default;
});
define("admin/adapters/site-text", ["exports", "admin/adapters/customization-base"], function (_exports, _customizationBase) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _customizationBase.default;
  _exports.default = _default;
});
define("admin/adapters/staff-action-log", ["exports", "discourse/adapters/rest"], function (_exports, _rest) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _rest.default.extend({
    basePath: function basePath() {
      return "/admin/logs/";
    }
  });

  _exports.default = _default;
});
define("admin/adapters/tag-group", ["exports", "discourse/adapters/rest"], function (_exports, _rest) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _rest.default.extend({
    jsonMode: true
  });

  _exports.default = _default;
});
define("admin/adapters/theme", ["exports", "discourse/adapters/rest"], function (_exports, _rest) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _rest.default.extend({
    basePath: function basePath() {
      return "/admin/";
    },
    afterFindAll: function afterFindAll(results) {
      var map = {};
      results.forEach(function (theme) {
        map[theme.id] = theme;
      });
      results.forEach(function (theme) {
        var mapped = theme.get("child_themes") || [];
        mapped = mapped.map(function (t) {
          return map[t.id];
        });
        theme.set("childThemes", mapped);
        var mappedParents = theme.get("parent_themes") || [];
        mappedParents = mappedParents.map(function (t) {
          return map[t.id];
        });
        theme.set("parentThemes", mappedParents);
      });
      return results;
    },
    jsonMode: true
  });

  _exports.default = _default;
});
define("admin/adapters/user-field", ["exports", "admin/adapters/customization-base"], function (_exports, _customizationBase) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var _default = _customizationBase.default;
  _exports.default = _default;
});
define("admin/adapters/web-hook-event", ["exports", "discourse/adapters/rest"], function (_exports, _rest) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _rest.default.extend({
    basePath: function basePath() {
      return "/admin/api/";
    }
  });

  _exports.default = _default;
});
define("admin/adapters/web-hook", ["exports", "discourse/adapters/rest"], function (_exports, _rest) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _rest.default.extend({
    basePath: function basePath() {
      return "/admin/api/";
    }
  });

  _exports.default = _default;
});
define("admin/components/ace-editor", ["exports", "@ember/component", "discourse-common/lib/get-url", "discourse/lib/load-script", "I18n", "discourse-common/utils/decorators", "@ember/object/evented"], function (_exports, _component, _getUrl, _loadScript, _I18n, _decorators, _evented) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var COLOR_VARS_REGEX = /\$(primary|secondary|tertiary|quaternary|header_background|header_primary|highlight|danger|success|love)(\s|;|-(low|medium|high))/g;

  var _default = _component.default.extend((_dec = (0, _decorators.observes)("editorId"), _dec2 = (0, _decorators.observes)("content"), _dec3 = (0, _decorators.observes)("mode"), _dec4 = (0, _decorators.observes)("placeholder"), _dec5 = (0, _decorators.observes)("disabled"), (_obj = {
    mode: "css",
    classNames: ["ace-wrapper"],
    _editor: null,
    _skipContentChangeEvent: null,
    disabled: false,
    htmlPlaceholder: false,
    editorIdChanged: function editorIdChanged() {
      if (this.autofocus) {
        this.send("focus");
      }
    },
    didRender: function didRender() {
      this._skipContentChangeEvent = false;
    },
    contentChanged: function contentChanged() {
      var content = this.content || "";

      if (this._editor && !this._skipContentChangeEvent) {
        this._editor.getSession().setValue(content);
      }
    },
    modeChanged: function modeChanged() {
      if (this._editor && !this._skipContentChangeEvent) {
        this._editor.getSession().setMode("ace/mode/" + this.mode);
      }
    },
    placeholderChanged: function placeholderChanged() {
      if (this._editor) {
        this._editor.setOptions({
          placeholder: this.placeholder
        });
      }
    },
    disabledStateChanged: function disabledStateChanged() {
      this.changeDisabledState();
    },
    changeDisabledState: function changeDisabledState() {
      var editor = this._editor;

      if (editor) {
        var disabled = this.disabled;
        editor.setOptions({
          readOnly: disabled,
          highlightActiveLine: !disabled,
          highlightGutterLine: !disabled
        });
        editor.container.parentNode.setAttribute("data-disabled", disabled);
      }
    },
    _destroyEditor: (0, _evented.on)("willDestroyElement", function () {
      if (this._editor) {
        this._editor.destroy();

        this._editor = null;
      }

      if (this.appEvents) {
        // xxx: don't run during qunit tests
        this.appEvents.off("ace:resize", this, "resize");
      }

      $(window).off("ace:resize");
    }),
    resize: function resize() {
      if (this._editor) {
        this._editor.resize();
      }
    },
    didInsertElement: function didInsertElement() {
      var _this = this;

      this._super.apply(this, arguments);

      (0, _loadScript.default)("/javascripts/ace/ace.js").then(function () {
        window.ace.require(["ace/ace"], function (loadedAce) {
          loadedAce.config.set("loadWorkerFromBlob", false);
          loadedAce.config.set("workerPath", (0, _getUrl.default)("/javascripts/ace")); // Do not use CDN for workers

          if (_this.htmlPlaceholder) {
            _this._overridePlaceholder(loadedAce);
          }

          if (!_this.element || _this.isDestroying || _this.isDestroyed) {
            return;
          }

          var editor = loadedAce.edit(_this.element.querySelector(".ace"));
          editor.setTheme("ace/theme/chrome");
          editor.setShowPrintMargin(false);
          editor.setOptions({
            fontSize: "14px",
            placeholder: _this.placeholder
          });
          editor.getSession().setMode("ace/mode/" + _this.mode);
          editor.on("change", function () {
            _this._skipContentChangeEvent = true;

            _this.set("content", editor.getSession().getValue());
          });

          if (_this.attrs.save) {
            editor.commands.addCommand({
              name: "save",
              exec: function exec() {
                _this.attrs.save();
              },
              bindKey: {
                mac: "cmd-s",
                win: "ctrl-s"
              }
            });
          }

          editor.on("blur", function () {
            _this.warnSCSSDeprecations();
          });
          editor.$blockScrolling = Infinity;
          editor.renderer.setScrollMargin(10, 10);

          _this.element.setAttribute("data-editor", editor);

          _this._editor = editor;

          _this.changeDisabledState();

          _this.warnSCSSDeprecations();

          $(window).off("ace:resize").on("ace:resize", function () {
            return _this.appEvents.trigger("ace:resize");
          });

          if (_this.appEvents) {
            // xxx: don't run during qunit tests
            _this.appEvents.on("ace:resize", _this, "resize");
          }

          if (_this.autofocus) {
            _this.send("focus");
          }
        });
      });
    },
    warnSCSSDeprecations: function warnSCSSDeprecations() {
      if (this.mode !== "scss" || this.editorId.startsWith("color_definitions") || !this._editor) {
        return;
      }

      var warnings = this.content.split("\n").map(function (line, row) {
        if (line.match(COLOR_VARS_REGEX)) {
          return {
            row: row,
            column: 0,
            text: _I18n.default.t("admin.customize.theme.scss_warning_inline"),
            type: "warning"
          };
        }
      }).filter(Boolean);

      this._editor.getSession().setAnnotations(warnings);

      this.setWarning(warnings.length ? _I18n.default.t("admin.customize.theme.scss_color_variables_warning") : false);
    },
    actions: {
      focus: function focus() {
        if (this._editor) {
          this._editor.focus();

          this._editor.navigateFileEnd();
        }
      }
    },
    _overridePlaceholder: function _overridePlaceholder(loadedAce) {
      var originalPlaceholderSetter = loadedAce.config.$defaultOptions.editor.placeholder.set;

      loadedAce.config.$defaultOptions.editor.placeholder.set = function () {
        if (!this.$updatePlaceholder) {
          var originalRendererOn = this.renderer.on;

          this.renderer.on = function () {};

          originalPlaceholderSetter.call.apply(originalPlaceholderSetter, [this].concat(Array.prototype.slice.call(arguments)));
          this.renderer.on = originalRendererOn;
          var originalUpdatePlaceholder = this.$updatePlaceholder;

          this.$updatePlaceholder = function () {
            originalUpdatePlaceholder.call.apply(originalUpdatePlaceholder, [this].concat(Array.prototype.slice.call(arguments)));

            if (this.renderer.placeholderNode) {
              this.renderer.placeholderNode.innerHTML = this.$placeholder || "";
            }
          }.bind(this);

          this.on("input", this.$updatePlaceholder);
        }

        this.$updatePlaceholder();
      };
    }
  }, (_applyDecoratedDescriptor(_obj, "editorIdChanged", [_dec], Object.getOwnPropertyDescriptor(_obj, "editorIdChanged"), _obj), _applyDecoratedDescriptor(_obj, "contentChanged", [_dec2], Object.getOwnPropertyDescriptor(_obj, "contentChanged"), _obj), _applyDecoratedDescriptor(_obj, "modeChanged", [_dec3], Object.getOwnPropertyDescriptor(_obj, "modeChanged"), _obj), _applyDecoratedDescriptor(_obj, "placeholderChanged", [_dec4], Object.getOwnPropertyDescriptor(_obj, "placeholderChanged"), _obj), _applyDecoratedDescriptor(_obj, "disabledStateChanged", [_dec5], Object.getOwnPropertyDescriptor(_obj, "disabledStateChanged"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/admin-backups-logs", ["exports", "discourse-common/utils/decorators", "@ember/component", "I18n", "discourse-common/lib/debounce", "@ember/runloop"], function (_exports, _decorators, _component, _I18n, _debounce, _runloop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.on)("init"), _dec2 = (0, _decorators.observes)("logs.[]"), _dec3 = (0, _decorators.on)("init"), _dec4 = (0, _decorators.observes)("logs.[]"), (_obj = {
    classNames: ["admin-backups-logs"],
    showLoadingSpinner: false,
    hasFormattedLogs: false,
    noLogsMessage: _I18n.default.t("admin.backups.logs.none"),
    init: function init() {
      this._super.apply(this, arguments);

      this._reset();
    },
    _reset: function _reset() {
      this.setProperties({
        formattedLogs: "",
        index: 0
      });
    },
    _scrollDown: function _scrollDown() {
      var div = this.element;
      div.scrollTop = div.scrollHeight;
    },
    _resetFormattedLogs: function _resetFormattedLogs() {
      if (this.logs.length === 0) {
        this._reset(); // reset the cached logs whenever the model is reset


        this.renderLogs();
      }
    },
    _updateFormattedLogsFunc: function _updateFormattedLogsFunc() {
      var logs = this.logs;

      if (logs.length === 0) {
        return;
      } // do the log formatting only once for HELLish performance


      var formattedLogs = this.formattedLogs;

      for (var i = this.index, length = logs.length; i < length; i++) {
        var date = logs[i].get("timestamp"),
            message = logs[i].get("message");
        formattedLogs += "[" + date + "] " + message + "\n";
      } // update the formatted logs & cache index


      this.setProperties({
        formattedLogs: formattedLogs,
        index: logs.length
      }); // force rerender

      this.renderLogs();
      (0, _runloop.scheduleOnce)("afterRender", this, this._scrollDown);
    },
    _updateFormattedLogs: function _updateFormattedLogs() {
      (0, _debounce.default)(this, this._updateFormattedLogsFunc, 150);
    },
    renderLogs: function renderLogs() {
      var formattedLogs = this.formattedLogs;

      if (formattedLogs && formattedLogs.length > 0) {
        this.set("hasFormattedLogs", true);
      } else {
        this.set("hasFormattedLogs", false);
      } // add a loading indicator


      if (this.get("status.isOperationRunning")) {
        this.set("showLoadingSpinner", true);
      } else {
        this.set("showLoadingSpinner", false);
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "_resetFormattedLogs", [_dec, _dec2], Object.getOwnPropertyDescriptor(_obj, "_resetFormattedLogs"), _obj), _applyDecoratedDescriptor(_obj, "_updateFormattedLogs", [_dec3, _dec4], Object.getOwnPropertyDescriptor(_obj, "_updateFormattedLogs"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/admin-editable-field", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    tagName: "",
    buffer: "",
    editing: false,
    init: function init() {
      this._super.apply(this, arguments);

      this.set("editing", false);
    },
    actions: {
      edit: function edit() {
        this.set("buffer", this.value);
        this.toggleProperty("editing");
      },
      save: function save() {
        // Action has to toggle 'editing' property.
        this.action(this.buffer);
      }
    }
  });

  _exports.default = _default;
});
define("admin/components/admin-form-row", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    classNames: ["row"]
  });

  _exports.default = _default;
});
define("admin/components/admin-graph", ["exports", "@ember/component", "discourse/lib/load-script"], function (_exports, _component, _loadScript) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    tagName: "canvas",
    type: "line",
    refreshChart: function refreshChart() {
      var ctx = this.element.getContext("2d");
      var model = this.model;
      var rawData = this.get("model.data");
      var data = {
        labels: rawData.map(function (r) {
          return r.x;
        }),
        datasets: [{
          data: rawData.map(function (r) {
            return r.y;
          }),
          label: model.get("title"),
          backgroundColor: "rgba(200,220,240,".concat(this.type === "bar" ? 1 : 0.3, ")"),
          borderColor: "#08C"
        }]
      };
      var config = {
        type: this.type,
        data: data,
        options: {
          responsive: true,
          plugins: {
            tooltip: {
              callbacks: {
                title: function title(context) {
                  return moment(context[0].label, "YYYY-MM-DD").format("LL");
                }
              }
            }
          },
          scales: {
            y: [{
              display: true,
              ticks: {
                stepSize: 1
              }
            }]
          }
        }
      };
      this._chart = new window.Chart(ctx, config);
    },
    didInsertElement: function didInsertElement() {
      var _this = this;

      (0, _loadScript.default)("/javascripts/Chart.min.js").then(function () {
        return _this.refreshChart.apply(_this);
      });
    }
  });

  _exports.default = _default;
});
define("admin/components/admin-nav", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    tagName: ""
  });

  _exports.default = _default;
});
define("admin/components/admin-penalty-history", ["exports", "@ember/component", "discourse-common/utils/decorators"], function (_exports, _component, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.default)("user.penalty_counts.suspended"), _dec2 = (0, _decorators.default)("user.penalty_counts.silenced"), (_obj = {
    classNames: ["penalty-history"],
    suspendedCountClass: function suspendedCountClass(count) {
      if (count > 0) {
        return "danger";
      }

      return "";
    },
    silencedCountClass: function silencedCountClass(count) {
      if (count > 0) {
        return "danger";
      }

      return "";
    }
  }, (_applyDecoratedDescriptor(_obj, "suspendedCountClass", [_dec], Object.getOwnPropertyDescriptor(_obj, "suspendedCountClass"), _obj), _applyDecoratedDescriptor(_obj, "silencedCountClass", [_dec2], Object.getOwnPropertyDescriptor(_obj, "silencedCountClass"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/admin-report-chart", ["exports", "admin/models/report", "@ember/component", "discourse-common/lib/debounce", "discourse/lib/load-script", "discourse-common/lib/helpers", "discourse/lib/formatter", "@ember/runloop"], function (_exports, _report, _component, _debounce, _loadScript, _helpers, _formatter, _runloop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    classNames: ["admin-report-chart"],
    limit: 8,
    total: 0,
    options: null,
    init: function init() {
      var _this = this;

      this._super.apply(this, arguments);

      this.resizeHandler = function () {
        return (0, _debounce.default)(_this, _this._scheduleChartRendering, 500);
      };
    },
    didInsertElement: function didInsertElement() {
      this._super.apply(this, arguments);

      $(window).on("resize.chart", this.resizeHandler);
    },
    willDestroyElement: function willDestroyElement() {
      this._super.apply(this, arguments);

      $(window).off("resize.chart", this.resizeHandler);

      this._resetChart();
    },
    didReceiveAttrs: function didReceiveAttrs() {
      this._super.apply(this, arguments);

      (0, _debounce.default)(this, this._scheduleChartRendering, 100);
    },
    _scheduleChartRendering: function _scheduleChartRendering() {
      var _this2 = this;

      (0, _runloop.schedule)("afterRender", function () {
        _this2._renderChart(_this2.model, _this2.element && _this2.element.querySelector(".chart-canvas"));
      });
    },
    _renderChart: function _renderChart(model, chartCanvas) {
      var _this3 = this;

      if (!chartCanvas) {
        return;
      }

      var context = chartCanvas.getContext("2d");

      var chartData = this._applyChartGrouping(model, (0, _helpers.makeArray)(model.get("chartData") || model.get("data"), "weekly"), this.options);

      var prevChartData = (0, _helpers.makeArray)(model.get("prevChartData") || model.get("prev_data"));
      var labels = chartData.map(function (d) {
        return d.x;
      });
      var data = {
        labels: labels,
        datasets: [{
          data: chartData.map(function (d) {
            return Math.round(parseFloat(d.y));
          }),
          backgroundColor: prevChartData.length ? "transparent" : model.secondary_color,
          borderColor: model.primary_color,
          pointRadius: 3,
          borderWidth: 1,
          pointBackgroundColor: model.primary_color,
          pointBorderColor: model.primary_color
        }]
      };

      if (prevChartData.length) {
        data.datasets.push({
          data: prevChartData.map(function (d) {
            return Math.round(parseFloat(d.y));
          }),
          borderColor: model.primary_color,
          borderDash: [5, 5],
          backgroundColor: "transparent",
          borderWidth: 1,
          pointRadius: 0
        });
      }

      (0, _loadScript.default)("/javascripts/Chart.min.js").then(function () {
        _this3._resetChart();

        if (!_this3.element) {
          return;
        }

        _this3._chart = new window.Chart(context, _this3._buildChartConfig(data, _this3.options));
      });
    },
    _buildChartConfig: function _buildChartConfig(data, options) {
      return {
        type: "line",
        data: data,
        options: {
          plugins: {
            tooltip: {
              callbacks: {
                title: function title(tooltipItem) {
                  return moment(tooltipItem[0].label, "YYYY-MM-DD").format("LL");
                }
              }
            },
            legend: {
              display: false
            }
          },
          responsive: true,
          maintainAspectRatio: false,
          responsiveAnimationDuration: 0,
          animation: {
            duration: 0
          },
          layout: {
            padding: {
              left: 0,
              top: 0,
              right: 0,
              bottom: 0
            }
          },
          scales: {
            y: [{
              display: true,
              ticks: {
                callback: function callback(label) {
                  return (0, _formatter.number)(label);
                },
                sampleSize: 5,
                maxRotation: 25,
                minRotation: 25
              }
            }],
            x: [{
              display: true,
              gridLines: {
                display: false
              },
              type: "time",
              time: {
                unit: _report.default.unitForGrouping(options.chartGrouping)
              },
              ticks: {
                sampleSize: 5,
                maxRotation: 50,
                minRotation: 50
              }
            }]
          }
        }
      };
    },
    _resetChart: function _resetChart() {
      if (this._chart) {
        this._chart.destroy();

        this._chart = null;
      }
    },
    _applyChartGrouping: function _applyChartGrouping(model, data, options) {
      return _report.default.collapse(model, data, options.chartGrouping);
    }
  });

  _exports.default = _default;
});
define("admin/components/admin-report-counters", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    classNames: ["admin-report-counters"],
    attributeBindings: ["model.description:title"]
  });

  _exports.default = _default;
});
define("admin/components/admin-report-counts", ["exports", "@ember/component", "@ember/object/computed"], function (_exports, _component, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    allTime: true,
    tagName: "tr",
    reverseColors: (0, _computed.match)("report.type", /^(time_to_first_response|topics_with_no_response)$/),
    classNameBindings: ["reverseColors"]
  });

  _exports.default = _default;
});
define("admin/components/admin-report-inline-table", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    classNames: ["admin-report-inline-table"]
  });

  _exports.default = _default;
});
define("admin/components/admin-report-per-day-counts", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    tagName: "tr"
  });

  _exports.default = _default;
});
define("admin/components/admin-report-stacked-chart", ["exports", "admin/models/report", "@ember/component", "discourse-common/lib/debounce", "discourse/lib/load-script", "discourse-common/lib/helpers", "discourse/lib/formatter", "@ember/runloop"], function (_exports, _report, _component, _debounce, _loadScript, _helpers, _formatter, _runloop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    classNames: ["admin-report-chart", "admin-report-stacked-chart"],
    init: function init() {
      var _this = this;

      this._super.apply(this, arguments);

      this.resizeHandler = function () {
        return (0, _debounce.default)(_this, _this._scheduleChartRendering, 500);
      };
    },
    didInsertElement: function didInsertElement() {
      this._super.apply(this, arguments);

      $(window).on("resize.chart", this.resizeHandler);
    },
    willDestroyElement: function willDestroyElement() {
      this._super.apply(this, arguments);

      $(window).off("resize.chart", this.resizeHandler);

      this._resetChart();
    },
    didReceiveAttrs: function didReceiveAttrs() {
      this._super.apply(this, arguments);

      (0, _debounce.default)(this, this._scheduleChartRendering, 100);
    },
    _scheduleChartRendering: function _scheduleChartRendering() {
      var _this2 = this;

      (0, _runloop.schedule)("afterRender", function () {
        if (!_this2.element) {
          return;
        }

        _this2._renderChart(_this2.model, _this2.element.querySelector(".chart-canvas"));
      });
    },
    _renderChart: function _renderChart(model, chartCanvas) {
      var _this3 = this;

      if (!chartCanvas) {
        return;
      }

      var context = chartCanvas.getContext("2d");
      var chartData = (0, _helpers.makeArray)(model.get("chartData") || model.get("data"));
      var data = {
        labels: chartData[0].data.mapBy("x"),
        datasets: chartData.map(function (cd) {
          return {
            label: cd.label,
            stack: "pageviews-stack",
            data: _report.default.collapse(model, cd.data),
            backgroundColor: cd.color
          };
        })
      };
      (0, _loadScript.default)("/javascripts/Chart.min.js").then(function () {
        _this3._resetChart();

        _this3._chart = new window.Chart(context, _this3._buildChartConfig(data));
      });
    },
    _buildChartConfig: function _buildChartConfig(data) {
      return {
        type: "bar",
        data: data,
        options: {
          responsive: true,
          maintainAspectRatio: false,
          responsiveAnimationDuration: 0,
          hover: {
            mode: "index"
          },
          animation: {
            duration: 0
          },
          plugins: {
            tooltip: {
              mode: "index",
              intersect: false,
              callbacks: {
                beforeFooter: function beforeFooter(tooltipItem) {
                  var total = 0;
                  tooltipItem.forEach(function (item) {
                    return total += parseInt(item.parsed.y || 0, 10);
                  });
                  return "= ".concat(total);
                },
                title: function title(tooltipItem) {
                  return moment(tooltipItem[0].label, "YYYY-MM-DD").format("LL");
                }
              }
            }
          },
          layout: {
            padding: {
              left: 0,
              top: 0,
              right: 0,
              bottom: 0
            }
          },
          scales: {
            y: [{
              stacked: true,
              display: true,
              ticks: {
                callback: function callback(label) {
                  return (0, _formatter.number)(label);
                },
                sampleSize: 5,
                maxRotation: 25,
                minRotation: 25
              }
            }],
            x: [{
              display: true,
              gridLines: {
                display: false
              },
              type: "time",
              time: {
                unit: _report.default.unitForDatapoints(data.labels.length)
              },
              ticks: {
                sampleSize: 5,
                maxRotation: 50,
                minRotation: 50
              }
            }]
          }
        }
      };
    },
    _resetChart: function _resetChart() {
      if (this._chart) {
        this._chart.destroy();

        this._chart = null;
      }
    }
  });

  _exports.default = _default;
});
define("admin/components/admin-report-storage-stats", ["exports", "@ember/component", "I18n", "@ember/object/computed", "discourse-common/utils/decorators", "discourse/lib/computed"], function (_exports, _component, _I18n, _computed, _decorators, _computed2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.default)("backupStats"), _dec2 = (0, _decorators.default)("backupLocation"), _dec3 = (0, _decorators.default)("backupStats.used_bytes"), _dec4 = (0, _decorators.default)("backupStats.free_bytes"), _dec5 = (0, _decorators.default)("uploadStats.used_bytes"), _dec6 = (0, _decorators.default)("uploadStats.free_bytes"), (_obj = {
    classNames: ["admin-report-storage-stats"],
    backupLocation: (0, _computed2.setting)("backup_location"),
    backupStats: (0, _computed.alias)("model.data.backups"),
    uploadStats: (0, _computed.alias)("model.data.uploads"),
    showBackupStats: function showBackupStats(stats) {
      return stats && this.currentUser.admin;
    },
    backupLocationName: function backupLocationName(backupLocation) {
      return _I18n.default.t("admin.backups.location.".concat(backupLocation));
    },
    usedBackupSpace: function usedBackupSpace(bytes) {
      return _I18n.default.toHumanSize(bytes);
    },
    freeBackupSpace: function freeBackupSpace(bytes) {
      return _I18n.default.toHumanSize(bytes);
    },
    usedUploadSpace: function usedUploadSpace(bytes) {
      return _I18n.default.toHumanSize(bytes);
    },
    freeUploadSpace: function freeUploadSpace(bytes) {
      return _I18n.default.toHumanSize(bytes);
    }
  }, (_applyDecoratedDescriptor(_obj, "showBackupStats", [_dec], Object.getOwnPropertyDescriptor(_obj, "showBackupStats"), _obj), _applyDecoratedDescriptor(_obj, "backupLocationName", [_dec2], Object.getOwnPropertyDescriptor(_obj, "backupLocationName"), _obj), _applyDecoratedDescriptor(_obj, "usedBackupSpace", [_dec3], Object.getOwnPropertyDescriptor(_obj, "usedBackupSpace"), _obj), _applyDecoratedDescriptor(_obj, "freeBackupSpace", [_dec4], Object.getOwnPropertyDescriptor(_obj, "freeBackupSpace"), _obj), _applyDecoratedDescriptor(_obj, "usedUploadSpace", [_dec5], Object.getOwnPropertyDescriptor(_obj, "usedUploadSpace"), _obj), _applyDecoratedDescriptor(_obj, "freeUploadSpace", [_dec6], Object.getOwnPropertyDescriptor(_obj, "freeUploadSpace"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/admin-report-table-cell", ["exports", "@ember/component", "@ember/object/computed", "discourse-common/utils/decorators"], function (_exports, _component, _computed, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.default)("label", "data", "options"), (_obj = {
    tagName: "td",
    classNames: ["admin-report-table-cell"],
    classNameBindings: ["type", "property"],
    options: null,
    computedLabel: function computedLabel(label, data, options) {
      return label.compute(data, options || {});
    },
    type: (0, _computed.alias)("label.type"),
    property: (0, _computed.alias)("label.mainProperty"),
    formatedValue: (0, _computed.alias)("computedLabel.formatedValue"),
    value: (0, _computed.alias)("computedLabel.value")
  }, (_applyDecoratedDescriptor(_obj, "computedLabel", [_dec], Object.getOwnPropertyDescriptor(_obj, "computedLabel"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/admin-report-table-header", ["exports", "@ember/component", "discourse-common/utils/decorators"], function (_exports, _component, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.default)("currentSortLabel.sortProperty", "label.sortProperty"), _dec2 = (0, _decorators.default)("currentSortDirection"), (_obj = {
    tagName: "th",
    classNames: ["admin-report-table-header"],
    classNameBindings: ["label.mainProperty", "label.type", "isCurrentSort"],
    attributeBindings: ["label.title:title"],
    isCurrentSort: function isCurrentSort(currentSortField, labelSortField) {
      return currentSortField === labelSortField;
    },
    sortIcon: function sortIcon(currentSortDirection) {
      return currentSortDirection === 1 ? "caret-up" : "caret-down";
    }
  }, (_applyDecoratedDescriptor(_obj, "isCurrentSort", [_dec], Object.getOwnPropertyDescriptor(_obj, "isCurrentSort"), _obj), _applyDecoratedDescriptor(_obj, "sortIcon", [_dec2], Object.getOwnPropertyDescriptor(_obj, "sortIcon"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/admin-report-table-row", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    tagName: "tr",
    classNames: ["admin-report-table-row"],
    options: null
  });

  _exports.default = _default;
});
define("admin/components/admin-report-table", ["exports", "@ember/component", "@ember/object/computed", "discourse-common/utils/decorators", "discourse-common/lib/helpers"], function (_exports, _component, _computed, _decorators, _helpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var PAGES_LIMIT = 8;

  var _default = _component.default.extend((_dec = (0, _decorators.default)("model.computedLabels.length"), _dec2 = (0, _decorators.default)("totalsForSample", "options.total", "model.dates_filtering"), _dec3 = (0, _decorators.default)("model.total", "options.total", "twoColumns"), _dec4 = (0, _decorators.default)("model.{average,data}", "totalsForSample.1.value", "twoColumns"), _dec5 = (0, _decorators.default)("totalsForSample.1.value", "model.data.length"), _dec6 = (0, _decorators.default)("model.data.length"), _dec7 = (0, _decorators.default)("totalsForSampleRow", "model.computedLabels"), _dec8 = (0, _decorators.default)("model.data", "model.computedLabels"), _dec9 = (0, _decorators.default)("sortLabel", "sortDirection", "model.data.[]"), _dec10 = (0, _decorators.default)("sortedData.[]", "perPage", "page"), _dec11 = (0, _decorators.default)("model.data", "perPage", "page"), (_obj = {
    classNameBindings: ["sortable", "twoColumns"],
    classNames: ["admin-report-table"],
    sortable: false,
    sortDirection: 1,
    perPage: (0, _computed.alias)("options.perPage"),
    page: 0,
    twoColumns: function twoColumns(labelsLength) {
      return labelsLength === 2;
    },
    showTotalForSample: function showTotalForSample(totalsForSample, total, datesFiltering) {
      // check if we have at least one cell which contains a value
      var sum = totalsForSample.map(function (t) {
        return t.value;
      }).compact().reduce(function (s, v) {
        return s + v;
      }, 0);
      return sum >= 1 && total && datesFiltering;
    },
    showTotal: function showTotal(reportTotal, total, twoColumns) {
      return reportTotal && total && twoColumns;
    },
    showAverage: function showAverage(model, sampleTotalValue, hasTwoColumns) {
      return model.average && model.data.length > 0 && sampleTotalValue && hasTwoColumns;
    },
    averageForSample: function averageForSample(totals, count) {
      return (totals / count).toFixed(0);
    },
    showSortingUI: function showSortingUI(dataLength) {
      return dataLength >= 5;
    },
    totalsForSample: function totalsForSample(row, labels) {
      return labels.map(function (label) {
        var computedLabel = label.compute(row);
        computedLabel.type = label.type;
        computedLabel.property = label.mainProperty;
        return computedLabel;
      });
    },
    totalsForSampleRow: function totalsForSampleRow(rows, labels) {
      if (!rows || !rows.length) {
        return {};
      }

      var totalsRow = {};
      labels.forEach(function (label) {
        var reducer = function reducer(sum, row) {
          var computedLabel = label.compute(row);
          var value = computedLabel.value;

          if (!["seconds", "number", "percent"].includes(label.type)) {
            return;
          } else {
            return sum + Math.round(value || 0);
          }
        };

        var total = rows.reduce(reducer, 0);
        totalsRow[label.mainProperty] = label.type === "percent" ? Math.round(total / rows.length) : total;
      });
      return totalsRow;
    },
    sortedData: function sortedData(sortLabel, sortDirection, data) {
      data = (0, _helpers.makeArray)(data);

      if (sortLabel) {
        var compare = function compare(label, direction) {
          return function (a, b) {
            var aValue = label.compute(a, {
              useSortProperty: true
            }).value;
            var bValue = label.compute(b, {
              useSortProperty: true
            }).value;
            var result = aValue < bValue ? -1 : aValue > bValue ? 1 : 0;
            return result * direction;
          };
        };

        return data.sort(compare(sortLabel, sortDirection));
      }

      return data;
    },
    paginatedData: function paginatedData(data, perPage, page) {
      if (perPage < data.length) {
        var start = perPage * page;
        return data.slice(start, start + perPage);
      }

      return data;
    },
    pages: function pages(data, perPage, page) {
      if (!data || data.length <= perPage) {
        return [];
      }

      var pagesIndexes = [];

      for (var i = 0; i < Math.ceil(data.length / perPage); i++) {
        pagesIndexes.push(i);
      }

      var pages = pagesIndexes.map(function (v) {
        return {
          page: v + 1,
          index: v,
          class: v === page ? "is-current" : null
        };
      });

      if (pages.length > PAGES_LIMIT) {
        var before = Math.max(0, page - PAGES_LIMIT / 2);
        var after = Math.max(PAGES_LIMIT, page + PAGES_LIMIT / 2);
        pages = pages.slice(before, after);
      }

      return pages;
    },
    actions: {
      changePage: function changePage(page) {
        this.set("page", page);
      },
      sortByLabel: function sortByLabel(label) {
        if (this.sortLabel === label) {
          this.set("sortDirection", this.sortDirection === 1 ? -1 : 1);
        } else {
          this.set("sortLabel", label);
        }
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "twoColumns", [_dec], Object.getOwnPropertyDescriptor(_obj, "twoColumns"), _obj), _applyDecoratedDescriptor(_obj, "showTotalForSample", [_dec2], Object.getOwnPropertyDescriptor(_obj, "showTotalForSample"), _obj), _applyDecoratedDescriptor(_obj, "showTotal", [_dec3], Object.getOwnPropertyDescriptor(_obj, "showTotal"), _obj), _applyDecoratedDescriptor(_obj, "showAverage", [_dec4], Object.getOwnPropertyDescriptor(_obj, "showAverage"), _obj), _applyDecoratedDescriptor(_obj, "averageForSample", [_dec5], Object.getOwnPropertyDescriptor(_obj, "averageForSample"), _obj), _applyDecoratedDescriptor(_obj, "showSortingUI", [_dec6], Object.getOwnPropertyDescriptor(_obj, "showSortingUI"), _obj), _applyDecoratedDescriptor(_obj, "totalsForSample", [_dec7], Object.getOwnPropertyDescriptor(_obj, "totalsForSample"), _obj), _applyDecoratedDescriptor(_obj, "totalsForSampleRow", [_dec8], Object.getOwnPropertyDescriptor(_obj, "totalsForSampleRow"), _obj), _applyDecoratedDescriptor(_obj, "sortedData", [_dec9], Object.getOwnPropertyDescriptor(_obj, "sortedData"), _obj), _applyDecoratedDescriptor(_obj, "paginatedData", [_dec10], Object.getOwnPropertyDescriptor(_obj, "paginatedData"), _obj), _applyDecoratedDescriptor(_obj, "pages", [_dec11], Object.getOwnPropertyDescriptor(_obj, "pages"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/admin-report-trust-level-counts", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    tagName: "tr"
  });

  _exports.default = _default;
});
define("admin/components/admin-report", ["exports", "@ember/object", "admin/models/report", "@ember/object/computed", "@ember/component", "I18n", "discourse/lib/reports-loader", "discourse-common/utils/decorators", "discourse/lib/export-csv", "@ember/utils", "discourse-common/config/environment", "discourse-common/lib/helpers", "@ember/runloop", "discourse/lib/export-result"], function (_exports, _object, _report, _computed, _component, _I18n, _reportsLoader, _decorators, _exportCsv, _utils, _environment, _helpers, _runloop, _exportResult) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var TABLE_OPTIONS = {
    perPage: 8,
    total: true,
    limit: 20,
    formatNumbers: true
  };
  var CHART_OPTIONS = {};

  var _default = _component.default.extend((_dec = (0, _decorators.default)("dataSourceName", "model.type"), _dec2 = (0, _decorators.default)("dataSourceName", "model.type"), _dec3 = (0, _decorators.default)("displayedModes.length"), _dec4 = (0, _decorators.default)("currentMode"), _dec5 = (0, _decorators.default)("currentMode", "model.modes", "forcedModes"), _dec6 = (0, _decorators.default)("currentMode"), _dec7 = (0, _decorators.default)("dataSourceName", "startDate", "endDate", "filters.customFilters"), _dec8 = (0, _decorators.default)("options.chartGrouping", "model.chartData.length"), (_obj = {
    classNameBindings: ["isHidden:hidden", "isHidden::is-visible", "isEnabled", "isLoading", "dasherizedDataSourceName"],
    classNames: ["admin-report"],
    isEnabled: true,
    disabledLabel: _I18n.default.t("admin.dashboard.disabled"),
    isLoading: false,
    rateLimitationString: null,
    dataSourceName: null,
    report: null,
    model: null,
    reportOptions: null,
    forcedModes: null,
    showAllReportsLink: false,
    filters: null,
    showTrend: false,
    showHeader: true,
    showTitle: true,
    showFilteringUI: false,
    showDatesOptions: (0, _computed.alias)("model.dates_filtering"),
    showRefresh: (0, _computed.or)("showDatesOptions", "model.available_filters.length"),
    shouldDisplayTrend: (0, _computed.and)("showTrend", "model.prev_period"),
    endDate: null,
    startDate: null,
    init: function init() {
      this._super.apply(this, arguments);

      this._reports = [];
    },
    isHidden: (0, _object.computed)("siteSettings.dashboard_hidden_reports", function () {
      return (this.siteSettings.dashboard_hidden_reports || "").split("|").filter(Boolean).includes(this.dataSourceName);
    }),
    didReceiveAttrs: function didReceiveAttrs() {
      this._super.apply(this, arguments);

      var startDate = moment();

      if (this.filters && (0, _utils.isPresent)(this.filters.startDate)) {
        startDate = moment(this.filters.startDate, "YYYY-MM-DD");
      }

      this.set("startDate", startDate);
      var endDate = moment();

      if (this.filters && (0, _utils.isPresent)(this.filters.endDate)) {
        endDate = moment(this.filters.endDate, "YYYY-MM-DD");
      }

      this.set("endDate", endDate);

      if (this.filters) {
        this.set("currentMode", this.filters.mode);
      }

      if (this.report) {
        this._renderReport(this.report, this.forcedModes, this.currentMode);
      } else if (this.dataSourceName) {
        this._fetchReport();
      }
    },
    showError: (0, _computed.or)("showTimeoutError", "showExceptionError", "showNotFoundError"),
    showNotFoundError: (0, _computed.equal)("model.error", "not_found"),
    showTimeoutError: (0, _computed.equal)("model.error", "timeout"),
    showExceptionError: (0, _computed.equal)("model.error", "exception"),
    hasData: (0, _computed.notEmpty)("model.data"),
    dasherizedDataSourceName: function dasherizedDataSourceName(dataSourceName, type) {
      return (dataSourceName || type || "undefined").replace(/_/g, "-");
    },
    dataSource: function dataSource(dataSourceName, type) {
      dataSourceName = dataSourceName || type;
      return "/admin/reports/".concat(dataSourceName);
    },
    showModes: function showModes(displayedModesLength) {
      return displayedModesLength > 1;
    },
    isChartMode: function isChartMode(currentMode) {
      return currentMode === "chart";
    },
    changeGrouping: function changeGrouping(grouping) {
      this.send("refreshReport", {
        chartGrouping: grouping
      });
    },
    displayedModes: function displayedModes(currentMode, reportModes, forcedModes) {
      var modes = forcedModes ? forcedModes.split(",") : reportModes;
      return (0, _helpers.makeArray)(modes).map(function (mode) {
        var base = "btn-default mode-btn ".concat(mode);
        var cssClass = currentMode === mode ? "".concat(base, " btn-primary") : base;
        return {
          mode: mode,
          cssClass: cssClass,
          icon: mode === "table" ? "table" : "signal"
        };
      });
    },
    modeComponent: function modeComponent(currentMode) {
      return "admin-report-".concat(currentMode.replace(/_/g, "-"));
    },
    reportKey: function reportKey(dataSourceName, startDate, endDate, customFilters) {
      if (!dataSourceName || !startDate || !endDate) {
        return null;
      }

      startDate = startDate.toISOString(true).split("T")[0];
      endDate = endDate.toISOString(true).split("T")[0];
      var reportKey = "reports:";
      reportKey += [dataSourceName, (0, _environment.isTesting)() ? "start" : startDate.replace(/-/g, ""), (0, _environment.isTesting)() ? "end" : endDate.replace(/-/g, ""), "[:prev_period]", this.get("reportOptions.table.limit"), // Convert all filter values to strings to ensure unique serialization
      customFilters ? JSON.stringify(customFilters, function (k, v) {
        return k ? "".concat(v) : v;
      }) : null, _report.SCHEMA_VERSION].filter(function (x) {
        return x;
      }).map(function (x) {
        return x.toString();
      }).join(":");
      return reportKey;
    },
    chartGroupings: function chartGroupings(grouping, count) {
      var options = ["daily", "weekly", "monthly"];
      return options.map(function (id) {
        return {
          id: id,
          disabled: id === "daily" && count >= _report.DAILY_LIMIT_DAYS,
          label: "admin.dashboard.reports.".concat(id),
          class: "chart-grouping ".concat(grouping === id ? "active" : "inactive")
        };
      });
    },
    onChangeDateRange: function onChangeDateRange(range) {
      this.setProperties({
        startDate: range.from,
        endDate: range.to
      });
    },
    applyFilter: function applyFilter(id, value) {
      var customFilters = this.get("filters.customFilters") || {};

      if (typeof value === "undefined") {
        delete customFilters[id];
      } else {
        customFilters[id] = value;
      }

      this.send("refreshReport", {
        filters: customFilters
      });
    },
    refreshReport: function refreshReport() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      if (!this.attrs.onRefresh) {
        return;
      }

      this.attrs.onRefresh({
        type: this.get("model.type"),
        mode: this.currentMode,
        chartGrouping: options.chartGrouping,
        startDate: typeof options.startDate === "undefined" ? this.startDate : options.startDate,
        endDate: typeof options.endDate === "undefined" ? this.endDate : options.endDate,
        filters: typeof options.filters === "undefined" ? this.get("filters.customFilters") : options.filters
      });
    },
    exportCsv: function exportCsv() {
      var args = {
        name: this.get("model.type"),
        start_date: this.startDate.toISOString(true).split("T")[0],
        end_date: this.endDate.toISOString(true).split("T")[0]
      };
      var customFilters = this.get("filters.customFilters");

      if (customFilters) {
        Object.assign(args, customFilters);
      }

      (0, _exportCsv.exportEntity)("report", args).then(_exportResult.outputExportResult);
    },
    onChangeMode: function onChangeMode(mode) {
      this.set("currentMode", mode);
      this.send("refreshReport", {
        chartGrouping: null
      });
    },
    _computeReport: function _computeReport() {
      var _this = this;

      if (!this.element || this.isDestroying || this.isDestroyed) {
        return;
      }

      if (!this._reports || !this._reports.length) {
        return;
      } // on a slow network _fetchReport could be called multiple times between
      // T and T+x, and all the ajax responses would occur after T+(x+y)
      // to avoid any inconsistencies we filter by period and make sure
      // the array contains only unique values


      var filteredReports = this._reports.uniqBy("report_key");

      var report;

      var sort = function sort(r) {
        if (r.length > 1) {
          return r.findBy("type", _this.dataSourceName);
        } else {
          return r;
        }
      };

      if (!this.startDate || !this.endDate) {
        report = sort(filteredReports)[0];
      } else {
        report = sort(filteredReports.filter(function (r) {
          return r.report_key.includes(_this.reportKey);
        }))[0];

        if (!report) {
          return;
        }
      }

      if (report.error === "not_found") {
        this.set("showFilteringUI", false);
      }

      this._renderReport(report, this.forcedModes, this.currentMode);
    },
    _renderReport: function _renderReport(report, forcedModes, currentMode) {
      var modes = forcedModes ? forcedModes.split(",") : report.modes;
      currentMode = currentMode || (modes ? modes[0] : null);
      this.setProperties({
        model: report,
        currentMode: currentMode,
        options: this._buildOptions(currentMode, report)
      });
    },
    _fetchReport: function _fetchReport() {
      var _this2 = this;

      this._super.apply(this, arguments);

      this.setProperties({
        isLoading: true,
        rateLimitationString: null
      });
      (0, _runloop.next)(function () {
        var payload = _this2._buildPayload(["prev_period"]);

        var callback = function callback(response) {
          if (!_this2.element || _this2.isDestroying || _this2.isDestroyed) {
            return;
          }

          _this2.set("isLoading", false);

          if (response === 429) {
            _this2.set("rateLimitationString", _I18n.default.t("admin.dashboard.too_many_requests"));
          } else if (response === 500) {
            _this2.set("model.error", "exception");
          } else if (response) {
            _this2._reports.push(_this2._loadReport(response));

            _this2._computeReport();
          }
        };

        _reportsLoader.default.enqueue(_this2.dataSourceName, payload.data, callback);
      });
    },
    _buildPayload: function _buildPayload(facets) {
      var payload = {
        data: {
          facets: facets
        }
      };

      if (this.startDate) {
        payload.data.start_date = moment(this.startDate).toISOString(true).split("T")[0];
      }

      if (this.endDate) {
        payload.data.end_date = moment(this.endDate).toISOString(true).split("T")[0];
      }

      if (this.get("reportOptions.table.limit")) {
        payload.data.limit = this.get("reportOptions.table.limit");
      }

      if (this.get("filters.customFilters")) {
        payload.data.filters = this.get("filters.customFilters");
      }

      return payload;
    },
    _buildOptions: function _buildOptions(mode, report) {
      if (mode === "table") {
        var tableOptions = JSON.parse(JSON.stringify(TABLE_OPTIONS));
        return _object.default.create(Object.assign(tableOptions, this.get("reportOptions.table") || {}));
      } else if (mode === "chart") {
        var chartOptions = JSON.parse(JSON.stringify(CHART_OPTIONS));
        return _object.default.create(Object.assign(chartOptions, this.get("reportOptions.chart") || {}, {
          chartGrouping: this.get("reportOptions.chartGrouping") || _report.default.groupingForDatapoints(report.chartData.length)
        }));
      }
    },
    _loadReport: function _loadReport(jsonReport) {
      _report.default.fillMissingDates(jsonReport, {
        filledField: "chartData"
      });

      if (jsonReport.chartData && jsonReport.modes[0] === "stacked_chart") {
        jsonReport.chartData = jsonReport.chartData.map(function (chartData) {
          if (chartData.length > 40) {
            return {
              data: chartData.data,
              req: chartData.req,
              label: chartData.label,
              color: chartData.color
            };
          } else {
            return chartData;
          }
        });
      }

      if (jsonReport.prev_data) {
        _report.default.fillMissingDates(jsonReport, {
          filledField: "prevChartData",
          dataField: "prev_data",
          starDate: jsonReport.prev_startDate,
          endDate: jsonReport.prev_endDate
        });
      }

      return _report.default.create(jsonReport);
    }
  }, (_applyDecoratedDescriptor(_obj, "dasherizedDataSourceName", [_dec], Object.getOwnPropertyDescriptor(_obj, "dasherizedDataSourceName"), _obj), _applyDecoratedDescriptor(_obj, "dataSource", [_dec2], Object.getOwnPropertyDescriptor(_obj, "dataSource"), _obj), _applyDecoratedDescriptor(_obj, "showModes", [_dec3], Object.getOwnPropertyDescriptor(_obj, "showModes"), _obj), _applyDecoratedDescriptor(_obj, "isChartMode", [_dec4], Object.getOwnPropertyDescriptor(_obj, "isChartMode"), _obj), _applyDecoratedDescriptor(_obj, "changeGrouping", [_object.action], Object.getOwnPropertyDescriptor(_obj, "changeGrouping"), _obj), _applyDecoratedDescriptor(_obj, "displayedModes", [_dec5], Object.getOwnPropertyDescriptor(_obj, "displayedModes"), _obj), _applyDecoratedDescriptor(_obj, "modeComponent", [_dec6], Object.getOwnPropertyDescriptor(_obj, "modeComponent"), _obj), _applyDecoratedDescriptor(_obj, "reportKey", [_dec7], Object.getOwnPropertyDescriptor(_obj, "reportKey"), _obj), _applyDecoratedDescriptor(_obj, "chartGroupings", [_dec8], Object.getOwnPropertyDescriptor(_obj, "chartGroupings"), _obj), _applyDecoratedDescriptor(_obj, "onChangeDateRange", [_object.action], Object.getOwnPropertyDescriptor(_obj, "onChangeDateRange"), _obj), _applyDecoratedDescriptor(_obj, "applyFilter", [_object.action], Object.getOwnPropertyDescriptor(_obj, "applyFilter"), _obj), _applyDecoratedDescriptor(_obj, "refreshReport", [_object.action], Object.getOwnPropertyDescriptor(_obj, "refreshReport"), _obj), _applyDecoratedDescriptor(_obj, "exportCsv", [_object.action], Object.getOwnPropertyDescriptor(_obj, "exportCsv"), _obj), _applyDecoratedDescriptor(_obj, "onChangeMode", [_object.action], Object.getOwnPropertyDescriptor(_obj, "onChangeMode"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/admin-theme-editor", ["exports", "@ember/component", "I18n", "discourse-common/utils/decorators", "discourse/lib/computed", "discourse/lib/text-direction", "@ember/runloop"], function (_exports, _component, _I18n, _decorators, _computed, _textDirection, _runloop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _obj, _init;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.default)("theme.targets", "onlyOverridden", "showAdvanced"), _dec2 = (0, _decorators.default)("currentTargetName", "onlyOverridden", "theme.fields"), _dec3 = (0, _decorators.default)("currentTargetName", "fieldName"), _dec4 = (0, _decorators.default)("currentTargetName", "fieldName"), _dec5 = (0, _decorators.default)("fieldName", "currentTargetName", "theme"), _dec6 = (0, _decorators.default)("maximized"), _dec7 = (0, _decorators.default)("currentTargetName", "theme.targets"), _dec8 = (0, _decorators.default)("currentTargetName", "fieldName", "theme.theme_fields.@each.error"), (_obj = {
    warning: null,
    visibleTargets: function visibleTargets(targets, onlyOverridden, showAdvanced) {
      return targets.filter(function (target) {
        if (target.advanced && !showAdvanced) {
          return false;
        }

        if (!onlyOverridden) {
          return true;
        }

        return target.edited;
      });
    },
    visibleFields: function visibleFields(targetName, onlyOverridden, fields) {
      fields = fields[targetName];

      if (onlyOverridden) {
        fields = fields.filter(function (field) {
          return field.edited;
        });
      }

      return fields;
    },
    activeSectionMode: function activeSectionMode(targetName, fieldName) {
      if (["settings", "translations"].includes(targetName)) {
        return "yaml";
      }

      if (["extra_scss"].includes(targetName)) {
        return "scss";
      }

      if (["color_definitions"].includes(fieldName)) {
        return "scss";
      }

      return fieldName && fieldName.indexOf("scss") > -1 ? "scss" : "html";
    },
    placeholder: function placeholder(targetName, fieldName) {
      if (fieldName && fieldName === "color_definitions") {
        var example = ":root {\n" + "  --mytheme-tertiary-or-quaternary: #{dark-light-choose($tertiary, $quaternary)};\n" + "}";
        return _I18n.default.t("admin.customize.theme.color_definitions.placeholder", {
          example: (0, _textDirection.isDocumentRTL)() ? "<div dir=\"ltr\">".concat(example, "</div>") : example
        });
      }

      return "";
    },
    activeSection: {
      get: function get(fieldName, target, model) {
        return model.getField(target, fieldName);
      },
      set: function set(value, fieldName, target, model) {
        model.setField(target, fieldName, value);
        return value;
      }
    },
    editorId: (0, _computed.fmt)("fieldName", "currentTargetName", "%@|%@"),
    maximizeIcon: function maximizeIcon(maximized) {
      return maximized ? "discourse-compress" : "discourse-expand";
    },
    showAddField: function showAddField(currentTargetName, targets) {
      return targets.find(function (t) {
        return t.name === currentTargetName;
      }).customNames;
    },
    error: function error(target, fieldName) {
      return this.theme.getError(target, fieldName);
    },
    actions: {
      toggleShowAdvanced: function toggleShowAdvanced() {
        this.toggleProperty("showAdvanced");
      },
      toggleAddField: function toggleAddField() {
        this.toggleProperty("addingField");
      },
      cancelAddField: function cancelAddField() {
        this.set("addingField", false);
      },
      addField: function addField(name) {
        if (!name) {
          return;
        }

        name = name.replace(/[^a-zA-Z0-9-_/]/g, "");
        this.theme.setField(this.currentTargetName, name, "");
        this.setProperties({
          newFieldName: "",
          addingField: false
        });
        this.fieldAdded(this.currentTargetName, name);
      },
      toggleMaximize: function toggleMaximize() {
        var _this = this;

        this.toggleProperty("maximized");
        (0, _runloop.next)(function () {
          return _this.appEvents.trigger("ace:resize");
        });
      },
      onlyOverriddenChanged: function onlyOverriddenChanged(value) {
        this.onlyOverriddenChanged(value);
      },
      save: function save() {
        this.attrs.save();
      },
      setWarning: function setWarning(message) {
        this.set("warning", message);
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "visibleTargets", [_dec], Object.getOwnPropertyDescriptor(_obj, "visibleTargets"), _obj), _applyDecoratedDescriptor(_obj, "visibleFields", [_dec2], Object.getOwnPropertyDescriptor(_obj, "visibleFields"), _obj), _applyDecoratedDescriptor(_obj, "activeSectionMode", [_dec3], Object.getOwnPropertyDescriptor(_obj, "activeSectionMode"), _obj), _applyDecoratedDescriptor(_obj, "placeholder", [_dec4], Object.getOwnPropertyDescriptor(_obj, "placeholder"), _obj), _applyDecoratedDescriptor(_obj, "activeSection", [_dec5], (_init = Object.getOwnPropertyDescriptor(_obj, "activeSection"), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
      return _init;
    }
  }), _obj), _applyDecoratedDescriptor(_obj, "maximizeIcon", [_dec6], Object.getOwnPropertyDescriptor(_obj, "maximizeIcon"), _obj), _applyDecoratedDescriptor(_obj, "showAddField", [_dec7], Object.getOwnPropertyDescriptor(_obj, "showAddField"), _obj), _applyDecoratedDescriptor(_obj, "error", [_dec8], Object.getOwnPropertyDescriptor(_obj, "error"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/admin-user-field-item", ["exports", "discourse-common/utils/decorators", "discourse/lib/computed", "@ember/component", "I18n", "admin/models/user-field", "discourse/mixins/buffered-content", "@ember/object/computed", "@ember/utils", "discourse/lib/ajax-error", "@ember/runloop"], function (_exports, _decorators, _computed, _component, _I18n, _userField, _bufferedContent, _computed2, _utils, _ajaxError, _runloop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((0, _bufferedContent.bufferedProperty)("userField"), (_dec = (0, _decorators.default)("buffered.field_type"), _dec2 = (0, _decorators.on)("didInsertElement"), _dec3 = (0, _decorators.observes)("editing"), _dec4 = (0, _decorators.default)("userField.field_type"), _dec5 = (0, _decorators.default)("userField.{editable,required,show_on_profile,show_on_user_card,searchable}"), (_obj = {
    editing: (0, _computed2.empty)("userField.id"),
    classNameBindings: [":user-field"],
    cantMoveUp: (0, _computed.propertyEqual)("userField", "firstField"),
    cantMoveDown: (0, _computed.propertyEqual)("userField", "lastField"),
    userFieldsDescription: (0, _computed.i18n)("admin.user_fields.description"),
    bufferedFieldType: function bufferedFieldType(fieldType) {
      return _userField.default.fieldTypeById(fieldType);
    },
    _focusOnEdit: function _focusOnEdit() {
      if (this.editing) {
        (0, _runloop.scheduleOnce)("afterRender", this, "_focusName");
      }
    },
    _focusName: function _focusName() {
      $(".user-field-name").select();
    },
    fieldName: function fieldName(fieldType) {
      return _userField.default.fieldTypeById(fieldType).get("name");
    },
    flags: function flags(userField) {
      var ret = [];

      if (userField.editable) {
        ret.push(_I18n.default.t("admin.user_fields.editable.enabled"));
      }

      if (userField.required) {
        ret.push(_I18n.default.t("admin.user_fields.required.enabled"));
      }

      if (userField.showOnProfile) {
        ret.push(_I18n.default.t("admin.user_fields.show_on_profile.enabled"));
      }

      if (userField.showOnUserCard) {
        ret.push(_I18n.default.t("admin.user_fields.show_on_user_card.enabled"));
      }

      if (userField.searchable) {
        ret.push(_I18n.default.t("admin.user_fields.searchable.enabled"));
      }

      return ret.join(", ");
    },
    actions: {
      save: function save() {
        var _this = this;

        var buffered = this.buffered;
        var attrs = buffered.getProperties("name", "description", "field_type", "editable", "required", "show_on_profile", "show_on_user_card", "searchable", "options");
        this.userField.save(attrs).then(function () {
          _this.set("editing", false);

          _this.commitBuffer();
        }).catch(_ajaxError.popupAjaxError);
      },
      edit: function edit() {
        this.set("editing", true);
      },
      cancel: function cancel() {
        var id = this.get("userField.id");

        if ((0, _utils.isEmpty)(id)) {
          this.destroyAction(this.userField);
        } else {
          this.rollbackBuffer();
          this.set("editing", false);
        }
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "bufferedFieldType", [_dec], Object.getOwnPropertyDescriptor(_obj, "bufferedFieldType"), _obj), _applyDecoratedDescriptor(_obj, "_focusOnEdit", [_dec2, _dec3], Object.getOwnPropertyDescriptor(_obj, "_focusOnEdit"), _obj), _applyDecoratedDescriptor(_obj, "fieldName", [_dec4], Object.getOwnPropertyDescriptor(_obj, "fieldName"), _obj), _applyDecoratedDescriptor(_obj, "flags", [_dec5], Object.getOwnPropertyDescriptor(_obj, "flags"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/admin-watched-word", ["exports", "@ember/component", "@ember/object/computed", "bootbox", "discourse-common/utils/decorators", "@ember/object", "I18n"], function (_exports, _component, _computed, _bootbox, _decorators, _object, _I18n) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.default)("word.replacement"), (_obj = {
    classNames: ["watched-word"],
    isReplace: (0, _computed.equal)("actionKey", "replace"),
    isTag: (0, _computed.equal)("actionKey", "tag"),
    isLink: (0, _computed.equal)("actionKey", "link"),
    tags: function tags(replacement) {
      return replacement.split(",");
    },
    deleteWord: function deleteWord() {
      var _this = this;

      this.word.destroy().then(function () {
        _this.action(_this.word);
      }).catch(function (e) {
        _bootbox.default.alert(_I18n.default.t("generic_error_with_reason", {
          error: "http: ".concat(e.status, " - ").concat(e.body)
        }));
      });
    }
  }, (_applyDecoratedDescriptor(_obj, "tags", [_dec], Object.getOwnPropertyDescriptor(_obj, "tags"), _obj), _applyDecoratedDescriptor(_obj, "deleteWord", [_object.action], Object.getOwnPropertyDescriptor(_obj, "deleteWord"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/admin-web-hook-event-chooser", ["exports", "@ember/component", "I18n", "@ember/object/computed", "discourse-common/utils/decorators"], function (_exports, _component, _I18n, _computed, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _obj, _init;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.default)("typeName"), _dec2 = (0, _decorators.default)("typeName"), _dec3 = (0, _decorators.default)("model.[]", "typeName"), _dec4 = (0, _decorators.default)("eventTypeExists"), (_obj = {
    classNames: ["hook-event"],
    typeName: (0, _computed.alias)("type.name"),
    name: function name(typeName) {
      return _I18n.default.t("admin.web_hooks.".concat(typeName, "_event.name"));
    },
    details: function details(typeName) {
      return _I18n.default.t("admin.web_hooks.".concat(typeName, "_event.details"));
    },
    eventTypeExists: function eventTypeExists(eventTypes, typeName) {
      return eventTypes.any(function (event) {
        return event.name === typeName;
      });
    },
    enabled: {
      get: function get(eventTypeExists) {
        return eventTypeExists;
      },
      set: function set(value, eventTypeExists) {
        var type = this.type;
        var model = this.model; // add an association when not exists

        if (value !== eventTypeExists) {
          if (value) {
            model.addObject(type);
          } else {
            model.removeObjects(model.filter(function (eventType) {
              return eventType.name === type.name;
            }));
          }
        }

        return value;
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "name", [_dec], Object.getOwnPropertyDescriptor(_obj, "name"), _obj), _applyDecoratedDescriptor(_obj, "details", [_dec2], Object.getOwnPropertyDescriptor(_obj, "details"), _obj), _applyDecoratedDescriptor(_obj, "eventTypeExists", [_dec3], Object.getOwnPropertyDescriptor(_obj, "eventTypeExists"), _obj), _applyDecoratedDescriptor(_obj, "enabled", [_dec4], (_init = Object.getOwnPropertyDescriptor(_obj, "enabled"), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
      return _init;
    }
  }), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/admin-web-hook-event", ["exports", "discourse/lib/formatter", "@ember/component", "I18n", "discourse/lib/ajax", "bootbox", "discourse-common/utils/decorators", "discourse/lib/ajax-error"], function (_exports, _formatter, _component, _I18n, _ajax, _bootbox, _decorators, _ajaxError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.default)("model.status"), _dec2 = (0, _decorators.default)("model.created_at"), _dec3 = (0, _decorators.default)("model.duration"), _dec4 = (0, _decorators.default)("expandDetails"), _dec5 = (0, _decorators.default)("expandDetails"), (_obj = {
    tagName: "li",
    expandDetails: null,
    expandDetailsRequestKey: "request",
    expandDetailsResponseKey: "response",
    statusColorClasses: function statusColorClasses(status) {
      if (!status) {
        return "";
      }

      if (status >= 200 && status <= 299) {
        return "text-successful";
      } else {
        return "text-danger";
      }
    },
    createdAt: function createdAt(_createdAt) {
      return moment(_createdAt).format("YYYY-MM-DD HH:mm:ss");
    },
    completion: function completion(duration) {
      var seconds = Math.floor(duration / 10.0) / 100.0;
      return _I18n.default.t("admin.web_hooks.events.completed_in", {
        count: seconds
      });
    },
    expandRequestIcon: function expandRequestIcon(expandDetails) {
      return expandDetails === this.expandDetailsRequestKey ? "ellipsis-h" : "ellipsis-v";
    },
    expandResponseIcon: function expandResponseIcon(expandDetails) {
      return expandDetails === this.expandDetailsResponseKey ? "ellipsis-h" : "ellipsis-v";
    },
    actions: {
      redeliver: function redeliver() {
        var _this = this;

        return _bootbox.default.confirm(_I18n.default.t("admin.web_hooks.events.redeliver_confirm"), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (result) {
          if (result) {
            (0, _ajax.ajax)("/admin/api/web_hooks/".concat(_this.get("model.web_hook_id"), "/events/").concat(_this.get("model.id"), "/redeliver"), {
              type: "POST"
            }).then(function (json) {
              _this.set("model", json.web_hook_event);
            }).catch(_ajaxError.popupAjaxError);
          }
        });
      },
      toggleRequest: function toggleRequest() {
        var expandDetailsKey = this.expandDetailsRequestKey;

        if (this.expandDetails !== expandDetailsKey) {
          var headers = Object.assign({
            "Request URL": this.get("model.request_url"),
            "Request method": "POST"
          }, (0, _formatter.ensureJSON)(this.get("model.headers")));
          this.setProperties({
            headers: (0, _formatter.plainJSON)(headers),
            body: (0, _formatter.prettyJSON)(this.get("model.payload")),
            expandDetails: expandDetailsKey,
            bodyLabel: _I18n.default.t("admin.web_hooks.events.payload")
          });
        } else {
          this.set("expandDetails", null);
        }
      },
      toggleResponse: function toggleResponse() {
        var expandDetailsKey = this.expandDetailsResponseKey;

        if (this.expandDetails !== expandDetailsKey) {
          this.setProperties({
            headers: (0, _formatter.plainJSON)(this.get("model.response_headers")),
            body: this.get("model.response_body"),
            expandDetails: expandDetailsKey,
            bodyLabel: _I18n.default.t("admin.web_hooks.events.body")
          });
        } else {
          this.set("expandDetails", null);
        }
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "statusColorClasses", [_dec], Object.getOwnPropertyDescriptor(_obj, "statusColorClasses"), _obj), _applyDecoratedDescriptor(_obj, "createdAt", [_dec2], Object.getOwnPropertyDescriptor(_obj, "createdAt"), _obj), _applyDecoratedDescriptor(_obj, "completion", [_dec3], Object.getOwnPropertyDescriptor(_obj, "completion"), _obj), _applyDecoratedDescriptor(_obj, "expandRequestIcon", [_dec4], Object.getOwnPropertyDescriptor(_obj, "expandRequestIcon"), _obj), _applyDecoratedDescriptor(_obj, "expandResponseIcon", [_dec5], Object.getOwnPropertyDescriptor(_obj, "expandResponseIcon"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/admin-web-hook-status", ["exports", "@ember/component", "I18n", "discourse-common/utils/decorators", "discourse-common/lib/icon-library"], function (_exports, _component, _I18n, _decorators, _iconLibrary) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.default)("deliveryStatuses", "model.last_delivery_status"), _dec2 = (0, _decorators.default)("status.id", "icons"), _dec3 = (0, _decorators.default)("status.id", "classes"), (_obj = {
    classes: ["text-muted", "text-danger", "text-successful", "text-muted"],
    icons: ["far-circle", "times-circle", "circle", "circle"],
    circleIcon: null,
    deliveryStatus: null,
    status: function status(deliveryStatuses, lastDeliveryStatus) {
      return deliveryStatuses.find(function (s) {
        return s.id === lastDeliveryStatus;
      });
    },
    icon: function icon(statusId, icons) {
      return icons[statusId - 1];
    },
    class: function _class(statusId, classes) {
      return classes[statusId - 1];
    },
    didReceiveAttrs: function didReceiveAttrs() {
      this._super.apply(this, arguments);

      this.set("circleIcon", (0, _iconLibrary.iconHTML)(this.icon, {
        class: this.class
      }).htmlSafe());
      this.set("deliveryStatus", _I18n.default.t("admin.web_hooks.delivery_status.".concat(this.get("status.name"))));
    }
  }, (_applyDecoratedDescriptor(_obj, "status", [_dec], Object.getOwnPropertyDescriptor(_obj, "status"), _obj), _applyDecoratedDescriptor(_obj, "icon", [_dec2], Object.getOwnPropertyDescriptor(_obj, "icon"), _obj), _applyDecoratedDescriptor(_obj, "class", [_dec3], Object.getOwnPropertyDescriptor(_obj, "class"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/admin-wrapper", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    didInsertElement: function didInsertElement() {
      this._super.apply(this, arguments);

      document.querySelector("html").classList.add("admin-area");
      document.querySelector("body").classList.add("admin-interface");
    },
    willDestroyElement: function willDestroyElement() {
      this._super.apply(this, arguments);

      document.querySelector("html").classList.remove("admin-area");
      document.querySelector("body").classList.remove("admin-interface");
    }
  });

  _exports.default = _default;
});
define("admin/components/cancel-link", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    tagName: ""
  });

  _exports.default = _default;
});
define("admin/components/color-input", ["exports", "@ember/object", "discourse/lib/load-script", "@ember/component", "discourse-common/utils/decorators", "@ember/runloop"], function (_exports, _object, _loadScript, _component, _decorators, _runloop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj, _init;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  /**
    An input field for a color.
  
    @param hexValue is a reference to the color's hex value.
    @param brightnessValue is a number from 0 to 255 representing the brightness of the color. See ColorSchemeColor.
    @params valid is a boolean indicating if the input field is a valid color.
  **/
  var _default = _component.default.extend((_dec = (0, _decorators.observes)("hexValue", "brightnessValue", "valid"), (_obj = {
    classNames: ["color-picker"],
    onlyHex: true,
    styleSelection: true,
    maxlength: (0, _object.computed)("onlyHex", function () {
      return this.onlyHex ? 6 : null;
    }),
    normalize: function normalize(color) {
      if (/^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$/.test(color)) {
        if (!color.startsWith("#")) {
          color = "#" + color;
        }
      }

      return color;
    },
    onHexInput: function onHexInput(color) {
      if (this.attrs.onChangeColor) {
        this.attrs.onChangeColor(this.normalize(color || ""));
      }
    },
    hexValueChanged: function hexValueChanged() {
      var hex = this.hexValue;
      var text = this.element.querySelector("input.hex-input");

      if (this.attrs.onChangeColor) {
        this.attrs.onChangeColor(this.normalize(hex));
      }

      if (this.valid) {
        this.styleSelection && text.setAttribute("style", "color: " + (this.brightnessValue > 125 ? "black" : "white") + "; background-color: #" + hex + ";");

        if (this.pickerLoaded) {
          $(this.element.querySelector(".picker")).spectrum({
            color: "#" + hex
          });
        }
      } else {
        this.styleSelection && text.setAttribute("style", "");
      }
    },
    didInsertElement: function didInsertElement() {
      var _this = this;

      (0, _loadScript.default)("/javascripts/spectrum.js").then(function () {
        (0, _loadScript.loadCSS)("/javascripts/spectrum.css").then(function () {
          (0, _runloop.schedule)("afterRender", function () {
            $(_this.element.querySelector(".picker")).spectrum({
              color: "#" + _this.hexValue
            }).on("change.spectrum", function (me, color) {
              _this.set("hexValue", color.toHexString().replace("#", ""));
            });

            _this.set("pickerLoaded", true);
          });
        });
      });
      (0, _runloop.schedule)("afterRender", function () {
        return _this.hexValueChanged();
      });
    }
  }, (_applyDecoratedDescriptor(_obj, "onHexInput", [_object.action], Object.getOwnPropertyDescriptor(_obj, "onHexInput"), _obj), _applyDecoratedDescriptor(_obj, "hexValueChanged", [_dec], (_init = Object.getOwnPropertyDescriptor(_obj, "hexValueChanged"), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
      return _init;
    }
  }), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/dashboard-new-features", ["exports", "@ember/component", "@ember/object", "discourse/lib/ajax"], function (_exports, _component, _object, _ajax) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_obj = {
    newFeatures: null,
    classNames: ["section", "dashboard-new-features"],
    classNameBindings: ["hasUnseenFeatures:ordered-first"],
    releaseNotesLink: null,
    init: function init() {
      var _this = this;

      this._super.apply(this, arguments);

      (0, _ajax.ajax)("/admin/dashboard/new-features.json").then(function (json) {
        _this.setProperties({
          newFeatures: json.new_features,
          hasUnseenFeatures: json.has_unseen_features,
          releaseNotesLink: json.release_notes_link
        });
      });
    },
    columnCountClass: (0, _object.computed)("newFeatures", function () {
      return this.newFeatures.length > 2 ? "three-or-more-items" : "";
    }),
    dismissNewFeatures: function dismissNewFeatures() {
      var _this2 = this;

      (0, _ajax.ajax)("/admin/dashboard/mark-new-features-as-seen.json", {
        type: "PUT"
      }).then(function () {
        return _this2.set("hasUnseenFeatures", false);
      });
    }
  }, (_applyDecoratedDescriptor(_obj, "dismissNewFeatures", [_object.action], Object.getOwnPropertyDescriptor(_obj, "dismissNewFeatures"), _obj)), _obj));

  _exports.default = _default;
});
define("admin/components/email-styles-editor", ["exports", "@ember/component", "I18n", "bootbox", "discourse-common/utils/decorators", "@ember/object/computed"], function (_exports, _component, _I18n, _bootbox, _decorators, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _obj, _init;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.default)("fieldName"), _dec2 = (0, _decorators.default)("fieldName", "styles.html", "styles.css"), _dec3 = (0, _decorators.default)("styles", "fieldName"), (_obj = {
    editorId: (0, _computed.reads)("fieldName"),
    currentEditorMode: function currentEditorMode(fieldName) {
      return fieldName === "css" ? "scss" : fieldName;
    },
    resetDisabled: function resetDisabled(fieldName) {
      return this.get("styles.".concat(fieldName)) === this.get("styles.default_".concat(fieldName));
    },
    editorContents: {
      get: function get(styles, fieldName) {
        return styles[fieldName];
      },
      set: function set(value, styles, fieldName) {
        styles.setField(fieldName, value);
        return value;
      }
    },
    actions: {
      reset: function reset() {
        var _this = this;

        _bootbox.default.confirm(_I18n.default.t("admin.customize.email_style.reset_confirm", {
          fieldName: _I18n.default.t("admin.customize.email_style.".concat(this.fieldName))
        }), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (result) {
          if (result) {
            _this.styles.setField(_this.fieldName, _this.styles.get("default_".concat(_this.fieldName)));

            _this.notifyPropertyChange("editorContents");
          }
        });
      },
      save: function save() {
        this.attrs.save();
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "currentEditorMode", [_dec], Object.getOwnPropertyDescriptor(_obj, "currentEditorMode"), _obj), _applyDecoratedDescriptor(_obj, "resetDisabled", [_dec2], Object.getOwnPropertyDescriptor(_obj, "resetDisabled"), _obj), _applyDecoratedDescriptor(_obj, "editorContents", [_dec3], (_init = Object.getOwnPropertyDescriptor(_obj, "editorContents"), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
      return _init;
    }
  }), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/embeddable-host", ["exports", "discourse/models/category", "@ember/component", "I18n", "bootbox", "discourse/mixins/buffered-content", "discourse-common/utils/decorators", "@ember/utils", "@ember/object/computed", "discourse/lib/ajax-error"], function (_exports, _category, _component, _I18n, _bootbox, _bufferedContent, _decorators, _utils, _computed, _ajaxError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((0, _bufferedContent.bufferedProperty)("host"), (_dec = (0, _decorators.default)("buffered.host", "host.isSaving"), (_obj = {
    editToggled: false,
    tagName: "tr",
    categoryId: null,
    editing: (0, _computed.or)("host.isNew", "editToggled"),
    cantSave: function cantSave(host, isSaving) {
      return isSaving || (0, _utils.isEmpty)(host);
    },
    actions: {
      edit: function edit() {
        this.set("categoryId", this.get("host.category.id"));
        this.set("editToggled", true);
      },
      save: function save() {
        var _this = this;

        if (this.cantSave) {
          return;
        }

        var props = this.buffered.getProperties("host", "allowed_paths", "class_name");
        props.category_id = this.categoryId;
        var host = this.host;
        host.save(props).then(function () {
          host.set("category", _category.default.findById(_this.categoryId));

          _this.set("editToggled", false);
        }).catch(_ajaxError.popupAjaxError);
      },
      delete: function _delete() {
        var _this2 = this;

        _bootbox.default.confirm(_I18n.default.t("admin.embedding.confirm_delete"), function (result) {
          if (result) {
            _this2.host.destroyRecord().then(function () {
              _this2.deleteHost(_this2.host);
            });
          }
        });
      },
      cancel: function cancel() {
        var host = this.host;

        if (host.get("isNew")) {
          this.deleteHost(host);
        } else {
          this.rollbackBuffer();
          this.set("editToggled", false);
        }
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "cantSave", [_dec], Object.getOwnPropertyDescriptor(_obj, "cantSave"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/embedding-setting", ["exports", "@ember/component", "discourse-common/utils/decorators"], function (_exports, _component, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _obj, _init;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.default)("field"), _dec2 = (0, _decorators.default)("field"), _dec3 = (0, _decorators.default)("type"), _dec4 = (0, _decorators.default)("value"), (_obj = {
    classNames: ["embed-setting"],
    inputId: function inputId(field) {
      return field.dasherize();
    },
    translationKey: function translationKey(field) {
      return "admin.embedding.".concat(field);
    },
    isCheckbox: function isCheckbox(type) {
      return type === "checkbox";
    },
    checked: {
      get: function get(value) {
        return !!value;
      },
      set: function set(value) {
        this.set("value", value);
        return value;
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "inputId", [_dec], Object.getOwnPropertyDescriptor(_obj, "inputId"), _obj), _applyDecoratedDescriptor(_obj, "translationKey", [_dec2], Object.getOwnPropertyDescriptor(_obj, "translationKey"), _obj), _applyDecoratedDescriptor(_obj, "isCheckbox", [_dec3], Object.getOwnPropertyDescriptor(_obj, "isCheckbox"), _obj), _applyDecoratedDescriptor(_obj, "checked", [_dec4], (_init = Object.getOwnPropertyDescriptor(_obj, "checked"), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
      return _init;
    }
  }), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/emoji-value-list", ["exports", "@ember/component", "I18n", "discourse-common/utils/decorators", "discourse/lib/text", "@ember/object", "@ember/runloop"], function (_exports, _component, _I18n, _decorators, _text, _object, _runloop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.default)("values"), _dec2 = (0, _decorators.default)("collection"), (_obj = {
    classNameBindings: [":value-list", ":emoji-list"],
    values: null,
    validationMessage: null,
    emojiPickerIsActive: false,
    isEditorFocused: false,
    collection: function collection(values) {
      values = values || "";
      return values.split("|").filter(Boolean).map(function (value) {
        return {
          isEditable: true,
          isEditing: false,
          value: value,
          emojiUrl: (0, _text.emojiUrlFor)(value)
        };
      });
    },
    closeEmojiPicker: function closeEmojiPicker() {
      this.collection.setEach("isEditing", false);
      this.set("emojiPickerIsActive", false);
      this.set("isEditorFocused", false);
    },
    emojiSelected: function emojiSelected(code) {
      if (!this._validateInput(code)) {
        return;
      }

      var item = this.collection.findBy("isEditing");

      if (item) {
        (0, _object.setProperties)(item, {
          value: code,
          emojiUrl: (0, _text.emojiUrlFor)(code),
          isEditing: false
        });

        this._saveValues();
      } else {
        var newCollectionValue = {
          value: code,
          emojiUrl: (0, _text.emojiUrlFor)(code),
          isEditable: true,
          isEditing: false
        };
        this.collection.addObject(newCollectionValue);

        this._saveValues();
      }

      this.set("emojiPickerIsActive", false);
      this.set("isEditorFocused", false);
    },
    showUpDownButtons: function showUpDownButtons(collection) {
      return collection.length - 1 ? true : false;
    },
    _splitValues: function _splitValues(values) {
      if (values && values.length) {
        var emojiList = [];
        var emojis = values.split("|").filter(Boolean);
        emojis.forEach(function (emojiName) {
          var emoji = {
            isEditable: true,
            isEditing: false
          };
          emoji.value = emojiName;
          emoji.emojiUrl = (0, _text.emojiUrlFor)(emojiName);
          emojiList.push(emoji);
        });
        return emojiList;
      } else {
        return [];
      }
    },
    editValue: function editValue(index) {
      var _this = this;

      this.closeEmojiPicker();
      (0, _runloop.schedule)("afterRender", function () {
        if (parseInt(index, 10) >= 0) {
          var item = _this.collection[index];

          if (item.isEditable) {
            (0, _object.set)(item, "isEditing", true);
          }
        }

        _this.set("isEditorFocused", true);

        (0, _runloop.later)(function () {
          if (_this.element && !_this.isDestroying && !_this.isDestroyed) {
            _this.set("emojiPickerIsActive", true);
          }
        }, 100);
      });
    },
    removeValue: function removeValue(value) {
      this._removeValue(value);
    },
    shift: function shift(operation, index) {
      var futureIndex = index + operation;

      if (futureIndex > this.collection.length - 1) {
        futureIndex = 0;
      } else if (futureIndex < 0) {
        futureIndex = this.collection.length - 1;
      }

      var shiftedEmoji = this.collection[index];
      this.collection.removeAt(index);
      this.collection.insertAt(futureIndex, shiftedEmoji);

      this._saveValues();
    },
    _validateInput: function _validateInput(input) {
      this.set("validationMessage", null);

      if (!(0, _text.emojiUrlFor)(input)) {
        this.set("validationMessage", _I18n.default.t("admin.site_settings.emoji_list.invalid_input"));
        return false;
      }

      return true;
    },
    _removeValue: function _removeValue(value) {
      this.collection.removeObject(value);

      this._saveValues();
    },
    _replaceValue: function _replaceValue(index, newValue) {
      var item = this.collection[index];

      if (item.value === newValue) {
        return;
      }

      (0, _object.set)(item, "value", newValue);

      this._saveValues();
    },
    _saveValues: function _saveValues() {
      this.set("values", this.collection.mapBy("value").join("|"));
    }
  }, (_applyDecoratedDescriptor(_obj, "collection", [_dec], Object.getOwnPropertyDescriptor(_obj, "collection"), _obj), _applyDecoratedDescriptor(_obj, "closeEmojiPicker", [_object.action], Object.getOwnPropertyDescriptor(_obj, "closeEmojiPicker"), _obj), _applyDecoratedDescriptor(_obj, "emojiSelected", [_object.action], Object.getOwnPropertyDescriptor(_obj, "emojiSelected"), _obj), _applyDecoratedDescriptor(_obj, "showUpDownButtons", [_dec2], Object.getOwnPropertyDescriptor(_obj, "showUpDownButtons"), _obj), _applyDecoratedDescriptor(_obj, "editValue", [_object.action], Object.getOwnPropertyDescriptor(_obj, "editValue"), _obj), _applyDecoratedDescriptor(_obj, "removeValue", [_object.action], Object.getOwnPropertyDescriptor(_obj, "removeValue"), _obj), _applyDecoratedDescriptor(_obj, "shift", [_object.action], Object.getOwnPropertyDescriptor(_obj, "shift"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/flag-user-lists", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    classNames: ["flag-user-lists"]
  });

  _exports.default = _default;
});
define("admin/components/highlighted-code", ["exports", "discourse-common/utils/decorators", "@ember/component", "discourse/lib/highlight-syntax"], function (_exports, _decorators, _component, _highlightSyntax) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.on)("didInsertElement"), _dec2 = (0, _decorators.observes)("code"), (_obj = {
    _refresh: function _refresh() {
      (0, _highlightSyntax.default)(this.element, this.siteSettings, this.session);
    }
  }, (_applyDecoratedDescriptor(_obj, "_refresh", [_dec, _dec2], Object.getOwnPropertyDescriptor(_obj, "_refresh"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/inline-edit-checkbox", ["exports", "@ember/component", "@ember/object", "discourse-common/utils/decorators"], function (_exports, _component, _object, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.default)("checked", "buffer"), (_obj = {
    classNames: ["inline-edit"],
    buffer: null,
    bufferModelId: null,
    didReceiveAttrs: function didReceiveAttrs() {
      this._super.apply(this, arguments);

      if (this.modelId !== this.bufferModelId) {
        // HACK: The condition above ensures this method is called only when its
        // attributes are changed (i.e. only when `checked` changes).
        //
        // Reproduction steps: navigate to theme #1, switch to theme #2 from the
        // left-side panel, then switch back to theme #1 and click on the <input>
        // element wrapped by this component. It will call `didReceiveAttrs` even
        // though none of the attributes have changed (only `buffer` does).
        this.setProperties({
          buffer: this.checked,
          bufferModelId: this.modelId
        });
      }
    },
    changed: function changed(checked, buffer) {
      return !!checked !== !!buffer;
    },
    apply: function apply() {
      this.set("checked", this.buffer);
      this.action();
    },
    cancel: function cancel() {
      this.set("buffer", this.checked);
    }
  }, (_applyDecoratedDescriptor(_obj, "changed", [_dec], Object.getOwnPropertyDescriptor(_obj, "changed"), _obj), _applyDecoratedDescriptor(_obj, "apply", [_object.action], Object.getOwnPropertyDescriptor(_obj, "apply"), _obj), _applyDecoratedDescriptor(_obj, "cancel", [_object.action], Object.getOwnPropertyDescriptor(_obj, "cancel"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/install-theme-item", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    classNames: ["install-theme-item"]
  });

  _exports.default = _default;
});
define("admin/components/ip-lookup", ["exports", "admin/models/admin-user", "@ember/component", "@ember/object", "I18n", "discourse/lib/ajax", "bootbox", "discourse/lib/copy-text", "discourse-common/utils/decorators", "@ember/runloop"], function (_exports, _adminUser, _component, _object, _I18n, _ajax, _bootbox, _copyText, _decorators, _runloop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.default)("other_accounts.length", "totalOthersWithSameIP"), (_obj = {
    classNames: ["ip-lookup"],
    otherAccountsToDelete: function otherAccountsToDelete(otherAccountsLength, totalOthersWithSameIP) {
      // can only delete up to 50 accounts at a time
      var total = Math.min(50, totalOthersWithSameIP || 0);
      var visible = Math.min(50, otherAccountsLength || 0);
      return Math.max(visible, total);
    },
    actions: {
      lookup: function lookup() {
        var _this = this;

        this.set("show", true);

        if (!this.location) {
          (0, _ajax.ajax)("/admin/users/ip-info", {
            data: {
              ip: this.ip
            }
          }).then(function (location) {
            return _this.set("location", _object.default.create(location));
          });
        }

        if (!this.other_accounts) {
          this.set("otherAccountsLoading", true);
          var data = {
            ip: this.ip,
            exclude: this.userId,
            order: "trust_level DESC"
          };
          (0, _ajax.ajax)("/admin/users/total-others-with-same-ip", {
            data: data
          }).then(function (result) {
            return _this.set("totalOthersWithSameIP", result.total);
          });

          _adminUser.default.findAll("active", data).then(function (users) {
            _this.setProperties({
              other_accounts: users,
              otherAccountsLoading: false
            });
          });
        }
      },
      hide: function hide() {
        this.set("show", false);
      },
      copy: function copy() {
        var _this2 = this;

        var text = "IP: ".concat(this.ip, "\n");
        var location = this.location;

        if (location) {
          if (location.hostname) {
            text += "".concat(_I18n.default.t("ip_lookup.hostname"), ": ").concat(location.hostname, "\n");
          }

          text += _I18n.default.t("ip_lookup.location");

          if (location.location) {
            text += ": ".concat(location.location, "\n");
          } else {
            text += ": ".concat(_I18n.default.t("ip_lookup.location_not_found"), "\n");
          }

          if (location.organization) {
            text += _I18n.default.t("ip_lookup.organisation");
            text += ": ".concat(location.organization, "\n");
          }
        }

        var $copyRange = $('<p id="copy-range"></p>');
        $copyRange.html(text.trim().replace(/\n/g, "<br>"));
        $(document.body).append($copyRange);

        if ((0, _copyText.default)(text, $copyRange[0])) {
          this.set("copied", true);
          (0, _runloop.later)(function () {
            return _this2.set("copied", false);
          }, 2000);
        }

        $copyRange.remove();
      },
      deleteOtherAccounts: function deleteOtherAccounts() {
        var _this3 = this;

        _bootbox.default.confirm(_I18n.default.t("ip_lookup.confirm_delete_other_accounts"), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (confirmed) {
          if (confirmed) {
            _this3.setProperties({
              other_accounts: null,
              otherAccountsLoading: true,
              totalOthersWithSameIP: null
            });

            (0, _ajax.ajax)("/admin/users/delete-others-with-same-ip.json", {
              type: "DELETE",
              data: {
                ip: _this3.ip,
                exclude: _this3.userId,
                order: "trust_level DESC"
              }
            }).then(function () {
              return _this3.send("lookup");
            });
          }
        });
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "otherAccountsToDelete", [_dec], Object.getOwnPropertyDescriptor(_obj, "otherAccountsToDelete"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/moderation-history-item", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    tagName: "tr"
  });

  _exports.default = _default;
});
define("admin/components/penalty-post-action", ["exports", "discourse-common/utils/decorators", "@ember/component", "I18n", "@ember/object/computed"], function (_exports, _decorators, _component, _I18n, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var ACTIONS = ["delete", "delete_replies", "edit", "none"];

  var _default = _component.default.extend((_obj = {
    postId: null,
    postAction: null,
    postEdit: null,
    penaltyActions: function penaltyActions() {
      return ACTIONS.map(function (id) {
        return {
          id: id,
          name: _I18n.default.t("admin.user.penalty_post_".concat(id))
        };
      });
    },
    editing: (0, _computed.equal)("postAction", "edit"),
    actions: {
      penaltyChanged: function penaltyChanged(postAction) {
        this.set("postAction", postAction); // If we switch to edit mode, jump to the edit textarea

        if (postAction === "edit") {
          this._focusEditTextarea();
        }
      }
    },
    _focusEditTextarea: function _focusEditTextarea() {
      var elem = this.element;
      var body = elem.closest(".modal-body");
      body.scrollTo(0, body.clientHeight);
      elem.querySelector(".post-editor").focus();
    }
  }, (_applyDecoratedDescriptor(_obj, "penaltyActions", [_decorators.default], Object.getOwnPropertyDescriptor(_obj, "penaltyActions"), _obj), _applyDecoratedDescriptor(_obj, "_focusEditTextarea", [_decorators.afterRender], Object.getOwnPropertyDescriptor(_obj, "_focusEditTextarea"), _obj)), _obj));

  _exports.default = _default;
});
define("admin/components/permalink-form", ["exports", "@ember/component", "I18n", "admin/models/permalink", "bootbox", "discourse-common/utils/decorators", "discourse/lib/computed", "@ember/runloop"], function (_exports, _component, _I18n, _permalink, _bootbox, _decorators, _computed, _runloop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_obj = {
    classNames: ["permalink-form"],
    formSubmitted: false,
    permalinkType: "topic_id",
    permalinkTypePlaceholder: (0, _computed.fmt)("permalinkType", "admin.permalink.%@"),
    permalinkTypes: function permalinkTypes() {
      return [{
        id: "topic_id",
        name: _I18n.default.t("admin.permalink.topic_id")
      }, {
        id: "post_id",
        name: _I18n.default.t("admin.permalink.post_id")
      }, {
        id: "category_id",
        name: _I18n.default.t("admin.permalink.category_id")
      }, {
        id: "tag_name",
        name: _I18n.default.t("admin.permalink.tag_name")
      }, {
        id: "external_url",
        name: _I18n.default.t("admin.permalink.external_url")
      }];
    },
    didInsertElement: function didInsertElement() {
      var _this = this;

      this._super.apply(this, arguments);

      (0, _runloop.schedule)("afterRender", function () {
        $(_this.element.querySelector(".external-url")).keydown(function (e) {
          if (e.key === "Enter") {
            _this.send("submit");
          }
        });
      });
    },
    focusPermalink: function focusPermalink() {
      var _this2 = this;

      (0, _runloop.schedule)("afterRender", function () {
        return _this2.element.querySelector(".permalink-url").focus();
      });
    },
    actions: {
      submit: function submit() {
        var _this3 = this;

        if (!this.formSubmitted) {
          this.set("formSubmitted", true);

          _permalink.default.create({
            url: this.url,
            permalink_type: this.permalinkType,
            permalink_type_value: this.permalink_type_value
          }).save().then(function (result) {
            _this3.setProperties({
              url: "",
              permalink_type_value: "",
              formSubmitted: false
            });

            _this3.action(_permalink.default.create(result.permalink));

            _this3.focusPermalink();
          }, function (e) {
            _this3.set("formSubmitted", false);

            var error;

            if (e.jqXHR && e.jqXHR.responseJSON && e.jqXHR.responseJSON.errors) {
              error = _I18n.default.t("generic_error_with_reason", {
                error: e.jqXHR.responseJSON.errors.join(". ")
              });
            } else {
              error = _I18n.default.t("generic_error");
            }

            _bootbox.default.alert(error, function () {
              return _this3.focusPermalink();
            });
          });
        }
      },
      onChangePermalinkType: function onChangePermalinkType(type) {
        this.set("permalinkType", type);
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "permalinkTypes", [_decorators.default], Object.getOwnPropertyDescriptor(_obj, "permalinkTypes"), _obj)), _obj));

  _exports.default = _default;
});
define("admin/components/report-filters/bool", ["exports", "admin/components/report-filters/filter", "@ember/object"], function (_exports, _filter, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _filter.default.extend((_obj = {
    checked: false,
    didReceiveAttrs: function didReceiveAttrs() {
      this._super.apply(this, arguments);

      this.set("checked", !!this.filter.default);
    },
    onChange: function onChange() {
      this.applyFilter(this.filter.id, !this.checked || undefined);
    }
  }, (_applyDecoratedDescriptor(_obj, "onChange", [_object.action], Object.getOwnPropertyDescriptor(_obj, "onChange"), _obj)), _obj));

  _exports.default = _default;
});
define("admin/components/report-filters/category", ["exports", "admin/components/report-filters/filter", "@ember/object", "@ember/object/computed"], function (_exports, _filter, _object, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _filter.default.extend((_obj = {
    category: (0, _computed.readOnly)("filter.default"),
    onChange: function onChange(categoryId) {
      this.applyFilter(this.filter.id, categoryId || undefined);
    }
  }, (_applyDecoratedDescriptor(_obj, "onChange", [_object.action], Object.getOwnPropertyDescriptor(_obj, "onChange"), _obj)), _obj));

  _exports.default = _default;
});
define("admin/components/report-filters/filter", ["exports", "@ember/component", "@ember/object"], function (_exports, _component, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_obj = {
    onChange: function onChange(value) {
      this.applyFilter(this.filter.id, value);
    }
  }, (_applyDecoratedDescriptor(_obj, "onChange", [_object.action], Object.getOwnPropertyDescriptor(_obj, "onChange"), _obj)), _obj));

  _exports.default = _default;
});
define("admin/components/report-filters/group", ["exports", "admin/components/report-filters/filter", "@ember/object"], function (_exports, _filter, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _filter.default.extend((_dec = (0, _object.computed)("filter.default"), (_obj = {
    classNames: ["group-filter"],

    get groupOptions() {
      return (this.site.groups || []).map(function (group) {
        return {
          name: group["name"],
          value: group["id"]
        };
      });
    },

    get groupId() {
      return this.filter.default ? parseInt(this.filter.default, 10) : null;
    }

  }, (_applyDecoratedDescriptor(_obj, "groupOptions", [_object.computed], Object.getOwnPropertyDescriptor(_obj, "groupOptions"), _obj), _applyDecoratedDescriptor(_obj, "groupId", [_dec], Object.getOwnPropertyDescriptor(_obj, "groupId"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/report-filters/list", ["exports", "admin/components/report-filters/filter"], function (_exports, _filter) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _filter.default.extend();

  _exports.default = _default;
});
define("admin/components/resumable-upload", ["exports", "discourse-common/utils/decorators", "@ember/runloop", "@ember/component", "I18n", "discourse-common/lib/get-url", "discourse-common/lib/icon-library"], function (_exports, _decorators, _runloop, _component, _I18n, _getUrl, _iconLibrary) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  /*global Resumable:true */

  /**
    Example usage:
  
      {{resumable-upload
          target="/admin/backups/upload"
          success=(action "successAction")
          error=(action "errorAction")
          uploadText="UPLOAD"
      }}
  **/
  var _default = _component.default.extend((_dec = (0, _decorators.on)("init"), _dec2 = (0, _decorators.on)("didInsertElement"), _dec3 = (0, _decorators.on)("willDestroyElement"), _dec4 = (0, _decorators.default)("title", "text"), _dec5 = (0, _decorators.default)("isUploading", "progress"), (_obj = {
    tagName: "button",
    classNames: ["btn", "ru"],
    classNameBindings: ["isUploading"],
    attributeBindings: ["translatedTitle:title"],
    resumable: null,
    isUploading: false,
    progress: 0,
    rerenderTriggers: ["isUploading", "progress"],
    uploadingIcon: null,
    progressBar: null,
    _initialize: function _initialize() {
      var _this = this;

      this.resumable = new Resumable({
        target: (0, _getUrl.default)(this.target),
        maxFiles: 1,
        // only 1 file at a time
        headers: {
          "X-CSRF-Token": document.querySelector("meta[name='csrf-token']").content
        }
      });
      this.resumable.on("fileAdded", function () {
        // automatically upload the selected file
        _this.resumable.upload(); // mark as uploading


        (0, _runloop.later)(function () {
          _this.set("isUploading", true);

          _this._updateIcon();
        });
      });
      this.resumable.on("fileProgress", function (file) {
        // update progress
        (0, _runloop.later)(function () {
          _this.set("progress", parseInt(file.progress() * 100, 10));

          _this._updateProgressBar();
        });
      });
      this.resumable.on("fileSuccess", function (file) {
        (0, _runloop.later)(function () {
          // mark as not uploading anymore
          _this._reset(); // fire an event to allow the parent route to reload its model


          _this.success(file.fileName);
        });
      });
      this.resumable.on("fileError", function (file, message) {
        (0, _runloop.later)(function () {
          // mark as not uploading anymore
          _this._reset(); // fire an event to allow the parent route to display the error message


          _this.error(file.fileName, message);
        });
      });
    },
    _assignBrowse: function _assignBrowse() {
      var _this2 = this;

      (0, _runloop.schedule)("afterRender", function () {
        return _this2.resumable.assignBrowse($(_this2.element));
      });
    },
    _teardown: function _teardown() {
      if (this.resumable) {
        this.resumable.cancel();
        this.resumable = null;
      }
    },
    translatedTitle: function translatedTitle(title, text) {
      return title ? _I18n.default.t(title) : text;
    },
    text: function text(isUploading, progress) {
      if (isUploading) {
        return progress + " %";
      } else {
        return this.uploadText;
      }
    },
    didReceiveAttrs: function didReceiveAttrs() {
      this._super.apply(this, arguments);

      this._updateIcon();
    },
    click: function click() {
      var _this3 = this;

      if (this.isUploading) {
        this.resumable.cancel();
        (0, _runloop.later)(function () {
          return _this3._reset();
        });
        return false;
      } else {
        return true;
      }
    },
    _updateIcon: function _updateIcon() {
      var icon = this.isUploading ? "times" : "upload";
      this.set("uploadingIcon", "".concat((0, _iconLibrary.iconHTML)(icon)).htmlSafe());
    },
    _updateProgressBar: function _updateProgressBar() {
      var pb = "".concat("width:" + this.progress + "%").htmlSafe();
      this.set("progressBar", pb);
    },
    _reset: function _reset() {
      this.setProperties({
        isUploading: false,
        progress: 0
      });

      this._updateIcon();

      this._updateProgressBar();
    }
  }, (_applyDecoratedDescriptor(_obj, "_initialize", [_dec], Object.getOwnPropertyDescriptor(_obj, "_initialize"), _obj), _applyDecoratedDescriptor(_obj, "_assignBrowse", [_dec2], Object.getOwnPropertyDescriptor(_obj, "_assignBrowse"), _obj), _applyDecoratedDescriptor(_obj, "_teardown", [_dec3], Object.getOwnPropertyDescriptor(_obj, "_teardown"), _obj), _applyDecoratedDescriptor(_obj, "translatedTitle", [_dec4], Object.getOwnPropertyDescriptor(_obj, "translatedTitle"), _obj), _applyDecoratedDescriptor(_obj, "text", [_dec5], Object.getOwnPropertyDescriptor(_obj, "text"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/screened-ip-address-form", ["exports", "discourse-common/utils/decorators", "@ember/component", "I18n", "admin/models/screened-ip-address", "bootbox", "@ember/runloop"], function (_exports, _decorators, _component, _I18n, _screenedIpAddress, _bootbox, _runloop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  /**
    A form to create an IP address that will be blocked or allowed.
    Example usage:
  
      {{screened-ip-address-form action=(action "recordAdded")}}
  
    where action is a callback on the controller or route that will get called after
    the new record is successfully saved. It is called with the new ScreenedIpAddress record
    as an argument.
  **/
  var _default = _component.default.extend((_dec = (0, _decorators.default)("siteSettings.use_admin_ip_allowlist"), _dec2 = (0, _decorators.on)("didInsertElement"), (_obj = {
    classNames: ["screened-ip-address-form", "inline-form"],
    formSubmitted: false,
    actionName: "block",
    actionNames: function actionNames(adminAllowlistEnabled) {
      if (adminAllowlistEnabled) {
        return [{
          id: "block",
          name: _I18n.default.t("admin.logs.screened_ips.actions.block")
        }, {
          id: "do_nothing",
          name: _I18n.default.t("admin.logs.screened_ips.actions.do_nothing")
        }, {
          id: "allow_admin",
          name: _I18n.default.t("admin.logs.screened_ips.actions.allow_admin")
        }];
      } else {
        return [{
          id: "block",
          name: _I18n.default.t("admin.logs.screened_ips.actions.block")
        }, {
          id: "do_nothing",
          name: _I18n.default.t("admin.logs.screened_ips.actions.do_nothing")
        }];
      }
    },
    actions: {
      submit: function submit() {
        var _this = this;

        if (!this.formSubmitted) {
          this.set("formSubmitted", true);

          var screenedIpAddress = _screenedIpAddress.default.create({
            ip_address: this.ip_address,
            action_name: this.actionName
          });

          screenedIpAddress.save().then(function (result) {
            _this.setProperties({
              ip_address: "",
              formSubmitted: false
            });

            _this.action(_screenedIpAddress.default.create(result.screened_ip_address));

            (0, _runloop.schedule)("afterRender", function () {
              return _this.element.querySelector(".ip-address-input").focus();
            });
          }).catch(function (e) {
            _this.set("formSubmitted", false);

            var msg = e.jqXHR.responseJSON && e.jqXHR.responseJSON.errors ? _I18n.default.t("generic_error_with_reason", {
              error: e.jqXHR.responseJSON.errors.join(". ")
            }) : _I18n.default.t("generic_error");

            _bootbox.default.alert(msg, function () {
              return _this.element.querySelector(".ip-address-input").focus();
            });
          });
        }
      }
    },
    _init: function _init() {
      var _this2 = this;

      (0, _runloop.schedule)("afterRender", function () {
        $(_this2.element.querySelector(".ip-address-input")).keydown(function (e) {
          if (e.key === "Enter") {
            _this2.send("submit");
          }
        });
      });
    }
  }, (_applyDecoratedDescriptor(_obj, "actionNames", [_dec], Object.getOwnPropertyDescriptor(_obj, "actionNames"), _obj), _applyDecoratedDescriptor(_obj, "_init", [_dec2], Object.getOwnPropertyDescriptor(_obj, "_init"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/secret-value-list", ["exports", "@ember/component", "I18n", "@ember/utils", "discourse-common/utils/decorators", "@ember/object"], function (_exports, _component, _I18n, _utils, _decorators, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.on)("didReceiveAttrs"), (_obj = {
    classNameBindings: [":value-list", ":secret-value-list"],
    inputDelimiter: null,
    collection: null,
    values: null,
    validationMessage: null,
    _setupCollection: function _setupCollection() {
      var values = this.values;
      this.set("collection", this._splitValues(values, this.inputDelimiter || "\n"));
    },
    actions: {
      changeKey: function changeKey(index, newValue) {
        if (this._checkInvalidInput(newValue)) {
          return;
        }

        this._replaceValue(index, newValue, "key");
      },
      changeSecret: function changeSecret(index, newValue) {
        if (this._checkInvalidInput(newValue)) {
          return;
        }

        this._replaceValue(index, newValue, "secret");
      },
      addValue: function addValue() {
        if (this._checkInvalidInput([this.newKey, this.newSecret])) {
          return;
        }

        this._addValue(this.newKey, this.newSecret);

        this.setProperties({
          newKey: "",
          newSecret: ""
        });
      },
      removeValue: function removeValue(value) {
        this._removeValue(value);
      }
    },
    _checkInvalidInput: function _checkInvalidInput(inputs) {
      this.set("validationMessage", null);

      var _iterator = _createForOfIteratorHelper(inputs),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var input = _step.value;

          if ((0, _utils.isEmpty)(input) || input.includes("|")) {
            this.set("validationMessage", _I18n.default.t("admin.site_settings.secret_list.invalid_input"));
            return true;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    },
    _addValue: function _addValue(value, secret) {
      this.collection.addObject({
        key: value,
        secret: secret
      });

      this._saveValues();
    },
    _removeValue: function _removeValue(value) {
      var collection = this.collection;
      collection.removeObject(value);

      this._saveValues();
    },
    _replaceValue: function _replaceValue(index, newValue, keyName) {
      var item = this.collection[index];
      (0, _object.set)(item, keyName, newValue);

      this._saveValues();
    },
    _saveValues: function _saveValues() {
      this.set("values", this.collection.map(function (elem) {
        return "".concat(elem.key, "|").concat(elem.secret);
      }).join("\n"));
    },
    _splitValues: function _splitValues(values, delimiter) {
      if (values && values.length) {
        var keys = ["key", "secret"];
        var res = [];
        values.split(delimiter).forEach(function (str) {
          var object = {};
          str.split("|").forEach(function (a, i) {
            object[keys[i]] = a;
          });
          res.push(object);
        });
        return res;
      } else {
        return [];
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "_setupCollection", [_dec], Object.getOwnPropertyDescriptor(_obj, "_setupCollection"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/silence-details", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    tagName: ""
  });

  _exports.default = _default;
});
define("admin/components/simple-list", ["exports", "@ember/component", "@ember/object", "@ember/object/computed", "discourse-common/utils/decorators"], function (_exports, _component, _object, _computed, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.on)("didReceiveAttrs"), (_obj = {
    classNameBindings: [":simple-list", ":value-list"],
    inputEmpty: (0, _computed.empty)("newValue"),
    inputDelimiter: null,
    newValue: "",
    collection: null,
    values: null,
    _setupCollection: function _setupCollection() {
      this.set("collection", this._splitValues(this.values, this.inputDelimiter));
    },
    keyDown: function keyDown(event) {
      if (event.which === 13) {
        this.addValue(this.newValue);
        return;
      }
    },
    changeValue: function changeValue(index, newValue) {
      this.collection.replace(index, 1, [newValue]);
      this.collection.arrayContentDidChange(index);

      this._onChange();
    },
    addValue: function addValue(newValue) {
      if (this.inputEmpty) {
        return;
      }

      this.set("newValue", null);
      this.collection.addObject(newValue);

      this._onChange();
    },
    removeValue: function removeValue(value) {
      this.collection.removeObject(value);

      this._onChange();
    },
    _onChange: function _onChange() {
      this.attrs.onChange && this.attrs.onChange(this.collection);
    },
    _splitValues: function _splitValues(values, delimiter) {
      return values && values.length ? values.split(delimiter || "\n").filter(Boolean) : [];
    }
  }, (_applyDecoratedDescriptor(_obj, "_setupCollection", [_dec], Object.getOwnPropertyDescriptor(_obj, "_setupCollection"), _obj), _applyDecoratedDescriptor(_obj, "changeValue", [_object.action], Object.getOwnPropertyDescriptor(_obj, "changeValue"), _obj), _applyDecoratedDescriptor(_obj, "addValue", [_object.action], Object.getOwnPropertyDescriptor(_obj, "addValue"), _obj), _applyDecoratedDescriptor(_obj, "removeValue", [_object.action], Object.getOwnPropertyDescriptor(_obj, "removeValue"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/site-setting", ["exports", "discourse/mixins/buffered-content", "@ember/component", "admin/mixins/setting-component", "admin/models/site-setting", "@ember/object/computed"], function (_exports, _bufferedContent, _component, _settingComponent, _siteSetting, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend(_bufferedContent.default, _settingComponent.default, {
    updateExistingUsers: null,
    _save: function _save() {
      var setting = this.buffered;
      return _siteSetting.default.update(setting.get("setting"), setting.get("value"), {
        updateExistingUsers: this.updateExistingUsers
      });
    },
    staffLogFilter: (0, _computed.readOnly)("setting.staffLogFilter")
  });

  _exports.default = _default;
});
define("admin/components/site-settings-image-uploader", ["exports", "discourse/components/image-uploader"], function (_exports, _imageUploader) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _imageUploader.default.extend({
    layoutName: "components/image-uploader",
    uploadUrlParams: "&for_site_setting=true"
  });

  _exports.default = _default;
});
define("admin/components/site-settings/bool", ["exports", "@ember/component", "discourse-common/utils/decorators", "@ember/utils"], function (_exports, _component, _decorators, _utils) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj, _init;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.default)("value"), (_obj = {
    enabled: {
      get: function get(value) {
        if ((0, _utils.isEmpty)(value)) {
          return false;
        }

        return value.toString() === "true";
      },
      set: function set(value) {
        this.set("value", value ? "true" : "false");
        return value;
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "enabled", [_dec], (_init = Object.getOwnPropertyDescriptor(_obj, "enabled"), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
      return _init;
    }
  }), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/site-settings/category-list", ["exports", "discourse/models/category", "@ember/component", "@ember/object"], function (_exports, _category, _component, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    selectedCategories: (0, _object.computed)("value", function () {
      return _category.default.findByIds(this.value.split("|").filter(Boolean));
    }),
    actions: {
      onChangeSelectedCategories: function onChangeSelectedCategories(value) {
        this.set("value", (value || []).mapBy("id").join("|"));
      }
    }
  });

  _exports.default = _default;
});
define("admin/components/site-settings/color", ["exports", "@ember/object", "@ember/component"], function (_exports, _object, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function RGBToHex(rgb) {
    // Choose correct separator
    var sep = rgb.indexOf(",") > -1 ? "," : " "; // Turn "rgb(r,g,b)" into [r,g,b]

    rgb = rgb.substr(4).split(")")[0].split(sep);
    var r = (+rgb[0]).toString(16),
        g = (+rgb[1]).toString(16),
        b = (+rgb[2]).toString(16);

    if (r.length === 1) {
      r = "0" + r;
    }

    if (g.length === 1) {
      g = "0" + g;
    }

    if (b.length === 1) {
      b = "0" + b;
    }

    return "#" + r + g + b;
  }

  var _default = _component.default.extend((_obj = {
    valid: (0, _object.computed)("value", function () {
      var value = this.value.toLowerCase();
      var testColor = new Option().style;
      testColor.color = value;

      if (!testColor.color && !value.startsWith("#")) {
        value = "#".concat(value);
        testColor = new Option().style;
        testColor.color = value;
      }

      var hexifiedColor = RGBToHex(testColor.color);

      if (hexifiedColor.includes("NaN")) {
        hexifiedColor = testColor.color;
      }

      return testColor.color && hexifiedColor === value;
    }),
    onChangeColor: function onChangeColor(color) {
      this.set("value", color);
    }
  }, (_applyDecoratedDescriptor(_obj, "onChangeColor", [_object.action], Object.getOwnPropertyDescriptor(_obj, "onChangeColor"), _obj)), _obj));

  _exports.default = _default;
});
define("admin/components/site-settings/compact-list", ["exports", "@ember/component", "@ember/object", "discourse-common/lib/helpers"], function (_exports, _component, _object, _helpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

  function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  var _default = _component.default.extend({
    tokenSeparator: "|",
    createdChoices: null,
    settingValue: (0, _object.computed)("value", function () {
      return this.value.toString().split(this.tokenSeparator).filter(Boolean);
    }),
    settingChoices: (0, _object.computed)("settingValue", "setting.choices.[]", "createdChoices.[]", function () {
      return _toConsumableArray(new Set([].concat(_toConsumableArray((0, _helpers.makeArray)(this.settingValue)), _toConsumableArray((0, _helpers.makeArray)(this.setting.choices)), _toConsumableArray((0, _helpers.makeArray)(this.createdChoices)))));
    }),
    actions: {
      onChangeListSetting: function onChangeListSetting(value) {
        this.set("value", value.join(this.tokenSeparator));
      },
      onChangeChoices: function onChangeChoices(choices) {
        this.set("createdChoices", _toConsumableArray(new Set([].concat(_toConsumableArray((0, _helpers.makeArray)(this.createdChoices)), _toConsumableArray((0, _helpers.makeArray)(choices))))));
      }
    }
  });

  _exports.default = _default;
});
define("admin/components/site-settings/group-list", ["exports", "@ember/component", "@ember/object"], function (_exports, _component, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    tokenSeparator: "|",
    nameProperty: "name",
    valueProperty: "id",
    groupChoices: (0, _object.computed)("site.groups", function () {
      return (this.site.groups || []).map(function (g) {
        return {
          name: g.name,
          id: g.id.toString()
        };
      });
    }),
    settingValue: (0, _object.computed)("value", function () {
      return (this.value || "").split(this.tokenSeparator).filter(Boolean);
    }),
    actions: {
      onChangeGroupListSetting: function onChangeGroupListSetting(value) {
        this.set("value", value.join(this.tokenSeparator));
      }
    }
  });

  _exports.default = _default;
});
define("admin/components/site-settings/simple-list", ["exports", "@ember/component", "@ember/object"], function (_exports, _component, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_obj = {
    inputDelimiter: "|",
    onChange: function onChange(value) {
      this.set("value", value.join(this.inputDelimiter || "\n"));
    }
  }, (_applyDecoratedDescriptor(_obj, "onChange", [_object.action], Object.getOwnPropertyDescriptor(_obj, "onChange"), _obj)), _obj));

  _exports.default = _default;
});
define("admin/components/site-settings/string", ["exports", "@ember/object", "@ember/component", "discourse/lib/show-modal"], function (_exports, _object, _component, _showModal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_obj = {
    launchJsonEditorModal: function launchJsonEditorModal() {
      var _this = this;

      var schemaModal = (0, _showModal.default)("json-schema-editor", {
        model: {
          value: this.value,
          settingName: this.setting.setting,
          jsonSchema: this.setting.json_schema
        }
      });
      schemaModal.set("onClose", function () {
        _this.set("value", schemaModal.model.value);
      });
    }
  }, (_applyDecoratedDescriptor(_obj, "launchJsonEditorModal", [_object.action], Object.getOwnPropertyDescriptor(_obj, "launchJsonEditorModal"), _obj)), _obj));

  _exports.default = _default;
});
define("admin/components/site-settings/tag-list", ["exports", "@ember/component", "@ember/object", "discourse-common/utils/decorators"], function (_exports, _component, _object, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj, _init;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.default)("value"), (_obj = {
    selectedTags: {
      get: function get(value) {
        return value.split("|").filter(Boolean);
      }
    },
    changeSelectedTags: function changeSelectedTags(tags) {
      this.set("value", tags.join("|"));
    }
  }, (_applyDecoratedDescriptor(_obj, "selectedTags", [_dec], (_init = Object.getOwnPropertyDescriptor(_obj, "selectedTags"), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
      return _init;
    }
  }), _obj), _applyDecoratedDescriptor(_obj, "changeSelectedTags", [_object.action], Object.getOwnPropertyDescriptor(_obj, "changeSelectedTags"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/site-settings/uploaded-image-list", ["exports", "@ember/component", "discourse/lib/show-modal"], function (_exports, _component, _showModal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    actions: {
      showUploadModal: function showUploadModal(_ref) {
        var _this = this;

        var value = _ref.value,
            setting = _ref.setting;
        (0, _showModal.default)("admin-uploaded-image-list", {
          admin: true,
          title: "admin.site_settings.".concat(setting.setting, ".title"),
          model: {
            value: value,
            setting: setting
          }
        }).setProperties({
          save: function save(v) {
            return _this.set("value", v);
          }
        });
      }
    }
  });

  _exports.default = _default;
});
define("admin/components/site-text-summary", ["exports", "@ember/component", "discourse/lib/highlight-html", "discourse-common/utils/decorators"], function (_exports, _component, _highlightHtml, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.on)("didInsertElement"), (_obj = {
    classNames: ["site-text"],
    classNameBindings: ["siteText.overridden"],
    highlightTerm: function highlightTerm() {
      var term = this._searchTerm();

      if (term) {
        (0, _highlightHtml.default)(this.element.querySelector(".site-text-id, .site-text-value"), term, {
          className: "text-highlight"
        });
      }

      $(this.element.querySelector(".site-text-value")).ellipsis();
    },
    click: function click() {
      this.editAction(this.siteText);
    },
    _searchTerm: function _searchTerm() {
      var regex = this.searchRegex;
      var siteText = this.siteText;

      if (regex && siteText) {
        var matches = siteText.value.match(new RegExp(regex, "i"));

        if (matches) {
          return matches[0];
        }
      }

      return this.term;
    }
  }, (_applyDecoratedDescriptor(_obj, "highlightTerm", [_dec], Object.getOwnPropertyDescriptor(_obj, "highlightTerm"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/staff-actions", ["exports", "@ember/component", "discourse/lib/url"], function (_exports, _component, _url) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend({
    classNames: ["table", "staff-actions"],
    willDestroyElement: function willDestroyElement() {
      $(this.element).off("click.discourse-staff-logs");
    },
    didInsertElement: function didInsertElement() {
      var _this = this;

      this._super.apply(this, arguments);

      $(this.element).on("click.discourse-staff-logs", "[data-link-post-id]", function (e) {
        var postId = $(e.target).attr("data-link-post-id");

        _this.store.find("post", postId).then(function (p) {
          _url.default.routeTo(p.get("url"));
        });

        return false;
      });
      $(this.element).on("click.discourse-staff-logs", "[data-link-topic-id]", function (e) {
        var topicId = $(e.target).attr("data-link-topic-id");

        _url.default.routeTo("/t/".concat(topicId));

        return false;
      });
    }
  });

  _exports.default = _default;
});
define("admin/components/suspension-details", ["exports", "@ember/component", "I18n", "@ember/object", "discourse-common/utils/decorators", "@ember/object/computed"], function (_exports, _component, _I18n, _object, _decorators, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var CUSTOM_REASON_KEY = "custom";

  var _default = _component.default.extend((_dec = (0, _decorators.default)("reasonKeys"), (_obj = {
    tagName: "",
    selectedReason: CUSTOM_REASON_KEY,
    customReason: "",
    reasonKeys: ["not_listening_to_staff", "consuming_staff_time", "combative", "in_wrong_place", "no_constructive_purpose", CUSTOM_REASON_KEY],
    isCustomReason: (0, _computed.equal)("selectedReason", CUSTOM_REASON_KEY),
    reasons: function reasons(keys) {
      return keys.map(function (key) {
        return {
          id: key,
          name: _I18n.default.t("admin.user.suspend_reasons.".concat(key))
        };
      });
    },
    setSelectedReason: function setSelectedReason(value) {
      this.set("selectedReason", value);
      this.setReason();
    },
    setCustomReason: function setCustomReason(value) {
      this.set("customReason", value);
      this.setReason();
    },
    setReason: function setReason() {
      if (this.isCustomReason) {
        this.set("reason", this.customReason);
      } else {
        this.set("reason", _I18n.default.t("admin.user.suspend_reasons.".concat(this.selectedReason)));
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "reasons", [_dec], Object.getOwnPropertyDescriptor(_obj, "reasons"), _obj), _applyDecoratedDescriptor(_obj, "setSelectedReason", [_object.action], Object.getOwnPropertyDescriptor(_obj, "setSelectedReason"), _obj), _applyDecoratedDescriptor(_obj, "setCustomReason", [_object.action], Object.getOwnPropertyDescriptor(_obj, "setCustomReason"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/tags-uploader", ["exports", "@ember/component", "I18n", "discourse/mixins/upload", "@ember/object/computed", "bootbox"], function (_exports, _component, _I18n, _upload, _computed, _bootbox) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend(_upload.default, {
    type: "csv",
    uploadUrl: "/tags/upload",
    addDisabled: (0, _computed.alias)("uploading"),
    elementId: "tag-uploader",
    validateUploadedFilesOptions: function validateUploadedFilesOptions() {
      return {
        csvOnly: true
      };
    },
    uploadDone: function uploadDone() {
      var _this = this;

      _bootbox.default.alert(_I18n.default.t("tagging.upload_successful"), function () {
        _this.refresh();

        _this.closeModal();
      });
    }
  });

  _exports.default = _default;
});
define("admin/components/theme-setting-editor", ["exports", "discourse/mixins/buffered-content", "@ember/component", "admin/mixins/setting-component", "discourse/lib/ajax", "discourse/lib/computed"], function (_exports, _bufferedContent, _component, _settingComponent, _ajax, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend(_bufferedContent.default, _settingComponent.default, {
    layoutName: "admin/templates/components/site-setting",
    updateUrl: (0, _computed.url)("model.id", "/admin/themes/%@/setting"),
    _save: function _save() {
      return (0, _ajax.ajax)(this.updateUrl, {
        type: "PUT",
        data: {
          name: this.setting.setting,
          value: this.get("buffered.value")
        }
      });
    }
  });

  _exports.default = _default;
});
define("admin/components/theme-setting-relatives-selector", ["exports", "discourse/mixins/buffered-content", "@ember/component", "admin/mixins/setting-component"], function (_exports, _bufferedContent, _component, _settingComponent) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  var _default = _component.default.extend(_bufferedContent.default, _settingComponent.default, {
    layoutName: "admin/templates/components/site-setting",
    _save: function _save() {
      var _this = this;

      return this.model.save(_defineProperty({}, this.setting.setting, this.convertNamesToIds())).then(function () {
        return _this.store.findAll("theme");
      });
    },
    convertNamesToIds: function convertNamesToIds() {
      var _this2 = this;

      return this.get("buffered.value").split("|").filter(Boolean).map(function (themeName) {
        if (themeName !== "") {
          return _this2.setting.allThemes.find(function (theme) {
            return theme.name === themeName;
          }).id;
        }

        return themeName;
      });
    }
  });

  _exports.default = _default;
});
define("admin/components/theme-translation", ["exports", "discourse/mixins/buffered-content", "@ember/component", "admin/mixins/setting-component", "@ember/object/computed"], function (_exports, _bufferedContent, _component, _settingComponent, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _component.default.extend(_bufferedContent.default, _settingComponent.default, {
    layoutName: "admin/templates/components/site-setting",
    setting: (0, _computed.alias)("translation"),
    type: "string",
    settingName: (0, _computed.alias)("translation.key"),
    _save: function _save() {
      return this.model.saveTranslation(this.get("translation.key"), this.get("buffered.value"));
    }
  });

  _exports.default = _default;
});
define("admin/components/themes-list-item", ["exports", "@ember/object/computed", "discourse-common/utils/decorators", "@ember/component", "pretty-text/sanitizer", "discourse-common/lib/icon-library", "discourse-common/config/environment", "@ember/runloop"], function (_exports, _computed, _decorators, _component, _sanitizer, _iconLibrary, _environment, _runloop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var MAX_COMPONENTS = 4;

  var _default = _component.default.extend((_dec = (0, _decorators.observes)("theme.selected"), _dec2 = (0, _decorators.default)("theme.component", "theme.childThemes.@each.name", "theme.childThemes.length", "childrenExpanded"), _dec3 = (0, _decorators.default)("children"), _dec4 = (0, _decorators.default)("theme.childThemes.length", "theme.component", "childrenExpanded", "children.length"), (_obj = {
    childrenExpanded: false,
    classNames: ["themes-list-item"],
    classNameBindings: ["theme.selected:selected"],
    hasComponents: (0, _computed.gt)("children.length", 0),
    displayComponents: (0, _computed.and)("hasComponents", "theme.isActive"),
    displayHasMore: (0, _computed.gt)("theme.childThemes.length", MAX_COMPONENTS),
    click: function click(e) {
      if (!$(e.target).hasClass("others-count")) {
        this.navigateToTheme();
      }
    },
    init: function init() {
      this._super.apply(this, arguments);

      this.scheduleAnimation();
    },
    triggerAnimation: function triggerAnimation() {
      this.animate();
    },
    scheduleAnimation: function scheduleAnimation() {
      var _this = this;

      (0, _runloop.schedule)("afterRender", function () {
        _this.animate(true);
      });
    },
    animate: function animate(isInitial) {
      var $container = $(this.element);
      var $list = $(this.element.querySelector(".components-list"));

      if ($list.length === 0 || (0, _environment.isTesting)()) {
        return;
      }

      var duration = 300;

      if (this.get("theme.selected")) {
        this.collapseComponentsList($container, $list, duration);
      } else if (!isInitial) {
        this.expandComponentsList($container, $list, duration);
      }
    },
    children: function children() {
      var theme = this.theme;
      var children = theme.get("childThemes");

      if (theme.get("component") || !children) {
        return [];
      }

      children = this.childrenExpanded ? children : children.slice(0, MAX_COMPONENTS);
      return children.map(function (t) {
        var name = (0, _sanitizer.escape)(t.name);
        return t.enabled ? name : "".concat((0, _iconLibrary.iconHTML)("ban"), " ").concat(name);
      });
    },
    childrenString: function childrenString(children) {
      return children.join(", ");
    },
    moreCount: function moreCount(childrenCount, component, expanded) {
      if (component || !childrenCount || expanded) {
        return 0;
      }

      return childrenCount - MAX_COMPONENTS;
    },
    expandComponentsList: function expandComponentsList($container, $list, duration) {
      $container.css("height", "".concat($container.height(), "px"));
      $list.css("display", "");
      $container.animate({
        height: "".concat($container.height() + $list.outerHeight(true), "px")
      }, {
        duration: duration,
        done: function done() {
          $list.css("display", "");
          $container.css("height", "");
        }
      });
      $list.animate({
        opacity: 1
      }, {
        duration: duration
      });
    },
    collapseComponentsList: function collapseComponentsList($container, $list, duration) {
      $container.animate({
        height: "".concat($container.height() - $list.outerHeight(true), "px")
      }, {
        duration: duration,
        done: function done() {
          $list.css("display", "none");
          $container.css("height", "");
        }
      });
      $list.animate({
        opacity: 0
      }, {
        duration: duration
      });
    },
    actions: {
      toggleChildrenExpanded: function toggleChildrenExpanded() {
        this.toggleProperty("childrenExpanded");
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "triggerAnimation", [_dec], Object.getOwnPropertyDescriptor(_obj, "triggerAnimation"), _obj), _applyDecoratedDescriptor(_obj, "children", [_dec2], Object.getOwnPropertyDescriptor(_obj, "children"), _obj), _applyDecoratedDescriptor(_obj, "childrenString", [_dec3], Object.getOwnPropertyDescriptor(_obj, "childrenString"), _obj), _applyDecoratedDescriptor(_obj, "moreCount", [_dec4], Object.getOwnPropertyDescriptor(_obj, "moreCount"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/themes-list", ["exports", "admin/models/theme", "@ember/object/computed", "@ember/component", "discourse-common/utils/decorators", "@ember/service", "@ember/object"], function (_exports, _theme, _computed, _component, _decorators, _service, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.default)("themes", "components", "currentTab"), _dec2 = (0, _decorators.default)("themesList", "currentTab", "themesList.@each.user_selectable", "themesList.@each.default", "filterTerm"), _dec3 = (0, _decorators.default)("themesList", "currentTab", "themesList.@each.user_selectable", "themesList.@each.default", "filterTerm"), (_obj = {
    router: (0, _service.inject)(),
    THEMES: _theme.THEMES,
    COMPONENTS: _theme.COMPONENTS,
    classNames: ["themes-list"],
    filterTerm: null,
    hasThemes: (0, _computed.gt)("themesList.length", 0),
    hasActiveThemes: (0, _computed.gt)("activeThemes.length", 0),
    hasInactiveThemes: (0, _computed.gt)("inactiveThemes.length", 0),
    showFilter: (0, _computed.gte)("themesList.length", 10),
    themesTabActive: (0, _computed.equal)("currentTab", _theme.THEMES),
    componentsTabActive: (0, _computed.equal)("currentTab", _theme.COMPONENTS),
    themesList: function themesList(themes, components) {
      if (this.themesTabActive) {
        return themes;
      } else {
        return components;
      }
    },
    inactiveThemes: function inactiveThemes(themes) {
      var results;

      if (this.componentsTabActive) {
        results = themes.filter(function (theme) {
          return theme.get("parent_themes.length") <= 0;
        });
      } else {
        results = themes.filter(function (theme) {
          return !theme.get("user_selectable") && !theme.get("default");
        });
      }

      return this._filterThemes(results, this.filterTerm);
    },
    activeThemes: function activeThemes(themes) {
      var results;

      if (this.componentsTabActive) {
        results = themes.filter(function (theme) {
          return theme.get("parent_themes.length") > 0;
        });
      } else {
        results = themes.filter(function (theme) {
          return theme.get("user_selectable") || theme.get("default");
        }).sort(function (a, b) {
          if (a.get("default") && !b.get("default")) {
            return -1;
          } else if (b.get("default")) {
            return 1;
          }

          return a.get("name").toLowerCase().localeCompare(b.get("name").toLowerCase());
        });
      }

      return this._filterThemes(results, this.filterTerm);
    },
    _filterThemes: function _filterThemes(themes, term) {
      var _term, _term$trim;

      term = (_term = term) === null || _term === void 0 ? void 0 : (_term$trim = _term.trim()) === null || _term$trim === void 0 ? void 0 : _term$trim.toLowerCase();

      if (!term) {
        return themes;
      }

      return themes.filter(function (_ref) {
        var name = _ref.name;
        return name.toLowerCase().includes(term);
      });
    },
    changeView: function changeView(newTab) {
      if (newTab !== this.currentTab) {
        this.set("currentTab", newTab);

        if (!this.showFilter) {
          this.set("filterTerm", null);
        }
      }
    },
    navigateToTheme: function navigateToTheme(theme) {
      this.router.transitionTo("adminCustomizeThemes.show", theme);
    }
  }, (_applyDecoratedDescriptor(_obj, "themesList", [_dec], Object.getOwnPropertyDescriptor(_obj, "themesList"), _obj), _applyDecoratedDescriptor(_obj, "inactiveThemes", [_dec2], Object.getOwnPropertyDescriptor(_obj, "inactiveThemes"), _obj), _applyDecoratedDescriptor(_obj, "activeThemes", [_dec3], Object.getOwnPropertyDescriptor(_obj, "activeThemes"), _obj), _applyDecoratedDescriptor(_obj, "changeView", [_object.action], Object.getOwnPropertyDescriptor(_obj, "changeView"), _obj), _applyDecoratedDescriptor(_obj, "navigateToTheme", [_object.action], Object.getOwnPropertyDescriptor(_obj, "navigateToTheme"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/value-list", ["exports", "discourse-common/utils/decorators", "@ember/object/computed", "@ember/component", "discourse-common/lib/helpers"], function (_exports, _decorators, _computed, _component, _helpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.on)("didReceiveAttrs"), _dec2 = (0, _decorators.default)("choices.[]", "collection.[]"), (_obj = {
    classNameBindings: [":value-list"],
    inputInvalid: (0, _computed.empty)("newValue"),
    inputDelimiter: null,
    inputType: null,
    newValue: "",
    collection: null,
    values: null,
    noneKey: (0, _computed.reads)("addKey"),
    _setupCollection: function _setupCollection() {
      var values = this.values;

      if (this.inputType === "array") {
        this.set("collection", values || []);
        return;
      }

      this.set("collection", this._splitValues(values, this.inputDelimiter || "\n"));
    },
    filteredChoices: function filteredChoices(choices, collection) {
      return (0, _helpers.makeArray)(choices).filter(function (i) {
        return collection.indexOf(i) < 0;
      });
    },
    keyDown: function keyDown(event) {
      if (event.key === "Enter") {
        this.send("addValue", this.newValue);
      }
    },
    actions: {
      changeValue: function changeValue(index, newValue) {
        this._replaceValue(index, newValue);
      },
      addValue: function addValue(newValue) {
        if (this.inputInvalid) {
          return;
        }

        this.set("newValue", null);

        this._addValue(newValue);
      },
      removeValue: function removeValue(value) {
        this._removeValue(value);
      },
      selectChoice: function selectChoice(choice) {
        this._addValue(choice);
      }
    },
    _addValue: function _addValue(value) {
      this.collection.addObject(value);

      if (this.choices) {
        this.set("choices", this.choices.rejectBy("id", value));
      } else {
        this.set("choices", []);
      }

      this._saveValues();
    },
    _removeValue: function _removeValue(value) {
      this.collection.removeObject(value);

      if (this.choices) {
        this.set("choices", this.choices.concat([value]).uniq());
      } else {
        this.set("choices", (0, _helpers.makeArray)(value));
      }

      this._saveValues();
    },
    _replaceValue: function _replaceValue(index, newValue) {
      this.collection.replace(index, 1, [newValue]);

      this._saveValues();
    },
    _saveValues: function _saveValues() {
      if (this.inputType === "array") {
        this.set("values", this.collection);
        return;
      }

      this.set("values", this.collection.join(this.inputDelimiter || "\n"));
    },
    _splitValues: function _splitValues(values, delimiter) {
      if (values && values.length) {
        return values.split(delimiter).filter(function (x) {
          return x;
        });
      } else {
        return [];
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "_setupCollection", [_dec], Object.getOwnPropertyDescriptor(_obj, "_setupCollection"), _obj), _applyDecoratedDescriptor(_obj, "filteredChoices", [_dec2], Object.getOwnPropertyDescriptor(_obj, "filteredChoices"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/watched-word-form", ["exports", "discourse-common/utils/decorators", "@ember/component", "I18n", "admin/models/watched-word", "bootbox", "@ember/object/computed", "@ember/utils", "@ember/runloop"], function (_exports, _decorators, _component, _I18n, _watchedWord, _bootbox, _computed, _utils, _runloop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend((_dec = (0, _decorators.default)("siteSettings.watched_words_regular_expressions"), _dec2 = (0, _decorators.observes)("word"), _dec3 = (0, _decorators.default)("word"), _dec4 = (0, _decorators.on)("didInsertElement"), (_obj = {
    classNames: ["watched-word-form"],
    formSubmitted: false,
    actionKey: null,
    showMessage: false,
    selectedTags: null,
    canReplace: (0, _computed.equal)("actionKey", "replace"),
    canTag: (0, _computed.equal)("actionKey", "tag"),
    canLink: (0, _computed.equal)("actionKey", "link"),
    didInsertElement: function didInsertElement() {
      this._super.apply(this, arguments);

      this.set("selectedTags", []);
    },
    placeholderKey: function placeholderKey(watchedWordsRegularExpressions) {
      if (watchedWordsRegularExpressions) {
        return "admin.watched_words.form.placeholder_regexp";
      } else {
        return "admin.watched_words.form.placeholder";
      }
    },
    removeMessage: function removeMessage() {
      if (this.showMessage && !(0, _utils.isEmpty)(this.word)) {
        this.set("showMessage", false);
      }
    },
    isUniqueWord: function isUniqueWord(word) {
      var _this = this;

      var words = this.filteredContent || [];
      var filtered = words.filter(function (content) {
        return content.action === _this.actionKey;
      });
      return filtered.every(function (content) {
        return content.word.toLowerCase() !== word.toLowerCase();
      });
    },
    actions: {
      changeSelectedTags: function changeSelectedTags(tags) {
        this.setProperties({
          selectedTags: tags,
          replacement: tags.join(",")
        });
      },
      submit: function submit() {
        var _this2 = this;

        if (!this.isUniqueWord) {
          this.setProperties({
            showMessage: true,
            message: _I18n.default.t("admin.watched_words.form.exists")
          });
          return;
        }

        if (!this.formSubmitted) {
          this.set("formSubmitted", true);

          var watchedWord = _watchedWord.default.create({
            word: this.word,
            replacement: this.canReplace || this.canTag || this.canLink ? this.replacement : null,
            action: this.actionKey
          });

          watchedWord.save().then(function (result) {
            _this2.setProperties({
              word: "",
              replacement: "",
              formSubmitted: false,
              selectedTags: [],
              showMessage: true,
              message: _I18n.default.t("admin.watched_words.form.success")
            });

            _this2.action(_watchedWord.default.create(result));

            (0, _runloop.schedule)("afterRender", function () {
              return _this2.element.querySelector(".watched-word-input").focus();
            });
          }).catch(function (e) {
            _this2.set("formSubmitted", false);

            var msg = e.jqXHR.responseJSON && e.jqXHR.responseJSON.errors ? _I18n.default.t("generic_error_with_reason", {
              error: e.jqXHR.responseJSON.errors.join(". ")
            }) : _I18n.default.t("generic_error");

            _bootbox.default.alert(msg, function () {
              return _this2.element.querySelector(".watched-word-input").focus();
            });
          });
        }
      }
    },
    _init: function _init() {
      var _this3 = this;

      (0, _runloop.schedule)("afterRender", function () {
        $(_this3.element.querySelector(".watched-word-input")).keydown(function (e) {
          if (e.key === "Enter") {
            _this3.send("submit");
          }
        });
      });
    }
  }, (_applyDecoratedDescriptor(_obj, "placeholderKey", [_dec], Object.getOwnPropertyDescriptor(_obj, "placeholderKey"), _obj), _applyDecoratedDescriptor(_obj, "removeMessage", [_dec2], Object.getOwnPropertyDescriptor(_obj, "removeMessage"), _obj), _applyDecoratedDescriptor(_obj, "isUniqueWord", [_dec3], Object.getOwnPropertyDescriptor(_obj, "isUniqueWord"), _obj), _applyDecoratedDescriptor(_obj, "_init", [_dec4], Object.getOwnPropertyDescriptor(_obj, "_init"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/components/watched-word-uploader", ["exports", "@ember/component", "I18n", "discourse/mixins/upload", "@ember/object/computed", "bootbox", "discourse-common/utils/decorators"], function (_exports, _component, _I18n, _upload, _computed, _bootbox, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _component.default.extend(_upload.default, (_dec = (0, _decorators.default)("actionKey"), (_obj = {
    type: "txt",
    classNames: "watched-words-uploader",
    uploadUrl: "/admin/customize/watched_words/upload",
    addDisabled: (0, _computed.alias)("uploading"),
    validateUploadedFilesOptions: function validateUploadedFilesOptions() {
      return {
        skipValidation: true
      };
    },
    data: function data(actionKey) {
      return {
        action_key: actionKey
      };
    },
    uploadDone: function uploadDone() {
      if (this) {
        _bootbox.default.alert(_I18n.default.t("admin.watched_words.form.upload_successful"));

        this.done();
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "data", [_dec], Object.getOwnPropertyDescriptor(_obj, "data"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-api-keys-index", ["exports", "@ember/controller", "discourse/lib/ajax-error"], function (_exports, _controller, _ajaxError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend({
    actions: {
      revokeKey: function revokeKey(key) {
        key.revoke().catch(_ajaxError.popupAjaxError);
      },
      undoRevokeKey: function undoRevokeKey(key) {
        key.undoRevoke().catch(_ajaxError.popupAjaxError);
      }
    }
  });

  _exports.default = _default;
});
define("admin/controllers/admin-api-keys-new", ["exports", "@ember/controller", "I18n", "discourse-common/utils/decorators", "@ember/utils", "discourse/lib/ajax-error", "@ember/object", "@ember/object/computed", "discourse/lib/show-modal", "discourse/lib/ajax"], function (_exports, _controller, _I18n, _decorators, _utils, _ajaxError, _object, _computed, _showModal, _ajax) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("model.{description,username}", "showUserSelector"), (_obj = {
    userModes: null,
    useGlobalKey: false,
    scopes: null,
    init: function init() {
      this._super.apply(this, arguments);

      this.set("userModes", [{
        id: "all",
        name: _I18n.default.t("admin.api.all_users")
      }, {
        id: "single",
        name: _I18n.default.t("admin.api.single_user")
      }]);

      this._loadScopes();
    },
    showUserSelector: (0, _computed.equal)("userMode", "single"),
    saveDisabled: function saveDisabled(model, showUserSelector) {
      if ((0, _utils.isBlank)(model.description)) {
        return true;
      }

      if (showUserSelector && (0, _utils.isBlank)(model.username)) {
        return true;
      }

      return false;
    },
    updateUsername: function updateUsername(selected) {
      this.set("model.username", (0, _object.get)(selected, "firstObject"));
    },
    changeUserMode: function changeUserMode(userMode) {
      if (userMode === "all") {
        this.model.set("username", null);
      }

      this.set("userMode", userMode);
    },
    save: function save() {
      if (!this.useGlobalKey) {
        var selectedScopes = Object.values(this.scopes).flat().filterBy("selected");
        this.model.set("scopes", selectedScopes);
      }

      return this.model.save().catch(_ajaxError.popupAjaxError);
    },
    continue: function _continue() {
      this.transitionToRoute("adminApiKeys.show", this.model.id);
    },
    showURLs: function showURLs(urls) {
      return (0, _showModal.default)("admin-api-key-urls", {
        admin: true,
        model: {
          urls: urls
        }
      });
    },
    _loadScopes: function _loadScopes() {
      var _this = this;

      return (0, _ajax.ajax)("/admin/api/keys/scopes.json").then(function (data) {
        _this.set("scopes", data.scopes);
      }).catch(_ajaxError.popupAjaxError);
    }
  }, (_applyDecoratedDescriptor(_obj, "saveDisabled", [_dec], Object.getOwnPropertyDescriptor(_obj, "saveDisabled"), _obj), _applyDecoratedDescriptor(_obj, "updateUsername", [_object.action], Object.getOwnPropertyDescriptor(_obj, "updateUsername"), _obj), _applyDecoratedDescriptor(_obj, "changeUserMode", [_object.action], Object.getOwnPropertyDescriptor(_obj, "changeUserMode"), _obj), _applyDecoratedDescriptor(_obj, "save", [_object.action], Object.getOwnPropertyDescriptor(_obj, "save"), _obj), _applyDecoratedDescriptor(_obj, "continue", [_object.action], Object.getOwnPropertyDescriptor(_obj, "continue"), _obj), _applyDecoratedDescriptor(_obj, "showURLs", [_object.action], Object.getOwnPropertyDescriptor(_obj, "showURLs"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-api-keys-show", ["exports", "@ember/controller", "discourse/mixins/buffered-content", "@ember/object/computed", "@ember/utils", "discourse/lib/ajax-error", "discourse/lib/show-modal"], function (_exports, _controller, _bufferedContent, _computed, _utils, _ajaxError, _showModal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend((0, _bufferedContent.bufferedProperty)("model"), {
    isNew: (0, _computed.empty)("model.id"),
    actions: {
      saveDescription: function saveDescription() {
        var _this = this;

        var buffered = this.buffered;
        var attrs = buffered.getProperties("description");
        this.model.save(attrs).then(function () {
          _this.set("editingDescription", false);

          _this.rollbackBuffer();
        }).catch(_ajaxError.popupAjaxError);
      },
      cancel: function cancel() {
        var id = this.get("userField.id");

        if ((0, _utils.isEmpty)(id)) {
          this.destroyAction(this.userField);
        } else {
          this.rollbackBuffer();
          this.set("editing", false);
        }
      },
      editDescription: function editDescription() {
        this.toggleProperty("editingDescription");

        if (!this.editingDescription) {
          this.rollbackBuffer();
        }
      },
      revokeKey: function revokeKey(key) {
        key.revoke().catch(_ajaxError.popupAjaxError);
      },
      deleteKey: function deleteKey(key) {
        var _this2 = this;

        key.destroyRecord().then(function () {
          return _this2.transitionToRoute("adminApiKeys.index");
        }).catch(_ajaxError.popupAjaxError);
      },
      undoRevokeKey: function undoRevokeKey(key) {
        key.undoRevoke().catch(_ajaxError.popupAjaxError);
      },
      showURLs: function showURLs(urls) {
        return (0, _showModal.default)("admin-api-key-urls", {
          admin: true,
          model: {
            urls: urls
          }
        });
      }
    }
  });

  _exports.default = _default;
});
define("admin/controllers/admin-api-keys", [], function () {
  "use strict";
});
define("admin/controllers/admin-backups-index", ["exports", "@ember/controller", "@ember/object/computed", "discourse/lib/computed", "I18n", "discourse/lib/ajax", "bootbox", "discourse-common/utils/decorators"], function (_exports, _controller, _computed, _computed2, _I18n, _ajax, _bootbox, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("status.allowRestore", "status.isOperationRunning"), (_obj = {
    adminBackups: (0, _controller.inject)(),
    status: (0, _computed.alias)("adminBackups.model"),
    uploadLabel: (0, _computed2.i18n)("admin.backups.upload.label"),
    backupLocation: (0, _computed2.setting)("backup_location"),
    localBackupStorage: (0, _computed.equal)("backupLocation", "local"),
    restoreTitle: function restoreTitle(allowRestore, isOperationRunning) {
      if (!allowRestore) {
        return "admin.backups.operations.restore.is_disabled";
      } else if (isOperationRunning) {
        return "admin.backups.operations.is_running";
      } else {
        return "admin.backups.operations.restore.title";
      }
    },
    actions: {
      toggleReadOnlyMode: function toggleReadOnlyMode() {
        var _this = this;

        if (!this.site.get("isReadOnly")) {
          _bootbox.default.confirm(_I18n.default.t("admin.backups.read_only.enable.confirm"), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (confirmed) {
            if (confirmed) {
              _this.set("currentUser.hideReadOnlyAlert", true);

              _this._toggleReadOnlyMode(true);
            }
          });
        } else {
          this._toggleReadOnlyMode(false);
        }
      },
      download: function download(backup) {
        var link = backup.get("filename");
        (0, _ajax.ajax)("/admin/backups/".concat(link), {
          type: "PUT"
        }).then(function () {
          return _bootbox.default.alert(_I18n.default.t("admin.backups.operations.download.alert"));
        });
      }
    },
    _toggleReadOnlyMode: function _toggleReadOnlyMode(enable) {
      var _this2 = this;

      (0, _ajax.ajax)("/admin/backups/readonly", {
        type: "PUT",
        data: {
          enable: enable
        }
      }).then(function () {
        return _this2.site.set("isReadOnly", enable);
      });
    }
  }, (_applyDecoratedDescriptor(_obj, "restoreTitle", [_dec], Object.getOwnPropertyDescriptor(_obj, "restoreTitle"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-backups-logs", ["exports", "@ember/controller", "@ember/object/computed"], function (_exports, _controller, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend({
    adminBackups: (0, _controller.inject)(),
    status: (0, _computed.alias)("adminBackups.model"),
    init: function init() {
      this._super.apply(this, arguments);

      this.logs = [];
    }
  });

  _exports.default = _default;
});
define("admin/controllers/admin-backups", ["exports", "@ember/object/computed", "@ember/controller"], function (_exports, _computed, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend({
    noOperationIsRunning: (0, _computed.not)("model.isOperationRunning"),
    rollbackEnabled: (0, _computed.and)("model.canRollback", "model.restoreEnabled", "noOperationIsRunning"),
    rollbackDisabled: (0, _computed.not)("rollbackEnabled")
  });

  _exports.default = _default;
});
define("admin/controllers/admin-badges-award", ["exports", "@ember/controller", "I18n", "discourse/lib/ajax", "bootbox", "discourse/lib/ajax-error", "@ember/object", "discourse-common/utils/decorators"], function (_exports, _controller, _I18n, _ajax, _bootbox, _ajaxError, _object, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("fileSelected", "saving"), _dec2 = (0, _decorators.default)("unmatchedEntriesCount", "unmatchedEntries.length"), (_obj = {
    saving: false,
    replaceBadgeOwners: false,
    grantExistingHolders: false,
    fileSelected: false,
    unmatchedEntries: null,
    resultsMessage: null,
    success: false,
    unmatchedEntriesCount: 0,
    resetState: function resetState() {
      this.setProperties({
        saving: false,
        unmatchedEntries: null,
        resultsMessage: null,
        success: false,
        unmatchedEntriesCount: 0
      });
      this.send("updateFileSelected");
    },
    massAwardButtonDisabled: function massAwardButtonDisabled(fileSelected, saving) {
      return !fileSelected || saving;
    },
    unmatchedEntriesTruncated: function unmatchedEntriesTruncated(unmatchedEntriesCount, length) {
      return unmatchedEntriesCount && length && unmatchedEntriesCount > length;
    },
    updateFileSelected: function updateFileSelected() {
      var _document$querySelect, _document$querySelect2;

      this.set("fileSelected", !!((_document$querySelect = document.querySelector("#massAwardCSVUpload")) === null || _document$querySelect === void 0 ? void 0 : (_document$querySelect2 = _document$querySelect.files) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2.length));
    },
    massAward: function massAward() {
      var _this = this;

      var file = document.querySelector("#massAwardCSVUpload").files[0];

      if (this.model && file) {
        var options = {
          type: "POST",
          processData: false,
          contentType: false,
          data: new FormData()
        };
        options.data.append("file", file);
        options.data.append("replace_badge_owners", this.replaceBadgeOwners);
        options.data.append("grant_existing_holders", this.grantExistingHolders);
        this.resetState();
        this.set("saving", true);
        (0, _ajax.ajax)("/admin/badges/award/".concat(this.model.id), options).then(function (_ref) {
          var matchedCount = _ref.matched_users_count,
              unmatchedEntries = _ref.unmatched_entries,
              unmatchedEntriesCount = _ref.unmatched_entries_count;

          _this.setProperties({
            resultsMessage: _I18n.default.t("admin.badges.mass_award.success", {
              count: matchedCount
            }),
            success: true
          });

          if (unmatchedEntries.length) {
            _this.setProperties({
              unmatchedEntries: unmatchedEntries,
              unmatchedEntriesCount: unmatchedEntriesCount
            });
          }
        }).catch(function (error) {
          _this.setProperties({
            resultsMessage: (0, _ajaxError.extractError)(error),
            success: false
          });
        }).finally(function () {
          return _this.set("saving", false);
        });
      } else {
        _bootbox.default.alert(_I18n.default.t("admin.badges.mass_award.aborted"));
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "massAwardButtonDisabled", [_dec], Object.getOwnPropertyDescriptor(_obj, "massAwardButtonDisabled"), _obj), _applyDecoratedDescriptor(_obj, "unmatchedEntriesTruncated", [_dec2], Object.getOwnPropertyDescriptor(_obj, "unmatchedEntriesTruncated"), _obj), _applyDecoratedDescriptor(_obj, "updateFileSelected", [_object.action], Object.getOwnPropertyDescriptor(_obj, "updateFileSelected"), _obj), _applyDecoratedDescriptor(_obj, "massAward", [_object.action], Object.getOwnPropertyDescriptor(_obj, "massAward"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-badges-show", ["exports", "@ember/controller", "discourse-common/utils/decorators", "I18n", "bootbox", "discourse/mixins/buffered-content", "discourse/lib/ajax-error", "discourse/lib/computed", "@ember/object/computed", "@ember/runloop", "@ember/object", "discourse-common/lib/get-url"], function (_exports, _controller, _decorators, _I18n, _bootbox, _bufferedContent, _ajaxError, _computed, _computed2, _runloop, _object, _getUrl) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _obj, _init;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var IMAGE = "image";
  var ICON = "icon";

  var _default = _controller.default.extend((0, _bufferedContent.bufferedProperty)("model"), (_dec = (0, _decorators.default)("model.query", "buffered.query"), _dec2 = (0, _decorators.default)("model.i18n_name"), _dec3 = (0, _decorators.observes)("model.id"), (_obj = {
    adminBadges: (0, _controller.inject)(),
    saving: false,
    savingStatus: "",
    selectedGraphicType: null,
    badgeTypes: (0, _computed2.reads)("adminBadges.badgeTypes"),
    badgeGroupings: (0, _computed2.reads)("adminBadges.badgeGroupings"),
    badgeTriggers: (0, _computed2.reads)("adminBadges.badgeTriggers"),
    protectedSystemFields: (0, _computed2.reads)("adminBadges.protectedSystemFields"),
    readOnly: (0, _computed2.reads)("buffered.system"),
    showDisplayName: (0, _computed.propertyNotEqual)("name", "displayName"),
    iconSelectorSelected: (0, _computed2.equal)("selectedGraphicType", ICON),
    imageUploaderSelected: (0, _computed2.equal)("selectedGraphicType", IMAGE),
    init: function init() {
      var _this = this;

      this._super.apply(this, arguments); // this is needed because the model doesnt have default values
      // and as we are using a bufferedProperty it's not accessible
      // in any other way


      _runloop.run.next(function () {
        if (_this.model) {
          if (!_this.model.badge_type_id) {
            _this.model.set("badge_type_id", _this.get("badgeTypes.firstObject.id"));
          }

          if (!_this.model.badge_grouping_id) {
            _this.model.set("badge_grouping_id", _this.get("badgeGroupings.firstObject.id"));
          }

          if (!_this.model.trigger) {
            _this.model.set("trigger", _this.get("badgeTriggers.firstObject.id"));
          }
        }
      });
    },
    hasQuery: function hasQuery(modelQuery, bufferedQuery) {
      if (bufferedQuery) {
        return bufferedQuery.trim().length > 0;
      }

      return modelQuery && modelQuery.trim().length > 0;
    },
    textCustomizationPrefix: function textCustomizationPrefix(i18n_name) {
      return "badges.".concat(i18n_name, ".");
    },
    _resetSaving: function _resetSaving() {
      this.set("saving", false);
      this.set("savingStatus", "");
    },
    showIconSelector: function showIconSelector() {
      this.set("selectedGraphicType", ICON);
    },
    showImageUploader: function showImageUploader() {
      this.set("selectedGraphicType", IMAGE);
    },
    changeGraphicType: function changeGraphicType(newType) {
      if (newType === IMAGE) {
        this.showImageUploader();
      } else if (newType === ICON) {
        this.showIconSelector();
      } else {
        throw new Error("Unknown badge graphic type \"".concat(newType, "\""));
      }
    },
    setImage: function setImage(upload) {
      this.buffered.setProperties({
        image_upload_id: upload.id,
        image_url: (0, _getUrl.default)(upload.url)
      });
    },
    removeImage: function removeImage() {
      this.buffered.setProperties({
        image_upload_id: null,
        image_url: null
      });
    },
    actions: {
      save: function save() {
        var _this2 = this;

        if (!this.saving) {
          var fields = ["allow_title", "multiple_grant", "listable", "auto_revoke", "enabled", "show_posts", "target_posts", "name", "description", "long_description", "icon", "image_upload_id", "query", "badge_grouping_id", "trigger", "badge_type_id"];

          if (this.get("buffered.system")) {
            var protectedFields = this.protectedSystemFields || [];
            fields = fields.filter(function (f) {
              return !protectedFields.includes(f);
            });
          }

          this.set("saving", true);
          this.set("savingStatus", _I18n.default.t("saving"));
          var boolFields = ["allow_title", "multiple_grant", "listable", "auto_revoke", "enabled", "show_posts", "target_posts"];
          var data = {};
          var buffered = this.buffered;
          fields.forEach(function (field) {
            var d = buffered.get(field);

            if (boolFields.includes(field)) {
              d = !!d;
            }

            data[field] = d;
          });
          var newBadge = !this.id;
          var model = this.model;
          this.model.save(data).then(function () {
            if (newBadge) {
              var adminBadges = _this2.get("adminBadges.model");

              if (!adminBadges.includes(model)) {
                adminBadges.pushObject(model);
              }

              _this2.transitionToRoute("adminBadges.show", model.get("id"));
            } else {
              _this2.commitBuffer();

              _this2.set("savingStatus", _I18n.default.t("saved"));
            }
          }).catch(_ajaxError.popupAjaxError).finally(function () {
            _this2.set("saving", false);

            _this2.set("savingStatus", "");
          });
        }
      },
      destroy: function destroy() {
        var _this3 = this;

        var adminBadges = this.get("adminBadges.model");
        var model = this.model;

        if (!model.get("id")) {
          this.transitionToRoute("adminBadges.index");
          return;
        }

        return _bootbox.default.confirm(_I18n.default.t("admin.badges.delete_confirm"), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (result) {
          if (result) {
            model.destroy().then(function () {
              adminBadges.removeObject(model);

              _this3.transitionToRoute("adminBadges.index");
            }).catch(function () {
              _bootbox.default.alert(_I18n.default.t("generic_error"));
            });
          }
        });
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "hasQuery", [_dec], Object.getOwnPropertyDescriptor(_obj, "hasQuery"), _obj), _applyDecoratedDescriptor(_obj, "textCustomizationPrefix", [_dec2], Object.getOwnPropertyDescriptor(_obj, "textCustomizationPrefix"), _obj), _applyDecoratedDescriptor(_obj, "_resetSaving", [_dec3], (_init = Object.getOwnPropertyDescriptor(_obj, "_resetSaving"), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
      return _init;
    }
  }), _obj), _applyDecoratedDescriptor(_obj, "changeGraphicType", [_object.action], Object.getOwnPropertyDescriptor(_obj, "changeGraphicType"), _obj), _applyDecoratedDescriptor(_obj, "setImage", [_object.action], Object.getOwnPropertyDescriptor(_obj, "setImage"), _obj), _applyDecoratedDescriptor(_obj, "removeImage", [_object.action], Object.getOwnPropertyDescriptor(_obj, "removeImage"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-badges", ["exports", "@ember/controller", "discourse-common/utils/decorators", "@ember/service"], function (_exports, _controller, _decorators, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("routing.currentRouteName"), (_obj = {
    routing: (0, _service.inject)("-routing"),
    selectedRoute: function selectedRoute() {
      var currentRoute = this.routing.currentRouteName;
      var indexRoute = "adminBadges.index";

      if (currentRoute === indexRoute) {
        return "adminBadges.show";
      } else {
        return this.routing.currentRouteName;
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "selectedRoute", [_dec], Object.getOwnPropertyDescriptor(_obj, "selectedRoute"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-customize-colors-show", ["exports", "@ember/controller", "I18n", "bootbox", "discourse-common/utils/decorators", "@ember/runloop"], function (_exports, _controller, _I18n, _bootbox, _decorators, _runloop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("model.colors", "onlyOverridden"), (_obj = {
    colors: function colors(allColors, onlyOverridden) {
      if (onlyOverridden) {
        return allColors.filter(function (color) {
          return color.get("overridden");
        });
      } else {
        return allColors;
      }
    },
    actions: {
      revert: function revert(color) {
        color.revert();
      },
      undo: function undo(color) {
        color.undo();
      },
      copyToClipboard: function copyToClipboard() {
        var _this = this;

        $(".table.colors").hide();
        var area = $("<textarea id='copy-range'></textarea>");
        $(".table.colors").after(area);
        area.text(this.model.schemeJson());
        var range = document.createRange();
        range.selectNode(area[0]);
        window.getSelection().addRange(range);
        var successful = document.execCommand("copy");

        if (successful) {
          this.set("model.savingStatus", _I18n.default.t("admin.customize.copied_to_clipboard"));
        } else {
          this.set("model.savingStatus", _I18n.default.t("admin.customize.copy_to_clipboard_error"));
        }

        (0, _runloop.later)(function () {
          _this.set("model.savingStatus", null);
        }, 2000);
        window.getSelection().removeAllRanges();
        $(".table.colors").show();
        $(area).remove();
      },
      copy: function copy() {
        var _this2 = this;

        var newColorScheme = this.model.copy();
        newColorScheme.set("name", _I18n.default.t("admin.customize.colors.copy_name_prefix") + " " + this.get("model.name"));
        newColorScheme.save().then(function () {
          _this2.allColors.pushObject(newColorScheme);

          _this2.replaceRoute("adminCustomize.colors.show", newColorScheme);
        });
      },
      save: function save() {
        this.model.save();
      },
      applyUserSelectable: function applyUserSelectable() {
        this.model.updateUserSelectable(this.get("model.user_selectable"));
      },
      destroy: function destroy() {
        var _this3 = this;

        var model = this.model;
        return _bootbox.default.confirm(_I18n.default.t("admin.customize.colors.delete_confirm"), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (result) {
          if (result) {
            model.destroy().then(function () {
              _this3.allColors.removeObject(model);

              _this3.replaceRoute("adminCustomize.colors");
            });
          }
        });
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "colors", [_dec], Object.getOwnPropertyDescriptor(_obj, "colors"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-customize-colors", ["exports", "@ember/controller", "@ember/object", "I18n", "discourse-common/utils/decorators", "discourse/lib/show-modal"], function (_exports, _controller, _object, _I18n, _decorators, _showModal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("model.@each.id"), _dec2 = (0, _decorators.default)("model.@each.id"), _dec3 = (0, _decorators.default)("baseColorScheme"), (_obj = {
    baseColorScheme: function baseColorScheme() {
      return this.model.findBy("is_base", true);
    },
    baseColorSchemes: function baseColorSchemes() {
      return this.model.filterBy("is_base", true);
    },
    baseColors: function baseColors(baseColorScheme) {
      var baseColorsHash = _object.default.create({});

      baseColorScheme.get("colors").forEach(function (color) {
        baseColorsHash.set(color.get("name"), color);
      });
      return baseColorsHash;
    },
    actions: {
      newColorSchemeWithBase: function newColorSchemeWithBase(baseKey) {
        var _this = this;

        var base = this.baseColorSchemes.findBy("base_scheme_id", baseKey);
        var newColorScheme = base.copy();
        newColorScheme.setProperties({
          name: _I18n.default.t("admin.customize.colors.new_name"),
          base_scheme_id: base.get("base_scheme_id")
        });
        newColorScheme.save().then(function () {
          _this.model.pushObject(newColorScheme);

          newColorScheme.set("savingStatus", null);

          _this.replaceRoute("adminCustomize.colors.show", newColorScheme);
        });
      },
      newColorScheme: function newColorScheme() {
        (0, _showModal.default)("admin-color-scheme-select-base", {
          model: this.baseColorSchemes,
          admin: true
        });
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "baseColorScheme", [_dec], Object.getOwnPropertyDescriptor(_obj, "baseColorScheme"), _obj), _applyDecoratedDescriptor(_obj, "baseColorSchemes", [_dec2], Object.getOwnPropertyDescriptor(_obj, "baseColorSchemes"), _obj), _applyDecoratedDescriptor(_obj, "baseColors", [_dec3], Object.getOwnPropertyDescriptor(_obj, "baseColors"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-customize-email-style-edit", ["exports", "@ember/controller", "I18n", "bootbox", "discourse-common/utils/decorators"], function (_exports, _controller, _I18n, _bootbox, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("model.isSaving"), _dec2 = (0, _decorators.default)("model.changed", "model.isSaving"), (_obj = {
    saveButtonText: function saveButtonText(isSaving) {
      return isSaving ? _I18n.default.t("saving") : _I18n.default.t("admin.customize.save");
    },
    saveDisabled: function saveDisabled(changed, isSaving) {
      return !changed || isSaving;
    },
    actions: {
      save: function save() {
        var _this = this;

        if (!this.model.saving) {
          this.set("saving", true);
          this.model.update(this.model.getProperties("html", "css")).catch(function (e) {
            var msg = e.jqXHR.responseJSON && e.jqXHR.responseJSON.errors ? _I18n.default.t("admin.customize.email_style.save_error_with_reason", {
              error: e.jqXHR.responseJSON.errors.join(". ")
            }) : _I18n.default.t("generic_error");

            _bootbox.default.alert(msg);
          }).finally(function () {
            return _this.set("model.changed", false);
          });
        }
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "saveButtonText", [_dec], Object.getOwnPropertyDescriptor(_obj, "saveButtonText"), _obj), _applyDecoratedDescriptor(_obj, "saveDisabled", [_dec2], Object.getOwnPropertyDescriptor(_obj, "saveDisabled"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-customize-email-templates-edit", ["exports", "@ember/controller", "I18n", "@ember/object", "bootbox", "discourse/mixins/buffered-content", "discourse-common/utils/decorators", "discourse/lib/ajax-error"], function (_exports, _controller, _I18n, _object, _bootbox, _bufferedContent, _decorators, _ajaxError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((0, _bufferedContent.bufferedProperty)("emailTemplate"), (_dec = (0, _decorators.default)("buffered.body", "buffered.subject"), _dec2 = (0, _decorators.default)("buffered"), (_obj = {
    adminCustomizeEmailTemplates: (0, _controller.inject)(),
    emailTemplate: null,
    saved: false,
    saveDisabled: function saveDisabled(body, subject) {
      return this.emailTemplate.body === body && this.emailTemplate.subject === subject;
    },
    hasMultipleSubjects: function hasMultipleSubjects(buffered) {
      if (buffered.getProperties("subject")["subject"]) {
        return false;
      } else {
        return buffered.getProperties("id")["id"];
      }
    },
    saveChanges: function saveChanges() {
      var _this = this;

      this.set("saved", false);
      var buffered = this.buffered;
      this.emailTemplate.save(buffered.getProperties("subject", "body")).then(function () {
        _this.set("saved", true);
      }).catch(_ajaxError.popupAjaxError);
    },
    revertChanges: function revertChanges() {
      var _this2 = this;

      this.set("saved", false);

      _bootbox.default.confirm(_I18n.default.t("admin.customize.email_templates.revert_confirm"), function (result) {
        if (result) {
          _this2.emailTemplate.revert().then(function (props) {
            var buffered = _this2.buffered;
            buffered.setProperties(props);

            _this2.commitBuffer();
          }).catch(_ajaxError.popupAjaxError);
        }
      });
    }
  }, (_applyDecoratedDescriptor(_obj, "saveDisabled", [_dec], Object.getOwnPropertyDescriptor(_obj, "saveDisabled"), _obj), _applyDecoratedDescriptor(_obj, "hasMultipleSubjects", [_dec2], Object.getOwnPropertyDescriptor(_obj, "hasMultipleSubjects"), _obj), _applyDecoratedDescriptor(_obj, "saveChanges", [_object.action], Object.getOwnPropertyDescriptor(_obj, "saveChanges"), _obj), _applyDecoratedDescriptor(_obj, "revertChanges", [_object.action], Object.getOwnPropertyDescriptor(_obj, "revertChanges"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-customize-email-templates", ["exports", "@ember/controller", "@ember/object", "@ember/object/computed"], function (_exports, _controller, _object, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_obj = {
    sortedTemplates: (0, _computed.sort)("emailTemplates", "titleSorting"),
    init: function init() {
      this._super.apply(this, arguments);

      this.set("titleSorting", ["title"]);
    },
    onSelectTemplate: function onSelectTemplate(template) {
      this.transitionToRoute("adminCustomizeEmailTemplates.edit", template);
    }
  }, (_applyDecoratedDescriptor(_obj, "onSelectTemplate", [_object.action], Object.getOwnPropertyDescriptor(_obj, "onSelectTemplate"), _obj)), _obj));

  _exports.default = _default;
});
define("admin/controllers/admin-customize-robots-txt", ["exports", "@ember/controller", "discourse/lib/ajax", "discourse/mixins/buffered-content", "@ember/object/computed", "discourse/lib/computed"], function (_exports, _controller, _ajax, _bufferedContent, _computed, _computed2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend((0, _bufferedContent.bufferedProperty)("model"), {
    saved: false,
    isSaving: false,
    saveDisabled: (0, _computed2.propertyEqual)("model.robots_txt", "buffered.robots_txt"),
    resetDisbaled: (0, _computed.not)("model.overridden"),
    actions: {
      save: function save() {
        var _this = this;

        this.setProperties({
          isSaving: true,
          saved: false
        });
        (0, _ajax.ajax)("robots.json", {
          type: "PUT",
          data: {
            robots_txt: this.buffered.get("robots_txt")
          }
        }).then(function (data) {
          _this.commitBuffer();

          _this.set("saved", true);

          _this.set("model.overridden", data.overridden);
        }).finally(function () {
          return _this.set("isSaving", false);
        });
      },
      reset: function reset() {
        var _this2 = this;

        this.setProperties({
          isSaving: true,
          saved: false
        });
        (0, _ajax.ajax)("robots.json", {
          type: "DELETE"
        }).then(function (data) {
          _this2.buffered.set("robots_txt", data.robots_txt);

          _this2.commitBuffer();

          _this2.set("saved", true);

          _this2.set("model.overridden", false);
        }).finally(function () {
          return _this2.set("isSaving", false);
        });
      }
    }
  });

  _exports.default = _default;
});
define("admin/controllers/admin-customize-themes-edit", ["exports", "@ember/controller", "I18n", "discourse-common/utils/decorators", "discourse/lib/computed"], function (_exports, _controller, _I18n, _decorators, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("currentTarget"), _dec2 = (0, _decorators.default)("model.isSaving"), _dec3 = (0, _decorators.default)("model.changed", "model.isSaving"), (_obj = {
    section: null,
    currentTarget: 0,
    maximized: false,
    previewUrl: (0, _computed.url)("model.id", "/admin/themes/%@/preview"),
    showAdvanced: false,
    editRouteName: "adminCustomizeThemes.edit",
    showRouteName: "adminCustomizeThemes.show",
    setTargetName: function setTargetName(name) {
      var target = this.get("model.targets").find(function (t) {
        return t.name === name;
      });
      this.set("currentTarget", target && target.id);
    },
    currentTargetName: function currentTargetName(id) {
      var target = this.get("model.targets").find(function (t) {
        return t.id === parseInt(id, 10);
      });
      return target && target.name;
    },
    saveButtonText: function saveButtonText(isSaving) {
      return isSaving ? _I18n.default.t("saving") : _I18n.default.t("admin.customize.save");
    },
    saveDisabled: function saveDisabled(changed, isSaving) {
      return !changed || isSaving;
    },
    actions: {
      save: function save() {
        var _this = this;

        this.set("saving", true);
        this.model.saveChanges("theme_fields").finally(function () {
          _this.set("saving", false);
        });
      },
      fieldAdded: function fieldAdded(target, name) {
        this.replaceRoute(this.editRouteName, this.get("model.id"), target, name);
      },
      onlyOverriddenChanged: function onlyOverriddenChanged(onlyShowOverridden) {
        if (onlyShowOverridden) {
          if (!this.model.hasEdited(this.currentTargetName, this.fieldName)) {
            var firstTarget = this.get("model.targets").find(function (t) {
              return t.edited;
            });
            var firstField = this.get("model.fields.".concat(firstTarget.name)).find(function (f) {
              return f.edited;
            });
            this.replaceRoute(this.editRouteName, this.get("model.id"), firstTarget.name, firstField.name);
          }
        }
      },
      goBack: function goBack() {
        this.replaceRoute(this.showRouteName, this.model.id);
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "currentTargetName", [_dec], Object.getOwnPropertyDescriptor(_obj, "currentTargetName"), _obj), _applyDecoratedDescriptor(_obj, "saveButtonText", [_dec2], Object.getOwnPropertyDescriptor(_obj, "saveButtonText"), _obj), _applyDecoratedDescriptor(_obj, "saveDisabled", [_dec3], Object.getOwnPropertyDescriptor(_obj, "saveDisabled"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-customize-themes-show", ["exports", "admin/models/theme", "@ember/object/computed", "@ember/controller", "@ember/object", "I18n", "admin/models/theme-settings", "bootbox", "discourse-common/utils/decorators", "discourse-common/lib/helpers", "discourse/lib/ajax-error", "discourse/lib/show-modal", "discourse/lib/computed"], function (_exports, _theme, _computed, _controller, _object, _I18n, _themeSettings, _bootbox, _decorators, _helpers, _ajaxError, _showModal, _computed2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _obj;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var THEME_UPLOAD_VAR = 2;

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("model.component", "model.remote_theme"), _dec2 = (0, _decorators.default)("model.editedFields"), _dec3 = (0, _decorators.default)("colorSchemeId", "model.color_scheme_id"), _dec4 = (0, _decorators.default)("availableChildThemes", "model.childThemes.[]", "model"), _dec5 = (0, _decorators.default)("model.parentThemes.[]"), _dec6 = (0, _decorators.default)("model.parentThemes.[]"), _dec7 = (0, _decorators.default)("allThemes", "model.component", "model"), _dec8 = (0, _decorators.default)("model.component"), _dec9 = (0, _decorators.default)("model.component"), _dec10 = (0, _decorators.default)("model.component"), _dec11 = (0, _decorators.default)("model.settings"), _dec12 = (0, _decorators.default)("model.translations"), _dec13 = (0, _decorators.default)("model.remote_theme.local_version", "model.remote_theme.remote_version", "model.remote_theme.commits_behind"), _dec14 = (0, _decorators.default)("model.remoteError", "updatingRemote"), _dec15 = (0, _decorators.default)("model.remote_theme.remote_url", "model.remote_theme.branch"), _dec16 = (0, _decorators.default)("model.user.id", "model.default"), (_obj = {
    downloadUrl: (0, _computed2.url)("model.id", "/admin/customize/themes/%@/export"),
    previewUrl: (0, _computed2.url)("model.id", "/admin/themes/%@/preview"),
    addButtonDisabled: (0, _computed.empty)("selectedChildThemeId"),
    editRouteName: "adminCustomizeThemes.edit",
    parentThemesNames: (0, _computed.mapBy)("model.parentThemes", "name"),
    availableParentThemes: (0, _computed.filterBy)("allThemes", "component", false),
    availableActiveParentThemes: (0, _computed.filterBy)("availableParentThemes", "isActive"),
    availableThemesNames: (0, _computed.mapBy)("availableParentThemes", "name"),
    availableActiveThemesNames: (0, _computed.mapBy)("availableActiveParentThemes", "name"),
    availableActiveChildThemes: (0, _computed.filterBy)("availableChildThemes", "hasParents"),
    availableComponentsNames: (0, _computed.mapBy)("availableChildThemes", "name"),
    availableActiveComponentsNames: (0, _computed.mapBy)("availableActiveChildThemes", "name"),
    childThemesNames: (0, _computed.mapBy)("model.childThemes", "name"),
    extraFiles: (0, _computed.filterBy)("model.theme_fields", "target", "extra_js"),
    showCheckboxes: function showCheckboxes() {
      return !this.model.component || this.model.remote_theme;
    },
    editedFieldsFormatted: function editedFieldsFormatted() {
      var _this = this;

      var descriptions = [];
      ["common", "desktop", "mobile"].forEach(function (target) {
        var fields = _this.editedFieldsForTarget(target);

        if (fields.length < 1) {
          return;
        }

        var resultString = _I18n.default.t("admin.customize.theme." + target);

        var formattedFields = fields.map(function (f) {
          return _I18n.default.t("admin.customize.theme." + f.name + ".text");
        }).join(" , ");
        resultString += ": ".concat(formattedFields);
        descriptions.push(resultString);
      });
      return descriptions;
    },
    colorSchemeChanged: function colorSchemeChanged(colorSchemeId, existingId) {
      colorSchemeId = colorSchemeId === null ? null : parseInt(colorSchemeId, 10);
      return colorSchemeId !== existingId;
    },
    selectableChildThemes: function selectableChildThemes(available, childThemes) {
      if (available) {
        var themes = !childThemes ? available : available.filter(function (theme) {
          return childThemes.indexOf(theme) === -1;
        });
        return themes.length === 0 ? null : themes;
      }
    },
    relativesSelectorSettingsForComponent: function relativesSelectorSettingsForComponent() {
      return _object.default.create({
        list_type: "compact",
        type: "list",
        preview: null,
        anyValue: false,
        setting: "parent_theme_ids",
        label: _I18n.default.t("admin.customize.theme.component_on_themes"),
        choices: this.availableThemesNames,
        default: this.parentThemesNames.join("|"),
        value: this.parentThemesNames.join("|"),
        defaultValues: this.availableActiveThemesNames.join("|"),
        allThemes: this.allThemes,
        setDefaultValuesLabel: _I18n.default.t("admin.customize.theme.add_all_themes")
      });
    },
    relativesSelectorSettingsForTheme: function relativesSelectorSettingsForTheme() {
      return _object.default.create({
        list_type: "compact",
        type: "list",
        preview: null,
        anyValue: false,
        setting: "child_theme_ids",
        label: _I18n.default.t("admin.customize.theme.included_components"),
        choices: this.availableComponentsNames,
        default: this.childThemesNames.join("|"),
        value: this.childThemesNames.join("|"),
        defaultValues: this.availableActiveComponentsNames.join("|"),
        allThemes: this.allThemes,
        setDefaultValuesLabel: _I18n.default.t("admin.customize.theme.add_all")
      });
    },
    availableChildThemes: function availableChildThemes(allThemes) {
      if (!this.get("model.component")) {
        var themeId = this.get("model.id");
        return allThemes.filter(function (theme) {
          return theme.get("id") !== themeId && theme.get("component");
        });
      }
    },
    convertKey: function convertKey(component) {
      var type = component ? "component" : "theme";
      return "admin.customize.theme.convert_".concat(type);
    },
    convertIcon: function convertIcon(component) {
      return component ? "cube" : "";
    },
    convertTooltip: function convertTooltip(component) {
      var type = component ? "component" : "theme";
      return "admin.customize.theme.convert_".concat(type, "_tooltip");
    },
    settings: function settings(_settings) {
      return _settings.map(function (setting) {
        return _themeSettings.default.create(setting);
      });
    },
    hasSettings: (0, _computed.notEmpty)("settings"),
    translations: function translations(_translations) {
      return _translations.map(function (setting) {
        return _themeSettings.default.create(_objectSpread(_objectSpread({}, setting), {}, {
          textarea: true
        }));
      });
    },
    hasTranslations: (0, _computed.notEmpty)("translations"),
    hasOverwrittenHistory: function hasOverwrittenHistory(localVersion, remoteVersion, commitsBehind) {
      return localVersion !== remoteVersion && commitsBehind === -1;
    },
    showRemoteError: function showRemoteError(errorMessage, updating) {
      return errorMessage && !updating;
    },
    editedFieldsForTarget: function editedFieldsForTarget(target) {
      return this.get("model.editedFields").filter(function (field) {
        return field.target === target;
      });
    },
    commitSwitchType: function commitSwitchType() {
      var _this2 = this;

      var model = this.model;
      var newValue = !model.get("component");
      model.set("component", newValue);

      if (newValue) {
        this.set("parentController.currentTab", _theme.COMPONENTS);
      } else {
        this.set("parentController.currentTab", _theme.THEMES);
      }

      model.saveChanges("component").then(function () {
        _this2.set("colorSchemeId", null);

        model.setProperties({
          default: false,
          color_scheme_id: null,
          user_selectable: false,
          child_themes: [],
          childThemes: []
        });

        _this2.get("parentController.model.content").forEach(function (theme) {
          var children = (0, _helpers.makeArray)(theme.get("childThemes"));
          var rawChildren = (0, _helpers.makeArray)(theme.get("child_themes"));
          var index = children ? children.indexOf(model) : -1;

          if (index > -1) {
            children.splice(index, 1);
            rawChildren.splice(index, 1);
            theme.setProperties({
              childThemes: children,
              child_themes: rawChildren
            });
          }
        });
      }).catch(_ajaxError.popupAjaxError);
    },
    transitionToEditRoute: function transitionToEditRoute() {
      this.transitionToRoute(this.editRouteName, this.get("model.id"), "common", "scss");
    },
    sourceIsHttp: (0, _computed.match)("model.remote_theme.remote_url", /^http(s)?:\/\//),
    remoteThemeLink: function remoteThemeLink(remoteThemeUrl, remoteThemeBranch) {
      return remoteThemeBranch ? "".concat(remoteThemeUrl.replace(/\.git$/, ""), "/tree/").concat(remoteThemeBranch) : remoteThemeUrl;
    },
    showConvert: function showConvert(userId, defaultTheme) {
      return userId > 0 && !defaultTheme;
    },
    actions: {
      updateToLatest: function updateToLatest() {
        var _this3 = this;

        this.set("updatingRemote", true);
        this.model.updateToLatest().catch(_ajaxError.popupAjaxError).finally(function () {
          _this3.set("updatingRemote", false);
        });
      },
      checkForThemeUpdates: function checkForThemeUpdates() {
        var _this4 = this;

        this.set("updatingRemote", true);
        this.model.checkForUpdates().catch(_ajaxError.popupAjaxError).finally(function () {
          _this4.set("updatingRemote", false);
        });
      },
      addUploadModal: function addUploadModal() {
        (0, _showModal.default)("admin-add-upload", {
          admin: true,
          name: ""
        });
      },
      addUpload: function addUpload(info) {
        var model = this.model;
        model.setField("common", info.name, "", info.upload_id, THEME_UPLOAD_VAR);
        model.saveChanges("theme_fields").catch(function (e) {
          return (0, _ajaxError.popupAjaxError)(e);
        });
      },
      cancelChangeScheme: function cancelChangeScheme() {
        this.set("colorSchemeId", this.get("model.color_scheme_id"));
      },
      changeScheme: function changeScheme() {
        var schemeId = this.colorSchemeId;
        this.set("model.color_scheme_id", schemeId === null ? null : parseInt(schemeId, 10));
        this.model.saveChanges("color_scheme_id");
      },
      startEditingName: function startEditingName() {
        this.set("oldName", this.get("model.name"));
        this.set("editingName", true);
      },
      cancelEditingName: function cancelEditingName() {
        this.set("model.name", this.oldName);
        this.set("editingName", false);
      },
      finishedEditingName: function finishedEditingName() {
        this.model.saveChanges("name");
        this.set("editingName", false);
      },
      editTheme: function editTheme() {
        var _this5 = this;

        if (this.get("model.remote_theme.is_git")) {
          _bootbox.default.confirm(_I18n.default.t("admin.customize.theme.edit_confirm"), function (result) {
            if (result) {
              _this5.transitionToEditRoute();
            }
          });
        } else {
          this.transitionToEditRoute();
        }
      },
      applyDefault: function applyDefault() {
        var _this6 = this;

        var model = this.model;
        model.saveChanges("default").then(function () {
          if (model.get("default")) {
            _this6.allThemes.forEach(function (theme) {
              if (theme !== model && theme.get("default")) {
                theme.set("default", false);
              }
            });
          }
        });
      },
      applyUserSelectable: function applyUserSelectable() {
        this.model.saveChanges("user_selectable");
      },
      applyAutoUpdateable: function applyAutoUpdateable() {
        this.model.saveChanges("auto_update");
      },
      addChildTheme: function addChildTheme() {
        var _this7 = this;

        var themeId = parseInt(this.selectedChildThemeId, 10);
        var theme = this.allThemes.findBy("id", themeId);
        this.model.addChildTheme(theme).then(function () {
          return _this7.store.findAll("theme");
        });
      },
      removeUpload: function removeUpload(upload) {
        var _this8 = this;

        return _bootbox.default.confirm(_I18n.default.t("admin.customize.theme.delete_upload_confirm"), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (result) {
          if (result) {
            _this8.model.removeField(upload);
          }
        });
      },
      removeChildTheme: function removeChildTheme(theme) {
        var _this9 = this;

        this.model.removeChildTheme(theme).then(function () {
          return _this9.store.findAll("theme");
        });
      },
      destroy: function destroy() {
        var _this10 = this;

        return _bootbox.default.confirm(_I18n.default.t("admin.customize.delete_confirm", {
          theme_name: this.get("model.name")
        }), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (result) {
          if (result) {
            var model = _this10.model;
            model.setProperties({
              recentlyInstalled: false
            });
            model.destroyRecord().then(function () {
              _this10.allThemes.removeObject(model);

              _this10.transitionToRoute("adminCustomizeThemes");
            });
          }
        });
      },
      switchType: function switchType() {
        var _this11 = this;

        var relatives = this.get("model.component") ? this.get("model.parentThemes") : this.get("model.childThemes");

        var message = _I18n.default.t("".concat(this.convertKey, "_alert_generic"));

        if (relatives && relatives.length > 0) {
          message = _I18n.default.t("".concat(this.convertKey, "_alert"), {
            relatives: relatives.map(function (relative) {
              return relative.get("name");
            }).join(", ")
          });
        }

        _bootbox.default.confirm(message, _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (result) {
          if (result) {
            _this11.commitSwitchType();
          }
        });
      },
      enableComponent: function enableComponent() {
        var _this12 = this;

        this.model.set("enabled", true);
        this.model.saveChanges("enabled").catch(function () {
          return _this12.model.set("enabled", false);
        });
      },
      disableComponent: function disableComponent() {
        var _this13 = this;

        this.model.set("enabled", false);
        this.model.saveChanges("enabled").catch(function () {
          return _this13.model.set("enabled", true);
        });
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "showCheckboxes", [_dec], Object.getOwnPropertyDescriptor(_obj, "showCheckboxes"), _obj), _applyDecoratedDescriptor(_obj, "editedFieldsFormatted", [_dec2], Object.getOwnPropertyDescriptor(_obj, "editedFieldsFormatted"), _obj), _applyDecoratedDescriptor(_obj, "colorSchemeChanged", [_dec3], Object.getOwnPropertyDescriptor(_obj, "colorSchemeChanged"), _obj), _applyDecoratedDescriptor(_obj, "selectableChildThemes", [_dec4], Object.getOwnPropertyDescriptor(_obj, "selectableChildThemes"), _obj), _applyDecoratedDescriptor(_obj, "relativesSelectorSettingsForComponent", [_dec5], Object.getOwnPropertyDescriptor(_obj, "relativesSelectorSettingsForComponent"), _obj), _applyDecoratedDescriptor(_obj, "relativesSelectorSettingsForTheme", [_dec6], Object.getOwnPropertyDescriptor(_obj, "relativesSelectorSettingsForTheme"), _obj), _applyDecoratedDescriptor(_obj, "availableChildThemes", [_dec7], Object.getOwnPropertyDescriptor(_obj, "availableChildThemes"), _obj), _applyDecoratedDescriptor(_obj, "convertKey", [_dec8], Object.getOwnPropertyDescriptor(_obj, "convertKey"), _obj), _applyDecoratedDescriptor(_obj, "convertIcon", [_dec9], Object.getOwnPropertyDescriptor(_obj, "convertIcon"), _obj), _applyDecoratedDescriptor(_obj, "convertTooltip", [_dec10], Object.getOwnPropertyDescriptor(_obj, "convertTooltip"), _obj), _applyDecoratedDescriptor(_obj, "settings", [_dec11], Object.getOwnPropertyDescriptor(_obj, "settings"), _obj), _applyDecoratedDescriptor(_obj, "translations", [_dec12], Object.getOwnPropertyDescriptor(_obj, "translations"), _obj), _applyDecoratedDescriptor(_obj, "hasOverwrittenHistory", [_dec13], Object.getOwnPropertyDescriptor(_obj, "hasOverwrittenHistory"), _obj), _applyDecoratedDescriptor(_obj, "showRemoteError", [_dec14], Object.getOwnPropertyDescriptor(_obj, "showRemoteError"), _obj), _applyDecoratedDescriptor(_obj, "remoteThemeLink", [_dec15], Object.getOwnPropertyDescriptor(_obj, "remoteThemeLink"), _obj), _applyDecoratedDescriptor(_obj, "showConvert", [_dec16], Object.getOwnPropertyDescriptor(_obj, "showConvert"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-customize-themes", ["exports", "@ember/controller", "admin/models/theme", "discourse-common/utils/decorators"], function (_exports, _controller, _theme, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("model", "model.@each.component"), _dec2 = (0, _decorators.default)("model", "model.@each.component"), _dec3 = (0, _decorators.default)("model.content"), (_obj = {
    currentTab: _theme.THEMES,
    fullThemes: function fullThemes(themes) {
      return themes.filter(function (t) {
        return !t.get("component");
      });
    },
    childThemes: function childThemes(themes) {
      return themes.filter(function (t) {
        return t.get("component");
      });
    },
    installedThemes: function installedThemes(content) {
      return content || [];
    }
  }, (_applyDecoratedDescriptor(_obj, "fullThemes", [_dec], Object.getOwnPropertyDescriptor(_obj, "fullThemes"), _obj), _applyDecoratedDescriptor(_obj, "childThemes", [_dec2], Object.getOwnPropertyDescriptor(_obj, "childThemes"), _obj), _applyDecoratedDescriptor(_obj, "installedThemes", [_dec3], Object.getOwnPropertyDescriptor(_obj, "installedThemes"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-dashboard-general", ["exports", "@ember/controller", "admin/models/admin-dashboard", "I18n", "admin/mixins/period-computation", "admin/models/report", "@ember/object", "discourse-common/utils/decorators", "discourse-common/lib/get-url", "discourse-common/lib/helpers", "discourse/lib/computed"], function (_exports, _controller, _adminDashboard, _I18n, _periodComputation, _report, _object, _decorators, _getUrl, _helpers, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function staticReport(reportType) {
    return (0, _object.computed)("reports.[]", function () {
      return (0, _helpers.makeArray)(this.reports).find(function (report) {
        return report.type === reportType;
      });
    });
  }

  var _default = _controller.default.extend(_periodComputation.default, (_dec = (0, _decorators.default)("siteSettings.dashboard_general_tab_activity_metrics"), _dec2 = (0, _decorators.default)("startDate", "endDate"), (_obj = {
    isLoading: false,
    dashboardFetchedAt: null,
    exceptionController: (0, _controller.inject)("exception"),
    logSearchQueriesEnabled: (0, _computed.setting)("log_search_queries"),
    activityMetrics: function activityMetrics(metrics) {
      return (metrics || "").split("|").filter(Boolean);
    },
    hiddenReports: (0, _object.computed)("siteSettings.dashboard_hidden_reports", function () {
      return (this.siteSettings.dashboard_hidden_reports || "").split("|").filter(Boolean);
    }),
    isActivityMetricsVisible: (0, _object.computed)("activityMetrics", "hiddenReports", function () {
      var _this = this;

      return this.activityMetrics.length && this.activityMetrics.some(function (x) {
        return !_this.hiddenReports.includes(x);
      });
    }),
    isSearchReportsVisible: (0, _object.computed)("hiddenReports", function () {
      var _this2 = this;

      return ["top_referred_topics", "trending_search"].some(function (x) {
        return !_this2.hiddenReports.includes(x);
      });
    }),
    isCommunityHealthVisible: (0, _object.computed)("hiddenReports", function () {
      var _this3 = this;

      return ["consolidated_page_views", "signups", "topics", "posts", "dau_by_mau", "daily_engaged_users", "new_contributors"].some(function (x) {
        return !_this3.hiddenReports.includes(x);
      });
    }),
    activityMetricsFilters: function activityMetricsFilters() {
      return {
        startDate: this.lastMonth,
        endDate: this.today
      };
    },
    topReferredTopicsOptions: function topReferredTopicsOptions() {
      return {
        table: {
          total: false,
          limit: 8
        }
      };
    },
    topReferredTopicsFilters: function topReferredTopicsFilters() {
      return {
        startDate: moment().subtract(6, "days").startOf("day"),
        endDate: this.today
      };
    },
    trendingSearchFilters: function trendingSearchFilters() {
      return {
        startDate: moment().subtract(1, "month").startOf("day"),
        endDate: this.today
      };
    },
    trendingSearchOptions: function trendingSearchOptions() {
      return {
        table: {
          total: false,
          limit: 8
        }
      };
    },
    trendingSearchDisabledLabel: function trendingSearchDisabledLabel() {
      return _I18n.default.t("admin.dashboard.reports.trending_search.disabled", {
        basePath: (0, _getUrl.default)("")
      });
    },
    usersByTypeReport: staticReport("users_by_type"),
    usersByTrustLevelReport: staticReport("users_by_trust_level"),
    storageReport: staticReport("storage_report"),
    fetchDashboard: function fetchDashboard() {
      var _this4 = this;

      if (this.isLoading) {
        return;
      }

      if (!this.dashboardFetchedAt || moment().subtract(30, "minutes").toDate() > this.dashboardFetchedAt) {
        this.set("isLoading", true);

        _adminDashboard.default.fetchGeneral().then(function (adminDashboardModel) {
          _this4.setProperties({
            dashboardFetchedAt: new Date(),
            model: adminDashboardModel,
            reports: (0, _helpers.makeArray)(adminDashboardModel.reports).map(function (x) {
              return _report.default.create(x);
            })
          });
        }).catch(function (e) {
          _this4.exceptionController.set("thrown", e.jqXHR);

          _this4.replaceRoute("exception");
        }).finally(function () {
          return _this4.set("isLoading", false);
        });
      }
    },
    filters: function filters(startDate, endDate) {
      return {
        startDate: startDate,
        endDate: endDate
      };
    },
    _reportsForPeriodURL: function _reportsForPeriodURL(period) {
      return (0, _getUrl.default)("/admin?period=".concat(period));
    }
  }, (_applyDecoratedDescriptor(_obj, "activityMetrics", [_dec], Object.getOwnPropertyDescriptor(_obj, "activityMetrics"), _obj), _applyDecoratedDescriptor(_obj, "activityMetricsFilters", [_decorators.default], Object.getOwnPropertyDescriptor(_obj, "activityMetricsFilters"), _obj), _applyDecoratedDescriptor(_obj, "topReferredTopicsOptions", [_decorators.default], Object.getOwnPropertyDescriptor(_obj, "topReferredTopicsOptions"), _obj), _applyDecoratedDescriptor(_obj, "topReferredTopicsFilters", [_decorators.default], Object.getOwnPropertyDescriptor(_obj, "topReferredTopicsFilters"), _obj), _applyDecoratedDescriptor(_obj, "trendingSearchFilters", [_decorators.default], Object.getOwnPropertyDescriptor(_obj, "trendingSearchFilters"), _obj), _applyDecoratedDescriptor(_obj, "trendingSearchOptions", [_decorators.default], Object.getOwnPropertyDescriptor(_obj, "trendingSearchOptions"), _obj), _applyDecoratedDescriptor(_obj, "trendingSearchDisabledLabel", [_decorators.default], Object.getOwnPropertyDescriptor(_obj, "trendingSearchDisabledLabel"), _obj), _applyDecoratedDescriptor(_obj, "filters", [_dec2], Object.getOwnPropertyDescriptor(_obj, "filters"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-dashboard-moderation", ["exports", "@ember/controller", "admin/mixins/period-computation", "@ember/object", "discourse-common/utils/decorators", "discourse-common/lib/get-url"], function (_exports, _controller, _periodComputation, _object, _decorators, _getUrl) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend(_periodComputation.default, (_dec = (0, _decorators.default)("startDate", "endDate"), _dec2 = (0, _decorators.default)("lastWeek", "endDate"), (_obj = {
    flagsStatusOptions: function flagsStatusOptions() {
      return {
        table: {
          total: false,
          perPage: 10
        }
      };
    },
    isModeratorsActivityVisible: (0, _object.computed)("siteSettings.dashboard_hidden_reports", function () {
      return !(this.siteSettings.dashboard_hidden_reports || "").split("|").filter(Boolean).includes("moderators_activity");
    }),
    userFlaggingRatioOptions: function userFlaggingRatioOptions() {
      return {
        table: {
          total: false,
          perPage: 10
        }
      };
    },
    filters: function filters(startDate, endDate) {
      return {
        startDate: startDate,
        endDate: endDate
      };
    },
    lastWeekfilters: function lastWeekfilters(startDate, endDate) {
      return {
        startDate: startDate,
        endDate: endDate
      };
    },
    _reportsForPeriodURL: function _reportsForPeriodURL(period) {
      return (0, _getUrl.default)("/admin/dashboard/moderation?period=".concat(period));
    }
  }, (_applyDecoratedDescriptor(_obj, "flagsStatusOptions", [_decorators.default], Object.getOwnPropertyDescriptor(_obj, "flagsStatusOptions"), _obj), _applyDecoratedDescriptor(_obj, "userFlaggingRatioOptions", [_decorators.default], Object.getOwnPropertyDescriptor(_obj, "userFlaggingRatioOptions"), _obj), _applyDecoratedDescriptor(_obj, "filters", [_dec], Object.getOwnPropertyDescriptor(_obj, "filters"), _obj), _applyDecoratedDescriptor(_obj, "lastWeekfilters", [_dec2], Object.getOwnPropertyDescriptor(_obj, "lastWeekfilters"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-dashboard-reports", ["exports", "@ember/controller", "discourse-common/config/environment", "discourse-common/utils/decorators", "discourse-common/lib/debounce", "@ember/object"], function (_exports, _controller, _environment, _decorators, _debounce, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("model.[]", "filter", "siteSettings.dashboard_hidden_reports"), (_obj = {
    filter: null,
    filterReports: function filterReports(reports, filter) {
      if (filter) {
        filter = filter.toLowerCase();
        reports = reports.filter(function (report) {
          return ((0, _object.get)(report, "title") || "").toLowerCase().indexOf(filter) > -1 || ((0, _object.get)(report, "description") || "").toLowerCase().indexOf(filter) > -1;
        });
      }

      var hiddenReports = (this.siteSettings.dashboard_hidden_reports || "").split("|").filter(Boolean);
      reports = reports.filter(function (report) {
        return !hiddenReports.includes(report.type);
      });
      return reports;
    },
    actions: {
      filterReports: function filterReports(filter) {
        (0, _debounce.default)(this, this._performFiltering, filter, _environment.INPUT_DELAY);
      }
    },
    _performFiltering: function _performFiltering(filter) {
      this.set("filter", filter);
    }
  }, (_applyDecoratedDescriptor(_obj, "filterReports", [_dec], Object.getOwnPropertyDescriptor(_obj, "filterReports"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-dashboard", ["exports", "@ember/controller", "admin/models/admin-dashboard", "admin/models/version-check", "@ember/object", "discourse-common/utils/decorators", "discourse/lib/computed"], function (_exports, _controller, _adminDashboard, _versionCheck, _object, _decorators, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var PROBLEMS_CHECK_MINUTES = 1;

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("problems.length"), _dec2 = (0, _decorators.default)("problemsFetchedAt"), (_obj = {
    isLoading: false,
    dashboardFetchedAt: null,
    exceptionController: (0, _controller.inject)("exception"),
    showVersionChecks: (0, _computed.setting)("version_checks"),
    foundProblems: function foundProblems(problemsLength) {
      return this.currentUser.get("admin") && (problemsLength || 0) > 0;
    },
    visibleTabs: (0, _object.computed)("siteSettings.dashboard_visible_tabs", function () {
      return (this.siteSettings.dashboard_visible_tabs || "").split("|").filter(Boolean);
    }),
    isModerationTabVisible: (0, _object.computed)("visibleTabs", function () {
      return this.visibleTabs.includes("moderation");
    }),
    isSecurityTabVisible: (0, _object.computed)("visibleTabs", function () {
      return this.visibleTabs.includes("security");
    }),
    isReportsTabVisible: (0, _object.computed)("visibleTabs", function () {
      return this.visibleTabs.includes("reports");
    }),
    fetchProblems: function fetchProblems() {
      if (this.isLoadingProblems) {
        return;
      }

      if (!this.problemsFetchedAt || moment().subtract(PROBLEMS_CHECK_MINUTES, "minutes").toDate() > this.problemsFetchedAt) {
        this._loadProblems();
      }
    },
    fetchDashboard: function fetchDashboard() {
      var _this = this;

      var versionChecks = this.siteSettings.version_checks;

      if (this.isLoading || !versionChecks) {
        return;
      }

      if (!this.dashboardFetchedAt || moment().subtract(30, "minutes").toDate() > this.dashboardFetchedAt) {
        this.set("isLoading", true);

        _adminDashboard.default.fetch().then(function (model) {
          var properties = {
            dashboardFetchedAt: new Date()
          };

          if (versionChecks) {
            properties.versionCheck = _versionCheck.default.create(model.version_check);
          }

          _this.setProperties(properties);
        }).catch(function (e) {
          _this.exceptionController.set("thrown", e.jqXHR);

          _this.replaceRoute("exception");
        }).finally(function () {
          _this.set("isLoading", false);
        });
      }
    },
    _loadProblems: function _loadProblems() {
      var _this2 = this;

      this.setProperties({
        loadingProblems: true,
        problemsFetchedAt: new Date()
      });

      _adminDashboard.default.fetchProblems().then(function (model) {
        return _this2.set("problems", model.problems);
      }).finally(function () {
        return _this2.set("loadingProblems", false);
      });
    },
    problemsTimestamp: function problemsTimestamp(problemsFetchedAt) {
      return moment(problemsFetchedAt).locale("en").format("LLL");
    },
    actions: {
      refreshProblems: function refreshProblems() {
        this._loadProblems();
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "foundProblems", [_dec], Object.getOwnPropertyDescriptor(_obj, "foundProblems"), _obj), _applyDecoratedDescriptor(_obj, "problemsTimestamp", [_dec2], Object.getOwnPropertyDescriptor(_obj, "problemsTimestamp"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-email-advanced-test", ["exports", "@ember/controller", "discourse/lib/ajax", "discourse/lib/ajax-error"], function (_exports, _controller, _ajax, _ajaxError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend({
    email: null,
    text: null,
    elided: null,
    format: null,
    loading: null,
    actions: {
      run: function run() {
        var _this = this;

        this.set("loading", true);
        (0, _ajax.ajax)("/admin/email/advanced-test", {
          type: "POST",
          data: {
            email: this.email
          }
        }).then(function (data) {
          _this.setProperties({
            text: data.text,
            elided: data.elided,
            format: data.format
          });
        }).catch(_ajaxError.popupAjaxError).finally(function () {
          return _this.set("loading", false);
        });
      }
    }
  });

  _exports.default = _default;
});
define("admin/controllers/admin-email-bounced", ["exports", "admin/controllers/admin-email-logs", "discourse-common/config/environment", "discourse-common/lib/debounce", "discourse-common/utils/decorators"], function (_exports, _adminEmailLogs, _environment, _debounce, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _adminEmailLogs.default.extend((_dec = (0, _decorators.observes)("filter.{status,user,address,type}"), (_obj = {
    filterEmailLogs: function filterEmailLogs() {
      (0, _debounce.default)(this, this.loadLogs, _environment.INPUT_DELAY);
    }
  }, (_applyDecoratedDescriptor(_obj, "filterEmailLogs", [_dec], Object.getOwnPropertyDescriptor(_obj, "filterEmailLogs"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-email-index", ["exports", "@ember/controller", "I18n", "discourse/lib/ajax", "bootbox", "@ember/object/computed", "discourse-common/utils/decorators"], function (_exports, _controller, _I18n, _ajax, _bootbox, _computed, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj, _init;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.observes)("testEmailAddress"), (_obj = {
    /**
      Is the "send test email" button disabled?
       @property sendTestEmailDisabled
    **/
    sendTestEmailDisabled: (0, _computed.empty)("testEmailAddress"),
    testEmailAddressChanged: function testEmailAddressChanged() {
      this.set("sentTestEmail", false);
    },
    actions: {
      /**
        Sends a test email to the currently entered email address
         @method sendTestEmail
      **/
      sendTestEmail: function sendTestEmail() {
        var _this = this;

        this.setProperties({
          sendingEmail: true,
          sentTestEmail: false
        });
        (0, _ajax.ajax)("/admin/email/test", {
          type: "POST",
          data: {
            email_address: this.testEmailAddress
          }
        }).then(function (response) {
          return _this.set("sentTestEmailMessage", response.sent_test_email_message);
        }).catch(function (e) {
          if (e.responseJSON && e.responseJSON.errors) {
            _bootbox.default.alert(_I18n.default.t("admin.email.error", {
              server_error: e.responseJSON.errors[0]
            }));
          } else {
            _bootbox.default.alert(_I18n.default.t("admin.email.test_error"));
          }
        }).finally(function () {
          return _this.set("sendingEmail", false);
        });
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "testEmailAddressChanged", [_dec], (_init = Object.getOwnPropertyDescriptor(_obj, "testEmailAddressChanged"), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
      return _init;
    }
  }), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-email-logs", ["exports", "@ember/controller", "admin/models/email-log", "@ember/object"], function (_exports, _controller, _emailLog, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend({
    loading: false,
    init: function init() {
      this._super.apply(this, arguments);

      this.set("filter", _object.default.create());
    },
    loadLogs: function loadLogs(sourceModel, loadMore) {
      var _this = this;

      if (loadMore && this.loading || this.get("model.allLoaded")) {
        return;
      }

      this.set("loading", true);
      sourceModel = sourceModel || _emailLog.default;
      var args = {};
      Object.keys(this.filter).forEach(function (k) {
        if (_this.filter[k]) {
          args[k] = _this.filter[k];
        }
      });
      return sourceModel.findAll(args, loadMore ? this.get("model.length") : null).then(function (logs) {
        if (_this.model && loadMore && logs.length < 50) {
          _this.model.set("allLoaded", true);
        }

        if (_this.model && loadMore) {
          _this.model.addObjects(logs);
        } else {
          _this.set("model", logs);
        }
      }).finally(function () {
        return _this.set("loading", false);
      });
    },
    actions: {
      loadMore: function loadMore() {
        this.loadLogs(_emailLog.default, true);
      }
    }
  });

  _exports.default = _default;
});
define("admin/controllers/admin-email-preview-digest", ["exports", "@ember/object/computed", "@ember/controller", "admin/models/email-preview", "bootbox", "@ember/object", "discourse/lib/ajax-error"], function (_exports, _computed, _controller, _emailPreview, _bootbox, _object, _ajaxError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend({
    username: null,
    lastSeen: null,
    emailEmpty: (0, _computed.empty)("email"),
    sendEmailDisabled: (0, _computed.or)("emailEmpty", "sendingEmail"),
    showSendEmailForm: (0, _computed.notEmpty)("model.html_content"),
    htmlEmpty: (0, _computed.empty)("model.html_content"),
    actions: {
      updateUsername: function updateUsername(selected) {
        this.set("username", (0, _object.get)(selected, "firstObject"));
      },
      refresh: function refresh() {
        var _this = this;

        var model = this.model;
        this.set("loading", true);
        this.set("sentEmail", false);
        var username = this.username;

        if (!username) {
          username = this.currentUser.get("username");
          this.set("username", username);
        }

        _emailPreview.default.findDigest(username, this.lastSeen).then(function (email) {
          model.setProperties(email.getProperties("html_content", "text_content"));

          _this.set("loading", false);
        });
      },
      toggleShowHtml: function toggleShowHtml() {
        this.toggleProperty("showHtml");
      },
      sendEmail: function sendEmail() {
        var _this2 = this;

        this.set("sendingEmail", true);
        this.set("sentEmail", false);

        _emailPreview.default.sendDigest(this.username, this.lastSeen, this.email).then(function (result) {
          if (result.errors) {
            _bootbox.default.alert(result.errors);
          } else {
            _this2.set("sentEmail", true);
          }
        }).catch(_ajaxError.popupAjaxError).finally(function () {
          _this2.set("sendingEmail", false);
        });
      }
    }
  });

  _exports.default = _default;
});
define("admin/controllers/admin-email-received", ["exports", "admin/controllers/admin-email-logs", "discourse-common/config/environment", "admin/models/incoming-email", "discourse-common/lib/debounce", "discourse-common/utils/decorators"], function (_exports, _adminEmailLogs, _environment, _incomingEmail, _debounce, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _adminEmailLogs.default.extend((_dec = (0, _decorators.observes)("filter.{status,from,to,subject}"), (_obj = {
    filterIncomingEmails: function filterIncomingEmails() {
      (0, _debounce.default)(this, this.loadLogs, _incomingEmail.default, _environment.INPUT_DELAY);
    },
    actions: {
      loadMore: function loadMore() {
        this.loadLogs(_incomingEmail.default, true);
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "filterIncomingEmails", [_dec], Object.getOwnPropertyDescriptor(_obj, "filterIncomingEmails"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-email-rejected", ["exports", "admin/controllers/admin-email-logs", "discourse-common/config/environment", "admin/models/incoming-email", "discourse-common/lib/debounce", "discourse-common/utils/decorators"], function (_exports, _adminEmailLogs, _environment, _incomingEmail, _debounce, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _adminEmailLogs.default.extend((_dec = (0, _decorators.observes)("filter.{status,from,to,subject,error}"), (_obj = {
    filterIncomingEmails: function filterIncomingEmails() {
      (0, _debounce.default)(this, this.loadLogs, _incomingEmail.default, _environment.INPUT_DELAY);
    },
    actions: {
      loadMore: function loadMore() {
        this.loadLogs(_incomingEmail.default, true);
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "filterIncomingEmails", [_dec], Object.getOwnPropertyDescriptor(_obj, "filterIncomingEmails"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-email-sent", ["exports", "admin/controllers/admin-email-logs", "discourse-common/config/environment", "discourse-common/lib/debounce", "discourse-common/utils/decorators"], function (_exports, _adminEmailLogs, _environment, _debounce, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _adminEmailLogs.default.extend((_dec = (0, _decorators.observes)("filter.{status,user,address,type,reply_key}"), (_obj = {
    filterEmailLogs: function filterEmailLogs() {
      (0, _debounce.default)(this, this.loadLogs, _environment.INPUT_DELAY);
    }
  }, (_applyDecoratedDescriptor(_obj, "filterEmailLogs", [_dec], Object.getOwnPropertyDescriptor(_obj, "filterEmailLogs"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-email-skipped", ["exports", "admin/controllers/admin-email-logs", "discourse-common/config/environment", "discourse-common/lib/debounce", "discourse-common/utils/decorators"], function (_exports, _adminEmailLogs, _environment, _debounce, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _adminEmailLogs.default.extend((_dec = (0, _decorators.observes)("filter.{status,user,address,type}"), (_obj = {
    filterEmailLogs: function filterEmailLogs() {
      (0, _debounce.default)(this, this.loadLogs, _environment.INPUT_DELAY);
    }
  }, (_applyDecoratedDescriptor(_obj, "filterEmailLogs", [_dec], Object.getOwnPropertyDescriptor(_obj, "filterEmailLogs"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-embedding", ["exports", "@ember/controller", "discourse-common/utils/decorators", "discourse/lib/ajax-error"], function (_exports, _controller, _decorators, _ajaxError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("embedding.embeddable_hosts.@each.isCreated"), _dec2 = (0, _decorators.default)("embedding.base_url"), (_obj = {
    saved: false,
    embedding: null,
    showSecondary: function showSecondary() {
      var hosts = this.get("embedding.embeddable_hosts");
      return hosts.length && hosts.findBy("isCreated");
    },
    embeddingCode: function embeddingCode(baseUrl) {
      var html = "<div id='discourse-comments'></div>\n\n<script type=\"text/javascript\">\n  DiscourseEmbed = { discourseUrl: '".concat(baseUrl, "/',\n                     discourseEmbedUrl: 'REPLACE_ME' };\n\n  (function() {\n    var d = document.createElement('script'); d.type = 'text/javascript'; d.async = true;\n    d.src = DiscourseEmbed.discourseUrl + 'javascripts/embed.js';\n    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(d);\n  })();\n</script>");
      return html;
    },
    actions: {
      saveChanges: function saveChanges() {
        var _this = this;

        var embedding = this.embedding;
        var updates = embedding.getProperties(embedding.get("fields"));
        this.set("saved", false);
        this.embedding.update(updates).then(function () {
          return _this.set("saved", true);
        }).catch(_ajaxError.popupAjaxError);
      },
      addHost: function addHost() {
        var host = this.store.createRecord("embeddable-host");
        this.get("embedding.embeddable_hosts").pushObject(host);
      },
      deleteHost: function deleteHost(host) {
        this.get("embedding.embeddable_hosts").removeObject(host);
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "showSecondary", [_dec], Object.getOwnPropertyDescriptor(_obj, "showSecondary"), _obj), _applyDecoratedDescriptor(_obj, "embeddingCode", [_dec2], Object.getOwnPropertyDescriptor(_obj, "embeddingCode"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-emojis", ["exports", "@ember/object", "@ember/controller", "I18n", "discourse/lib/ajax", "bootbox", "@ember/object/computed"], function (_exports, _object, _controller, _I18n, _ajax, _bootbox, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var ALL_FILTER = "all";

  var _default = _controller.default.extend((_obj = {
    filter: null,
    sorting: null,
    init: function init() {
      this._super.apply(this, arguments);

      this.setProperties({
        filter: ALL_FILTER,
        sorting: ["group", "name"]
      });
    },
    sortedEmojis: (0, _computed.sort)("filteredEmojis.[]", "sorting"),
    emojiGroups: (0, _object.computed)("model", {
      get: function get() {
        return this.model.mapBy("group").uniq();
      }
    }),
    sortingGroups: (0, _object.computed)("emojiGroups.[]", {
      get: function get() {
        return [ALL_FILTER].concat(this.emojiGroups);
      }
    }),
    filteredEmojis: (0, _object.computed)("model.[]", "filter", {
      get: function get() {
        if (!this.filter || this.filter === ALL_FILTER) {
          return this.model;
        } else {
          return this.model.filterBy("group", this.filter);
        }
      }
    }),
    filterGroups: function filterGroups(value) {
      this.set("filter", value);
    },
    emojiUploaded: function emojiUploaded(emoji, group) {
      emoji.url += "?t=" + new Date().getTime();
      emoji.group = group;
      this.model.pushObject(_object.default.create(emoji));
    },
    destroyEmoji: function destroyEmoji(emoji) {
      var _this = this;

      return _bootbox.default.confirm(_I18n.default.t("admin.emoji.delete_confirm", {
        name: emoji.get("name")
      }), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (destroy) {
        if (destroy) {
          return (0, _ajax.ajax)("/admin/customize/emojis/" + emoji.get("name"), {
            type: "DELETE"
          }).then(function () {
            _this.model.removeObject(emoji);
          });
        }
      });
    }
  }, (_applyDecoratedDescriptor(_obj, "filterGroups", [_object.action], Object.getOwnPropertyDescriptor(_obj, "filterGroups"), _obj), _applyDecoratedDescriptor(_obj, "emojiUploaded", [_object.action], Object.getOwnPropertyDescriptor(_obj, "emojiUploaded"), _obj), _applyDecoratedDescriptor(_obj, "destroyEmoji", [_object.action], Object.getOwnPropertyDescriptor(_obj, "destroyEmoji"), _obj)), _obj));

  _exports.default = _default;
});
define("admin/controllers/admin-logs-screened-emails", ["exports", "@ember/controller", "admin/models/screened-email", "discourse/lib/export-csv", "discourse/lib/export-result"], function (_exports, _controller, _screenedEmail, _exportCsv, _exportResult) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend({
    loading: false,
    actions: {
      clearBlock: function clearBlock(row) {
        row.clearBlock().then(function () {
          // feeling lazy
          window.location.reload();
        });
      },
      exportScreenedEmailList: function exportScreenedEmailList() {
        (0, _exportCsv.exportEntity)("screened_email").then(_exportResult.outputExportResult);
      }
    },
    show: function show() {
      var _this = this;

      this.set("loading", true);

      _screenedEmail.default.findAll().then(function (result) {
        _this.set("model", result);

        _this.set("loading", false);
      });
    }
  });

  _exports.default = _default;
});
define("admin/controllers/admin-logs-screened-ip-addresses", ["exports", "@ember/controller", "I18n", "discourse-common/config/environment", "admin/models/screened-ip-address", "bootbox", "discourse-common/lib/debounce", "discourse/lib/export-csv", "discourse-common/utils/decorators", "discourse/lib/export-result"], function (_exports, _controller, _I18n, _environment, _screenedIpAddress, _bootbox, _debounce, _exportCsv, _decorators, _exportResult) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.observes)("filter"), (_obj = {
    loading: false,
    filter: null,
    savedIpAddress: null,
    _debouncedShow: function _debouncedShow() {
      var _this = this;

      this.set("loading", true);

      _screenedIpAddress.default.findAll(this.filter).then(function (result) {
        _this.setProperties({
          model: result,
          loading: false
        });
      });
    },
    show: function show() {
      (0, _debounce.default)(this, this._debouncedShow, _environment.INPUT_DELAY);
    },
    actions: {
      allow: function allow(record) {
        record.set("action_name", "do_nothing");
        record.save();
      },
      block: function block(record) {
        record.set("action_name", "block");
        record.save();
      },
      edit: function edit(record) {
        if (!record.get("editing")) {
          this.set("savedIpAddress", record.get("ip_address"));
        }

        record.set("editing", true);
      },
      cancel: function cancel(record) {
        var savedIpAddress = this.savedIpAddress;

        if (savedIpAddress && record.get("editing")) {
          record.set("ip_address", savedIpAddress);
        }

        record.set("editing", false);
      },
      save: function save(record) {
        var _this2 = this;

        var wasEditing = record.get("editing");
        record.set("editing", false);
        record.save().then(function () {
          return _this2.set("savedIpAddress", null);
        }).catch(function (e) {
          if (e.jqXHR.responseJSON && e.jqXHR.responseJSON.errors) {
            _bootbox.default.alert(_I18n.default.t("generic_error_with_reason", {
              error: e.jqXHR.responseJSON.errors.join(". ")
            }));
          } else {
            _bootbox.default.alert(_I18n.default.t("generic_error"));
          }

          if (wasEditing) {
            record.set("editing", true);
          }
        });
      },
      destroy: function destroy(record) {
        var _this3 = this;

        return _bootbox.default.confirm(_I18n.default.t("admin.logs.screened_ips.delete_confirm", {
          ip_address: record.get("ip_address")
        }), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (result) {
          if (result) {
            record.destroy().then(function (deleted) {
              if (deleted) {
                _this3.model.removeObject(record);
              } else {
                _bootbox.default.alert(_I18n.default.t("generic_error"));
              }
            }).catch(function (e) {
              _bootbox.default.alert(_I18n.default.t("generic_error_with_reason", {
                error: "http: ".concat(e.status, " - ").concat(e.body)
              }));
            });
          }
        });
      },
      recordAdded: function recordAdded(arg) {
        this.model.unshiftObject(arg);
      },
      rollUp: function rollUp() {
        var _this4 = this;

        return _bootbox.default.confirm(_I18n.default.t("admin.logs.screened_ips.roll_up_confirm"), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (confirmed) {
          if (confirmed) {
            _this4.set("loading", true);

            return _screenedIpAddress.default.rollUp().then(function (results) {
              if (results && results.subnets) {
                if (results.subnets.length > 0) {
                  _this4.send("show");

                  _bootbox.default.alert(_I18n.default.t("admin.logs.screened_ips.rolled_up_some_subnets", {
                    subnets: results.subnets.join(", ")
                  }));
                } else {
                  _this4.set("loading", false);

                  _bootbox.default.alert(_I18n.default.t("admin.logs.screened_ips.rolled_up_no_subnet"));
                }
              }
            });
          }
        });
      },
      exportScreenedIpList: function exportScreenedIpList() {
        (0, _exportCsv.exportEntity)("screened_ip").then(_exportResult.outputExportResult);
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "show", [_dec], Object.getOwnPropertyDescriptor(_obj, "show"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-logs-screened-urls", ["exports", "@ember/controller", "admin/models/screened-url", "discourse/lib/export-csv", "discourse/lib/export-result"], function (_exports, _controller, _screenedUrl, _exportCsv, _exportResult) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend({
    loading: false,
    show: function show() {
      var _this = this;

      this.set("loading", true);

      _screenedUrl.default.findAll().then(function (result) {
        _this.set("model", result);

        _this.set("loading", false);
      });
    },
    actions: {
      exportScreenedUrlList: function exportScreenedUrlList() {
        (0, _exportCsv.exportEntity)("screened_url").then(_exportResult.outputExportResult);
      }
    }
  });

  _exports.default = _default;
});
define("admin/controllers/admin-logs-staff-action-logs", ["exports", "@ember/controller", "@ember/object", "I18n", "discourse-common/utils/decorators", "discourse/lib/export-csv", "discourse/lib/export-result", "@ember/runloop"], function (_exports, _controller, _object, _I18n, _decorators, _exportCsv, _exportResult, _runloop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("filters.action_name"), _dec2 = (0, _decorators.default)("filters"), (_obj = {
    queryParams: ["filters"],
    model: null,
    filters: null,
    userHistoryActions: null,
    actionFilter: function actionFilter(name) {
      return name ? _I18n.default.t("admin.logs.staff_actions.actions." + name) : null;
    },
    filtersExists: function filtersExists(filters) {
      return filters && Object.keys(filters).length > 0;
    },
    _refresh: function _refresh() {
      var _this = this;

      this.store.findAll("staff-action-log", this.filters).then(function (result) {
        _this.set("model", result);

        if (!_this.userHistoryActions) {
          _this.set("userHistoryActions", result.extras.user_history_actions.map(function (action) {
            return {
              id: action.id,
              action_id: action.action_id,
              name: _I18n.default.t("admin.logs.staff_actions.actions." + action.id),
              name_raw: action.id
            };
          }).sort(function (a, b) {
            return a.name.localeCompare(b.name);
          }));
        }
      });
    },
    scheduleRefresh: function scheduleRefresh() {
      (0, _runloop.scheduleOnce)("afterRender", this, this._refresh);
    },
    resetFilters: function resetFilters() {
      this.setProperties({
        model: _object.default.create({
          loadingMore: true
        }),
        filters: _object.default.create()
      });
      this.scheduleRefresh();
    },
    changeFilters: function changeFilters(props) {
      var _this2 = this;

      this.set("model", _object.default.create({
        loadingMore: true
      }));

      if (!this.filters) {
        this.set("filters", _object.default.create());
      }

      Object.keys(props).forEach(function (key) {
        if (props[key] === undefined || props[key] === null) {
          _this2.filters.set(key, undefined);

          delete _this2.filters[key];
        } else {
          _this2.filters.set(key, props[key]);
        }
      });
      this.send("onFiltersChange", this.filters);
      this.scheduleRefresh();
    },
    actions: {
      filterActionIdChanged: function filterActionIdChanged(filterActionId) {
        if (filterActionId) {
          this.changeFilters({
            action_name: filterActionId,
            action_id: this.userHistoryActions.findBy("id", filterActionId).action_id
          });
        }
      },
      clearFilter: function clearFilter(key) {
        if (key === "actionFilter") {
          this.set("filterActionId", null);
          this.changeFilters({
            action_name: null,
            action_id: null,
            custom_type: null
          });
        } else {
          this.changeFilters(_defineProperty({}, key, null));
        }
      },
      clearAllFilters: function clearAllFilters() {
        this.set("filterActionId", null);
        this.resetFilters();
      },
      filterByAction: function filterByAction(logItem) {
        this.changeFilters({
          action_name: logItem.get("action_name"),
          action_id: logItem.get("action"),
          custom_type: logItem.get("custom_type")
        });
      },
      filterByStaffUser: function filterByStaffUser(acting_user) {
        this.changeFilters({
          acting_user: acting_user.username
        });
      },
      filterByTargetUser: function filterByTargetUser(target_user) {
        this.changeFilters({
          target_user: target_user.username
        });
      },
      filterBySubject: function filterBySubject(subject) {
        this.changeFilters({
          subject: subject
        });
      },
      exportStaffActionLogs: function exportStaffActionLogs() {
        (0, _exportCsv.exportEntity)("staff_action").then(_exportResult.outputExportResult);
      },
      loadMore: function loadMore() {
        this.model.loadMore();
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "actionFilter", [_dec], Object.getOwnPropertyDescriptor(_obj, "actionFilter"), _obj), _applyDecoratedDescriptor(_obj, "filtersExists", [_dec2], Object.getOwnPropertyDescriptor(_obj, "filtersExists"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-permalinks", ["exports", "@ember/controller", "I18n", "discourse-common/config/environment", "admin/models/permalink", "bootbox", "discourse-common/lib/debounce", "discourse-common/utils/decorators"], function (_exports, _controller, _I18n, _environment, _permalink, _bootbox, _debounce, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.observes)("filter"), (_obj = {
    loading: false,
    filter: null,
    _debouncedShow: function _debouncedShow() {
      var _this = this;

      _permalink.default.findAll(this.filter).then(function (result) {
        _this.set("model", result);

        _this.set("loading", false);
      });
    },
    show: function show() {
      (0, _debounce.default)(this, this._debouncedShow, _environment.INPUT_DELAY);
    },
    actions: {
      recordAdded: function recordAdded(arg) {
        this.model.unshiftObject(arg);
      },
      copyUrl: function copyUrl(pl) {
        var linkElement = document.querySelector("#admin-permalink-".concat(pl.id));
        var textArea = document.createElement("textarea");
        textArea.value = linkElement.textContent;
        document.body.appendChild(textArea);
        textArea.select();
        document.execCommand("Copy");
        textArea.remove();
      },
      destroy: function destroy(record) {
        var _this2 = this;

        return _bootbox.default.confirm(_I18n.default.t("admin.permalink.delete_confirm"), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (result) {
          if (result) {
            record.destroy().then(function (deleted) {
              if (deleted) {
                _this2.model.removeObject(record);
              } else {
                _bootbox.default.alert(_I18n.default.t("generic_error"));
              }
            }, function () {
              _bootbox.default.alert(_I18n.default.t("generic_error"));
            });
          }
        });
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "show", [_dec], Object.getOwnPropertyDescriptor(_obj, "show"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-plugins", ["exports", "@ember/controller", "discourse-common/utils/decorators"], function (_exports, _controller, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _obj, _init;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_obj = {
    adminRoutes: function adminRoutes() {
      return this.model.map(function (p) {
        if (p.get("enabled")) {
          return p.admin_route;
        }
      }).compact();
    },
    actions: {
      clearFilter: function clearFilter() {
        this.setProperties({
          filter: "",
          onlyOverridden: false
        });
      },
      toggleMenu: function toggleMenu() {
        $(".admin-detail").toggleClass("mobile-closed mobile-open");
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "adminRoutes", [_decorators.default], (_init = Object.getOwnPropertyDescriptor(_obj, "adminRoutes"), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
      return _init;
    }
  }), _obj)), _obj));

  _exports.default = _default;
});
define("admin/controllers/admin-reports-show", ["exports", "@ember/controller", "discourse-common/utils/decorators"], function (_exports, _controller, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("model.type"), (_obj = {
    queryParams: ["start_date", "end_date", "filters", "chart_grouping", "mode"],
    start_date: null,
    end_date: null,
    filters: null,
    chart_grouping: null,
    reportOptions: function reportOptions(type) {
      var options = {
        table: {
          perPage: 50,
          limit: 50,
          formatNumbers: false
        }
      };

      if (type === "top_referred_topics") {
        options.table.limit = 10;
      }

      options.chartGrouping = this.chart_grouping;
      return options;
    }
  }, (_applyDecoratedDescriptor(_obj, "reportOptions", [_dec], Object.getOwnPropertyDescriptor(_obj, "reportOptions"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-search-logs-index", ["exports", "@ember/controller", "I18n"], function (_exports, _controller, _I18n) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.DEFAULT_PERIOD = void 0;
  var DEFAULT_PERIOD = "yearly";
  _exports.DEFAULT_PERIOD = DEFAULT_PERIOD;

  var _default = _controller.default.extend({
    loading: false,
    period: DEFAULT_PERIOD,
    searchType: "all",
    init: function init() {
      this._super.apply(this, arguments);

      this.searchTypeOptions = [{
        id: "all",
        name: _I18n.default.t("admin.logs.search_logs.types.all_search_types")
      }, {
        id: "header",
        name: _I18n.default.t("admin.logs.search_logs.types.header")
      }, {
        id: "full_page",
        name: _I18n.default.t("admin.logs.search_logs.types.full_page")
      }];
    }
  });

  _exports.default = _default;
});
define("admin/controllers/admin-search-logs-term", ["exports", "@ember/controller", "admin/controllers/admin-search-logs-index", "I18n"], function (_exports, _controller, _adminSearchLogsIndex, _I18n) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend({
    loading: false,
    term: null,
    period: _adminSearchLogsIndex.DEFAULT_PERIOD,
    searchType: "all",
    init: function init() {
      this._super.apply(this, arguments);

      this.searchTypeOptions = [{
        id: "all",
        name: _I18n.default.t("admin.logs.search_logs.types.all_search_types")
      }, {
        id: "header",
        name: _I18n.default.t("admin.logs.search_logs.types.header")
      }, {
        id: "full_page",
        name: _I18n.default.t("admin.logs.search_logs.types.full_page")
      }, {
        id: "click_through_only",
        name: _I18n.default.t("admin.logs.search_logs.types.click_through_only")
      }];
    }
  });

  _exports.default = _default;
});
define("admin/controllers/admin-site-settings-category", ["exports", "@ember/controller", "discourse-common/utils/decorators"], function (_exports, _controller, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("adminSiteSettings.visibleSiteSettings", "categoryNameKey"), _dec2 = (0, _decorators.default)("category"), (_obj = {
    adminSiteSettings: (0, _controller.inject)(),
    categoryNameKey: null,
    category: function category(categories, nameKey) {
      return (categories || []).findBy("nameKey", nameKey);
    },
    filteredContent: function filteredContent(category) {
      return category ? category.siteSettings : [];
    }
  }, (_applyDecoratedDescriptor(_obj, "category", [_dec], Object.getOwnPropertyDescriptor(_obj, "category"), _obj), _applyDecoratedDescriptor(_obj, "filteredContent", [_dec2], Object.getOwnPropertyDescriptor(_obj, "filteredContent"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-site-settings", ["exports", "@ember/controller", "I18n", "discourse-common/config/environment", "@ember/object/computed", "discourse-common/lib/debounce", "@ember/utils", "discourse-common/utils/decorators"], function (_exports, _controller, _I18n, _environment, _computed, _debounce, _utils, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.observes)("filter", "onlyOverridden", "model"), (_obj = {
    filter: null,
    allSiteSettings: (0, _computed.alias)("model"),
    visibleSiteSettings: null,
    onlyOverridden: false,
    filterContentNow: function filterContentNow(category) {
      var _this = this;

      // If we have no content, don't bother filtering anything
      if (!!(0, _utils.isEmpty)(this.allSiteSettings)) {
        return;
      }

      var filter, pluginFilter;

      if (this.filter) {
        filter = this.filter.toLowerCase().split(" ").filter(function (word) {
          if (word.length === 0) {
            return false;
          }

          if (word.startsWith("plugin:")) {
            pluginFilter = word.substr("plugin:".length).trim();
            return false;
          }

          return true;
        }).join(" ").trim();
      }

      if ((!filter || 0 === filter.length) && (!pluginFilter || 0 === pluginFilter.length) && !this.onlyOverridden) {
        this.set("visibleSiteSettings", this.allSiteSettings);

        if (this.categoryNameKey === "all_results") {
          this.transitionToRoute("adminSiteSettings");
        }

        return;
      }

      var all = {
        nameKey: "all_results",
        name: _I18n.default.t("admin.site_settings.categories.all_results"),
        siteSettings: []
      };
      var matchesGroupedByCategory = [all];
      var matches = [];
      this.allSiteSettings.forEach(function (settingsCategory) {
        var siteSettings = settingsCategory.siteSettings.filter(function (item) {
          if (_this.onlyOverridden && !item.get("overridden")) {
            return false;
          }

          if (pluginFilter && item.plugin !== pluginFilter) {
            return false;
          }

          if (filter) {
            var setting = item.get("setting").toLowerCase();
            return setting.includes(filter) || setting.replace(/_/g, " ").includes(filter) || item.get("description").toLowerCase().includes(filter) || (item.get("value") || "").toLowerCase().includes(filter);
          } else {
            return true;
          }
        });

        if (siteSettings.length > 0) {
          matches.pushObjects(siteSettings);
          matchesGroupedByCategory.pushObject({
            nameKey: settingsCategory.nameKey,
            name: _I18n.default.t("admin.site_settings.categories." + settingsCategory.nameKey),
            siteSettings: siteSettings,
            count: siteSettings.length
          });
        }
      });
      all.siteSettings.pushObjects(matches.slice(0, 30));
      all.hasMore = matches.length > 30;
      all.count = all.hasMore ? "30+" : matches.length;
      var categoryMatches = matchesGroupedByCategory.findBy("nameKey", category);

      if (!categoryMatches || categoryMatches.count === 0) {
        category = "all_results";
      }

      this.set("visibleSiteSettings", matchesGroupedByCategory);
      this.transitionToRoute("adminSiteSettingsCategory", category || "all_results");
    },
    filterContent: function filterContent() {
      var _this2 = this;

      (0, _debounce.default)(this, function () {
        if (_this2._skipBounce) {
          _this2.set("_skipBounce", false);
        } else {
          _this2.filterContentNow(_this2.categoryNameKey);
        }
      }, _environment.INPUT_DELAY);
    },
    actions: {
      clearFilter: function clearFilter() {
        this.setProperties({
          filter: "",
          onlyOverridden: false
        });
      },
      toggleMenu: function toggleMenu() {
        $(".admin-detail").toggleClass("mobile-closed mobile-open");
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "filterContent", [_dec], Object.getOwnPropertyDescriptor(_obj, "filterContent"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-site-text-edit", ["exports", "@ember/controller", "I18n", "bootbox", "discourse/mixins/buffered-content", "discourse-common/utils/decorators", "discourse/lib/ajax-error"], function (_exports, _controller, _I18n, _bootbox, _bufferedContent, _decorators, _ajaxError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((0, _bufferedContent.bufferedProperty)("siteText"), (_dec = (0, _decorators.default)("buffered.value"), (_obj = {
    saved: false,
    queryParams: ["locale"],
    saveDisabled: function saveDisabled(value) {
      return this.siteText.value === value;
    },
    actions: {
      saveChanges: function saveChanges() {
        var _this = this;

        var attrs = this.buffered.getProperties("value");
        attrs.locale = this.locale;
        this.siteText.save(attrs).then(function () {
          _this.commitBuffer();

          _this.set("saved", true);
        }).catch(_ajaxError.popupAjaxError);
      },
      revertChanges: function revertChanges() {
        var _this2 = this;

        this.set("saved", false);

        _bootbox.default.confirm(_I18n.default.t("admin.site_text.revert_confirm"), function (result) {
          if (result) {
            _this2.siteText.revert(_this2.locale).then(function (props) {
              var buffered = _this2.buffered;
              buffered.setProperties(props);

              _this2.commitBuffer();
            }).catch(_ajaxError.popupAjaxError);
          }
        });
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "saveDisabled", [_dec], Object.getOwnPropertyDescriptor(_obj, "saveDisabled"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-site-text-index", ["exports", "@ember/controller", "discourse-common/utils/decorators", "discourse-common/lib/debounce"], function (_exports, _controller, _decorators, _debounce) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var lastSearch;

  var _default = _controller.default.extend((_dec = (0, _decorators.default)(), _dec2 = (0, _decorators.default)("locale"), _dec3 = (0, _decorators.default)("locale"), (_obj = {
    searching: false,
    siteTexts: null,
    preferred: false,
    queryParams: ["q", "overridden", "locale"],
    locale: null,
    q: null,
    overridden: false,
    init: function init() {
      this._super.apply(this, arguments);

      this.set("locale", this.siteSettings.default_locale);
    },
    _performSearch: function _performSearch() {
      var _this = this;

      this.store.find("site-text", this.getProperties("q", "overridden", "locale")).then(function (results) {
        _this.set("siteTexts", results);
      }).finally(function () {
        return _this.set("searching", false);
      });
    },
    availableLocales: function availableLocales() {
      return JSON.parse(this.siteSettings.available_locales);
    },
    fallbackLocaleFullName: function fallbackLocaleFullName() {
      var _this2 = this;

      if (this.siteTexts.extras.fallback_locale) {
        return this.availableLocales.find(function (l) {
          return l.value === _this2.siteTexts.extras.fallback_locale;
        }).name;
      }
    },
    showFallbackLocaleWarning: function showFallbackLocaleWarning() {
      return this.siteSettings.allow_user_locale && this.siteSettings.set_locale_from_accept_language_header && this.fallbackLocaleFullName;
    },
    actions: {
      edit: function edit(siteText) {
        this.transitionToRoute("adminSiteText.edit", siteText.get("id"), {
          queryParams: {
            locale: this.locale,
            localeFullName: this.availableLocales[this.locale]
          }
        });
      },
      toggleOverridden: function toggleOverridden() {
        this.toggleProperty("overridden");
        this.set("searching", true);
        (0, _debounce.default)(this, this._performSearch, 400);
      },
      search: function search() {
        var q = this.q;

        if (q !== lastSearch) {
          this.set("searching", true);
          (0, _debounce.default)(this, this._performSearch, 400);
          lastSearch = q;
        }
      },
      updateLocale: function updateLocale(value) {
        this.setProperties({
          searching: true,
          locale: value
        });
        (0, _debounce.default)(this, this._performSearch, 400);
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "availableLocales", [_dec], Object.getOwnPropertyDescriptor(_obj, "availableLocales"), _obj), _applyDecoratedDescriptor(_obj, "fallbackLocaleFullName", [_dec2], Object.getOwnPropertyDescriptor(_obj, "fallbackLocaleFullName"), _obj), _applyDecoratedDescriptor(_obj, "showFallbackLocaleWarning", [_dec3], Object.getOwnPropertyDescriptor(_obj, "showFallbackLocaleWarning"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-user-badges", ["exports", "@ember/controller", "@ember/object/computed", "discourse/mixins/grant-badge-controller", "I18n", "bootbox", "discourse-common/utils/decorators", "@ember/runloop", "discourse/lib/ajax-error"], function (_exports, _controller, _computed, _grantBadgeController, _I18n, _bootbox, _decorators, _runloop, _ajaxError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend(_grantBadgeController.default, (_dec = (0, _decorators.default)("model", "model.[]", "model.expandedBadges.[]"), (_obj = {
    adminUser: (0, _controller.inject)(),
    user: (0, _computed.alias)("adminUser.model"),
    userBadges: (0, _computed.alias)("model"),
    allBadges: (0, _computed.alias)("badges"),
    sortedBadges: (0, _computed.sort)("model", "badgeSortOrder"),
    init: function init() {
      this._super.apply(this, arguments);

      this.badgeSortOrder = ["granted_at:desc"];
    },
    groupedBadges: function groupedBadges() {
      var allBadges = this.model;
      var grouped = {};
      allBadges.forEach(function (b) {
        grouped[b.badge_id] = grouped[b.badge_id] || [];
        grouped[b.badge_id].push(b);
      });
      var expanded = [];
      var expandedBadges = allBadges.get("expandedBadges") || [];
      Object.values(grouped).forEach(function (badges) {
        var lastGranted = badges[0].granted_at;
        badges.forEach(function (badge) {
          lastGranted = lastGranted < badge.granted_at ? badge.granted_at : lastGranted;
        });

        if (badges.length === 1 || expandedBadges.includes(badges[0].badge.id)) {
          badges.forEach(function (badge) {
            return expanded.push(badge);
          });
          return;
        }

        var result = {
          badge: badges[0].badge,
          granted_at: lastGranted,
          badges: badges,
          count: badges.length,
          grouped: true
        };
        expanded.push(result);
      });
      return expanded.sortBy("granted_at").reverse();
    },
    actions: {
      expandGroup: function expandGroup(userBadge) {
        var model = this.model;
        model.set("expandedBadges", model.get("expandedBadges") || []);
        model.get("expandedBadges").pushObject(userBadge.badge.id);
      },
      grantBadge: function grantBadge() {
        var _this = this;

        this.grantBadge(this.selectedBadgeId, this.get("user.username"), this.badgeReason).then(function () {
          _this.set("badgeReason", "");

          (0, _runloop.next)(function () {
            // Update the selected badge ID after the combobox has re-rendered.
            var newSelectedBadge = _this.grantableBadges[0];

            if (newSelectedBadge) {
              _this.set("selectedBadgeId", newSelectedBadge.get("id"));
            }
          });
        }, function (error) {
          (0, _ajaxError.popupAjaxError)(error);
        });
      },
      revokeBadge: function revokeBadge(userBadge) {
        var _this2 = this;

        return _bootbox.default.confirm(_I18n.default.t("admin.badges.revoke_confirm"), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (result) {
          if (result) {
            userBadge.revoke().then(function () {
              _this2.model.removeObject(userBadge);
            });
          }
        });
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "groupedBadges", [_dec], Object.getOwnPropertyDescriptor(_obj, "groupedBadges"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-user-fields", ["exports", "@ember/object/computed", "@ember/controller", "I18n", "bootbox", "discourse/lib/ajax-error"], function (_exports, _computed, _controller, _I18n, _bootbox, _ajaxError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var MAX_FIELDS = 30;

  var _default = _controller.default.extend({
    fieldTypes: null,
    createDisabled: (0, _computed.gte)("model.length", MAX_FIELDS),
    sortedFields: (0, _computed.sort)("model", "fieldSortOrder"),
    init: function init() {
      this._super.apply(this, arguments);

      this.fieldSortOrder = ["position"];
    },
    actions: {
      createField: function createField() {
        var f = this.store.createRecord("user-field", {
          field_type: "text",
          position: MAX_FIELDS
        });
        this.model.pushObject(f);
      },
      moveUp: function moveUp(f) {
        var idx = this.sortedFields.indexOf(f);

        if (idx) {
          var prev = this.sortedFields.objectAt(idx - 1);
          var prevPos = prev.get("position");
          prev.update({
            position: f.get("position")
          });
          f.update({
            position: prevPos
          });
        }
      },
      moveDown: function moveDown(f) {
        var idx = this.sortedFields.indexOf(f);

        if (idx > -1) {
          var next = this.sortedFields.objectAt(idx + 1);
          var nextPos = next.get("position");
          next.update({
            position: f.get("position")
          });
          f.update({
            position: nextPos
          });
        }
      },
      destroy: function destroy(f) {
        var model = this.model; // Only confirm if we already been saved

        if (f.get("id")) {
          _bootbox.default.confirm(_I18n.default.t("admin.user_fields.delete_confirm"), function (result) {
            if (result) {
              f.destroyRecord().then(function () {
                model.removeObject(f);
              }).catch(_ajaxError.popupAjaxError);
            }
          });
        } else {
          model.removeObject(f);
        }
      }
    }
  });

  _exports.default = _default;
});
define("admin/controllers/admin-user-index", ["exports", "discourse/lib/url", "@ember/object/computed", "discourse/lib/computed", "admin/models/admin-user", "discourse/mixins/can-check-emails", "@ember/controller", "I18n", "discourse/lib/ajax", "bootbox", "discourse-common/utils/decorators", "discourse-common/lib/get-url", "@ember/template", "discourse-common/lib/icon-library", "discourse/lib/ajax-error", "@ember/service", "discourse/lib/show-modal"], function (_exports, _url, _computed, _computed2, _adminUser, _canCheckEmails, _controller, _I18n, _ajax, _bootbox, _decorators, _getUrl, _template, _iconLibrary, _ajaxError, _service, _showModal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend(_canCheckEmails.default, (_dec = (0, _decorators.default)("model.customGroups"), _dec2 = (0, _decorators.default)("customGroupIdsBuffer", "customGroupIds"), _dec3 = (0, _decorators.default)("model.automaticGroups"), _dec4 = (0, _decorators.default)("model.associated_accounts"), _dec5 = (0, _decorators.default)("model.associated_accounts"), _dec6 = (0, _decorators.default)("model.user_fields.[]"), _dec7 = (0, _decorators.default)("model.can_delete_all_posts", "model.staff", "model.post_count"), _dec8 = (0, _decorators.default)("model.canBeDeleted", "model.staff"), _dec9 = (0, _decorators.default)("model.username"), _dec10 = (0, _decorators.default)("ssoLastPayload"), (_obj = {
    adminTools: (0, _service.inject)(),
    originalPrimaryGroupId: null,
    customGroupIdsBuffer: null,
    availableGroups: null,
    userTitleValue: null,
    ssoExternalEmail: null,
    ssoLastPayload: null,
    showBadges: (0, _computed2.setting)("enable_badges"),
    hasLockedTrustLevel: (0, _computed.notEmpty)("model.manual_locked_trust_level"),
    primaryGroupDirty: (0, _computed2.propertyNotEqual)("originalPrimaryGroupId", "model.primary_group_id"),
    canDisableSecondFactor: (0, _computed.and)("model.second_factor_enabled", "model.can_disable_second_factor"),
    customGroupIds: function customGroupIds(customGroups) {
      return customGroups.mapBy("id");
    },
    customGroupsDirty: function customGroupsDirty(buffer, original) {
      if (buffer === null) {
        return false;
      }

      return buffer.length === original.length ? buffer.any(function (id) {
        return !original.includes(id);
      }) : true;
    },
    automaticGroups: function automaticGroups(_automaticGroups) {
      return _automaticGroups.map(function (group) {
        var name = (0, _template.htmlSafe)(group.name);
        return "<a href=\"/g/".concat(name, "\">").concat(name, "</a>");
      }).join(", ");
    },
    associatedAccountsLoaded: function associatedAccountsLoaded(associatedAccounts) {
      return typeof associatedAccounts !== "undefined";
    },
    associatedAccounts: function associatedAccounts(_associatedAccounts) {
      return _associatedAccounts.map(function (provider) {
        return "".concat(provider.name, " (").concat(provider.description, ")");
      }).join(", ");
    },
    userFields: function userFields(_userFields) {
      return this.site.collectUserFields(_userFields);
    },
    preferencesPath: (0, _computed2.fmt)("model.username_lower", (0, _url.userPath)("%@/preferences")),
    deleteAllPostsExplanation: function deleteAllPostsExplanation(canDeleteAllPosts, staff, postCount) {
      if (canDeleteAllPosts) {
        return null;
      }

      if (staff) {
        return _I18n.default.t("admin.user.delete_posts_forbidden_because_staff");
      }

      if (postCount > this.siteSettings.delete_all_posts_max) {
        return _I18n.default.t("admin.user.cant_delete_all_too_many_posts", {
          count: this.siteSettings.delete_all_posts_max
        });
      } else {
        return _I18n.default.t("admin.user.cant_delete_all_posts", {
          count: this.siteSettings.delete_user_max_post_age
        });
      }
    },
    deleteExplanation: function deleteExplanation(canBeDeleted, staff) {
      if (canBeDeleted) {
        return null;
      }

      if (staff) {
        return _I18n.default.t("admin.user.delete_forbidden_because_staff");
      } else {
        return _I18n.default.t("admin.user.delete_forbidden", {
          count: this.siteSettings.delete_user_max_post_age
        });
      }
    },
    postEditsByEditorFilter: function postEditsByEditorFilter(username) {
      return {
        editor: username
      };
    },
    groupAdded: function groupAdded(added) {
      this.model.groupAdded(added).catch(function () {
        return _bootbox.default.alert(_I18n.default.t("generic_error"));
      });
    },
    groupRemoved: function groupRemoved(groupId) {
      var _this = this;

      this.model.groupRemoved(groupId).then(function () {
        if (groupId === _this.originalPrimaryGroupId) {
          _this.set("originalPrimaryGroupId", null);
        }
      }).catch(function () {
        return _bootbox.default.alert(_I18n.default.t("generic_error"));
      });
    },
    ssoPayload: function ssoPayload(lastPayload) {
      return lastPayload.split("&");
    },
    actions: {
      impersonate: function impersonate() {
        return this.model.impersonate().then(function () {
          return _url.default.redirectTo("/");
        }).catch(function (e) {
          if (e.status === 404) {
            _bootbox.default.alert(_I18n.default.t("admin.impersonate.not_found"));
          } else {
            _bootbox.default.alert(_I18n.default.t("admin.impersonate.invalid"));
          }
        });
      },
      logOut: function logOut() {
        return this.model.logOut().then(function () {
          return _bootbox.default.alert(_I18n.default.t("admin.user.logged_out"));
        });
      },
      resetBounceScore: function resetBounceScore() {
        return this.model.resetBounceScore();
      },
      approve: function approve() {
        return this.model.approve(this.currentUser);
      },
      _formatError: function _formatError(event) {
        return "http: ".concat(event.status, " - ").concat(event.body);
      },
      deactivate: function deactivate() {
        var _this2 = this;

        return this.model.deactivate().then(function () {
          return _this2.model.setProperties({
            active: false,
            can_activate: true
          });
        }).catch(function (e) {
          var error = _I18n.default.t("admin.user.deactivate_failed", {
            error: _this2._formatError(e)
          });

          _bootbox.default.alert(error);
        });
      },
      sendActivationEmail: function sendActivationEmail() {
        return this.model.sendActivationEmail().then(function () {
          return _bootbox.default.alert(_I18n.default.t("admin.user.activation_email_sent"));
        }).catch(_ajaxError.popupAjaxError);
      },
      activate: function activate() {
        var _this3 = this;

        return this.model.activate().then(function () {
          return _this3.model.setProperties({
            active: true,
            can_deactivate: !_this3.model.staff
          });
        }).catch(function (e) {
          var error = _I18n.default.t("admin.user.activate_failed", {
            error: _this3._formatError(e)
          });

          _bootbox.default.alert(error);
        });
      },
      revokeAdmin: function revokeAdmin() {
        return this.model.revokeAdmin();
      },
      grantAdmin: function grantAdmin() {
        var _this4 = this;

        return this.model.grantAdmin().then(function (result) {
          if (result.email_confirmation_required) {
            _bootbox.default.alert(_I18n.default.t("admin.user.grant_admin_confirm"));
          } else {
            var controller = (0, _showModal.default)("grant-admin-second-factor", {
              model: _this4.model
            });
            controller.setResult(result);
          }
        }).catch(_ajaxError.popupAjaxError);
      },
      revokeModeration: function revokeModeration() {
        return this.model.revokeModeration();
      },
      grantModeration: function grantModeration() {
        return this.model.grantModeration();
      },
      saveTrustLevel: function saveTrustLevel() {
        var _this5 = this;

        return this.model.saveTrustLevel().then(function () {
          return window.location.reload();
        }).catch(function (e) {
          var error;

          if (e.jqXHR.responseJSON && e.jqXHR.responseJSON.errors) {
            error = e.jqXHR.responseJSON.errors[0];
          }

          error = error || _I18n.default.t("admin.user.trust_level_change_failed", {
            error: _this5._formatError(e)
          });

          _bootbox.default.alert(error);
        });
      },
      restoreTrustLevel: function restoreTrustLevel() {
        return this.model.restoreTrustLevel();
      },
      lockTrustLevel: function lockTrustLevel(locked) {
        var _this6 = this;

        return this.model.lockTrustLevel(locked).then(function () {
          return window.location.reload();
        }).catch(function (e) {
          var error;

          if (e.jqXHR.responseJSON && e.jqXHR.responseJSON.errors) {
            error = e.jqXHR.responseJSON.errors[0];
          }

          error = error || _I18n.default.t("admin.user.trust_level_change_failed", {
            error: _this6._formatError(e)
          });

          _bootbox.default.alert(error);
        });
      },
      unsilence: function unsilence() {
        return this.model.unsilence();
      },
      silence: function silence() {
        return this.model.silence();
      },
      anonymize: function anonymize() {
        var _this7 = this;

        var user = this.model;

        var message = _I18n.default.t("admin.user.anonymize_confirm");

        var performAnonymize = function performAnonymize() {
          _this7.model.anonymize().then(function (data) {
            if (data.success) {
              if (data.username) {
                document.location = (0, _getUrl.default)("/admin/users/".concat(user.get("id"), "/").concat(data.username));
              } else {
                document.location = (0, _getUrl.default)("/admin/users/list/active");
              }
            } else {
              _bootbox.default.alert(_I18n.default.t("admin.user.anonymize_failed"));

              if (data.user) {
                user.setProperties(data.user);
              }
            }
          }).catch(function () {
            return _bootbox.default.alert(_I18n.default.t("admin.user.anonymize_failed"));
          });
        };

        var buttons = [{
          label: _I18n.default.t("composer.cancel"),
          class: "cancel",
          link: true
        }, {
          label: _I18n.default.t("admin.user.anonymize_yes"),
          class: "btn btn-danger",
          icon: (0, _iconLibrary.iconHTML)("exclamation-triangle"),
          callback: function callback() {
            performAnonymize();
          }
        }];

        _bootbox.default.dialog(message, buttons, {
          classes: "delete-user-modal"
        });
      },
      disableSecondFactor: function disableSecondFactor() {
        return this.model.disableSecondFactor();
      },
      clearPenaltyHistory: function clearPenaltyHistory() {
        var user = this.model;
        var path = "/admin/users/".concat(user.get("id"), "/penalty_history");
        return (0, _ajax.ajax)(path, {
          type: "DELETE"
        }).then(function () {
          return user.set("tl3_requirements.penalty_counts.total", 0);
        }).catch(_ajaxError.popupAjaxError);
      },
      destroy: function destroy() {
        var _this8 = this;

        var postCount = this.get("model.post_count");
        var maxPostCount = this.siteSettings.delete_all_posts_max;

        var message = _I18n.default.t("admin.user.delete_confirm");

        var location = document.location.pathname;

        var performDestroy = function performDestroy(block) {
          _bootbox.default.dialog(_I18n.default.t("admin.user.deleting_user"));

          var formData = {
            context: location
          };

          if (block) {
            formData["block_email"] = true;
            formData["block_urls"] = true;
            formData["block_ip"] = true;
          }

          if (postCount <= maxPostCount) {
            formData["delete_posts"] = true;
          }

          _this8.model.destroy(formData).then(function (data) {
            if (data.deleted) {
              if (/^\/admin\/users\/list\//.test(location)) {
                document.location = location;
              } else {
                document.location = (0, _getUrl.default)("/admin/users/list/active");
              }
            } else {
              _bootbox.default.alert(_I18n.default.t("admin.user.delete_failed"));
            }
          }).catch(function () {
            _bootbox.default.alert(_I18n.default.t("admin.user.delete_failed"));
          });
        };

        var buttons = [{
          label: _I18n.default.t("composer.cancel"),
          class: "btn",
          link: true
        }, {
          icon: (0, _iconLibrary.iconHTML)("exclamation-triangle"),
          label: _I18n.default.t("admin.user.delete_and_block"),
          class: "btn btn-danger",
          callback: function callback() {
            performDestroy(true);
          }
        }, {
          label: _I18n.default.t("admin.user.delete_dont_block"),
          class: "btn btn-primary",
          callback: function callback() {
            performDestroy(false);
          }
        }];

        _bootbox.default.dialog(message, buttons, {
          classes: "delete-user-modal"
        });
      },
      promptTargetUser: function promptTargetUser() {
        (0, _showModal.default)("admin-merge-users-prompt", {
          admin: true,
          model: this.model
        });
      },
      showMergeConfirmation: function showMergeConfirmation(targetUsername) {
        (0, _showModal.default)("admin-merge-users-confirmation", {
          admin: true,
          model: {
            username: this.model.username,
            targetUsername: targetUsername
          }
        });
      },
      merge: function merge(targetUsername) {
        var _this9 = this;

        var user = this.model;
        var location = document.location.pathname;
        var formData = {
          context: location
        };

        if (targetUsername) {
          formData["target_username"] = targetUsername;
        }

        this.model.merge(formData).then(function (response) {
          if (response.success) {
            (0, _showModal.default)("admin-merge-users-progress", {
              admin: true,
              model: _this9.model
            });
          } else {
            _bootbox.default.alert(_I18n.default.t("admin.user.merge_failed"));
          }
        }).catch(function () {
          _adminUser.default.find(user.id).then(function (u) {
            return user.setProperties(u);
          });

          _bootbox.default.alert(_I18n.default.t("admin.user.merge_failed"));
        });
      },
      viewActionLogs: function viewActionLogs() {
        this.adminTools.showActionLogs(this, {
          target_user: this.get("model.username")
        });
      },
      showSuspendModal: function showSuspendModal() {
        this.adminTools.showSuspendModal(this.model);
      },
      unsuspend: function unsuspend() {
        this.model.unsuspend().catch(_ajaxError.popupAjaxError);
      },
      showSilenceModal: function showSilenceModal() {
        this.adminTools.showSilenceModal(this.model);
      },
      saveUsername: function saveUsername(newUsername) {
        var _this10 = this;

        var oldUsername = this.get("model.username");
        this.set("model.username", newUsername);
        var path = "/users/".concat(oldUsername.toLowerCase(), "/preferences/username");
        return (0, _ajax.ajax)(path, {
          data: {
            new_username: newUsername
          },
          type: "PUT"
        }).catch(function (e) {
          _this10.set("model.username", oldUsername);

          (0, _ajaxError.popupAjaxError)(e);
        }).finally(function () {
          return _this10.toggleProperty("editingUsername");
        });
      },
      saveName: function saveName(newName) {
        var _this11 = this;

        var oldName = this.get("model.name");
        this.set("model.name", newName);
        var path = (0, _url.userPath)("".concat(this.get("model.username").toLowerCase(), ".json"));
        return (0, _ajax.ajax)(path, {
          data: {
            name: newName
          },
          type: "PUT"
        }).catch(function (e) {
          _this11.set("model.name", oldName);

          (0, _ajaxError.popupAjaxError)(e);
        }).finally(function () {
          return _this11.toggleProperty("editingName");
        });
      },
      saveTitle: function saveTitle(newTitle) {
        var _this12 = this;

        var oldTitle = this.get("model.title");
        this.set("model.title", newTitle);
        var path = (0, _url.userPath)("".concat(this.get("model.username").toLowerCase(), ".json"));
        return (0, _ajax.ajax)(path, {
          data: {
            title: newTitle
          },
          type: "PUT"
        }).catch(function (e) {
          _this12.set("model.title", oldTitle);

          (0, _ajaxError.popupAjaxError)(e);
        }).finally(function () {
          return _this12.toggleProperty("editingTitle");
        });
      },
      saveCustomGroups: function saveCustomGroups() {
        var _this13 = this;

        var currentIds = this.customGroupIds;
        var bufferedIds = this.customGroupIdsBuffer;
        var availableGroups = this.availableGroups;
        bufferedIds.filter(function (id) {
          return !currentIds.includes(id);
        }).forEach(function (id) {
          return _this13.groupAdded(availableGroups.findBy("id", id));
        });
        currentIds.filter(function (id) {
          return !bufferedIds.includes(id);
        }).forEach(function (id) {
          return _this13.groupRemoved(id);
        });
      },
      resetCustomGroups: function resetCustomGroups() {
        this.set("customGroupIdsBuffer", this.model.customGroups.mapBy("id"));
      },
      savePrimaryGroup: function savePrimaryGroup() {
        var _this14 = this;

        var primaryGroupId = this.get("model.primary_group_id");
        var path = "/admin/users/".concat(this.get("model.id"), "/primary_group");
        return (0, _ajax.ajax)(path, {
          type: "PUT",
          data: {
            primary_group_id: primaryGroupId
          }
        }).then(function () {
          return _this14.set("originalPrimaryGroupId", primaryGroupId);
        }).catch(function () {
          return _bootbox.default.alert(_I18n.default.t("generic_error"));
        });
      },
      resetPrimaryGroup: function resetPrimaryGroup() {
        this.set("model.primary_group_id", this.originalPrimaryGroupId);
      },
      deleteSSORecord: function deleteSSORecord() {
        var _this15 = this;

        return _bootbox.default.confirm(_I18n.default.t("admin.user.discourse_connect.confirm_delete"), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (confirmed) {
          if (confirmed) {
            return _this15.model.deleteSSORecord();
          }
        });
      },
      checkSsoEmail: function checkSsoEmail() {
        var _this16 = this;

        return (0, _ajax.ajax)((0, _url.userPath)("".concat(this.model.username_lower, "/sso-email.json")), {
          data: {
            context: window.location.pathname
          }
        }).then(function (result) {
          if (result) {
            _this16.set("ssoExternalEmail", result.email);
          }
        });
      },
      checkSsoPayload: function checkSsoPayload() {
        var _this17 = this;

        return (0, _ajax.ajax)((0, _url.userPath)("".concat(this.model.username_lower, "/sso-payload.json")), {
          data: {
            context: window.location.pathname
          }
        }).then(function (result) {
          if (result) {
            _this17.set("ssoLastPayload", result.payload);
          }
        });
      },
      showDeletePostsConfirmation: function showDeletePostsConfirmation() {
        (0, _showModal.default)("admin-delete-posts-confirmation", {
          admin: true,
          model: this.model
        });
      },
      deleteAllPosts: function deleteAllPosts() {
        var _this18 = this;

        var deletedPosts = 0;
        var deletedPercentage = 0;
        var user = this.model;

        var performDelete = function performDelete(progressModal) {
          _this18.model.deleteAllPosts().then(function (_ref) {
            var posts_deleted = _ref.posts_deleted;

            if (posts_deleted === 0) {
              user.set("post_count", 0);
              progressModal.send("closeModal");
            } else {
              deletedPosts += posts_deleted;
              deletedPercentage = Math.floor(deletedPosts * 100 / user.get("post_count"));
              progressModal.setProperties({
                deletedPercentage: deletedPercentage
              });
              performDelete(progressModal);
            }
          }).catch(function (e) {
            progressModal.send("closeModal");
            var error;

            _adminUser.default.find(user.get("id")).then(function (u) {
              return user.setProperties(u);
            });

            error = (0, _ajaxError.extractError)(e) || _I18n.default.t("admin.user.delete_posts_failed");

            _bootbox.default.alert(error);
          });
        };

        var progressModal = (0, _showModal.default)("admin-delete-user-posts-progress", {
          admin: true
        });
        performDelete(progressModal);
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "customGroupIds", [_dec], Object.getOwnPropertyDescriptor(_obj, "customGroupIds"), _obj), _applyDecoratedDescriptor(_obj, "customGroupsDirty", [_dec2], Object.getOwnPropertyDescriptor(_obj, "customGroupsDirty"), _obj), _applyDecoratedDescriptor(_obj, "automaticGroups", [_dec3], Object.getOwnPropertyDescriptor(_obj, "automaticGroups"), _obj), _applyDecoratedDescriptor(_obj, "associatedAccountsLoaded", [_dec4], Object.getOwnPropertyDescriptor(_obj, "associatedAccountsLoaded"), _obj), _applyDecoratedDescriptor(_obj, "associatedAccounts", [_dec5], Object.getOwnPropertyDescriptor(_obj, "associatedAccounts"), _obj), _applyDecoratedDescriptor(_obj, "userFields", [_dec6], Object.getOwnPropertyDescriptor(_obj, "userFields"), _obj), _applyDecoratedDescriptor(_obj, "deleteAllPostsExplanation", [_dec7], Object.getOwnPropertyDescriptor(_obj, "deleteAllPostsExplanation"), _obj), _applyDecoratedDescriptor(_obj, "deleteExplanation", [_dec8], Object.getOwnPropertyDescriptor(_obj, "deleteExplanation"), _obj), _applyDecoratedDescriptor(_obj, "postEditsByEditorFilter", [_dec9], Object.getOwnPropertyDescriptor(_obj, "postEditsByEditorFilter"), _obj), _applyDecoratedDescriptor(_obj, "ssoPayload", [_dec10], Object.getOwnPropertyDescriptor(_obj, "ssoPayload"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-user", ["exports", "@ember/controller"], function (_exports, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend();

  _exports.default = _default;
});
define("admin/controllers/admin-users-list-show", ["exports", "discourse-common/utils/decorators", "admin/models/admin-user", "discourse/mixins/can-check-emails", "@ember/controller", "I18n", "discourse-common/config/environment", "discourse-common/lib/debounce", "discourse/lib/computed"], function (_exports, _decorators, _adminUser, _canCheckEmails, _controller, _I18n, _environment, _debounce, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend(_canCheckEmails.default, (_dec = (0, _decorators.default)("query"), _dec2 = (0, _decorators.observes)("listFilter"), (_obj = {
    model: null,
    query: null,
    order: null,
    asc: null,
    showEmails: false,
    refreshing: false,
    listFilter: null,
    selectAll: false,
    searchHint: (0, _computed.i18n)("search_hint"),
    init: function init() {
      this._super.apply(this, arguments);

      this._page = 1;
      this._results = [];
      this._canLoadMore = true;
    },
    title: function title(query) {
      return _I18n.default.t("admin.users.titles." + query);
    },
    _filterUsers: function _filterUsers() {
      (0, _debounce.default)(this, this.resetFilters, _environment.INPUT_DELAY);
    },
    resetFilters: function resetFilters() {
      this._page = 1;
      this._results = [];
      this._canLoadMore = true;

      this._refreshUsers();
    },
    _refreshUsers: function _refreshUsers() {
      var _this = this;

      if (!this._canLoadMore) {
        return;
      }

      this.set("refreshing", true);

      _adminUser.default.findAll(this.query, {
        filter: this.listFilter,
        show_emails: this.showEmails,
        order: this.order,
        asc: this.asc,
        page: this._page
      }).then(function (result) {
        if (!result || result.length === 0) {
          _this._canLoadMore = false;
        }

        _this._results = _this._results.concat(result);

        _this.set("model", _this._results);
      }).finally(function () {
        return _this.set("refreshing", false);
      });
    },
    actions: {
      loadMore: function loadMore() {
        this._page += 1;

        this._refreshUsers();
      },
      toggleEmailVisibility: function toggleEmailVisibility() {
        this.toggleProperty("showEmails");
        this.resetFilters();
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "title", [_dec], Object.getOwnPropertyDescriptor(_obj, "title"), _obj), _applyDecoratedDescriptor(_obj, "_filterUsers", [_dec2], Object.getOwnPropertyDescriptor(_obj, "_filterUsers"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-watched-words-action", ["exports", "@ember/controller", "I18n", "admin/models/watched-word", "discourse/lib/ajax", "bootbox", "discourse-common/utils/decorators", "discourse/lib/computed", "@ember/object/computed", "@ember/runloop", "discourse/lib/show-modal"], function (_exports, _controller, _I18n, _watchedWord, _ajax, _bootbox, _decorators, _computed, _computed2, _runloop, _showModal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _obj;

  function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("actionNameKey", "adminWatchedWords.model"), _dec2 = (0, _decorators.default)("currentAction.words.[]"), _dec3 = (0, _decorators.default)("actionNameKey"), (_obj = {
    adminWatchedWords: (0, _controller.inject)(),
    actionNameKey: null,
    downloadLink: (0, _computed.fmt)("actionNameKey", "/admin/customize/watched_words/action/%@/download"),
    showWordsList: (0, _computed2.or)("adminWatchedWords.showWords", "adminWatchedWords.filter"),
    findAction: function findAction(actionName) {
      return (this.adminWatchedWords.model || []).findBy("nameKey", actionName);
    },
    currentAction: function currentAction(actionName) {
      return this.findAction(actionName);
    },
    regexpError: function regexpError(words) {
      var _iterator = _createForOfIteratorHelper(words),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var _step$value = _step.value,
              regexp = _step$value.regexp,
              word = _step$value.word;

          try {
            RegExp(regexp);
          } catch {
            return _I18n.default.t("admin.watched_words.invalid_regex", {
              word: word
            });
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    },
    actionDescription: function actionDescription(actionNameKey) {
      return _I18n.default.t("admin.watched_words.action_descriptions." + actionNameKey);
    },
    actions: {
      recordAdded: function recordAdded(arg) {
        var _this = this;

        var action = this.findAction(this.actionNameKey);

        if (!action) {
          return;
        }

        action.words.unshiftObject(arg);
        (0, _runloop.schedule)("afterRender", function () {
          // remove from other actions lists
          var match = null;

          _this.adminWatchedWords.model.forEach(function (otherAction) {
            if (match) {
              return;
            }

            if (otherAction.nameKey !== _this.actionNameKey) {
              match = otherAction.words.findBy("id", arg.id);

              if (match) {
                otherAction.words.removeObject(match);
              }
            }
          });
        });
      },
      recordRemoved: function recordRemoved(arg) {
        if (this.currentAction) {
          this.currentAction.words.removeObject(arg);
        }
      },
      uploadComplete: function uploadComplete() {
        var _this2 = this;

        _watchedWord.default.findAll().then(function (data) {
          _this2.adminWatchedWords.set("model", data);
        });
      },
      test: function test() {
        var _this3 = this;

        _watchedWord.default.findAll().then(function (data) {
          _this3.adminWatchedWords.set("model", data);

          (0, _showModal.default)("admin-watched-word-test", {
            admin: true,
            model: _this3.currentAction
          });
        });
      },
      clearAll: function clearAll() {
        var _this4 = this;

        var actionKey = this.actionNameKey;

        _bootbox.default.confirm(_I18n.default.t("admin.watched_words.clear_all_confirm", {
          action: _I18n.default.t("admin.watched_words.actions." + actionKey)
        }), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (result) {
          if (result) {
            (0, _ajax.ajax)("/admin/customize/watched_words/action/".concat(actionKey, ".json"), {
              type: "DELETE"
            }).then(function () {
              var action = _this4.findAction(actionKey);

              if (action) {
                action.set("words", []);
              }
            });
          }
        });
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "currentAction", [_dec], Object.getOwnPropertyDescriptor(_obj, "currentAction"), _obj), _applyDecoratedDescriptor(_obj, "regexpError", [_dec2], Object.getOwnPropertyDescriptor(_obj, "regexpError"), _obj), _applyDecoratedDescriptor(_obj, "actionDescription", [_dec3], Object.getOwnPropertyDescriptor(_obj, "actionDescription"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-watched-words", ["exports", "@ember/controller", "@ember/object", "discourse-common/config/environment", "discourse-common/lib/debounce", "@ember/utils", "discourse-common/utils/decorators"], function (_exports, _controller, _object, _environment, _debounce, _utils, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.observes)("filter"), (_obj = {
    filter: null,
    showWords: false,
    _filterContent: function _filterContent() {
      if ((0, _utils.isEmpty)(this.allWatchedWords)) {
        return;
      }

      if (!this.filter) {
        this.set("model", this.allWatchedWords);
        return;
      }

      var filter = this.filter.toLowerCase();
      var model = [];
      this.allWatchedWords.forEach(function (wordsForAction) {
        var wordRecords = wordsForAction.words.filter(function (wordRecord) {
          return wordRecord.word.indexOf(filter) > -1;
        });
        model.pushObject(_object.default.create({
          nameKey: wordsForAction.nameKey,
          name: wordsForAction.name,
          words: wordRecords
        }));
      });
      this.set("model", model);
    },
    filterContent: function filterContent() {
      (0, _debounce.default)(this, this._filterContent, _environment.INPUT_DELAY);
    },
    clearFilter: function clearFilter() {
      this.set("filter", "");
    },
    toggleMenu: function toggleMenu() {
      $(".admin-detail").toggleClass("mobile-closed mobile-open");
    }
  }, (_applyDecoratedDescriptor(_obj, "filterContent", [_dec], Object.getOwnPropertyDescriptor(_obj, "filterContent"), _obj), _applyDecoratedDescriptor(_obj, "clearFilter", [_object.action], Object.getOwnPropertyDescriptor(_obj, "clearFilter"), _obj), _applyDecoratedDescriptor(_obj, "toggleMenu", [_object.action], Object.getOwnPropertyDescriptor(_obj, "toggleMenu"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-web-hooks-show-events", ["exports", "@ember/controller", "discourse/lib/ajax", "@ember/object/computed", "discourse-common/utils/decorators", "discourse/lib/ajax-error"], function (_exports, _controller, _ajax, _computed, _decorators, _ajaxError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("incomingCount"), (_obj = {
    pingDisabled: false,
    incomingCount: (0, _computed.alias)("incomingEventIds.length"),
    init: function init() {
      this._super.apply(this, arguments);

      this.incomingEventIds = [];
    },
    hasIncoming: function hasIncoming(incomingCount) {
      return incomingCount > 0;
    },
    subscribe: function subscribe() {
      var _this = this;

      this.messageBus.subscribe("/web_hook_events/".concat(this.get("model.extras.web_hook_id")), function (data) {
        if (data.event_type === "ping") {
          _this.set("pingDisabled", false);
        }

        _this._addIncoming(data.web_hook_event_id);
      });
    },
    unsubscribe: function unsubscribe() {
      this.messageBus.unsubscribe("/web_hook_events/*");
    },
    _addIncoming: function _addIncoming(eventId) {
      var incomingEventIds = this.incomingEventIds;

      if (incomingEventIds.indexOf(eventId) === -1) {
        incomingEventIds.pushObject(eventId);
      }
    },
    actions: {
      loadMore: function loadMore() {
        this.model.loadMore();
      },
      ping: function ping() {
        var _this2 = this;

        this.set("pingDisabled", true);
        (0, _ajax.ajax)("/admin/api/web_hooks/".concat(this.get("model.extras.web_hook_id"), "/ping"), {
          type: "POST"
        }).catch(function (error) {
          _this2.set("pingDisabled", false);

          (0, _ajaxError.popupAjaxError)(error);
        });
      },
      showInserted: function showInserted() {
        var _this3 = this;

        var webHookId = this.get("model.extras.web_hook_id");
        (0, _ajax.ajax)("/admin/api/web_hooks/".concat(webHookId, "/events/bulk"), {
          type: "GET",
          data: {
            ids: this.incomingEventIds
          }
        }).then(function (data) {
          var objects = data.map(function (event) {
            return _this3.store.createRecord("web-hook-event", event);
          });

          _this3.model.unshiftObjects(objects);

          _this3.set("incomingEventIds", []);
        });
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "hasIncoming", [_dec], Object.getOwnPropertyDescriptor(_obj, "hasIncoming"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-web-hooks-show", ["exports", "@ember/controller", "@ember/object", "I18n", "@ember/object/computed", "bootbox", "discourse-common/utils/decorators", "discourse/lib/utilities", "discourse-common/lib/get-url", "@ember/utils", "discourse/lib/ajax-error"], function (_exports, _controller, _object, _I18n, _computed, _bootbox, _decorators, _utilities, _getUrl, _utils, _ajaxError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("model.isSaving", "saved", "saveButtonDisabled"), _dec2 = (0, _decorators.default)("model.isNew"), _dec3 = (0, _decorators.default)("model.secret"), _dec4 = (0, _decorators.default)("model.wildcard_web_hook", "model.web_hook_event_types.[]"), _dec5 = (0, _decorators.default)("model.isSaving", "secretValidation", "eventTypeValidation", "model.payload_url"), (_obj = {
    adminWebHooks: (0, _controller.inject)(),
    eventTypes: (0, _computed.alias)("adminWebHooks.eventTypes"),
    defaultEventTypes: (0, _computed.alias)("adminWebHooks.defaultEventTypes"),
    contentTypes: (0, _computed.alias)("adminWebHooks.contentTypes"),
    showTagsFilter: function showTagsFilter() {
      return this.siteSettings.tagging_enabled;
    },
    savingStatus: function savingStatus(isSaving, saved, saveButtonDisabled) {
      if (isSaving) {
        return _I18n.default.t("saving");
      } else if (!saveButtonDisabled && saved) {
        return _I18n.default.t("saved");
      } // Use side effect of validation to clear saved text


      this.set("saved", false);
      return "";
    },
    saveButtonText: function saveButtonText(isNew) {
      return isNew ? _I18n.default.t("admin.web_hooks.create") : _I18n.default.t("admin.web_hooks.save");
    },
    secretValidation: function secretValidation(secret) {
      if (!(0, _utils.isEmpty)(secret)) {
        if (secret.indexOf(" ") !== -1) {
          return _object.default.create({
            failed: true,
            reason: _I18n.default.t("admin.web_hooks.secret_invalid")
          });
        }

        if (secret.length < 12) {
          return _object.default.create({
            failed: true,
            reason: _I18n.default.t("admin.web_hooks.secret_too_short")
          });
        }
      }
    },
    eventTypeValidation: function eventTypeValidation(isWildcard, eventTypes) {
      if (!isWildcard && (0, _utils.isEmpty)(eventTypes)) {
        return _object.default.create({
          failed: true,
          reason: _I18n.default.t("admin.web_hooks.event_type_missing")
        });
      }
    },
    saveButtonDisabled: function saveButtonDisabled(isSaving, secretValidation, eventTypeValidation, payloadUrl) {
      return isSaving ? false : secretValidation || eventTypeValidation || (0, _utils.isEmpty)(payloadUrl);
    },
    actions: {
      save: function save() {
        var _this = this;

        this.set("saved", false);
        var url = this.get("model.payload_url");
        var domain = (0, _utilities.extractDomainFromUrl)(url);
        var model = this.model;
        var isNew = model.get("isNew");

        var saveWebHook = function saveWebHook() {
          return model.save().then(function () {
            _this.set("saved", true);

            _this.adminWebHooks.get("model").addObject(model);

            if (isNew) {
              _this.transitionToRoute("adminWebHooks.show", model.get("id"));
            }
          }).catch(_ajaxError.popupAjaxError);
        };

        if (domain === "localhost" || domain.match(/192\.168\.\d+\.\d+/) || domain.match(/127\.\d+\.\d+\.\d+/) || (0, _getUrl.isAbsoluteURL)(url)) {
          return _bootbox.default.confirm(_I18n.default.t("admin.web_hooks.warn_local_payload_url"), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (result) {
            if (result) {
              return saveWebHook();
            }
          });
        }

        return saveWebHook();
      },
      destroy: function destroy() {
        var _this2 = this;

        return _bootbox.default.confirm(_I18n.default.t("admin.web_hooks.delete_confirm"), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (result) {
          if (result) {
            var model = _this2.model;
            model.destroyRecord().then(function () {
              _this2.adminWebHooks.get("model").removeObject(model);

              _this2.transitionToRoute("adminWebHooks");
            }).catch(_ajaxError.popupAjaxError);
          }
        });
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "showTagsFilter", [_decorators.default], Object.getOwnPropertyDescriptor(_obj, "showTagsFilter"), _obj), _applyDecoratedDescriptor(_obj, "savingStatus", [_dec], Object.getOwnPropertyDescriptor(_obj, "savingStatus"), _obj), _applyDecoratedDescriptor(_obj, "saveButtonText", [_dec2], Object.getOwnPropertyDescriptor(_obj, "saveButtonText"), _obj), _applyDecoratedDescriptor(_obj, "secretValidation", [_dec3], Object.getOwnPropertyDescriptor(_obj, "secretValidation"), _obj), _applyDecoratedDescriptor(_obj, "eventTypeValidation", [_dec4], Object.getOwnPropertyDescriptor(_obj, "eventTypeValidation"), _obj), _applyDecoratedDescriptor(_obj, "saveButtonDisabled", [_dec5], Object.getOwnPropertyDescriptor(_obj, "saveButtonDisabled"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/admin-web-hooks", ["exports", "@ember/controller", "I18n", "bootbox", "discourse/lib/ajax-error"], function (_exports, _controller, _I18n, _bootbox, _ajaxError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend({
    actions: {
      destroy: function destroy(webhook) {
        var _this = this;

        return _bootbox.default.confirm(_I18n.default.t("admin.web_hooks.delete_confirm"), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (result) {
          if (result) {
            webhook.destroyRecord().then(function () {
              _this.model.removeObject(webhook);
            }).catch(_ajaxError.popupAjaxError);
          }
        });
      },
      loadMore: function loadMore() {
        this.model.loadMore();
      }
    }
  });

  _exports.default = _default;
});
define("admin/controllers/admin", ["exports", "@ember/controller", "@ember/string", "discourse-common/utils/decorators", "@ember/service"], function (_exports, _controller, _string, _decorators, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("siteSettings.enable_group_directory"), _dec2 = (0, _decorators.default)("siteSettings.enable_badges"), _dec3 = (0, _decorators.default)("router._router.currentPath"), (_obj = {
    router: (0, _service.inject)(),
    showGroups: function showGroups(enableGroupDirectory) {
      return !enableGroupDirectory;
    },
    showBadges: function showBadges(enableBadges) {
      return this.currentUser.get("admin") && enableBadges;
    },
    adminContentsClassName: function adminContentsClassName(currentPath) {
      var cssClasses = currentPath.split(".").filter(function (segment) {
        return segment !== "index" && segment !== "loading" && segment !== "show" && segment !== "admin";
      }).map(_string.dasherize).join(" "); // this is done to avoid breaking css customizations

      if (cssClasses.includes("dashboard")) {
        cssClasses = "".concat(cssClasses, " dashboard-next");
      }

      return cssClasses;
    }
  }, (_applyDecoratedDescriptor(_obj, "showGroups", [_dec], Object.getOwnPropertyDescriptor(_obj, "showGroups"), _obj), _applyDecoratedDescriptor(_obj, "showBadges", [_dec2], Object.getOwnPropertyDescriptor(_obj, "showBadges"), _obj), _applyDecoratedDescriptor(_obj, "adminContentsClassName", [_dec3], Object.getOwnPropertyDescriptor(_obj, "adminContentsClassName"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/modals/admin-add-upload", ["exports", "@ember/controller", "@ember/object/computed", "discourse-common/utils/decorators", "I18n", "discourse/mixins/modal-functionality", "discourse/lib/ajax", "@ember/utils", "discourse/lib/ajax-error"], function (_exports, _controller, _computed, _decorators, _I18n, _modalFunctionality, _ajax, _utils, _ajaxError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var THEME_FIELD_VARIABLE_TYPE_IDS = [2, 3, 4];
  var SCSS_VARIABLE_NAMES = [// common/foundation/colors.scss
  "primary", "secondary", "tertiary", "quaternary", "header_background", "header_primary", "highlight", "danger", "success", "love", // common/foundation/math.scss
  "E", "PI", "LN2", "SQRT2", // common/foundation/variables.scss
  "small-width", "medium-width", "large-width", "google", "instagram", "facebook", "cas", "twitter", "github", "base-font-size", "base-line-height", "base-font-family", "primary-low", "primary-medium", "secondary-low", "secondary-medium", "tertiary-low", "quaternary-low", "highlight-low", "highlight-medium", "danger-low", "danger-medium", "success-low", "love-low"];

  var _default = _controller.default.extend(_modalFunctionality.default, (_dec = (0, _decorators.default)("name", "adminCustomizeThemesShow.model.theme_fields"), _dec2 = (0, _decorators.default)("errorMessage"), _dec3 = (0, _decorators.observes)("name"), (_obj = {
    adminCustomizeThemesShow: (0, _controller.inject)(),
    uploadUrl: "/admin/themes/upload_asset",
    onShow: function onShow() {
      this.set("name", null);
      this.set("fileSelected", false);
    },
    enabled: (0, _computed.and)("nameValid", "fileSelected"),
    disabled: (0, _computed.not)("enabled"),
    errorMessage: function errorMessage(name, themeFields) {
      if (name) {
        if (!name.match(/^[a-z_][a-z0-9_-]*$/i)) {
          return _I18n.default.t("admin.customize.theme.variable_name_error.invalid_syntax");
        } else if (SCSS_VARIABLE_NAMES.includes(name.toLowerCase())) {
          return _I18n.default.t("admin.customize.theme.variable_name_error.no_overwrite");
        } else if (themeFields.some(function (tf) {
          return THEME_FIELD_VARIABLE_TYPE_IDS.includes(tf.type_id) && name === tf.name;
        })) {
          return _I18n.default.t("admin.customize.theme.variable_name_error.must_be_unique");
        }
      }

      return null;
    },
    nameValid: function nameValid(errorMessage) {
      return null === errorMessage;
    },
    uploadChanged: function uploadChanged() {
      var file = $("#file-input")[0];
      this.set("fileSelected", file && file.files[0]);
    },
    actions: {
      updateName: function updateName() {
        var name = this.name;

        if ((0, _utils.isEmpty)(name)) {
          name = $("#file-input")[0].files[0].name;
          this.set("name", name.split(".")[0]);
        }

        this.uploadChanged();
      },
      upload: function upload() {
        var _this = this;

        var file = $("#file-input")[0].files[0];
        var options = {
          type: "POST",
          processData: false,
          contentType: false,
          data: new FormData()
        };
        options.data.append("file", file);
        (0, _ajax.ajax)(this.uploadUrl, options).then(function (result) {
          var upload = {
            upload_id: result.upload_id,
            name: _this.name,
            original_filename: file.name
          };

          _this.adminCustomizeThemesShow.send("addUpload", upload);

          _this.send("closeModal");
        }).catch(function (e) {
          (0, _ajaxError.popupAjaxError)(e);
        });
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "errorMessage", [_dec], Object.getOwnPropertyDescriptor(_obj, "errorMessage"), _obj), _applyDecoratedDescriptor(_obj, "nameValid", [_dec2], Object.getOwnPropertyDescriptor(_obj, "nameValid"), _obj), _applyDecoratedDescriptor(_obj, "uploadChanged", [_dec3], Object.getOwnPropertyDescriptor(_obj, "uploadChanged"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/modals/admin-badge-preview", ["exports", "@ember/object/computed", "@ember/controller", "I18n", "discourse-common/utils/decorators", "discourse/lib/utilities"], function (_exports, _computed, _controller, _I18n, _decorators, _utilities) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend((_dec = (0, _decorators.default)("count", "sample.length"), _dec2 = (0, _decorators.default)("model.query_plan"), _dec3 = (0, _decorators.default)("model.query_plan"), (_obj = {
    sample: (0, _computed.alias)("model.sample"),
    errors: (0, _computed.alias)("model.errors"),
    count: (0, _computed.alias)("model.grant_count"),
    countWarning: function countWarning(count, sampleLength) {
      if (count <= 10) {
        return sampleLength !== count;
      } else {
        return sampleLength !== 10;
      }
    },
    hasQueryPlan: function hasQueryPlan(queryPlan) {
      return !!queryPlan;
    },
    queryPlanHtml: function queryPlanHtml(queryPlan) {
      var output = "<pre class=\"badge-query-plan\">";
      queryPlan.forEach(function (linehash) {
        output += (0, _utilities.escapeExpression)(linehash["QUERY PLAN"]);
        output += "<br>";
      });
      output += "</pre>";
      return output;
    },
    processedSample: (0, _computed.map)("model.sample", function (grant) {
      var i18nKey = "admin.badges.preview.grant.with";
      var i18nParams = {
        username: (0, _utilities.escapeExpression)(grant.username)
      };

      if (grant.post_id) {
        i18nKey += "_post";
        i18nParams.link = "<a href=\"/p/".concat(grant.post_id, "\" data-auto-route=\"true\">\n        ").concat((0, _utilities.escapeExpression)(grant.title), "\n      </a>");
      }

      if (grant.granted_at) {
        i18nKey += "_time";
        i18nParams.time = (0, _utilities.escapeExpression)(moment(grant.granted_at).format(_I18n.default.t("dates.long_with_year")));
      }

      return _I18n.default.t(i18nKey, i18nParams);
    })
  }, (_applyDecoratedDescriptor(_obj, "countWarning", [_dec], Object.getOwnPropertyDescriptor(_obj, "countWarning"), _obj), _applyDecoratedDescriptor(_obj, "hasQueryPlan", [_dec2], Object.getOwnPropertyDescriptor(_obj, "hasQueryPlan"), _obj), _applyDecoratedDescriptor(_obj, "queryPlanHtml", [_dec3], Object.getOwnPropertyDescriptor(_obj, "queryPlanHtml"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/modals/admin-color-scheme-select-base", ["exports", "@ember/controller", "discourse/mixins/modal-functionality"], function (_exports, _controller, _modalFunctionality) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend(_modalFunctionality.default, {
    adminCustomizeColors: (0, _controller.inject)(),
    selectedBaseThemeId: null,
    init: function init() {
      this._super.apply(this, arguments);

      var defaultScheme = this.get("adminCustomizeColors.baseColorSchemes.0.base_scheme_id");
      this.set("selectedBaseThemeId", defaultScheme);
    },
    actions: {
      selectBase: function selectBase() {
        this.adminCustomizeColors.send("newColorSchemeWithBase", this.selectedBaseThemeId);
        this.send("closeModal");
      }
    }
  });

  _exports.default = _default;
});
define("admin/controllers/modals/admin-delete-posts-confirmation", ["exports", "@ember/controller", "I18n", "discourse/mixins/modal-functionality", "@ember/object", "@ember/object/computed", "discourse-common/utils/decorators"], function (_exports, _controller, _I18n, _modalFunctionality, _object, _computed, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend(_modalFunctionality.default, (_dec = (0, _decorators.default)("username", "postCount"), _dec2 = (0, _decorators.default)("username"), _dec3 = (0, _decorators.default)("value", "text"), (_obj = {
    adminUserIndex: (0, _controller.inject)(),
    username: (0, _computed.alias)("model.username"),
    postCount: (0, _computed.alias)("model.post_count"),
    onShow: function onShow() {
      this.set("value", null);
    },
    text: function text(username, postCount) {
      return _I18n.default.t("admin.user.delete_posts.confirmation.text", {
        username: username,
        postCount: postCount
      });
    },
    deleteButtonText: function deleteButtonText(username) {
      return _I18n.default.t("admin.user.delete_posts.confirmation.delete", {
        username: username
      });
    },
    deleteDisabled: function deleteDisabled(value, text) {
      return !value || text !== value;
    },
    confirm: function confirm() {
      this.adminUserIndex.send("deleteAllPosts");
    },
    close: function close() {
      this.send("closeModal");
    }
  }, (_applyDecoratedDescriptor(_obj, "text", [_dec], Object.getOwnPropertyDescriptor(_obj, "text"), _obj), _applyDecoratedDescriptor(_obj, "deleteButtonText", [_dec2], Object.getOwnPropertyDescriptor(_obj, "deleteButtonText"), _obj), _applyDecoratedDescriptor(_obj, "deleteDisabled", [_dec3], Object.getOwnPropertyDescriptor(_obj, "deleteDisabled"), _obj), _applyDecoratedDescriptor(_obj, "confirm", [_object.action], Object.getOwnPropertyDescriptor(_obj, "confirm"), _obj), _applyDecoratedDescriptor(_obj, "close", [_object.action], Object.getOwnPropertyDescriptor(_obj, "close"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/modals/admin-delete-user-posts-progress", ["exports", "@ember/controller", "discourse/mixins/modal-functionality"], function (_exports, _controller, _modalFunctionality) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend(_modalFunctionality.default, {
    deletedPercentage: 0
  });

  _exports.default = _default;
});
define("admin/controllers/modals/admin-edit-badge-groupings", ["exports", "@ember/array", "@ember/controller", "I18n", "discourse/mixins/modal-functionality", "discourse/lib/ajax", "bootbox", "discourse-common/utils/decorators"], function (_exports, _array, _controller, _I18n, _modalFunctionality, _ajax, _bootbox, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend(_modalFunctionality.default, (_dec = (0, _decorators.observes)("model"), (_obj = {
    modelChanged: function modelChanged() {
      var model = this.model;
      var copy = (0, _array.A)();
      var store = this.store;

      if (model) {
        model.forEach(function (o) {
          return copy.pushObject(store.createRecord("badge-grouping", o));
        });
      }

      this.set("workingCopy", copy);
    },
    moveItem: function moveItem(item, delta) {
      var copy = this.workingCopy;
      var index = copy.indexOf(item);

      if (index + delta < 0 || index + delta >= copy.length) {
        return;
      }

      copy.removeAt(index);
      copy.insertAt(index + delta, item);
    },
    actions: {
      up: function up(item) {
        this.moveItem(item, -1);
      },
      down: function down(item) {
        this.moveItem(item, 1);
      },
      delete: function _delete(item) {
        this.workingCopy.removeObject(item);
      },
      cancel: function cancel() {
        this.setProperties({
          model: null,
          workingCopy: null
        });
        this.send("closeModal");
      },
      edit: function edit(item) {
        item.set("editing", true);
      },
      save: function save(item) {
        item.set("editing", false);
      },
      add: function add() {
        var obj = this.store.createRecord("badge-grouping", {
          editing: true,
          name: _I18n.default.t("admin.badges.badge_grouping")
        });
        this.workingCopy.pushObject(obj);
      },
      saveAll: function saveAll() {
        var _this = this;

        var items = this.workingCopy;
        var groupIds = items.map(function (i) {
          return i.get("id") || -1;
        });
        var names = items.map(function (i) {
          return i.get("name");
        });
        (0, _ajax.ajax)("/admin/badges/badge_groupings", {
          data: {
            ids: groupIds,
            names: names
          },
          type: "POST"
        }).then(function (data) {
          items = _this.model;
          items.clear();
          data.badge_groupings.forEach(function (g) {
            items.pushObject(_this.store.createRecord("badge-grouping", g));
          });

          _this.setProperties({
            model: null,
            workingCopy: null
          });

          _this.send("closeModal");
        }, function () {
          return _bootbox.default.alert(_I18n.default.t("generic_error"));
        });
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "modelChanged", [_dec], Object.getOwnPropertyDescriptor(_obj, "modelChanged"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/modals/admin-incoming-email", ["exports", "@ember/controller", "admin/models/incoming-email", "discourse/mixins/modal-functionality", "discourse-common/utils/decorators", "discourse/lib/formatter", "discourse/lib/ajax-error"], function (_exports, _controller, _incomingEmail, _modalFunctionality, _decorators, _formatter, _ajaxError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend(_modalFunctionality.default, (_dec = (0, _decorators.default)("model.date"), (_obj = {
    date: function date(d) {
      return (0, _formatter.longDate)(d);
    },
    load: function load(id) {
      var _this = this;

      return _incomingEmail.default.find(id).then(function (result) {
        return _this.set("model", result);
      });
    },
    loadFromBounced: function loadFromBounced(id) {
      var _this2 = this;

      return _incomingEmail.default.findByBounced(id).then(function (result) {
        return _this2.set("model", result);
      }).catch(function (error) {
        _this2.send("closeModal");

        (0, _ajaxError.popupAjaxError)(error);
      });
    }
  }, (_applyDecoratedDescriptor(_obj, "date", [_dec], Object.getOwnPropertyDescriptor(_obj, "date"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/modals/admin-install-theme", ["exports", "admin/models/theme", "@ember/controller", "@ember/object/computed", "discourse-common/utils/decorators", "I18n", "discourse/mixins/modal-functionality", "discourse-common/helpers/popular-themes", "discourse/lib/ajax", "discourse/lib/ajax-error", "@ember/object"], function (_exports, _theme, _controller, _computed, _decorators, _I18n, _modalFunctionality, _popularThemes, _ajax, _ajaxError, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var MIN_NAME_LENGTH = 4;

  var _default = _controller.default.extend(_modalFunctionality.default, (_dec = (0, _decorators.default)("themesController.installedThemes"), _dec2 = (0, _decorators.default)("loading", "remote", "uploadUrl", "local", "localFile", "create", "nameTooShort"), _dec3 = (0, _decorators.default)("privateChecked"), _dec4 = (0, _decorators.observes)("privateChecked"), _dec5 = (0, _decorators.default)("name"), _dec6 = (0, _decorators.default)("component"), _dec7 = (0, _decorators.default)("selection"), _dec8 = (0, _decorators.default)("privateChecked", "checkPrivate", "publicKey"), (_obj = {
    adminCustomizeThemes: (0, _controller.inject)(),
    themesController: (0, _controller.inject)("adminCustomizeThemes"),
    popular: (0, _computed.equal)("selection", "popular"),
    local: (0, _computed.equal)("selection", "local"),
    remote: (0, _computed.equal)("selection", "remote"),
    create: (0, _computed.equal)("selection", "create"),
    directRepoInstall: (0, _computed.equal)("selection", "directRepoInstall"),
    selection: "popular",
    loading: false,
    keyGenUrl: "/admin/themes/generate_key_pair",
    importUrl: "/admin/themes/import",
    recordType: "theme",
    checkPrivate: (0, _computed.match)("uploadUrl", /^ssh\:\/\/.*\@.*\.git$|.*\@.*\:.*\.git$/),
    localFile: null,
    uploadUrl: null,
    uploadName: null,
    advancedVisible: false,
    selectedType: (0, _computed.alias)("themesController.currentTab"),
    component: (0, _computed.equal)("selectedType", _theme.COMPONENTS),
    init: function init() {
      this._super.apply(this, arguments);

      this.createTypes = [{
        name: _I18n.default.t("admin.customize.theme.theme"),
        value: _theme.THEMES
      }, {
        name: _I18n.default.t("admin.customize.theme.component"),
        value: _theme.COMPONENTS
      }];
    },
    themes: function themes(installedThemes) {
      var _this = this;

      return _popularThemes.POPULAR_THEMES.map(function (t) {
        if (installedThemes.some(function (theme) {
          return _this.themeHasSameUrl(theme, t.value);
        })) {
          (0, _object.set)(t, "installed", true);
        }

        return t;
      });
    },
    installDisabled: function installDisabled(isLoading, isRemote, uploadUrl, isLocal, localFile, isCreate, nameTooShort) {
      return isLoading || isRemote && !uploadUrl || isLocal && !localFile || isCreate && nameTooShort;
    },
    urlPlaceholder: function urlPlaceholder(privateChecked) {
      return privateChecked ? "git@github.com:discourse/sample_theme.git" : "https://github.com/discourse/sample_theme";
    },
    privateWasChecked: function privateWasChecked() {
      var _this2 = this;

      var checked = this.privateChecked;

      if (checked && !this._keyLoading) {
        this._keyLoading = true;
        (0, _ajax.ajax)(this.keyGenUrl, {
          type: "POST"
        }).then(function (pair) {
          _this2.setProperties({
            privateKey: pair.private_key,
            publicKey: pair.public_key
          });
        }).catch(_ajaxError.popupAjaxError).finally(function () {
          _this2._keyLoading = false;
        });
      }
    },
    nameTooShort: function nameTooShort(name) {
      return !name || name.length < MIN_NAME_LENGTH;
    },
    placeholder: function placeholder(component) {
      if (component) {
        return _I18n.default.t("admin.customize.theme.component_name");
      } else {
        return _I18n.default.t("admin.customize.theme.theme_name");
      }
    },
    submitLabel: function submitLabel(selection) {
      return "admin.customize.theme.".concat(selection === "create" ? "create" : "install");
    },
    showPublicKey: function showPublicKey(privateChecked, checkPrivate, publicKey) {
      return privateChecked && checkPrivate && publicKey;
    },
    onClose: function onClose() {
      this.setProperties({
        duplicateRemoteThemeWarning: null,
        privateChecked: false,
        privateKey: null,
        localFile: null,
        uploadUrl: null,
        publicKey: null,
        branch: null,
        selection: "popular"
      });
    },
    themeHasSameUrl: function themeHasSameUrl(theme, url) {
      var themeUrl = theme.remote_theme && theme.remote_theme.remote_url;
      return themeUrl && url && url.replace(/\.git$/, "") === themeUrl.replace(/\.git$/, "");
    },
    actions: {
      uploadLocaleFile: function uploadLocaleFile() {
        this.set("localFile", $("#file-input")[0].files[0]);
      },
      toggleAdvanced: function toggleAdvanced() {
        this.toggleProperty("advancedVisible");
      },
      installThemeFromList: function installThemeFromList(url) {
        this.set("uploadUrl", url);
        this.send("installTheme");
      },
      installTheme: function installTheme() {
        var _this3 = this;

        if (this.create) {
          this.set("loading", true);
          var theme = this.store.createRecord(this.recordType);
          theme.save({
            name: this.name,
            component: this.component
          }).then(function () {
            _this3.themesController.send("addTheme", theme);

            _this3.send("closeModal");
          }).catch(_ajaxError.popupAjaxError).finally(function () {
            return _this3.set("loading", false);
          });
          return;
        }

        var options = {
          type: "POST"
        };

        if (this.local) {
          options.processData = false;
          options.contentType = false;
          options.data = new FormData();
          options.data.append("theme", this.localFile);
        }

        if (this.remote || this.popular || this.directRepoInstall) {
          var duplicate = this.themesController.model.content.find(function (theme) {
            return _this3.themeHasSameUrl(theme, _this3.uploadUrl);
          });

          if (duplicate && !this.duplicateRemoteThemeWarning) {
            var warning = _I18n.default.t("admin.customize.theme.duplicate_remote_theme", {
              name: duplicate.name
            });

            this.set("duplicateRemoteThemeWarning", warning);
            return;
          }

          options.data = {
            remote: this.uploadUrl,
            branch: this.branch
          };

          if (this.privateChecked) {
            options.data.private_key = this.privateKey;
          }
        }

        if (this.get("model.user_id")) {
          // Used by theme-creator
          options.data["user_id"] = this.get("model.user_id");
        }

        this.set("loading", true);
        (0, _ajax.ajax)(this.importUrl, options).then(function (result) {
          var theme = _this3.store.createRecord(_this3.recordType, result.theme);

          _this3.adminCustomizeThemes.send("addTheme", theme);

          _this3.send("closeModal");
        }).then(function () {
          _this3.setProperties({
            privateKey: null,
            publicKey: null
          });
        }).catch(_ajaxError.popupAjaxError).finally(function () {
          return _this3.set("loading", false);
        });
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "themes", [_dec], Object.getOwnPropertyDescriptor(_obj, "themes"), _obj), _applyDecoratedDescriptor(_obj, "installDisabled", [_dec2], Object.getOwnPropertyDescriptor(_obj, "installDisabled"), _obj), _applyDecoratedDescriptor(_obj, "urlPlaceholder", [_dec3], Object.getOwnPropertyDescriptor(_obj, "urlPlaceholder"), _obj), _applyDecoratedDescriptor(_obj, "privateWasChecked", [_dec4], Object.getOwnPropertyDescriptor(_obj, "privateWasChecked"), _obj), _applyDecoratedDescriptor(_obj, "nameTooShort", [_dec5], Object.getOwnPropertyDescriptor(_obj, "nameTooShort"), _obj), _applyDecoratedDescriptor(_obj, "placeholder", [_dec6], Object.getOwnPropertyDescriptor(_obj, "placeholder"), _obj), _applyDecoratedDescriptor(_obj, "submitLabel", [_dec7], Object.getOwnPropertyDescriptor(_obj, "submitLabel"), _obj), _applyDecoratedDescriptor(_obj, "showPublicKey", [_dec8], Object.getOwnPropertyDescriptor(_obj, "showPublicKey"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/modals/admin-merge-users-confirmation", ["exports", "@ember/controller", "I18n", "discourse/mixins/modal-functionality", "@ember/object", "@ember/object/computed", "discourse-common/utils/decorators"], function (_exports, _controller, _I18n, _modalFunctionality, _object, _computed, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend(_modalFunctionality.default, (_dec = (0, _decorators.default)("username", "targetUsername"), _dec2 = (0, _decorators.default)("username"), _dec3 = (0, _decorators.default)("value", "text"), (_obj = {
    adminUserIndex: (0, _controller.inject)(),
    username: (0, _computed.alias)("model.username"),
    targetUsername: (0, _computed.alias)("model.targetUsername"),
    onShow: function onShow() {
      this.set("value", null);
    },
    text: function text(username, targetUsername) {
      return _I18n.default.t("admin.user.merge.confirmation.text", {
        username: username,
        targetUsername: targetUsername
      });
    },
    mergeButtonText: function mergeButtonText(username) {
      return _I18n.default.t("admin.user.merge.confirmation.transfer_and_delete", {
        username: username
      });
    },
    mergeDisabled: function mergeDisabled(value, text) {
      return !value || text !== value;
    },
    confirm: function confirm() {
      this.adminUserIndex.send("merge", this.targetUsername);
      this.send("closeModal");
    },
    close: function close() {
      this.send("closeModal");
    }
  }, (_applyDecoratedDescriptor(_obj, "text", [_dec], Object.getOwnPropertyDescriptor(_obj, "text"), _obj), _applyDecoratedDescriptor(_obj, "mergeButtonText", [_dec2], Object.getOwnPropertyDescriptor(_obj, "mergeButtonText"), _obj), _applyDecoratedDescriptor(_obj, "mergeDisabled", [_dec3], Object.getOwnPropertyDescriptor(_obj, "mergeDisabled"), _obj), _applyDecoratedDescriptor(_obj, "confirm", [_object.action], Object.getOwnPropertyDescriptor(_obj, "confirm"), _obj), _applyDecoratedDescriptor(_obj, "close", [_object.action], Object.getOwnPropertyDescriptor(_obj, "close"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/modals/admin-merge-users-progress", ["exports", "@ember/controller", "discourse/lib/url", "I18n", "discourse/mixins/modal-functionality", "message-bus-client"], function (_exports, _controller, _url, _I18n, _modalFunctionality, _messageBusClient) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend(_modalFunctionality.default, {
    message: _I18n.default.t("admin.user.merging_user"),
    onShow: function onShow() {
      var _this = this;

      _messageBusClient.default.subscribe("/merge_user", function (data) {
        if (data.merged) {
          if (/^\/admin\/users\/list\//.test(location)) {
            _url.default.redirectTo(location);
          } else {
            _url.default.redirectTo("/admin/users/".concat(data.user.id, "/").concat(data.user.username));
          }
        } else if (data.message) {
          _this.set("message", data.message);
        } else if (data.failed) {
          _this.set("message", _I18n.default.t("admin.user.merge_failed"));
        }
      });
    },
    onClose: function onClose() {
      this.messageBus.unsubscribe("/merge_user");
    }
  });

  _exports.default = _default;
});
define("admin/controllers/modals/admin-merge-users-prompt", ["exports", "@ember/controller", "I18n", "discourse/mixins/modal-functionality", "@ember/object", "@ember/object/computed", "discourse-common/utils/decorators"], function (_exports, _controller, _I18n, _modalFunctionality, _object, _computed, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend(_modalFunctionality.default, (_dec = (0, _decorators.default)("username", "targetUsername"), _dec2 = (0, _decorators.default)("username"), (_obj = {
    adminUserIndex: (0, _controller.inject)(),
    username: (0, _computed.alias)("model.username"),
    onShow: function onShow() {
      this.set("targetUsername", null);
    },
    mergeDisabled: function mergeDisabled(username, targetUsername) {
      return !targetUsername || username === targetUsername;
    },
    mergeButtonText: function mergeButtonText(username) {
      return _I18n.default.t("admin.user.merge.confirmation.transfer_and_delete", {
        username: username
      });
    },
    showConfirmation: function showConfirmation() {
      this.send("closeModal");
      this.adminUserIndex.send("showMergeConfirmation", this.targetUsername);
    },
    close: function close() {
      this.send("closeModal");
    },
    updateUsername: function updateUsername(selected) {
      this.set("targetUsername", (0, _object.get)(selected, "firstObject"));
    }
  }, (_applyDecoratedDescriptor(_obj, "mergeDisabled", [_dec], Object.getOwnPropertyDescriptor(_obj, "mergeDisabled"), _obj), _applyDecoratedDescriptor(_obj, "mergeButtonText", [_dec2], Object.getOwnPropertyDescriptor(_obj, "mergeButtonText"), _obj), _applyDecoratedDescriptor(_obj, "showConfirmation", [_object.action], Object.getOwnPropertyDescriptor(_obj, "showConfirmation"), _obj), _applyDecoratedDescriptor(_obj, "close", [_object.action], Object.getOwnPropertyDescriptor(_obj, "close"), _obj), _applyDecoratedDescriptor(_obj, "updateUsername", [_object.action], Object.getOwnPropertyDescriptor(_obj, "updateUsername"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/modals/admin-reseed", ["exports", "@ember/controller", "I18n", "discourse/mixins/modal-functionality", "discourse/lib/ajax", "bootbox"], function (_exports, _controller, _I18n, _modalFunctionality, _ajax, _bootbox) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend(_modalFunctionality.default, {
    loading: true,
    reseeding: false,
    categories: null,
    topics: null,
    onShow: function onShow() {
      var _this = this;

      (0, _ajax.ajax)("/admin/customize/reseed").then(function (result) {
        _this.setProperties({
          categories: result.categories,
          topics: result.topics
        });
      }).finally(function () {
        return _this.set("loading", false);
      });
    },
    _extractSelectedIds: function _extractSelectedIds(items) {
      return items.filter(function (item) {
        return item.selected;
      }).map(function (item) {
        return item.id;
      });
    },
    actions: {
      reseed: function reseed() {
        var _this2 = this;

        this.set("reseeding", true);
        (0, _ajax.ajax)("/admin/customize/reseed", {
          data: {
            category_ids: this._extractSelectedIds(this.categories),
            topic_ids: this._extractSelectedIds(this.topics)
          },
          type: "POST"
        }).then(function () {
          return _this2.send("closeModal");
        }, function () {
          return _bootbox.default.alert(_I18n.default.t("generic_error"));
        }).finally(function () {
          return _this2.set("reseeding", false);
        });
      }
    }
  });

  _exports.default = _default;
});
define("admin/controllers/modals/admin-silence-user", ["exports", "@ember/controller", "admin/mixins/penalty-controller", "discourse-common/utils/decorators", "@ember/utils"], function (_exports, _controller, _penaltyController, _decorators, _utils) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend(_penaltyController.default, (_dec = (0, _decorators.default)("silenceUntil", "reason", "silencing"), (_obj = {
    silenceUntil: null,
    silencing: false,
    onShow: function onShow() {
      this.resetModal();
      this.setProperties({
        silenceUntil: null,
        silencing: false
      });
    },
    finishedSetup: function finishedSetup() {
      var _this$user;

      this.set("silenceUntil", (_this$user = this.user) === null || _this$user === void 0 ? void 0 : _this$user.next_penalty);
    },
    submitDisabled: function submitDisabled(silenceUntil, reason, silencing) {
      return silencing || (0, _utils.isEmpty)(silenceUntil) || !reason || reason.length < 1;
    },
    actions: {
      silence: function silence() {
        var _this = this;

        if (this.submitDisabled) {
          return;
        }

        this.set("silencing", true);
        this.penalize(function () {
          return _this.user.silence({
            silenced_till: _this.silenceUntil,
            reason: _this.reason,
            message: _this.message,
            post_id: _this.postId,
            post_action: _this.postAction,
            post_edit: _this.postEdit
          });
        }).finally(function () {
          return _this.set("silencing", false);
        });
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "submitDisabled", [_dec], Object.getOwnPropertyDescriptor(_obj, "submitDisabled"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/modals/admin-staff-action-log-details", ["exports", "@ember/controller", "discourse/mixins/modal-functionality"], function (_exports, _controller, _modalFunctionality) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend(_modalFunctionality.default);

  _exports.default = _default;
});
define("admin/controllers/modals/admin-start-backup", ["exports", "@ember/controller", "discourse/mixins/modal-functionality"], function (_exports, _controller, _modalFunctionality) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend(_modalFunctionality.default, {
    adminBackupsLogs: (0, _controller.inject)(),
    actions: {
      startBackupWithUploads: function startBackupWithUploads() {
        this.send("closeModal");
        this.send("startBackup", true);
      },
      startBackupWithoutUploads: function startBackupWithoutUploads() {
        this.send("closeModal");
        this.send("startBackup", false);
      },
      cancel: function cancel() {
        this.send("closeModal");
      }
    }
  });

  _exports.default = _default;
});
define("admin/controllers/modals/admin-suspend-user", ["exports", "@ember/controller", "admin/mixins/penalty-controller", "discourse-common/utils/decorators", "@ember/utils"], function (_exports, _controller, _penaltyController, _decorators, _utils) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend(_penaltyController.default, (_dec = (0, _decorators.default)("suspendUntil", "reason", "suspending"), (_obj = {
    suspendUntil: null,
    suspending: false,
    onShow: function onShow() {
      this.resetModal();
      this.setProperties({
        suspendUntil: null,
        suspending: false
      });
    },
    finishedSetup: function finishedSetup() {
      var _this$user;

      this.set("suspendUntil", (_this$user = this.user) === null || _this$user === void 0 ? void 0 : _this$user.next_penalty);
    },
    submitDisabled: function submitDisabled(suspendUntil, reason, suspending) {
      return suspending || (0, _utils.isEmpty)(suspendUntil) || !reason || reason.length < 1;
    },
    actions: {
      suspend: function suspend() {
        var _this = this;

        if (this.submitDisabled) {
          return;
        }

        this.set("suspending", true);
        this.penalize(function () {
          return _this.user.suspend({
            suspend_until: _this.suspendUntil,
            reason: _this.reason,
            message: _this.message,
            post_id: _this.postId,
            post_action: _this.postAction,
            post_edit: _this.postEdit
          });
        }).finally(function () {
          return _this.set("suspending", false);
        });
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "submitDisabled", [_dec], Object.getOwnPropertyDescriptor(_obj, "submitDisabled"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/modals/admin-theme-change", ["exports", "@ember/controller", "discourse/mixins/modal-functionality", "discourse/lib/ajax"], function (_exports, _controller, _modalFunctionality, _ajax) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend(_modalFunctionality.default, {
    loadDiff: function loadDiff() {
      var _this = this;

      this.set("loading", true);
      (0, _ajax.ajax)("/admin/logs/staff_action_logs/" + this.get("model.id") + "/diff").then(function (diff) {
        _this.set("loading", false);

        _this.set("diff", diff.side_by_side);
      });
    }
  });

  _exports.default = _default;
});
define("admin/controllers/modals/admin-uploaded-image-list", ["exports", "discourse-common/utils/decorators", "@ember/controller", "discourse/mixins/modal-functionality"], function (_exports, _decorators, _controller, _modalFunctionality) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend(_modalFunctionality.default, (_dec = (0, _decorators.on)("init"), _dec2 = (0, _decorators.observes)("model.value"), (_obj = {
    _setup: function _setup() {
      var value = this.get("model.value");
      this.set("images", value && value.length ? value.split("|") : []);
    },
    actions: {
      uploadDone: function uploadDone(_ref) {
        var url = _ref.url;
        this.images.addObject(url);
      },
      remove: function remove(url) {
        this.images.removeObject(url);
      },
      close: function close() {
        this.save(this.images.join("|"));
        this.send("closeModal");
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "_setup", [_dec, _dec2], Object.getOwnPropertyDescriptor(_obj, "_setup"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/modals/admin-watched-word-test", ["exports", "@ember/controller", "discourse/mixins/modal-functionality", "discourse-common/utils/decorators", "@ember/object/computed"], function (_exports, _controller, _modalFunctionality, _decorators, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _controller.default.extend(_modalFunctionality.default, (_dec = (0, _decorators.default)("value", "model.compiledRegularExpression", "model.words", "isReplace", "isTag", "isLink"), (_obj = {
    isReplace: (0, _computed.equal)("model.nameKey", "replace"),
    isTag: (0, _computed.equal)("model.nameKey", "tag"),
    isLink: (0, _computed.equal)("model.nameKey", "link"),
    matches: function matches(value, regexpString, words, isReplace, isTag, isLink) {
      if (!value || !regexpString) {
        return [];
      }

      if (isReplace || isLink) {
        var matches = [];
        words.forEach(function (word) {
          var regexp = new RegExp(word.regexp, "gi");
          var match;

          while ((match = regexp.exec(value)) !== null) {
            matches.push({
              match: match[1],
              replacement: word.replacement
            });
          }
        });
        return matches;
      } else if (isTag) {
        var _matches = {};
        words.forEach(function (word) {
          var regexp = new RegExp(word.regexp, "gi");
          var match;

          var _loop = function _loop() {
            if (!_matches[match[1]]) {
              _matches[match[1]] = new Set();
            }

            var tags = _matches[match[1]];
            word.replacement.split(",").forEach(function (tag) {
              tags.add(tag);
            });
          };

          while ((match = regexp.exec(value)) !== null) {
            _loop();
          }
        });
        return Object.entries(_matches).map(function (entry) {
          return {
            match: entry[0],
            tags: Array.from(entry[1])
          };
        });
      } else {
        return value.match(new RegExp(regexpString, "ig")) || [];
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "matches", [_dec], Object.getOwnPropertyDescriptor(_obj, "matches"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/controllers/modals/site-setting-default-categories", ["exports", "@ember/controller", "discourse/mixins/modal-functionality", "discourse/mixins/modal-update-existing-users"], function (_exports, _controller, _modalFunctionality, _modalUpdateExistingUsers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _controller.default.extend(_modalFunctionality.default, _modalUpdateExistingUsers.default);

  _exports.default = _default;
});
define("admin/helpers/check-icon", ["@ember/template", "discourse-common/lib/helpers", "discourse-common/lib/icon-library"], function (_template, _helpers, _iconLibrary) {
  "use strict";

  (0, _helpers.registerUnbound)("check-icon", function (value) {
    var icon = value ? "check" : "times";
    return (0, _template.htmlSafe)((0, _iconLibrary.renderIcon)("string", icon));
  });
});
define("admin/helpers/disposition-icon", ["exports", "@ember/component/helper", "discourse-common/lib/icon-library"], function (_exports, _helper, _iconLibrary) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

  function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

  var _default = _helper.default.extend({
    compute: function compute(_ref) {
      var _ref2 = _slicedToArray(_ref, 1),
          disposition = _ref2[0];

      if (!disposition) {
        return null;
      }

      var icon;
      var title = "admin.flags.dispositions." + disposition;

      switch (disposition) {
        case "deferred":
          {
            icon = "external-link-alt";
            break;
          }

        case "agreed":
          {
            icon = "thumbs-o-up";
            break;
          }

        case "disagreed":
          {
            icon = "thumbs-o-down";
            break;
          }
      }

      return (0, _iconLibrary.iconHTML)(icon, {
        title: title
      }).htmlSafe();
    }
  });

  _exports.default = _default;
});
define("admin/helpers/human-size", ["exports", "I18n", "discourse-common/lib/helpers"], function (_exports, _I18n, _helpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = (0, _helpers.htmlHelper)(function (size) {
    return _I18n.default.toHumanSize(size);
  });

  _exports.default = _default;
});
define("admin/helpers/post-action-title", ["exports", "@ember/component/helper", "I18n"], function (_exports, _helper, _I18n) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

  function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

  function postActionTitle(_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        id = _ref2[0],
        nameKey = _ref2[1];

    var title = _I18n.default.t("admin.flags.short_names.".concat(nameKey), {
      defaultValue: null
    }); // TODO: We can remove this once other translations have been updated


    if (!title) {
      return _I18n.default.t("admin.flags.summary.action_type_".concat(id), {
        count: 1
      });
    }

    return title;
  }

  var _default = _helper.default.helper(postActionTitle);

  _exports.default = _default;
});
define("admin/helpers/preserve-newlines", ["exports", "discourse/lib/utilities", "discourse-common/lib/helpers"], function (_exports, _utilities, _helpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = (0, _helpers.htmlHelper)(function (str) {
    return (0, _utilities.escapeExpression)(str).replace(/\n/g, "<br>");
  });

  _exports.default = _default;
});
define("admin/helpers/value-at-tl", ["discourse-common/lib/helpers"], function (_helpers) {
  "use strict";

  (0, _helpers.registerUnbound)("value-at-tl", function (data, params) {
    var tl = parseInt(params.level, 10);

    if (data) {
      var item = data.find(function (d) {
        return parseInt(d.x, 10) === tl;
      });

      if (item) {
        return item.y;
      } else {
        return 0;
      }
    }
  });
});
define("admin/mixins/penalty-controller", ["exports", "I18n", "@ember/object/mixin", "discourse/mixins/modal-functionality", "rsvp", "bootbox", "discourse/lib/ajax-error", "@ember/runloop"], function (_exports, _I18n, _mixin, _modalFunctionality, _rsvp, _bootbox, _ajaxError, _runloop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _mixin.default.create(_modalFunctionality.default, {
    errorMessage: null,
    reason: null,
    message: null,
    postEdit: null,
    postAction: null,
    user: null,
    postId: null,
    successCallback: null,
    confirmClose: false,
    resetModal: function resetModal() {
      this.setProperties({
        errorMessage: null,
        reason: null,
        message: null,
        loadingUser: true,
        postId: null,
        postEdit: null,
        postAction: "delete",
        before: null,
        successCallback: null,
        confirmClose: false
      });
    },
    beforeClose: function beforeClose() {
      var _this = this;

      // prompt a confirmation if we have unsaved content
      if (!this.confirmClose && (this.reason && this.reason.length > 1 || this.message && this.message.length > 1)) {
        this.send("hideModal");

        _bootbox.default.confirm(_I18n.default.t("admin.user.confirm_cancel_penalty"), function (result) {
          if (result) {
            (0, _runloop.next)(function () {
              _this.set("confirmClose", true);

              _this.send("closeModal");
            });
          } else {
            (0, _runloop.next)(function () {
              return _this.send("reopenModal");
            });
          }
        });

        return false;
      }
    },
    penalize: function penalize(cb) {
      var _this2 = this;

      var before = this.before;
      var promise = before ? before() : _rsvp.Promise.resolve();
      return promise.then(function () {
        return cb();
      }).then(function (result) {
        _this2.set("confirmClose", true);

        _this2.send("closeModal");

        var callback = _this2.successCallback;

        if (callback) {
          callback(result);
        }
      }).catch(function (error) {
        _this2.set("errorMessage", (0, _ajaxError.extractError)(error));
      });
    }
  });

  _exports.default = _default;
});
define("admin/mixins/period-computation", ["exports", "discourse/lib/url", "@ember/object/mixin", "discourse-common/utils/decorators"], function (_exports, _url, _mixin, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _mixin.default.create((_dec = (0, _decorators.default)("period"), _dec2 = (0, _decorators.default)(), _dec3 = (0, _decorators.default)(), _dec4 = (0, _decorators.default)(), _dec5 = (0, _decorators.default)(), (_obj = {
    queryParams: ["period"],
    period: "monthly",
    init: function init() {
      this._super.apply(this, arguments);

      this.availablePeriods = ["yearly", "quarterly", "monthly", "weekly"];
    },
    startDate: function startDate(period) {
      var fullDay = moment().locale("en").utc().endOf("day");

      switch (period) {
        case "yearly":
          return fullDay.subtract(1, "year").startOf("day");
          break;

        case "quarterly":
          return fullDay.subtract(3, "month").startOf("day");
          break;

        case "weekly":
          return fullDay.subtract(6, "days").startOf("day");
          break;

        case "monthly":
          return fullDay.subtract(1, "month").startOf("day");
          break;

        default:
          return fullDay.subtract(1, "month").startOf("day");
      }
    },
    lastWeek: function lastWeek() {
      return moment().locale("en").utc().endOf("day").subtract(1, "week");
    },
    lastMonth: function lastMonth() {
      return moment().locale("en").utc().startOf("day").subtract(1, "month");
    },
    endDate: function endDate() {
      return moment().locale("en").utc().endOf("day");
    },
    today: function today() {
      return moment().locale("en").utc().endOf("day");
    },
    actions: {
      changePeriod: function changePeriod(period) {
        _url.default.routeTo(this._reportsForPeriodURL(period));
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "startDate", [_dec], Object.getOwnPropertyDescriptor(_obj, "startDate"), _obj), _applyDecoratedDescriptor(_obj, "lastWeek", [_dec2], Object.getOwnPropertyDescriptor(_obj, "lastWeek"), _obj), _applyDecoratedDescriptor(_obj, "lastMonth", [_dec3], Object.getOwnPropertyDescriptor(_obj, "lastMonth"), _obj), _applyDecoratedDescriptor(_obj, "endDate", [_dec4], Object.getOwnPropertyDescriptor(_obj, "endDate"), _obj), _applyDecoratedDescriptor(_obj, "today", [_dec5], Object.getOwnPropertyDescriptor(_obj, "today"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/mixins/setting-component", ["exports", "@ember/utils", "discourse/lib/computed", "@ember/object/computed", "I18n", "@ember/object/mixin", "rsvp", "discourse/lib/ajax", "discourse/helpers/category-link", "discourse-common/utils/decorators", "@ember/template", "@ember/object/evented", "discourse/lib/show-modal", "@ember/debug", "@ember/object", "discourse/lib/utilities"], function (_exports, _utils, _computed, _computed2, _I18n, _mixin, _rsvp, _ajax, _categoryLink, _decorators, _template, _evented, _showModal, _debug, _object, _utilities) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var CUSTOM_TYPES = ["bool", "enum", "list", "url_list", "host_list", "category_list", "value_list", "category", "uploaded_image_list", "compact_list", "secret_list", "upload", "group_list", "tag_list", "color", "simple_list", "emoji_list"];
  var AUTO_REFRESH_ON_SAVE = ["logo", "logo_small", "large_icon"];

  var _default = _mixin.default.create((_dec = (0, _decorators.default)("buffered.value", "setting.value"), _dec2 = (0, _decorators.default)("setting", "buffered.value"), _dec3 = (0, _decorators.default)("componentType"), _dec4 = (0, _decorators.default)("setting.setting", "setting.label"), _dec5 = (0, _decorators.default)("type"), _dec6 = (0, _decorators.default)("setting"), _dec7 = (0, _decorators.default)("setting.anyValue"), _dec8 = (0, _decorators.default)("buffered.value"), _dec9 = (0, _decorators.default)("setting.defaultValues"), _dec10 = (0, _decorators.default)("defaultValues", "bufferedValues"), (_obj = {
    classNameBindings: [":row", ":setting", "overridden", "typeClass"],
    content: (0, _computed2.alias)("setting"),
    validationMessage: null,
    isSecret: (0, _computed2.oneWay)("setting.secret"),
    setting: null,
    dirty: function dirty(bufferVal, settingVal) {
      if ((0, _utils.isNone)(bufferVal)) {
        bufferVal = "";
      }

      if ((0, _utils.isNone)(settingVal)) {
        settingVal = "";
      }

      return bufferVal.toString() !== settingVal.toString();
    },
    preview: function preview(setting, value) {
      // A bit hacky, but allows us to use helpers
      if (setting.setting === "category_style") {
        var category = this.site.get("categories.firstObject");

        if (category) {
          return (0, _categoryLink.categoryLinkHTML)(category, {
            categoryStyle: value
          });
        }
      }

      var preview = setting.preview;

      if (preview) {
        var escapedValue = preview.replace(/\{\{value\}\}/g, value);
        return (0, _template.htmlSafe)("<div class='preview'>".concat(escapedValue, "</div>"));
      }
    },
    typeClass: function typeClass(componentType) {
      return componentType.replace(/\_/g, "-");
    },
    settingName: function settingName(setting, label) {
      return label || setting.replace(/\_/g, " ");
    },
    componentType: function componentType(type) {
      return CUSTOM_TYPES.indexOf(type) !== -1 ? type : "string";
    },
    type: function type(setting) {
      if (setting.type === "list" && setting.list_type) {
        return "".concat(setting.list_type, "_list");
      }

      return setting.type;
    },
    componentName: (0, _computed.fmt)("typeClass", "site-settings/%@"),
    allowAny: function allowAny(anyValue) {
      return anyValue !== false;
    },
    overridden: (0, _computed.propertyNotEqual)("setting.default", "buffered.value"),
    bufferedValues: function bufferedValues(value) {
      return (0, _utilities.splitString)(value, "|");
    },
    defaultValues: function defaultValues(value) {
      return (0, _utilities.splitString)(value, "|");
    },
    defaultIsAvailable: function defaultIsAvailable(defaultValues, bufferedValues) {
      return defaultValues.length > 0 && !defaultValues.every(function (value) {
        return bufferedValues.includes(value);
      });
    },
    update: function update() {
      var _this = this;

      var defaultUserPreferences = ["default_email_digest_frequency", "default_include_tl0_in_digests", "default_email_level", "default_email_messages_level", "default_email_mailing_list_mode", "default_email_mailing_list_mode_frequency", "default_email_previous_replies", "default_email_in_reply_to", "default_other_new_topic_duration_minutes", "default_other_auto_track_topics_after_msecs", "default_other_notification_level_when_replying", "default_other_external_links_in_new_tab", "default_other_enable_quoting", "default_other_enable_defer", "default_other_dynamic_favicon", "default_other_like_notification_frequency", "default_other_skip_new_user_tips", "default_topics_automatic_unpin", "default_categories_watching", "default_categories_tracking", "default_categories_muted", "default_categories_watching_first_post", "default_categories_regular", "default_tags_watching", "default_tags_tracking", "default_tags_muted", "default_tags_watching_first_post", "default_text_size", "default_title_count_mode"];
      var key = this.buffered.get("setting");

      if (defaultUserPreferences.includes(key)) {
        var data = {};
        data[key] = this.buffered.get("value");
        (0, _ajax.ajax)("/admin/site_settings/".concat(key, "/user_count.json"), {
          type: "PUT",
          data: data
        }).then(function (result) {
          var count = result.user_count;

          if (count > 0) {
            var controller = (0, _showModal.default)("site-setting-default-categories", {
              model: {
                count: count,
                key: key.replaceAll("_", " ")
              },
              admin: true
            });
            controller.set("onClose", function () {
              _this.updateExistingUsers = controller.updateExistingUsers;

              _this.save();
            });
          } else {
            _this.save();
          }
        });
      } else {
        this.save();
      }
    },
    save: function save() {
      var _this2 = this;

      this._save().then(function () {
        _this2.set("validationMessage", null);

        _this2.commitBuffer();

        if (AUTO_REFRESH_ON_SAVE.includes(_this2.setting.setting)) {
          _this2.afterSave();
        }
      }).catch(function (e) {
        var _e$jqXHR, _e$jqXHR$responseJSON;

        if ((_e$jqXHR = e.jqXHR) === null || _e$jqXHR === void 0 ? void 0 : (_e$jqXHR$responseJSON = _e$jqXHR.responseJSON) === null || _e$jqXHR$responseJSON === void 0 ? void 0 : _e$jqXHR$responseJSON.errors) {
          _this2.set("validationMessage", e.jqXHR.responseJSON.errors[0]);
        } else {
          _this2.set("validationMessage", _I18n.default.t("generic_error"));
        }
      });
    },
    cancel: function cancel() {
      this.rollbackBuffer();
    },
    resetDefault: function resetDefault() {
      this.set("buffered.value", this.get("setting.default"));
    },
    toggleSecret: function toggleSecret() {
      this.toggleProperty("isSecret");
    },
    setDefaultValues: function setDefaultValues() {
      this.set("buffered.value", this.bufferedValues.concat(this.defaultValues).uniq().join("|"));
      return false;
    },
    _handleKeydown: function _handleKeydown(event) {
      if (event.key === "Enter" && event.target.classList.contains("input-setting-string")) {
        this.save();
      }
    },
    _watchEnterKey: (0, _evented.on)("didInsertElement", function () {
      this.element.addEventListener("keydown", this._handleKeydown);
    }),
    _removeBindings: (0, _evented.on)("willDestroyElement", function () {
      this.element.removeEventListener("keydown", this._handleKeydown);
    }),
    _save: function _save() {
      (0, _debug.warn)("You should define a `_save` method", {
        id: "discourse.setting-component.missing-save"
      });
      return _rsvp.Promise.resolve();
    }
  }, (_applyDecoratedDescriptor(_obj, "dirty", [_dec], Object.getOwnPropertyDescriptor(_obj, "dirty"), _obj), _applyDecoratedDescriptor(_obj, "preview", [_dec2], Object.getOwnPropertyDescriptor(_obj, "preview"), _obj), _applyDecoratedDescriptor(_obj, "typeClass", [_dec3], Object.getOwnPropertyDescriptor(_obj, "typeClass"), _obj), _applyDecoratedDescriptor(_obj, "settingName", [_dec4], Object.getOwnPropertyDescriptor(_obj, "settingName"), _obj), _applyDecoratedDescriptor(_obj, "componentType", [_dec5], Object.getOwnPropertyDescriptor(_obj, "componentType"), _obj), _applyDecoratedDescriptor(_obj, "type", [_dec6], Object.getOwnPropertyDescriptor(_obj, "type"), _obj), _applyDecoratedDescriptor(_obj, "allowAny", [_dec7], Object.getOwnPropertyDescriptor(_obj, "allowAny"), _obj), _applyDecoratedDescriptor(_obj, "bufferedValues", [_dec8], Object.getOwnPropertyDescriptor(_obj, "bufferedValues"), _obj), _applyDecoratedDescriptor(_obj, "defaultValues", [_dec9], Object.getOwnPropertyDescriptor(_obj, "defaultValues"), _obj), _applyDecoratedDescriptor(_obj, "defaultIsAvailable", [_dec10], Object.getOwnPropertyDescriptor(_obj, "defaultIsAvailable"), _obj), _applyDecoratedDescriptor(_obj, "update", [_object.action], Object.getOwnPropertyDescriptor(_obj, "update"), _obj), _applyDecoratedDescriptor(_obj, "save", [_object.action], Object.getOwnPropertyDescriptor(_obj, "save"), _obj), _applyDecoratedDescriptor(_obj, "cancel", [_object.action], Object.getOwnPropertyDescriptor(_obj, "cancel"), _obj), _applyDecoratedDescriptor(_obj, "resetDefault", [_object.action], Object.getOwnPropertyDescriptor(_obj, "resetDefault"), _obj), _applyDecoratedDescriptor(_obj, "toggleSecret", [_object.action], Object.getOwnPropertyDescriptor(_obj, "toggleSecret"), _obj), _applyDecoratedDescriptor(_obj, "setDefaultValues", [_object.action], Object.getOwnPropertyDescriptor(_obj, "setDefaultValues"), _obj), _applyDecoratedDescriptor(_obj, "_handleKeydown", [_decorators.bind], Object.getOwnPropertyDescriptor(_obj, "_handleKeydown"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/mixins/setting-object", ["exports", "I18n", "@ember/object/mixin", "@ember/object", "discourse-common/utils/decorators", "@ember/utils"], function (_exports, _I18n, _mixin, _object, _decorators, _utils) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _mixin.default.create((_dec = (0, _decorators.default)("value", "default"), _dec2 = (0, _decorators.default)("valid_values"), _dec3 = (0, _decorators.default)("valid_values"), (_obj = {
    overridden: function overridden(val, defaultVal) {
      if (val === null) {
        val = "";
      }

      if (defaultVal === null) {
        defaultVal = "";
      }

      return val.toString() !== defaultVal.toString();
    },
    computedValueProperty: (0, _object.computed)("valueProperty", "validValues.[]", function () {
      if ((0, _utils.isPresent)(this.valueProperty)) {
        return this.valueProperty;
      }

      if ((0, _utils.isPresent)(this.validValues.get("firstObject.value"))) {
        return "value";
      } else {
        return null;
      }
    }),
    computedNameProperty: (0, _object.computed)("nameProperty", "validValues.[]", function () {
      if ((0, _utils.isPresent)(this.nameProperty)) {
        return this.nameProperty;
      }

      if ((0, _utils.isPresent)(this.validValues.get("firstObject.name"))) {
        return "name";
      } else {
        return null;
      }
    }),
    validValues: function validValues(_validValues) {
      var vals = [],
          translateNames = this.translate_names;

      (_validValues || []).forEach(function (v) {
        if (v.name && v.name.length > 0 && translateNames) {
          vals.addObject({
            name: _I18n.default.t(v.name),
            value: v.value
          });
        } else {
          vals.addObject(v);
        }
      });

      return vals;
    },
    allowsNone: function allowsNone(validValues) {
      if (validValues && validValues.indexOf("") >= 0) {
        return "admin.settings.none";
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "overridden", [_dec], Object.getOwnPropertyDescriptor(_obj, "overridden"), _obj), _applyDecoratedDescriptor(_obj, "validValues", [_dec2], Object.getOwnPropertyDescriptor(_obj, "validValues"), _obj), _applyDecoratedDescriptor(_obj, "allowsNone", [_dec3], Object.getOwnPropertyDescriptor(_obj, "allowsNone"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/models/admin-dashboard", ["exports", "@ember/object", "discourse/lib/ajax"], function (_exports, _object, _ajax) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var GENERAL_ATTRIBUTES = ["updated_at", "discourse_updated_at", "release_notes_link"];

  var AdminDashboard = _object.default.extend({});

  AdminDashboard.reopenClass({
    fetch: function fetch() {
      return (0, _ajax.ajax)("/admin/dashboard.json").then(function (json) {
        var model = AdminDashboard.create();
        model.set("version_check", json.version_check);
        return model;
      });
    },
    fetchGeneral: function fetchGeneral() {
      return (0, _ajax.ajax)("/admin/dashboard/general.json").then(function (json) {
        var model = AdminDashboard.create();
        var attributes = {};
        GENERAL_ATTRIBUTES.forEach(function (a) {
          return attributes[a] = json[a];
        });
        model.setProperties({
          reports: json.reports,
          attributes: attributes,
          loaded: true
        });
        return model;
      });
    },
    fetchProblems: function fetchProblems() {
      return (0, _ajax.ajax)("/admin/dashboard/problems.json").then(function (json) {
        var model = AdminDashboard.create(json);
        model.set("loaded", true);
        return model;
      });
    }
  });
  var _default = AdminDashboard;
  _exports.default = _default;
});
define("admin/models/admin-user", ["exports", "@ember/object/computed", "discourse/models/group", "I18n", "rsvp", "discourse/models/user", "discourse/lib/ajax", "discourse-common/utils/decorators", "discourse-common/lib/get-url", "discourse/lib/ajax-error", "discourse/lib/computed", "discourse/lib/url"], function (_exports, _computed, _group, _I18n, _rsvp, _user, _ajax, _decorators, _getUrl, _ajaxError, _computed2, _url) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _obj, _init, _init2, _init3;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var wrapAdmin = function wrapAdmin(user) {
    return user ? AdminUser.create(user) : null;
  };

  var AdminUser = _user.default.extend((_dec = (0, _decorators.default)("bounce_score", "reset_bounce_score_after"), _dec2 = (0, _decorators.default)("bounce_score"), _dec3 = (0, _decorators.default)("suspended_till", "suspended_at"), _dec4 = (0, _decorators.default)("tl3_requirements"), _dec5 = (0, _decorators.default)("suspended_by"), _dec6 = (0, _decorators.default)("silenced_by"), _dec7 = (0, _decorators.default)("approved_by"), (_obj = {
    adminUserView: true,
    customGroups: (0, _computed.filter)("groups", function (g) {
      return !g.automatic && _group.default.create(g);
    }),
    automaticGroups: (0, _computed.filter)("groups", function (g) {
      return g.automatic && _group.default.create(g);
    }),
    canViewProfile: (0, _computed.or)("active", "staged"),
    bounceScore: function bounceScore(bounce_score, reset_bounce_score_after) {
      if (bounce_score > 0) {
        return "".concat(bounce_score, " - ").concat(moment(reset_bounce_score_after).format("LL"));
      } else {
        return bounce_score;
      }
    },
    bounceScoreExplanation: function bounceScoreExplanation(bounce_score) {
      if (bounce_score === 0) {
        return _I18n.default.t("admin.user.bounce_score_explanation.none");
      } else if (bounce_score < this.siteSettings.bounce_score_threshold) {
        return _I18n.default.t("admin.user.bounce_score_explanation.some");
      } else {
        return _I18n.default.t("admin.user.bounce_score_explanation.threshold_reached");
      }
    },
    bounceLink: function bounceLink() {
      return (0, _getUrl.default)("/admin/email/bounced");
    },
    canResetBounceScore: (0, _computed.gt)("bounce_score", 0),
    resetBounceScore: function resetBounceScore() {
      var _this = this;

      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/reset_bounce_score"), {
        type: "POST"
      }).then(function () {
        return _this.setProperties({
          bounce_score: 0,
          reset_bounce_score_after: null
        });
      });
    },
    groupAdded: function groupAdded(added) {
      var _this2 = this;

      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/groups"), {
        type: "POST",
        data: {
          group_id: added.id
        }
      }).then(function () {
        return _this2.groups.pushObject(added);
      });
    },
    groupRemoved: function groupRemoved(groupId) {
      var _this3 = this;

      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/groups/").concat(groupId), {
        type: "DELETE"
      }).then(function () {
        _this3.set("groups.[]", _this3.groups.rejectBy("id", groupId));

        if (_this3.primary_group_id === groupId) {
          _this3.set("primary_group_id", null);
        }
      });
    },
    deleteAllPosts: function deleteAllPosts() {
      return (0, _ajax.ajax)("/admin/users/".concat(this.get("id"), "/delete_posts_batch"), {
        type: "PUT"
      });
    },
    revokeAdmin: function revokeAdmin() {
      var _this4 = this;

      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/revoke_admin"), {
        type: "PUT"
      }).then(function (resp) {
        _this4.setProperties({
          admin: false,
          can_grant_admin: true,
          can_revoke_admin: false,
          can_be_merged: resp.can_be_merged,
          can_be_anonymized: resp.can_be_anonymized,
          can_be_deleted: resp.can_be_deleted,
          can_delete_all_posts: resp.can_delete_all_posts
        });
      });
    },
    grantAdmin: function grantAdmin(data) {
      var _this5 = this;

      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/grant_admin"), {
        type: "PUT",
        data: data
      }).then(function (resp) {
        if (resp.success && !resp.email_confirmation_required) {
          _this5.setProperties({
            admin: true,
            can_grant_admin: false,
            can_revoke_admin: true
          });
        }

        return resp;
      });
    },
    revokeModeration: function revokeModeration() {
      var _this6 = this;

      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/revoke_moderation"), {
        type: "PUT"
      }).then(function (resp) {
        _this6.setProperties({
          moderator: false,
          can_grant_moderation: true,
          can_revoke_moderation: false,
          can_be_merged: resp.can_be_merged,
          can_be_anonymized: resp.can_be_anonymized
        });
      }).catch(_ajaxError.popupAjaxError);
    },
    grantModeration: function grantModeration() {
      var _this7 = this;

      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/grant_moderation"), {
        type: "PUT"
      }).then(function (resp) {
        _this7.setProperties({
          moderator: true,
          can_grant_moderation: false,
          can_revoke_moderation: true,
          can_be_merged: resp.can_be_merged,
          can_be_anonymized: resp.can_be_anonymized
        });
      }).catch(_ajaxError.popupAjaxError);
    },
    disableSecondFactor: function disableSecondFactor() {
      var _this8 = this;

      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/disable_second_factor"), {
        type: "PUT"
      }).then(function () {
        _this8.set("second_factor_enabled", false);
      }).catch(_ajaxError.popupAjaxError);
    },
    approve: function approve(approvedBy) {
      var _this9 = this;

      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/approve"), {
        type: "PUT"
      }).then(function () {
        _this9.setProperties({
          can_approve: false,
          approved: true,
          approved_by: approvedBy
        });
      });
    },
    setOriginalTrustLevel: function setOriginalTrustLevel() {
      this.set("originalTrustLevel", this.trust_level);
    },
    dirty: (0, _computed2.propertyNotEqual)("originalTrustLevel", "trust_level"),
    saveTrustLevel: function saveTrustLevel() {
      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/trust_level"), {
        type: "PUT",
        data: {
          level: this.trust_level
        }
      });
    },
    restoreTrustLevel: function restoreTrustLevel() {
      this.set("trust_level", this.originalTrustLevel);
    },
    lockTrustLevel: function lockTrustLevel(locked) {
      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/trust_level_lock"), {
        type: "PUT",
        data: {
          locked: !!locked
        }
      });
    },
    canLockTrustLevel: (0, _computed.lt)("trust_level", 4),
    canSuspend: (0, _computed.not)("staff"),
    suspendDuration: function suspendDuration(suspendedTill, suspendedAt) {
      suspendedAt = moment(suspendedAt);
      suspendedTill = moment(suspendedTill);
      return suspendedAt.format("L") + " - " + suspendedTill.format("L");
    },
    suspend: function suspend(data) {
      var _this10 = this;

      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/suspend"), {
        type: "PUT",
        data: data
      }).then(function (result) {
        return _this10.setProperties(result.suspension);
      });
    },
    unsuspend: function unsuspend() {
      var _this11 = this;

      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/unsuspend"), {
        type: "PUT"
      }).then(function (result) {
        return _this11.setProperties(result.suspension);
      });
    },
    logOut: function logOut() {
      return (0, _ajax.ajax)("/admin/users/" + this.id + "/log_out", {
        type: "POST",
        data: {
          username_or_email: this.username
        }
      });
    },
    impersonate: function impersonate() {
      return (0, _ajax.ajax)("/admin/impersonate", {
        type: "POST",
        data: {
          username_or_email: this.username
        }
      });
    },
    activate: function activate() {
      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/activate"), {
        type: "PUT"
      });
    },
    deactivate: function deactivate() {
      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/deactivate"), {
        type: "PUT",
        data: {
          context: document.location.pathname
        }
      });
    },
    unsilence: function unsilence() {
      var _this12 = this;

      this.set("silencingUser", true);
      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/unsilence"), {
        type: "PUT"
      }).then(function (result) {
        return _this12.setProperties(result.unsilence);
      }).finally(function () {
        return _this12.set("silencingUser", false);
      });
    },
    silence: function silence(data) {
      var _this13 = this;

      this.set("silencingUser", true);
      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/silence"), {
        type: "PUT",
        data: data
      }).then(function (result) {
        return _this13.setProperties(result.silence);
      }).finally(function () {
        return _this13.set("silencingUser", false);
      });
    },
    sendActivationEmail: function sendActivationEmail() {
      return (0, _ajax.ajax)((0, _url.userPath)("action/send_activation_email"), {
        type: "POST",
        data: {
          username: this.username
        }
      });
    },
    anonymize: function anonymize() {
      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/anonymize.json"), {
        type: "PUT"
      });
    },
    destroy: function destroy(formData) {
      var _this14 = this;

      return (0, _ajax.ajax)("/admin/users/".concat(this.id, ".json"), {
        type: "DELETE",
        data: formData
      }).then(function (data) {
        if (!data.deleted && data.user) {
          _this14.setProperties(data.user);
        }

        return data;
      }).catch(function () {
        _this14.find(_this14.id).then(function (u) {
          return _this14.setProperties(u);
        });
      });
    },
    merge: function merge(formData) {
      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/merge.json"), {
        type: "POST",
        data: formData
      });
    },
    loadDetails: function loadDetails() {
      var _this15 = this;

      if (this.loadedDetails) {
        return _rsvp.Promise.resolve(this);
      }

      return AdminUser.find(this.id).then(function (result) {
        var userProperties = Object.assign(result, {
          loadedDetails: true
        });

        _this15.setProperties(userProperties);
      });
    },
    tl3Requirements: function tl3Requirements(requirements) {
      if (requirements) {
        return this.store.createRecord("tl3Requirements", requirements);
      }
    },
    suspendedBy: wrapAdmin,
    silencedBy: wrapAdmin,
    approvedBy: wrapAdmin,
    deleteSSORecord: function deleteSSORecord() {
      var _this16 = this;

      return (0, _ajax.ajax)("/admin/users/".concat(this.id, "/sso_record.json"), {
        type: "DELETE"
      }).then(function () {
        _this16.set("single_sign_on_record", null);
      }).catch(_ajaxError.popupAjaxError);
    }
  }, (_applyDecoratedDescriptor(_obj, "bounceScore", [_dec], Object.getOwnPropertyDescriptor(_obj, "bounceScore"), _obj), _applyDecoratedDescriptor(_obj, "bounceScoreExplanation", [_dec2], Object.getOwnPropertyDescriptor(_obj, "bounceScoreExplanation"), _obj), _applyDecoratedDescriptor(_obj, "bounceLink", [_decorators.default], Object.getOwnPropertyDescriptor(_obj, "bounceLink"), _obj), _applyDecoratedDescriptor(_obj, "suspendDuration", [_dec3], Object.getOwnPropertyDescriptor(_obj, "suspendDuration"), _obj), _applyDecoratedDescriptor(_obj, "tl3Requirements", [_dec4], Object.getOwnPropertyDescriptor(_obj, "tl3Requirements"), _obj), _applyDecoratedDescriptor(_obj, "suspendedBy", [_dec5], (_init = Object.getOwnPropertyDescriptor(_obj, "suspendedBy"), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
      return _init;
    }
  }), _obj), _applyDecoratedDescriptor(_obj, "silencedBy", [_dec6], (_init2 = Object.getOwnPropertyDescriptor(_obj, "silencedBy"), _init2 = _init2 ? _init2.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
      return _init2;
    }
  }), _obj), _applyDecoratedDescriptor(_obj, "approvedBy", [_dec7], (_init3 = Object.getOwnPropertyDescriptor(_obj, "approvedBy"), _init3 = _init3 ? _init3.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
      return _init3;
    }
  }), _obj)), _obj)));

  AdminUser.reopenClass({
    find: function find(user_id) {
      return (0, _ajax.ajax)("/admin/users/".concat(user_id, ".json")).then(function (result) {
        result.loadedDetails = true;
        return AdminUser.create(result);
      });
    },
    findAll: function findAll(query, userFilter) {
      return (0, _ajax.ajax)("/admin/users/list/".concat(query, ".json"), {
        data: userFilter
      }).then(function (users) {
        return users.map(function (u) {
          return AdminUser.create(u);
        });
      });
    }
  });
  var _default = AdminUser;
  _exports.default = _default;
});
define("admin/models/api-key", ["exports", "admin/models/admin-user", "discourse/models/rest", "discourse/lib/ajax", "@ember/object", "discourse-common/utils/decorators", "discourse/lib/computed"], function (_exports, _adminUser, _rest, _ajax, _object, _decorators, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var ApiKey = _rest.default.extend((_dec = (0, _decorators.default)("description"), _dec2 = (0, _decorators.default)(), (_obj = {
    user: (0, _object.computed)("_user", {
      get: function get() {
        return this._user;
      },
      set: function set(key, value) {
        if (value && !_instanceof(value, _adminUser.default)) {
          this.set("_user", _adminUser.default.create(value));
        } else {
          this.set("_user", value);
        }

        return this._user;
      }
    }),
    shortDescription: function shortDescription(description) {
      if (!description || description.length < 40) {
        return description;
      }

      return "".concat(description.substring(0, 40), "...");
    },
    truncatedKey: (0, _computed.fmt)("truncated_key", "%@..."),
    revoke: function revoke() {
      var _this = this;

      return (0, _ajax.ajax)("".concat(this.basePath, "/revoke"), {
        type: "POST"
      }).then(function (result) {
        return _this.setProperties(result.api_key);
      });
    },
    undoRevoke: function undoRevoke() {
      var _this2 = this;

      return (0, _ajax.ajax)("".concat(this.basePath, "/undo-revoke"), {
        type: "POST"
      }).then(function (result) {
        return _this2.setProperties(result.api_key);
      });
    },
    createProperties: function createProperties() {
      return this.getProperties("description", "username", "scopes");
    },
    basePath: function basePath() {
      return this.store.adapterFor("api-key").pathFor(this.store, "api-key", this.id);
    }
  }, (_applyDecoratedDescriptor(_obj, "shortDescription", [_dec], Object.getOwnPropertyDescriptor(_obj, "shortDescription"), _obj), _applyDecoratedDescriptor(_obj, "basePath", [_dec2], Object.getOwnPropertyDescriptor(_obj, "basePath"), _obj)), _obj)));

  var _default = ApiKey;
  _exports.default = _default;
});
define("admin/models/backup-status", ["exports", "@ember/object", "discourse-common/utils/decorators", "@ember/object/computed"], function (_exports, _object, _decorators, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _object.default.extend((_dec = (0, _decorators.default)("allowRestore", "isOperationRunning"), (_obj = {
    restoreDisabled: (0, _computed.not)("restoreEnabled"),
    restoreEnabled: function restoreEnabled(allowRestore, isOperationRunning) {
      return allowRestore && !isOperationRunning;
    }
  }, (_applyDecoratedDescriptor(_obj, "restoreEnabled", [_dec], Object.getOwnPropertyDescriptor(_obj, "restoreEnabled"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/models/backup", ["exports", "@ember/object", "message-bus-client", "discourse/lib/ajax"], function (_exports, _object, _messageBusClient, _ajax) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var Backup = _object.default.extend({
    destroy: function destroy() {
      return (0, _ajax.ajax)("/admin/backups/" + this.filename, {
        type: "DELETE"
      });
    },
    restore: function restore() {
      return (0, _ajax.ajax)("/admin/backups/" + this.filename + "/restore", {
        type: "POST",
        data: {
          client_id: _messageBusClient.default.clientId
        }
      });
    }
  });

  Backup.reopenClass({
    find: function find() {
      return (0, _ajax.ajax)("/admin/backups.json");
    },
    start: function start(withUploads) {
      if (withUploads === undefined) {
        withUploads = true;
      }

      return (0, _ajax.ajax)("/admin/backups", {
        type: "POST",
        data: {
          with_uploads: withUploads,
          client_id: _messageBusClient.default.clientId
        }
      });
    },
    cancel: function cancel() {
      return (0, _ajax.ajax)("/admin/backups/cancel.json", {
        type: "DELETE"
      });
    },
    rollback: function rollback() {
      return (0, _ajax.ajax)("/admin/backups/rollback.json", {
        type: "POST"
      });
    }
  });
  var _default = Backup;
  _exports.default = _default;
});
define("admin/models/color-scheme-color", ["exports", "discourse-common/utils/decorators", "@ember/object", "I18n", "discourse/lib/computed"], function (_exports, _decorators, _object, _I18n, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var ColorSchemeColor = _object.default.extend((_dec = (0, _decorators.on)("init"), _dec2 = (0, _decorators.default)("hex"), _dec3 = (0, _decorators.default)("default_hex", "hex"), _dec4 = (0, _decorators.default)("name"), _dec5 = (0, _decorators.default)("name"), _dec6 = (0, _decorators.default)("hex"), _dec7 = (0, _decorators.observes)("hex"), _dec8 = (0, _decorators.default)("hex"), (_obj = {
    startTrackingChanges: function startTrackingChanges() {
      this.set("originals", {
        hex: this.hex || "FFFFFF"
      }); // force changed property to be recalculated

      this.notifyPropertyChange("hex");
    },
    changed: function changed(hex) {
      if (!this.originals) {
        return false;
      }

      if (hex !== this.originals.hex) {
        return true;
      }

      return false;
    },
    // Whether the current value is different than Discourse's default color scheme.
    overridden: (0, _computed.propertyNotEqual)("hex", "default_hex"),
    savedIsOverriden: function savedIsOverriden(defaultHex) {
      return this.originals.hex !== defaultHex;
    },
    revert: function revert() {
      this.set("hex", this.default_hex);
    },
    undo: function undo() {
      if (this.originals) {
        this.set("hex", this.originals.hex);
      }
    },
    translatedName: function translatedName(name) {
      if (!this.is_advanced) {
        return _I18n.default.t("admin.customize.colors.".concat(name, ".name"));
      } else {
        return name;
      }
    },
    description: function description(name) {
      if (!this.is_advanced) {
        return _I18n.default.t("admin.customize.colors.".concat(name, ".description"));
      } else {
        return "";
      }
    },
    brightness: function brightness(hex) {
      if (hex.length === 6 || hex.length === 3) {
        if (hex.length === 3) {
          hex = hex.substr(0, 1) + hex.substr(0, 1) + hex.substr(1, 1) + hex.substr(1, 1) + hex.substr(2, 1) + hex.substr(2, 1);
        }

        return Math.round((parseInt(hex.substr(0, 2), 16) * 299 + parseInt(hex.substr(2, 2), 16) * 587 + parseInt(hex.substr(4, 2), 16) * 114) / 1000);
      }
    },
    hexValueChanged: function hexValueChanged() {
      if (this.hex) {
        this.set("hex", this.hex.toString().replace(/[^0-9a-fA-F]/g, ""));
      }
    },
    valid: function valid(hex) {
      return hex.match(/^([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$/) !== null;
    }
  }, (_applyDecoratedDescriptor(_obj, "startTrackingChanges", [_dec], Object.getOwnPropertyDescriptor(_obj, "startTrackingChanges"), _obj), _applyDecoratedDescriptor(_obj, "changed", [_dec2], Object.getOwnPropertyDescriptor(_obj, "changed"), _obj), _applyDecoratedDescriptor(_obj, "savedIsOverriden", [_dec3], Object.getOwnPropertyDescriptor(_obj, "savedIsOverriden"), _obj), _applyDecoratedDescriptor(_obj, "translatedName", [_dec4], Object.getOwnPropertyDescriptor(_obj, "translatedName"), _obj), _applyDecoratedDescriptor(_obj, "description", [_dec5], Object.getOwnPropertyDescriptor(_obj, "description"), _obj), _applyDecoratedDescriptor(_obj, "brightness", [_dec6], Object.getOwnPropertyDescriptor(_obj, "brightness"), _obj), _applyDecoratedDescriptor(_obj, "hexValueChanged", [_dec7], Object.getOwnPropertyDescriptor(_obj, "hexValueChanged"), _obj), _applyDecoratedDescriptor(_obj, "valid", [_dec8], Object.getOwnPropertyDescriptor(_obj, "valid"), _obj)), _obj)));

  var _default = ColorSchemeColor;
  _exports.default = _default;
});
define("admin/models/color-scheme", ["exports", "@ember/array", "@ember/array/proxy", "admin/models/color-scheme-color", "@ember/object", "I18n", "discourse/lib/ajax", "discourse-common/utils/decorators", "@ember/object/computed"], function (_exports, _array, _proxy, _colorSchemeColor, _object, _I18n, _ajax, _decorators, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var ColorScheme = _object.default.extend((_dec = (0, _decorators.default)("name", "user_selectable", "colors.@each.changed", "saving"), _dec2 = (0, _decorators.default)("changed"), (_obj = {
    init: function init() {
      this._super.apply(this, arguments);

      this.startTrackingChanges();
    },
    description: function description() {
      return "" + this.name;
    },
    startTrackingChanges: function startTrackingChanges() {
      this.set("originals", {
        name: this.name,
        user_selectable: this.user_selectable
      });
    },
    schemeJson: function schemeJson() {
      var buffer = [];
      this.colors.forEach(function (c) {
        buffer.push("  \"".concat(c.get("name"), "\": \"").concat(c.get("hex"), "\""));
      });
      return ["\"".concat(this.name, "\": {"), buffer.join(",\n"), "}"].join("\n");
    },
    copy: function copy() {
      var newScheme = ColorScheme.create({
        name: this.name,
        can_edit: true,
        colors: (0, _array.A)()
      });
      this.colors.forEach(function (c) {
        newScheme.colors.pushObject(_colorSchemeColor.default.create(c.getProperties("name", "hex", "default_hex")));
      });
      return newScheme;
    },
    changed: function changed(name, user_selectable) {
      if (!this.originals) {
        return false;
      }

      if (this.originals.name !== name) {
        return true;
      }

      if (this.originals.user_selectable !== user_selectable) {
        return true;
      }

      if (this.colors.any(function (c) {
        return c.get("changed");
      })) {
        return true;
      }

      return false;
    },
    disableSave: function disableSave(changed) {
      if (this.theme_id) {
        return false;
      }

      return !changed || this.saving || this.colors.any(function (c) {
        return !c.get("valid");
      });
    },
    newRecord: (0, _computed.not)("id"),
    save: function save(opts) {
      var _this = this;

      if (this.is_base || this.disableSave) {
        return;
      }

      this.setProperties({
        savingStatus: _I18n.default.t("saving"),
        saving: true
      });
      var data = {};

      if (!opts || !opts.enabledOnly) {
        data.name = this.name;
        data.user_selectable = this.user_selectable;
        data.base_scheme_id = this.base_scheme_id;
        data.colors = [];
        this.colors.forEach(function (c) {
          if (!_this.id || c.get("changed")) {
            data.colors.pushObject(c.getProperties("name", "hex"));
          }
        });
      }

      return (0, _ajax.ajax)("/admin/color_schemes" + (this.id ? "/" + this.id : "") + ".json", {
        data: JSON.stringify({
          color_scheme: data
        }),
        type: this.id ? "PUT" : "POST",
        dataType: "json",
        contentType: "application/json"
      }).then(function (result) {
        if (result.id) {
          _this.set("id", result.id);
        }

        if (!opts || !opts.enabledOnly) {
          _this.startTrackingChanges();

          _this.colors.forEach(function (c) {
            return c.startTrackingChanges();
          });
        }

        _this.setProperties({
          savingStatus: _I18n.default.t("saved"),
          saving: false
        });

        _this.notifyPropertyChange("description");
      });
    },
    updateUserSelectable: function updateUserSelectable(value) {
      if (!this.id) {
        return;
      }

      return (0, _ajax.ajax)("/admin/color_schemes/".concat(this.id, ".json"), {
        data: JSON.stringify({
          color_scheme: {
            user_selectable: value
          }
        }),
        type: "PUT",
        dataType: "json",
        contentType: "application/json"
      });
    },
    destroy: function destroy() {
      if (this.id) {
        return (0, _ajax.ajax)("/admin/color_schemes/".concat(this.id), {
          type: "DELETE"
        });
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "description", [_decorators.default], Object.getOwnPropertyDescriptor(_obj, "description"), _obj), _applyDecoratedDescriptor(_obj, "changed", [_dec], Object.getOwnPropertyDescriptor(_obj, "changed"), _obj), _applyDecoratedDescriptor(_obj, "disableSave", [_dec2], Object.getOwnPropertyDescriptor(_obj, "disableSave"), _obj)), _obj)));

  var ColorSchemes = _proxy.default.extend({});

  ColorScheme.reopenClass({
    findAll: function findAll() {
      var colorSchemes = ColorSchemes.create({
        content: [],
        loading: true
      });
      return (0, _ajax.ajax)("/admin/color_schemes").then(function (all) {
        all.forEach(function (colorScheme) {
          colorSchemes.pushObject(ColorScheme.create({
            id: colorScheme.id,
            name: colorScheme.name,
            is_base: colorScheme.is_base,
            theme_id: colorScheme.theme_id,
            theme_name: colorScheme.theme_name,
            base_scheme_id: colorScheme.base_scheme_id,
            user_selectable: colorScheme.user_selectable,
            colors: colorScheme.colors.map(function (c) {
              return _colorSchemeColor.default.create({
                name: c.name,
                hex: c.hex,
                default_hex: c.default_hex,
                is_advanced: c.is_advanced
              });
            })
          }));
        });
        return colorSchemes;
      });
    }
  });
  var _default = ColorScheme;
  _exports.default = _default;
});
define("admin/models/email-log", ["exports", "admin/models/admin-user", "@ember/object", "discourse/lib/ajax", "discourse-common/lib/get-url"], function (_exports, _adminUser, _object, _ajax, _getUrl) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var EmailLog = _object.default.extend({});

  EmailLog.reopenClass({
    create: function create(attrs) {
      attrs = attrs || {};

      if (attrs.user) {
        attrs.user = _adminUser.default.create(attrs.user);
      }

      if (attrs.post_url) {
        attrs.post_url = (0, _getUrl.default)(attrs.post_url);
      }

      return this._super(attrs);
    },
    findAll: function findAll(filter, offset) {
      filter = filter || {};
      offset = offset || 0;
      var status = filter.status || "sent";
      delete filter.status;
      return (0, _ajax.ajax)("/admin/email/".concat(status, ".json?offset=").concat(offset), {
        data: filter
      }).then(function (logs) {
        return logs.map(function (log) {
          return EmailLog.create(log);
        });
      });
    }
  });
  var _default = EmailLog;
  _exports.default = _default;
});
define("admin/models/email-preview", ["exports", "@ember/object", "discourse/lib/ajax"], function (_exports, _object, _ajax) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.oneWeekAgo = oneWeekAgo;
  _exports.default = void 0;

  var EmailPreview = _object.default.extend({});

  function oneWeekAgo() {
    return moment().locale("en").subtract(7, "days").format("YYYY-MM-DD");
  }

  EmailPreview.reopenClass({
    findDigest: function findDigest(username, lastSeenAt) {
      return (0, _ajax.ajax)("/admin/email/preview-digest.json", {
        data: {
          last_seen_at: lastSeenAt || oneWeekAgo(),
          username: username
        }
      }).then(function (result) {
        return EmailPreview.create(result);
      });
    },
    sendDigest: function sendDigest(username, lastSeenAt, email) {
      return (0, _ajax.ajax)("/admin/email/send-digest.json", {
        data: {
          last_seen_at: lastSeenAt || oneWeekAgo(),
          username: username,
          email: email
        }
      });
    }
  });
  var _default = EmailPreview;
  _exports.default = _default;
});
define("admin/models/email-settings", ["exports", "@ember/object", "discourse/lib/ajax"], function (_exports, _object, _ajax) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var EmailSettings = _object.default.extend({});

  EmailSettings.reopenClass({
    find: function find() {
      return (0, _ajax.ajax)("/admin/email.json").then(function (settings) {
        return EmailSettings.create(settings);
      });
    }
  });
  var _default = EmailSettings;
  _exports.default = _default;
});
define("admin/models/email-style", ["exports", "discourse/models/rest"], function (_exports, _rest) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _rest.default.extend({
    changed: false,
    setField: function setField(fieldName, value) {
      this.set("".concat(fieldName), value);
      this.set("changed", true);
    }
  });

  _exports.default = _default;
});
define("admin/models/email-template", ["exports", "discourse/models/rest", "discourse/lib/ajax", "@ember/object"], function (_exports, _rest, _ajax, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _rest.default.extend({
    revert: function revert() {
      return (0, _ajax.ajax)("/admin/customize/email_templates/".concat(this.id), {
        type: "DELETE"
      }).then(function (result) {
        return (0, _object.getProperties)(result.email_template, "subject", "body", "can_revert");
      });
    }
  });

  _exports.default = _default;
});
define("admin/models/flag-type", ["exports", "I18n", "discourse/models/rest", "discourse-common/utils/decorators"], function (_exports, _I18n, _rest, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _rest.default.extend((_dec = (0, _decorators.default)("id"), (_obj = {
    name: function name(id) {
      return _I18n.default.t("admin.flags.summary.action_type_".concat(id), {
        count: 1
      });
    }
  }, (_applyDecoratedDescriptor(_obj, "name", [_dec], Object.getOwnPropertyDescriptor(_obj, "name"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/models/incoming-email", ["exports", "admin/models/admin-user", "@ember/object", "discourse/lib/ajax"], function (_exports, _adminUser, _object, _ajax) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var IncomingEmail = _object.default.extend({});

  IncomingEmail.reopenClass({
    create: function create(attrs) {
      attrs = attrs || {};

      if (attrs.user) {
        attrs.user = _adminUser.default.create(attrs.user);
      }

      return this._super(attrs);
    },
    find: function find(id) {
      return (0, _ajax.ajax)("/admin/email/incoming/".concat(id, ".json"));
    },
    findByBounced: function findByBounced(id) {
      return (0, _ajax.ajax)("/admin/email/incoming_from_bounced/".concat(id, ".json"));
    },
    findAll: function findAll(filter, offset) {
      filter = filter || {};
      offset = offset || 0;
      var status = filter.status || "received";
      delete filter.status;
      return (0, _ajax.ajax)("/admin/email/".concat(status, ".json?offset=").concat(offset), {
        data: filter
      }).then(function (incomings) {
        return incomings.map(function (incoming) {
          return IncomingEmail.create(incoming);
        });
      });
    },
    loadRawEmail: function loadRawEmail(id) {
      return (0, _ajax.ajax)("/admin/email/incoming/".concat(id, "/raw.json"));
    }
  });
  var _default = IncomingEmail;
  _exports.default = _default;
});
define("admin/models/permalink", ["exports", "discourse/models/category", "discourse/lib/url", "@ember/object", "discourse/lib/ajax", "discourse-common/utils/decorators"], function (_exports, _category, _url, _object, _ajax, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj, _init, _init2;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var Permalink = _object.default.extend((_dec = (0, _decorators.default)("category_id"), _dec2 = (0, _decorators.default)("external_url"), (_obj = {
    save: function save() {
      return (0, _ajax.ajax)("/admin/permalinks.json", {
        type: "POST",
        data: {
          url: this.url,
          permalink_type: this.permalink_type,
          permalink_type_value: this.permalink_type_value
        }
      });
    },
    category: function category(category_id) {
      return _category.default.findById(category_id);
    },
    linkIsExternal: function linkIsExternal(external_url) {
      return !_url.default.isInternal(external_url);
    },
    destroy: function destroy() {
      return (0, _ajax.ajax)("/admin/permalinks/" + this.id + ".json", {
        type: "DELETE"
      });
    }
  }, (_applyDecoratedDescriptor(_obj, "category", [_dec], (_init = Object.getOwnPropertyDescriptor(_obj, "category"), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
      return _init;
    }
  }), _obj), _applyDecoratedDescriptor(_obj, "linkIsExternal", [_dec2], (_init2 = Object.getOwnPropertyDescriptor(_obj, "linkIsExternal"), _init2 = _init2 ? _init2.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
      return _init2;
    }
  }), _obj)), _obj)));

  Permalink.reopenClass({
    findAll: function findAll(filter) {
      return (0, _ajax.ajax)("/admin/permalinks.json", {
        data: {
          filter: filter
        }
      }).then(function (permalinks) {
        return permalinks.map(function (p) {
          return Permalink.create(p);
        });
      });
    }
  });
  var _default = Permalink;
  _exports.default = _default;
});
define("admin/models/report", ["exports", "discourse/lib/formatter", "discourse/lib/utilities", "@ember/object", "I18n", "discourse/lib/ajax", "discourse-common/utils/decorators", "discourse-common/lib/get-url", "@ember/utils", "discourse-common/lib/helpers", "discourse/helpers/user-avatar", "discourse/lib/round"], function (_exports, _formatter, _utilities, _object, _I18n, _ajax, _decorators, _getUrl, _utils, _helpers, _userAvatar, _round) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.DAILY_LIMIT_DAYS = _exports.WEEKLY_LIMIT_DAYS = _exports.SCHEMA_VERSION = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  // Change this line each time report format change
  // and you want to ensure cache is reset
  var SCHEMA_VERSION = 4;
  _exports.SCHEMA_VERSION = SCHEMA_VERSION;

  var Report = _object.default.extend((_dec = (0, _decorators.default)("type", "start_date", "end_date"), _dec2 = (0, _decorators.default)("data", "average"), _dec3 = (0, _decorators.default)("data", "average"), _dec4 = (0, _decorators.default)("data", "average"), _dec5 = (0, _decorators.default)("data", "average"), _dec6 = (0, _decorators.default)("data", "average"), _dec7 = (0, _decorators.default)("data", "average"), _dec8 = (0, _decorators.default)("yesterdayCount", "higher_is_better"), _dec9 = (0, _decorators.default)("lastSevenDaysCount", "higher_is_better"), _dec10 = (0, _decorators.default)("data"), _dec11 = (0, _decorators.default)("data", "currentTotal"), _dec12 = (0, _decorators.default)("trend", "higher_is_better"), _dec13 = (0, _decorators.default)("sevenDaysTrend", "higher_is_better"), _dec14 = (0, _decorators.default)("thirtyDaysTrend", "higher_is_better"), _dec15 = (0, _decorators.default)("yesterdayTrend", "higher_is_better"), _dec16 = (0, _decorators.default)("prev_period", "currentTotal", "currentAverage", "higher_is_better"), _dec17 = (0, _decorators.default)("prev30Days", "lastThirtyDaysCount", "higher_is_better"), _dec18 = (0, _decorators.default)("type"), _dec19 = (0, _decorators.default)("prev_period", "currentTotal", "currentAverage"), _dec20 = (0, _decorators.default)("yesterdayCount"), _dec21 = (0, _decorators.default)("lastSevenDaysCount"), _dec22 = (0, _decorators.default)("prev30Days", "lastThirtyDaysCount"), _dec23 = (0, _decorators.default)("data"), _dec24 = (0, _decorators.default)("data"), _dec25 = (0, _decorators.default)("labels"), (_obj = {
    average: false,
    percent: false,
    higher_is_better: true,
    description_link: null,
    description: null,
    reportUrl: function reportUrl(type, start_date, end_date) {
      start_date = moment.utc(start_date).locale("en").format("YYYY-MM-DD");
      end_date = moment.utc(end_date).locale("en").format("YYYY-MM-DD");
      return (0, _getUrl.default)("/admin/reports/".concat(type, "?start_date=").concat(start_date, "&end_date=").concat(end_date));
    },
    valueAt: function valueAt(numDaysAgo) {
      if (this.data) {
        var wantedDate = moment().subtract(numDaysAgo, "days").locale("en").format("YYYY-MM-DD");
        var item = this.data.find(function (d) {
          return d.x === wantedDate;
        });

        if (item) {
          return item.y;
        }
      }

      return 0;
    },
    valueFor: function valueFor(startDaysAgo, endDaysAgo) {
      if (this.data) {
        var earliestDate = moment().subtract(endDaysAgo, "days").startOf("day");
        var latestDate = moment().subtract(startDaysAgo, "days").startOf("day");
        var d,
            sum = 0,
            count = 0;
        this.data.forEach(function (datum) {
          d = moment(datum.x);

          if (d >= earliestDate && d <= latestDate) {
            sum += datum.y;
            count++;
          }
        });

        if (this.method === "average" && count > 0) {
          sum /= count;
        }

        return (0, _round.default)(sum, -2);
      }
    },
    todayCount: function todayCount() {
      return this.valueAt(0);
    },
    yesterdayCount: function yesterdayCount() {
      return this.valueAt(1);
    },
    sevenDaysAgoCount: function sevenDaysAgoCount() {
      return this.valueAt(7);
    },
    thirtyDaysAgoCount: function thirtyDaysAgoCount() {
      return this.valueAt(30);
    },
    lastSevenDaysCount: function lastSevenDaysCount() {
      return this.averageCount(7, this.valueFor(1, 7));
    },
    lastThirtyDaysCount: function lastThirtyDaysCount() {
      return this.averageCount(30, this.valueFor(1, 30));
    },
    averageCount: function averageCount(count, value) {
      return this.average ? value / count : value;
    },
    yesterdayTrend: function yesterdayTrend(yesterdayCount, higherIsBetter) {
      return this._computeTrend(this.valueAt(2), yesterdayCount, higherIsBetter);
    },
    sevenDaysTrend: function sevenDaysTrend(lastSevenDaysCount, higherIsBetter) {
      return this._computeTrend(this.valueFor(8, 14), lastSevenDaysCount, higherIsBetter);
    },
    currentTotal: function currentTotal(data) {
      return data.reduce(function (cur, pair) {
        return cur + pair.y;
      }, 0);
    },
    currentAverage: function currentAverage(data, total) {
      return (0, _helpers.makeArray)(data).length === 0 ? 0 : parseFloat((total / parseFloat(data.length)).toFixed(1));
    },
    trendIcon: function trendIcon(trend, higherIsBetter) {
      return this._iconForTrend(trend, higherIsBetter);
    },
    sevenDaysTrendIcon: function sevenDaysTrendIcon(sevenDaysTrend, higherIsBetter) {
      return this._iconForTrend(sevenDaysTrend, higherIsBetter);
    },
    thirtyDaysTrendIcon: function thirtyDaysTrendIcon(thirtyDaysTrend, higherIsBetter) {
      return this._iconForTrend(thirtyDaysTrend, higherIsBetter);
    },
    yesterdayTrendIcon: function yesterdayTrendIcon(yesterdayTrend, higherIsBetter) {
      return this._iconForTrend(yesterdayTrend, higherIsBetter);
    },
    trend: function trend(prev, currentTotal, currentAverage, higherIsBetter) {
      var total = this.average ? currentAverage : currentTotal;
      return this._computeTrend(prev, total, higherIsBetter);
    },
    thirtyDaysTrend: function thirtyDaysTrend(prev30Days, lastThirtyDaysCount, higherIsBetter) {
      return this._computeTrend(prev30Days, lastThirtyDaysCount, higherIsBetter);
    },
    method: function method(type) {
      if (type === "time_to_first_response") {
        return "average";
      } else {
        return "sum";
      }
    },
    percentChangeString: function percentChangeString(val1, val2) {
      var change = this._computeChange(val1, val2);

      if (isNaN(change) || !isFinite(change)) {
        return null;
      } else if (change > 0) {
        return "+" + change.toFixed(0) + "%";
      } else {
        return change.toFixed(0) + "%";
      }
    },
    trendTitle: function trendTitle(prev, currentTotal, currentAverage) {
      var current = this.average ? currentAverage : currentTotal;
      var percent = this.percentChangeString(prev, current);

      if (this.average) {
        prev = prev ? prev.toFixed(1) : "0";

        if (this.percent) {
          current += "%";
          prev += "%";
        }
      } else {
        prev = (0, _formatter.number)(prev);
        current = (0, _formatter.number)(current);
      }

      return _I18n.default.t("admin.dashboard.reports.trend_title", {
        percent: percent,
        prev: prev,
        current: current
      });
    },
    changeTitle: function changeTitle(valAtT1, valAtT2, prevPeriodString) {
      var change = this.percentChangeString(valAtT1, valAtT2);
      var title = "";

      if (change) {
        title += "".concat(change, " change. ");
      }

      title += "Was ".concat((0, _formatter.number)(valAtT1), " ").concat(prevPeriodString, ".");
      return title;
    },
    yesterdayCountTitle: function yesterdayCountTitle(yesterdayCount) {
      return this.changeTitle(this.valueAt(2), yesterdayCount, "two days ago");
    },
    sevenDaysCountTitle: function sevenDaysCountTitle(lastSevenDaysCount) {
      return this.changeTitle(this.valueFor(8, 14), lastSevenDaysCount, "two weeks ago");
    },
    thirtyDaysCountTitle: function thirtyDaysCountTitle(prev30Days, lastThirtyDaysCount) {
      return this.changeTitle(prev30Days, lastThirtyDaysCount, "in the previous 30 day period");
    },
    sortedData: function sortedData(data) {
      return this.xAxisIsDate ? data.toArray().reverse() : data.toArray();
    },
    xAxisIsDate: function xAxisIsDate() {
      if (!this.data[0]) {
        return false;
      }

      return this.data && this.data[0].x.match(/\d{4}-\d{1,2}-\d{1,2}/);
    },
    computedLabels: function computedLabels(labels) {
      var _this = this;

      return labels.map(function (label) {
        var type = label.type || "string";
        var mainProperty;

        if (label.property) {
          mainProperty = label.property;
        } else if (type === "user") {
          mainProperty = label.properties["username"];
        } else if (type === "topic") {
          mainProperty = label.properties["title"];
        } else if (type === "post") {
          mainProperty = label.properties["truncated_raw"];
        } else {
          mainProperty = label.properties[0];
        }

        return {
          title: label.title,
          htmlTitle: label.html_title,
          sortProperty: label.sort_property || mainProperty,
          mainProperty: mainProperty,
          type: type,
          compute: function compute(row) {
            var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            var value = null;

            if (opts.useSortProperty) {
              value = row[label.sort_property || mainProperty];
            } else {
              value = row[mainProperty];
            }

            if (type === "user") {
              return _this._userLabel(label.properties, row);
            }

            if (type === "post") {
              return _this._postLabel(label.properties, row);
            }

            if (type === "topic") {
              return _this._topicLabel(label.properties, row);
            }

            if (type === "seconds") {
              return _this._secondsLabel(value);
            }

            if (type === "link") {
              return _this._linkLabel(label.properties, row);
            }

            if (type === "percent") {
              return _this._percentLabel(value);
            }

            if (type === "bytes") {
              return _this._bytesLabel(value);
            }

            if (type === "number") {
              return _this._numberLabel(value, opts);
            }

            if (type === "date") {
              var date = moment(value);

              if (date.isValid()) {
                return _this._dateLabel(value, date);
              }
            }

            if (type === "precise_date") {
              var _date = moment(value);

              if (_date.isValid()) {
                return _this._dateLabel(value, _date, "LLL");
              }
            }

            if (type === "text") {
              return _this._textLabel(value);
            }

            return {
              value: value,
              type: type,
              property: mainProperty,
              formatedValue: value ? (0, _utilities.escapeExpression)(value) : "—"
            };
          }
        };
      });
    },
    _userLabel: function _userLabel(properties, row) {
      var _this2 = this;

      var username = row[properties.username];

      var formatedValue = function formatedValue() {
        var userId = row[properties.id];

        var user = _object.default.create({
          username: username,
          name: (0, _utilities.formatUsername)(username),
          avatar_template: row[properties.avatar]
        });

        var href = (0, _getUrl.default)("/admin/users/".concat(userId, "/").concat(username));
        var avatarImg = (0, _userAvatar.renderAvatar)(user, {
          imageSize: "tiny",
          ignoreTitle: true,
          siteSettings: _this2.siteSettings
        });
        return "<a href='".concat(href, "'>").concat(avatarImg, "<span class='username'>").concat(user.name, "</span></a>");
      };

      return {
        value: username,
        formatedValue: username ? formatedValue() : "—"
      };
    },
    _topicLabel: function _topicLabel(properties, row) {
      var topicTitle = row[properties.title];

      var formatedValue = function formatedValue() {
        var topicId = row[properties.id];
        var href = (0, _getUrl.default)("/t/-/".concat(topicId));
        return "<a href='".concat(href, "'>").concat((0, _utilities.escapeExpression)(topicTitle), "</a>");
      };

      return {
        value: topicTitle,
        formatedValue: topicTitle ? formatedValue() : "—"
      };
    },
    _postLabel: function _postLabel(properties, row) {
      var postTitle = row[properties.truncated_raw];
      var postNumber = row[properties.number];
      var topicId = row[properties.topic_id];
      var href = (0, _getUrl.default)("/t/-/".concat(topicId, "/").concat(postNumber));
      return {
        property: properties.title,
        value: postTitle,
        formatedValue: postTitle && href ? "<a href='".concat(href, "'>").concat((0, _utilities.escapeExpression)(postTitle), "</a>") : "—"
      };
    },
    _secondsLabel: function _secondsLabel(value) {
      return {
        value: (0, _utilities.toNumber)(value),
        formatedValue: (0, _formatter.durationTiny)(value)
      };
    },
    _percentLabel: function _percentLabel(value) {
      return {
        value: (0, _utilities.toNumber)(value),
        formatedValue: value ? "".concat(value, "%") : "—"
      };
    },
    _numberLabel: function _numberLabel(value) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var formatNumbers = (0, _utils.isEmpty)(options.formatNumbers) ? true : options.formatNumbers;

      var formatedValue = function formatedValue() {
        return formatNumbers ? (0, _formatter.number)(value) : value;
      };

      return {
        value: (0, _utilities.toNumber)(value),
        formatedValue: value ? formatedValue() : "—"
      };
    },
    _bytesLabel: function _bytesLabel(value) {
      return {
        value: (0, _utilities.toNumber)(value),
        formatedValue: _I18n.default.toHumanSize(value)
      };
    },
    _dateLabel: function _dateLabel(value, date) {
      var format = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "LL";
      return {
        value: value,
        formatedValue: value ? date.format(format) : "—"
      };
    },
    _textLabel: function _textLabel(value) {
      var escaped = (0, _utilities.escapeExpression)(value);
      return {
        value: value,
        formatedValue: value ? escaped : "—"
      };
    },
    _linkLabel: function _linkLabel(properties, row) {
      var property = properties[0];
      var value = (0, _getUrl.default)(row[property]);

      var formatedValue = function formatedValue(href, anchor) {
        return "<a href=\"".concat((0, _utilities.escapeExpression)(href), "\">").concat((0, _utilities.escapeExpression)(anchor), "</a>");
      };

      return {
        value: value,
        formatedValue: value ? formatedValue(value, row[properties[1]]) : "—"
      };
    },
    _computeChange: function _computeChange(valAtT1, valAtT2) {
      return (valAtT2 - valAtT1) / valAtT1 * 100;
    },
    _computeTrend: function _computeTrend(valAtT1, valAtT2, higherIsBetter) {
      var change = this._computeChange(valAtT1, valAtT2);

      if (change > 50) {
        return higherIsBetter ? "high-trending-up" : "high-trending-down";
      } else if (change > 2) {
        return higherIsBetter ? "trending-up" : "trending-down";
      } else if (change <= 2 && change >= -2) {
        return "no-change";
      } else if (change < -50) {
        return higherIsBetter ? "high-trending-down" : "high-trending-up";
      } else if (change < -2) {
        return higherIsBetter ? "trending-down" : "trending-up";
      }
    },
    _iconForTrend: function _iconForTrend(trend, higherIsBetter) {
      switch (trend) {
        case "trending-up":
          return higherIsBetter ? "angle-up" : "angle-down";

        case "trending-down":
          return higherIsBetter ? "angle-down" : "angle-up";

        case "high-trending-up":
          return higherIsBetter ? "angle-double-up" : "angle-double-down";

        case "high-trending-down":
          return higherIsBetter ? "angle-double-down" : "angle-double-up";

        default:
          return "minus";
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "reportUrl", [_dec], Object.getOwnPropertyDescriptor(_obj, "reportUrl"), _obj), _applyDecoratedDescriptor(_obj, "todayCount", [_dec2], Object.getOwnPropertyDescriptor(_obj, "todayCount"), _obj), _applyDecoratedDescriptor(_obj, "yesterdayCount", [_dec3], Object.getOwnPropertyDescriptor(_obj, "yesterdayCount"), _obj), _applyDecoratedDescriptor(_obj, "sevenDaysAgoCount", [_dec4], Object.getOwnPropertyDescriptor(_obj, "sevenDaysAgoCount"), _obj), _applyDecoratedDescriptor(_obj, "thirtyDaysAgoCount", [_dec5], Object.getOwnPropertyDescriptor(_obj, "thirtyDaysAgoCount"), _obj), _applyDecoratedDescriptor(_obj, "lastSevenDaysCount", [_dec6], Object.getOwnPropertyDescriptor(_obj, "lastSevenDaysCount"), _obj), _applyDecoratedDescriptor(_obj, "lastThirtyDaysCount", [_dec7], Object.getOwnPropertyDescriptor(_obj, "lastThirtyDaysCount"), _obj), _applyDecoratedDescriptor(_obj, "yesterdayTrend", [_dec8], Object.getOwnPropertyDescriptor(_obj, "yesterdayTrend"), _obj), _applyDecoratedDescriptor(_obj, "sevenDaysTrend", [_dec9], Object.getOwnPropertyDescriptor(_obj, "sevenDaysTrend"), _obj), _applyDecoratedDescriptor(_obj, "currentTotal", [_dec10], Object.getOwnPropertyDescriptor(_obj, "currentTotal"), _obj), _applyDecoratedDescriptor(_obj, "currentAverage", [_dec11], Object.getOwnPropertyDescriptor(_obj, "currentAverage"), _obj), _applyDecoratedDescriptor(_obj, "trendIcon", [_dec12], Object.getOwnPropertyDescriptor(_obj, "trendIcon"), _obj), _applyDecoratedDescriptor(_obj, "sevenDaysTrendIcon", [_dec13], Object.getOwnPropertyDescriptor(_obj, "sevenDaysTrendIcon"), _obj), _applyDecoratedDescriptor(_obj, "thirtyDaysTrendIcon", [_dec14], Object.getOwnPropertyDescriptor(_obj, "thirtyDaysTrendIcon"), _obj), _applyDecoratedDescriptor(_obj, "yesterdayTrendIcon", [_dec15], Object.getOwnPropertyDescriptor(_obj, "yesterdayTrendIcon"), _obj), _applyDecoratedDescriptor(_obj, "trend", [_dec16], Object.getOwnPropertyDescriptor(_obj, "trend"), _obj), _applyDecoratedDescriptor(_obj, "thirtyDaysTrend", [_dec17], Object.getOwnPropertyDescriptor(_obj, "thirtyDaysTrend"), _obj), _applyDecoratedDescriptor(_obj, "method", [_dec18], Object.getOwnPropertyDescriptor(_obj, "method"), _obj), _applyDecoratedDescriptor(_obj, "trendTitle", [_dec19], Object.getOwnPropertyDescriptor(_obj, "trendTitle"), _obj), _applyDecoratedDescriptor(_obj, "yesterdayCountTitle", [_dec20], Object.getOwnPropertyDescriptor(_obj, "yesterdayCountTitle"), _obj), _applyDecoratedDescriptor(_obj, "sevenDaysCountTitle", [_dec21], Object.getOwnPropertyDescriptor(_obj, "sevenDaysCountTitle"), _obj), _applyDecoratedDescriptor(_obj, "thirtyDaysCountTitle", [_dec22], Object.getOwnPropertyDescriptor(_obj, "thirtyDaysCountTitle"), _obj), _applyDecoratedDescriptor(_obj, "sortedData", [_dec23], Object.getOwnPropertyDescriptor(_obj, "sortedData"), _obj), _applyDecoratedDescriptor(_obj, "xAxisIsDate", [_dec24], Object.getOwnPropertyDescriptor(_obj, "xAxisIsDate"), _obj), _applyDecoratedDescriptor(_obj, "computedLabels", [_dec25], Object.getOwnPropertyDescriptor(_obj, "computedLabels"), _obj)), _obj)));

  var WEEKLY_LIMIT_DAYS = 365;
  _exports.WEEKLY_LIMIT_DAYS = WEEKLY_LIMIT_DAYS;
  var DAILY_LIMIT_DAYS = 34;
  _exports.DAILY_LIMIT_DAYS = DAILY_LIMIT_DAYS;

  function applyAverage(value, start, end) {
    var count = end.diff(start, "day") + 1; // 1 to include start

    return parseFloat((value / count).toFixed(2));
  }

  Report.reopenClass({
    groupingForDatapoints: function groupingForDatapoints(count) {
      if (count < DAILY_LIMIT_DAYS) {
        return "daily";
      }

      if (count >= DAILY_LIMIT_DAYS && count < WEEKLY_LIMIT_DAYS) {
        return "weekly";
      }

      if (count >= WEEKLY_LIMIT_DAYS) {
        return "monthly";
      }
    },
    unitForDatapoints: function unitForDatapoints(count) {
      if (count >= DAILY_LIMIT_DAYS && count < WEEKLY_LIMIT_DAYS) {
        return "week";
      } else if (count >= WEEKLY_LIMIT_DAYS) {
        return "month";
      } else {
        return "day";
      }
    },
    unitForGrouping: function unitForGrouping(grouping) {
      switch (grouping) {
        case "monthly":
          return "month";

        case "weekly":
          return "week";

        default:
          return "day";
      }
    },
    collapse: function collapse(model, data, grouping) {
      grouping = grouping || Report.groupingForDatapoints(data.length);

      if (grouping === "daily") {
        return data;
      } else if (grouping === "weekly" || grouping === "monthly") {
        var isoKind = grouping === "weekly" ? "isoWeek" : "month";
        var kind = grouping === "weekly" ? "week" : "month";
        var startMoment = moment(model.start_date, "YYYY-MM-DD");
        var currentIndex = 0;
        var currentStart = startMoment.clone().startOf(isoKind);
        var currentEnd = startMoment.clone().endOf(isoKind);
        var transformedData = [{
          x: currentStart.format("YYYY-MM-DD"),
          y: 0
        }];
        var appliedAverage = false;
        data.forEach(function (d) {
          var date = moment(d.x, "YYYY-MM-DD");

          if (!date.isSame(currentStart) && !date.isBetween(currentStart, currentEnd)) {
            if (model.average) {
              transformedData[currentIndex].y = applyAverage(transformedData[currentIndex].y, currentStart, currentEnd);
              appliedAverage = true;
            }

            currentIndex += 1;
            currentStart = currentStart.add(1, kind).startOf(isoKind);
            currentEnd = currentEnd.add(1, kind).endOf(isoKind);
          } else {
            appliedAverage = false;
          }

          if (transformedData[currentIndex]) {
            transformedData[currentIndex].y += d.y;
          } else {
            transformedData[currentIndex] = {
              x: d.x,
              y: d.y
            };
          }
        });

        if (model.average && !appliedAverage) {
          transformedData[currentIndex].y = applyAverage(transformedData[currentIndex].y, currentStart, moment(model.end_date).subtract(1, "day") // remove 1 day as model end date is at 00:00 of next day
          );
        }

        return transformedData;
      } // ensure we return something if grouping is unknown


      return data;
    },
    fillMissingDates: function fillMissingDates(report) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var dataField = options.dataField || "data";
      var filledField = options.filledField || "data";
      var startDate = options.startDate || "start_date";
      var endDate = options.endDate || "end_date";

      if (Array.isArray(report[dataField])) {
        var startDateFormatted = moment.utc(report[startDate]).locale("en").format("YYYY-MM-DD");
        var endDateFormatted = moment.utc(report[endDate]).locale("en").format("YYYY-MM-DD");

        if (report.modes[0] === "stacked_chart") {
          report[filledField] = report[dataField].map(function (rep) {
            return {
              req: rep.req,
              label: rep.label,
              color: rep.color,
              data: (0, _utilities.fillMissingDates)(JSON.parse(JSON.stringify(rep.data)), startDateFormatted, endDateFormatted)
            };
          });
        } else {
          report[filledField] = (0, _utilities.fillMissingDates)(JSON.parse(JSON.stringify(report[dataField])), startDateFormatted, endDateFormatted);
        }
      }
    },
    find: function find(type, startDate, endDate, categoryId, groupId) {
      return (0, _ajax.ajax)("/admin/reports/" + type, {
        data: {
          start_date: startDate,
          end_date: endDate,
          category_id: categoryId,
          group_id: groupId
        }
      }).then(function (json) {
        // don’t fill for large multi column tables
        // which are not date based
        var modes = json.report.modes;

        if (modes.length !== 1 && modes[0] !== "table") {
          Report.fillMissingDates(json.report);
        }

        var model = Report.create({
          type: type
        });
        model.setProperties(json.report);

        if (json.report.related_report) {
          // TODO: fillMissingDates if xaxis is date
          var related = Report.create({
            type: json.report.related_report.type
          });
          related.setProperties(json.report.related_report);
          model.set("relatedReport", related);
        }

        return model;
      });
    }
  });
  var _default = Report;
  _exports.default = _default;
});
define("admin/models/screened-email", ["exports", "@ember/object", "I18n", "discourse/lib/ajax", "discourse-common/utils/decorators"], function (_exports, _object, _I18n, _ajax, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var ScreenedEmail = _object.default.extend((_dec = (0, _decorators.default)("action"), (_obj = {
    actionName: function actionName(action) {
      return _I18n.default.t("admin.logs.screened_actions." + action);
    },
    clearBlock: function clearBlock() {
      return (0, _ajax.ajax)("/admin/logs/screened_emails/" + this.id, {
        type: "DELETE"
      });
    }
  }, (_applyDecoratedDescriptor(_obj, "actionName", [_dec], Object.getOwnPropertyDescriptor(_obj, "actionName"), _obj)), _obj)));

  ScreenedEmail.reopenClass({
    findAll: function findAll() {
      return (0, _ajax.ajax)("/admin/logs/screened_emails.json").then(function (screened_emails) {
        return screened_emails.map(function (b) {
          return ScreenedEmail.create(b);
        });
      });
    }
  });
  var _default = ScreenedEmail;
  _exports.default = _default;
});
define("admin/models/screened-ip-address", ["exports", "@ember/object", "I18n", "discourse/lib/ajax", "discourse-common/utils/decorators", "@ember/object/computed"], function (_exports, _object, _I18n, _ajax, _decorators, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var ScreenedIpAddress = _object.default.extend((_dec = (0, _decorators.default)("action_name"), _dec2 = (0, _decorators.default)("ip_address"), (_obj = {
    actionName: function actionName(_actionName) {
      return _I18n.default.t("admin.logs.screened_ips.actions.".concat(_actionName));
    },
    isBlocked: (0, _computed.equal)("action_name", "block"),
    isRange: function isRange(ipAddress) {
      return ipAddress.indexOf("/") > 0;
    },
    save: function save() {
      return (0, _ajax.ajax)("/admin/logs/screened_ip_addresses" + (this.id ? "/" + this.id : "") + ".json", {
        type: this.id ? "PUT" : "POST",
        data: {
          ip_address: this.ip_address,
          action_name: this.action_name
        }
      });
    },
    destroy: function destroy() {
      return (0, _ajax.ajax)("/admin/logs/screened_ip_addresses/" + this.id + ".json", {
        type: "DELETE"
      });
    }
  }, (_applyDecoratedDescriptor(_obj, "actionName", [_dec], Object.getOwnPropertyDescriptor(_obj, "actionName"), _obj), _applyDecoratedDescriptor(_obj, "isRange", [_dec2], Object.getOwnPropertyDescriptor(_obj, "isRange"), _obj)), _obj)));

  ScreenedIpAddress.reopenClass({
    findAll: function findAll(filter) {
      return (0, _ajax.ajax)("/admin/logs/screened_ip_addresses.json", {
        data: {
          filter: filter
        }
      }).then(function (screened_ips) {
        return screened_ips.map(function (b) {
          return ScreenedIpAddress.create(b);
        });
      });
    },
    rollUp: function rollUp() {
      return (0, _ajax.ajax)("/admin/logs/screened_ip_addresses/roll_up", {
        type: "POST"
      });
    }
  });
  var _default = ScreenedIpAddress;
  _exports.default = _default;
});
define("admin/models/screened-url", ["exports", "@ember/object", "I18n", "discourse/lib/ajax", "discourse-common/utils/decorators"], function (_exports, _object, _I18n, _ajax, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var ScreenedUrl = _object.default.extend((_dec = (0, _decorators.default)("action"), (_obj = {
    actionName: function actionName(action) {
      return _I18n.default.t("admin.logs.screened_actions." + action);
    }
  }, (_applyDecoratedDescriptor(_obj, "actionName", [_dec], Object.getOwnPropertyDescriptor(_obj, "actionName"), _obj)), _obj)));

  ScreenedUrl.reopenClass({
    findAll: function findAll() {
      return (0, _ajax.ajax)("/admin/logs/screened_urls.json").then(function (screened_urls) {
        return screened_urls.map(function (b) {
          return ScreenedUrl.create(b);
        });
      });
    }
  });
  var _default = ScreenedUrl;
  _exports.default = _default;
});
define("admin/models/site-setting", ["exports", "@ember/object", "I18n", "admin/mixins/setting-object", "discourse/lib/ajax", "discourse-common/utils/decorators"], function (_exports, _object, _I18n, _settingObject, _ajax, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var SiteSetting = _object.default.extend(_settingObject.default, (_dec = (0, _decorators.default)("setting"), (_obj = {
    staffLogFilter: function staffLogFilter(setting) {
      if (!setting) {
        return;
      }

      return {
        subject: setting,
        action_name: "change_site_setting"
      };
    }
  }, (_applyDecoratedDescriptor(_obj, "staffLogFilter", [_dec], Object.getOwnPropertyDescriptor(_obj, "staffLogFilter"), _obj)), _obj)));

  SiteSetting.reopenClass({
    findAll: function findAll() {
      return (0, _ajax.ajax)("/admin/site_settings").then(function (settings) {
        // Group the results by category
        var categories = {};
        settings.site_settings.forEach(function (s) {
          if (!categories[s.category]) {
            categories[s.category] = [];
          }

          categories[s.category].pushObject(SiteSetting.create(s));
        });
        return Object.keys(categories).map(function (n) {
          return {
            nameKey: n,
            name: _I18n.default.t("admin.site_settings.categories." + n),
            siteSettings: categories[n]
          };
        });
      });
    },
    update: function update(key, value) {
      var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var data = {};
      data[key] = value;

      if (opts["updateExistingUsers"] === true) {
        data["update_existing_user"] = true;
      }

      return (0, _ajax.ajax)("/admin/site_settings/".concat(key), {
        type: "PUT",
        data: data
      });
    }
  });
  var _default = SiteSetting;
  _exports.default = _default;
});
define("admin/models/site-text", ["exports", "discourse/models/rest", "discourse/lib/ajax", "@ember/object"], function (_exports, _rest, _ajax, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _rest.default.extend({
    revert: function revert(locale) {
      return (0, _ajax.ajax)("/admin/customize/site_texts/".concat(this.id, "?locale=").concat(locale), {
        type: "DELETE"
      }).then(function (result) {
        return (0, _object.getProperties)(result.site_text, "value", "can_revert");
      });
    }
  });

  _exports.default = _default;
});
define("admin/models/staff-action-log", ["exports", "admin/models/admin-user", "I18n", "discourse/models/rest", "discourse/lib/ajax", "discourse-common/utils/decorators", "discourse/lib/utilities"], function (_exports, _adminUser, _I18n, _rest, _ajax, _decorators, _utilities) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _obj;

  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

  function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function format(label, value) {
    var escape = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    return value ? "<b>".concat(_I18n.default.t(label), "</b>: ").concat(escape ? (0, _utilities.escapeExpression)(value) : value) : "";
  }

  var StaffActionLog = _rest.default.extend((_dec = (0, _decorators.default)("action_name"), _dec2 = (0, _decorators.default)("email", "ip_address", "topic_id", "post_id", "category_id", "new_value", "previous_value", "details", "useCustomModalForDetails", "useModalForDetails"), _dec3 = (0, _decorators.default)("details"), _dec4 = (0, _decorators.default)("action_name"), (_obj = {
    showFullDetails: false,
    actionName: function actionName(_actionName) {
      return _I18n.default.t("admin.logs.staff_actions.actions.".concat(_actionName));
    },
    formattedDetails: function formattedDetails(email, ipAddress, topicId, postId, categoryId, newValue, previousValue, details, useCustomModalForDetails, useModalForDetails) {
      var postLink = postId ? "<a href data-link-post-id=\"".concat(postId, "\">").concat(postId, "</a>") : null;
      var topicLink = topicId ? "<a href data-link-topic-id=\"".concat(topicId, "\">").concat(topicId, "</a>") : null;
      var lines = [format("email", email), format("admin.logs.ip_address", ipAddress), format("admin.logs.topic_id", topicLink, false), format("admin.logs.post_id", postLink, false), format("admin.logs.category_id", categoryId)];

      if (!useCustomModalForDetails) {
        lines.push(format("admin.logs.staff_actions.new_value", newValue));
        lines.push(format("admin.logs.staff_actions.previous_value", previousValue));
      }

      if (!useModalForDetails && details) {
        lines = [].concat(_toConsumableArray(lines), _toConsumableArray((0, _utilities.escapeExpression)(details).split("\n")));
      }

      var formatted = lines.filter(function (l) {
        return l.length > 0;
      }).join("<br/>");
      return formatted.length > 0 ? formatted + "<br/>" : "";
    },
    useModalForDetails: function useModalForDetails(details) {
      return details && details.length > 100;
    },
    useCustomModalForDetails: function useCustomModalForDetails(actionName) {
      return ["change_theme", "delete_theme"].includes(actionName);
    }
  }, (_applyDecoratedDescriptor(_obj, "actionName", [_dec], Object.getOwnPropertyDescriptor(_obj, "actionName"), _obj), _applyDecoratedDescriptor(_obj, "formattedDetails", [_dec2], Object.getOwnPropertyDescriptor(_obj, "formattedDetails"), _obj), _applyDecoratedDescriptor(_obj, "useModalForDetails", [_dec3], Object.getOwnPropertyDescriptor(_obj, "useModalForDetails"), _obj), _applyDecoratedDescriptor(_obj, "useCustomModalForDetails", [_dec4], Object.getOwnPropertyDescriptor(_obj, "useCustomModalForDetails"), _obj)), _obj)));

  StaffActionLog.reopenClass({
    munge: function munge(json) {
      if (json.acting_user) {
        json.acting_user = _adminUser.default.create(json.acting_user);
      }

      if (json.target_user) {
        json.target_user = _adminUser.default.create(json.target_user);
      }

      return json;
    },
    findAll: function findAll(data) {
      return (0, _ajax.ajax)("/admin/logs/staff_action_logs.json", {
        data: data
      }).then(function (result) {
        return {
          staff_action_logs: result.staff_action_logs.map(function (s) {
            return StaffActionLog.create(s);
          }),
          user_history_actions: result.user_history_actions
        };
      });
    }
  });
  var _default = StaffActionLog;
  _exports.default = _default;
});
define("admin/models/theme-settings", ["exports", "@ember/object", "admin/mixins/setting-object"], function (_exports, _object, _settingObject) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _object.default.extend(_settingObject.default, {});

  _exports.default = _default;
});
define("admin/models/theme", ["exports", "@ember/object/computed", "@ember/utils", "I18n", "discourse/models/rest", "discourse-common/utils/decorators", "@ember/object", "discourse/lib/ajax-error"], function (_exports, _computed, _utils, _I18n, _rest, _decorators, _object, _ajaxError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.COMPONENTS = _exports.THEMES = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _obj;

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

  function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var THEME_UPLOAD_VAR = 2;
  var FIELDS_IDS = [0, 1, 5];
  var THEMES = "themes";
  _exports.THEMES = THEMES;
  var COMPONENTS = "components";
  _exports.COMPONENTS = COMPONENTS;
  var SETTINGS_TYPE_ID = 5;

  var Theme = _rest.default.extend((_dec = (0, _decorators.default)("theme_fields.[]"), _dec2 = (0, _decorators.default)("theme_fields.[]"), _dec3 = (0, _decorators.default)("fieldNames", "theme_fields.[]", "theme_fields.@each.error"), _dec4 = (0, _decorators.default)("theme_fields"), _dec5 = (0, _decorators.default)("theme_fields", "theme_fields.[]"), _dec6 = (0, _decorators.default)("theme_fields", "theme_fields.@each.error"), _dec7 = (0, _decorators.default)("theme_fields.[]"), _dec8 = (0, _decorators.default)("remote_theme.last_error_text"), _dec9 = (0, _decorators.default)("childThemes.[]"), _dec10 = (0, _decorators.default)("recentlyInstalled", "component", "hasParents"), (_obj = {
    isActive: (0, _computed.or)("default", "user_selectable"),
    isPendingUpdates: (0, _computed.gt)("remote_theme.commits_behind", 0),
    hasEditedFields: (0, _computed.gt)("editedFields.length", 0),
    hasParents: (0, _computed.gt)("parent_themes.length", 0),
    targets: function targets() {
      var _this = this;

      return [{
        id: 0,
        name: "common"
      }, {
        id: 1,
        name: "desktop",
        icon: "desktop"
      }, {
        id: 2,
        name: "mobile",
        icon: "mobile-alt"
      }, {
        id: 3,
        name: "settings",
        icon: "cog",
        advanced: true
      }, {
        id: 4,
        name: "translations",
        icon: "globe",
        advanced: true,
        customNames: true
      }, {
        id: 5,
        name: "extra_scss",
        icon: "paint-brush",
        advanced: true,
        customNames: true
      }].map(function (target) {
        target["edited"] = _this.hasEdited(target.name);
        target["error"] = _this.hasError(target.name);
        return target;
      });
    },
    fieldNames: function fieldNames() {
      var common = ["scss", "head_tag", "header", "after_header", "body_tag", "footer"];
      var scss_fields = (this.theme_fields || []).filter(function (f) {
        return f.target === "extra_scss" && f.name !== "";
      }).map(function (f) {
        return f.name;
      });

      if (scss_fields.length < 1) {
        scss_fields.push("importable_scss");
      }

      return {
        common: [].concat(common, ["embedded_scss", "color_definitions"]),
        desktop: common,
        mobile: common,
        settings: ["yaml"],
        translations: ["en"].concat(_toConsumableArray((this.theme_fields || []).filter(function (f) {
          return f.target === "translations" && f.name !== "en";
        }).map(function (f) {
          return f.name;
        }))),
        extra_scss: scss_fields
      };
    },
    fields: function fields(fieldNames) {
      var _this2 = this;

      var hash = {};
      Object.keys(fieldNames).forEach(function (target) {
        hash[target] = fieldNames[target].map(function (fieldName) {
          var field = {
            name: fieldName,
            edited: _this2.hasEdited(target, fieldName),
            error: _this2.hasError(target, fieldName)
          };

          if (target === "translations" || target === "extra_scss") {
            field.translatedName = fieldName;
          } else {
            field.translatedName = _I18n.default.t("admin.customize.theme.".concat(fieldName, ".text"));
            field.title = _I18n.default.t("admin.customize.theme.".concat(fieldName, ".title"));
          }

          if (fieldName.indexOf("_tag") > 0) {
            field.icon = "far-file-alt";
          }

          return field;
        });
      });
      return hash;
    },
    themeFields: function themeFields(fields) {
      var _this3 = this;

      if (!fields) {
        this.set("theme_fields", []);
        return {};
      }

      var hash = {};
      fields.forEach(function (field) {
        if (!field.type_id || FIELDS_IDS.includes(field.type_id)) {
          hash[_this3.getKey(field)] = field;
        }
      });
      return hash;
    },
    uploads: function uploads(fields) {
      if (!fields) {
        return [];
      }

      return fields.filter(function (f) {
        return f.target === "common" && f.type_id === THEME_UPLOAD_VAR;
      });
    },
    isBroken: function isBroken(fields) {
      return fields && fields.any(function (field) {
        return field.error && field.error.length > 0;
      });
    },
    editedFields: function editedFields(fields) {
      return fields.filter(function (field) {
        return !(0, _utils.isBlank)(field.value) && field.type_id !== SETTINGS_TYPE_ID;
      });
    },
    remoteError: function remoteError(errorText) {
      if (errorText && errorText.length > 0) {
        return errorText;
      }
    },
    getKey: function getKey(field) {
      return "".concat(field.target, " ").concat(field.name);
    },
    hasEdited: function hasEdited(target, name) {
      if (name) {
        return !(0, _utils.isEmpty)(this.getField(target, name));
      } else {
        var fields = this.theme_fields || [];
        return fields.any(function (field) {
          return field.target === target && !(0, _utils.isEmpty)(field.value);
        });
      }
    },
    hasError: function hasError(target, name) {
      return this.theme_fields.filter(function (f) {
        return f.target === target && (!name || name === f.name);
      }).any(function (f) {
        return f.error;
      });
    },
    getError: function getError(target, name) {
      var themeFields = this.themeFields;
      var key = this.getKey({
        target: target,
        name: name
      });
      var field = themeFields[key];
      return field ? field.error : "";
    },
    getField: function getField(target, name) {
      var themeFields = this.themeFields;
      var key = this.getKey({
        target: target,
        name: name
      });
      var field = themeFields[key];
      return field ? field.value : "";
    },
    removeField: function removeField(field) {
      this.set("changed", true);
      field.upload_id = null;
      field.value = null;
      return this.saveChanges("theme_fields");
    },
    setField: function setField(target, name, value, upload_id, type_id) {
      this.set("changed", true);
      var themeFields = this.themeFields;
      var field = {
        name: name,
        target: target,
        value: value,
        upload_id: upload_id,
        type_id: type_id
      }; // slow path for uploads and so on

      if (type_id && type_id > 1) {
        var fields = this.theme_fields;
        var existing = fields.find(function (f) {
          return f.target === target && f.name === name && f.type_id === type_id;
        });

        if (existing) {
          existing.value = value;
          existing.upload_id = upload_id;
        } else {
          fields.pushObject(field);
        }

        return;
      } // fast path


      var key = this.getKey({
        target: target,
        name: name
      });
      var existingField = themeFields[key];

      if (!existingField) {
        this.theme_fields.pushObject(field);
        themeFields[key] = field;
      } else {
        var changed = (0, _utils.isEmpty)(existingField.value) && !(0, _utils.isEmpty)(value) || (0, _utils.isEmpty)(value) && !(0, _utils.isEmpty)(existingField.value);
        existingField.value = value;

        if (changed) {
          // Observing theme_fields.@each.value is too slow, so manually notify
          // if the value goes to/from blank
          this.notifyPropertyChange("theme_fields.[]");
        }
      }
    },
    child_theme_ids: function child_theme_ids(childThemes) {
      if (childThemes) {
        return childThemes.map(function (theme) {
          return (0, _object.get)(theme, "id");
        });
      }
    },
    warnUnassignedComponent: function warnUnassignedComponent(recent, component, hasParents) {
      return recent && component && !hasParents;
    },
    removeChildTheme: function removeChildTheme(theme) {
      var childThemes = this.childThemes;
      childThemes.removeObject(theme);
      return this.saveChanges("child_theme_ids");
    },
    addChildTheme: function addChildTheme(theme) {
      var childThemes = this.childThemes;

      if (!childThemes) {
        childThemes = [];
        this.set("childThemes", childThemes);
      }

      childThemes.removeObject(theme);
      childThemes.pushObject(theme);
      return this.saveChanges("child_theme_ids");
    },
    addParentTheme: function addParentTheme(theme) {
      var parentThemes = this.parentThemes;

      if (!parentThemes) {
        parentThemes = [];
        this.set("parentThemes", parentThemes);
      }

      parentThemes.addObject(theme);
    },
    checkForUpdates: function checkForUpdates() {
      var _this4 = this;

      return this.save({
        remote_check: true
      }).then(function () {
        return _this4.set("changed", false);
      });
    },
    updateToLatest: function updateToLatest() {
      var _this5 = this;

      return this.save({
        remote_update: true
      }).then(function () {
        return _this5.set("changed", false);
      });
    },
    changed: false,
    saveChanges: function saveChanges() {
      var _this6 = this;

      var hash = this.getProperties.apply(this, arguments);
      return this.save(hash).finally(function () {
        return _this6.set("changed", false);
      }).catch(_ajaxError.popupAjaxError);
    },
    saveSettings: function saveSettings(name, value) {
      var settings = {};
      settings[name] = value;
      return this.save({
        settings: settings
      });
    },
    saveTranslation: function saveTranslation(name, value) {
      return this.save({
        translations: _defineProperty({}, name, value)
      });
    }
  }, (_applyDecoratedDescriptor(_obj, "targets", [_dec], Object.getOwnPropertyDescriptor(_obj, "targets"), _obj), _applyDecoratedDescriptor(_obj, "fieldNames", [_dec2], Object.getOwnPropertyDescriptor(_obj, "fieldNames"), _obj), _applyDecoratedDescriptor(_obj, "fields", [_dec3], Object.getOwnPropertyDescriptor(_obj, "fields"), _obj), _applyDecoratedDescriptor(_obj, "themeFields", [_dec4], Object.getOwnPropertyDescriptor(_obj, "themeFields"), _obj), _applyDecoratedDescriptor(_obj, "uploads", [_dec5], Object.getOwnPropertyDescriptor(_obj, "uploads"), _obj), _applyDecoratedDescriptor(_obj, "isBroken", [_dec6], Object.getOwnPropertyDescriptor(_obj, "isBroken"), _obj), _applyDecoratedDescriptor(_obj, "editedFields", [_dec7], Object.getOwnPropertyDescriptor(_obj, "editedFields"), _obj), _applyDecoratedDescriptor(_obj, "remoteError", [_dec8], Object.getOwnPropertyDescriptor(_obj, "remoteError"), _obj), _applyDecoratedDescriptor(_obj, "child_theme_ids", [_dec9], Object.getOwnPropertyDescriptor(_obj, "child_theme_ids"), _obj), _applyDecoratedDescriptor(_obj, "warnUnassignedComponent", [_dec10], Object.getOwnPropertyDescriptor(_obj, "warnUnassignedComponent"), _obj)), _obj)));

  var _default = Theme;
  _exports.default = _default;
});
define("admin/models/tl3-requirements", ["exports", "@ember/object", "discourse-common/utils/decorators"], function (_exports, _object, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _object.default.extend((_dec = (0, _decorators.default)("days_visited", "time_period"), _dec2 = (0, _decorators.default)("min_days_visited", "time_period"), _dec3 = (0, _decorators.default)("num_topics_replied_to", "min_topics_replied_to"), _dec4 = (0, _decorators.default)("days_visited", "min_days_visited", "num_topics_replied_to", "min_topics_replied_to", "topics_viewed", "min_topics_viewed", "posts_read", "min_posts_read", "num_flagged_posts", "max_flagged_posts", "topics_viewed_all_time", "min_topics_viewed_all_time", "posts_read_all_time", "min_posts_read_all_time", "num_flagged_by_users", "max_flagged_by_users", "num_likes_given", "min_likes_given", "num_likes_received", "min_likes_received", "num_likes_received", "min_likes_received", "num_likes_received_days", "min_likes_received_days", "num_likes_received_users", "min_likes_received_users", "trust_level_locked", "penalty_counts.silenced", "penalty_counts.suspended"), (_obj = {
    days_visited_percent: function days_visited_percent(daysVisited, timePeriod) {
      return Math.round(daysVisited * 100 / timePeriod);
    },
    min_days_visited_percent: function min_days_visited_percent(minDaysVisited, timePeriod) {
      return Math.round(minDaysVisited * 100 / timePeriod);
    },
    capped_topics_replied_to: function capped_topics_replied_to(numReplied, minReplied) {
      return numReplied > minReplied;
    },
    met: function met() {
      return {
        days_visited: this.days_visited >= this.min_days_visited,
        topics_replied_to: this.num_topics_replied_to >= this.min_topics_replied_to,
        topics_viewed: this.topics_viewed >= this.min_topics_viewed,
        posts_read: this.posts_read >= this.min_posts_read,
        topics_viewed_all_time: this.topics_viewed_all_time >= this.min_topics_viewed_all_time,
        posts_read_all_time: this.posts_read_all_time >= this.min_posts_read_all_time,
        flagged_posts: this.num_flagged_posts <= this.max_flagged_posts,
        flagged_by_users: this.num_flagged_by_users <= this.max_flagged_by_users,
        likes_given: this.num_likes_given >= this.min_likes_given,
        likes_received: this.num_likes_received >= this.min_likes_received,
        likes_received_days: this.num_likes_received_days >= this.min_likes_received_days,
        likes_received_users: this.num_likes_received_users >= this.min_likes_received_users,
        level_locked: this.trust_level_locked,
        silenced: this.get("penalty_counts.silenced") === 0,
        suspended: this.get("penalty_counts.suspended") === 0
      };
    }
  }, (_applyDecoratedDescriptor(_obj, "days_visited_percent", [_dec], Object.getOwnPropertyDescriptor(_obj, "days_visited_percent"), _obj), _applyDecoratedDescriptor(_obj, "min_days_visited_percent", [_dec2], Object.getOwnPropertyDescriptor(_obj, "min_days_visited_percent"), _obj), _applyDecoratedDescriptor(_obj, "capped_topics_replied_to", [_dec3], Object.getOwnPropertyDescriptor(_obj, "capped_topics_replied_to"), _obj), _applyDecoratedDescriptor(_obj, "met", [_dec4], Object.getOwnPropertyDescriptor(_obj, "met"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/models/user-field", ["exports", "@ember/object", "discourse/models/rest", "discourse/lib/computed"], function (_exports, _object, _rest, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var UserField = _rest.default.extend();

  var UserFieldType = _object.default.extend({
    name: (0, _computed.i18n)("id", "admin.user_fields.field_types.%@")
  });

  UserField.reopenClass({
    fieldTypes: function fieldTypes() {
      if (!this._fieldTypes) {
        this._fieldTypes = [UserFieldType.create({
          id: "text"
        }), UserFieldType.create({
          id: "confirm"
        }), UserFieldType.create({
          id: "dropdown",
          hasOptions: true
        }), UserFieldType.create({
          id: "multiselect",
          hasOptions: true
        })];
      }

      return this._fieldTypes;
    },
    fieldTypeById: function fieldTypeById(id) {
      return this.fieldTypes().findBy("id", id);
    }
  });
  var _default = UserField;
  _exports.default = _default;
});
define("admin/models/version-check", ["exports", "@ember/object", "discourse/lib/ajax", "discourse-common/utils/decorators"], function (_exports, _object, _ajax, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var VersionCheck = _object.default.extend((_dec = (0, _decorators.default)("updated_at"), _dec2 = (0, _decorators.default)("missing_versions_count"), _dec3 = (0, _decorators.default)("missing_versions_count"), _dec4 = (0, _decorators.default)("installed_sha"), _dec5 = (0, _decorators.default)("installed_sha"), (_obj = {
    noCheckPerformed: function noCheckPerformed(updatedAt) {
      return updatedAt === null;
    },
    upToDate: function upToDate(missingVersionsCount) {
      return missingVersionsCount === 0 || missingVersionsCount === null;
    },
    behindByOneVersion: function behindByOneVersion(missingVersionsCount) {
      return missingVersionsCount === 1;
    },
    gitLink: function gitLink(installedSHA) {
      if (installedSHA) {
        return "https://github.com/discourse/discourse/commits/".concat(installedSHA);
      }
    },
    shortSha: function shortSha(installedSHA) {
      if (installedSHA) {
        return installedSHA.substr(0, 10);
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "noCheckPerformed", [_dec], Object.getOwnPropertyDescriptor(_obj, "noCheckPerformed"), _obj), _applyDecoratedDescriptor(_obj, "upToDate", [_dec2], Object.getOwnPropertyDescriptor(_obj, "upToDate"), _obj), _applyDecoratedDescriptor(_obj, "behindByOneVersion", [_dec3], Object.getOwnPropertyDescriptor(_obj, "behindByOneVersion"), _obj), _applyDecoratedDescriptor(_obj, "gitLink", [_dec4], Object.getOwnPropertyDescriptor(_obj, "gitLink"), _obj), _applyDecoratedDescriptor(_obj, "shortSha", [_dec5], Object.getOwnPropertyDescriptor(_obj, "shortSha"), _obj)), _obj)));

  VersionCheck.reopenClass({
    find: function find() {
      return (0, _ajax.ajax)("/admin/version_check").then(function (json) {
        return VersionCheck.create(json);
      });
    }
  });
  var _default = VersionCheck;
  _exports.default = _default;
});
define("admin/models/watched-word", ["exports", "@ember/object", "I18n", "discourse/lib/ajax"], function (_exports, _object, _I18n, _ajax) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var WatchedWord = _object.default.extend({
    save: function save() {
      return (0, _ajax.ajax)("/admin/customize/watched_words" + (this.id ? "/" + this.id : "") + ".json", {
        type: this.id ? "PUT" : "POST",
        data: {
          word: this.word,
          replacement: this.replacement,
          action_key: this.action
        },
        dataType: "json"
      });
    },
    destroy: function destroy() {
      return (0, _ajax.ajax)("/admin/customize/watched_words/" + this.id + ".json", {
        type: "DELETE"
      });
    }
  });

  WatchedWord.reopenClass({
    findAll: function findAll() {
      return (0, _ajax.ajax)("/admin/customize/watched_words.json").then(function (list) {
        var actions = {};
        list.actions.forEach(function (action) {
          actions[action] = [];
        });
        list.words.forEach(function (watchedWord) {
          actions[watchedWord.action].pushObject(WatchedWord.create(watchedWord));
        });
        return Object.keys(actions).map(function (nameKey) {
          return _object.default.create({
            nameKey: nameKey,
            name: _I18n.default.t("admin.watched_words.actions." + nameKey),
            words: actions[nameKey],
            compiledRegularExpression: list.compiled_regular_expressions[nameKey]
          });
        });
      });
    }
  });
  var _default = WatchedWord;
  _exports.default = _default;
});
define("admin/models/web-hook", ["exports", "discourse-common/utils/decorators", "discourse/models/category", "discourse/models/group", "discourse/models/rest", "discourse/models/site", "@ember/utils"], function (_exports, _decorators, _category, _group, _rest, _site, _utils) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _obj, _init;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _rest.default.extend((_dec = (0, _decorators.default)("wildcard_web_hook"), _dec2 = (0, _decorators.default)("category_ids"), _dec3 = (0, _decorators.observes)("group_ids"), _dec4 = (0, _decorators.default)("wildcard_web_hook", "web_hook_event_types.[]"), (_obj = {
    content_type: 1,
    // json
    last_delivery_status: 1,
    // inactive
    wildcard_web_hook: false,
    verify_certificate: true,
    active: false,
    web_hook_event_types: null,
    groupsFilterInName: null,
    webHookType: {
      get: function get(wildcard) {
        return wildcard ? "wildcard" : "individual";
      },
      set: function set(value) {
        this.set("wildcard_web_hook", value === "wildcard");
      }
    },
    categories: function categories(categoryIds) {
      return _category.default.findByIds(categoryIds);
    },
    updateGroupsFilter: function updateGroupsFilter() {
      var groupIds = this.group_ids;
      this.set("groupsFilterInName", _site.default.currentProp("groups").reduce(function (groupNames, g) {
        if (groupIds.includes(g.id)) {
          groupNames.push(g.name);
        }

        return groupNames;
      }, []));
    },
    groupFinder: function groupFinder(term) {
      return _group.default.findAll({
        term: term,
        ignore_automatic: false
      });
    },
    description: function description(isWildcardWebHook, types) {
      var desc = "";
      types.forEach(function (type) {
        var name = "".concat(type.name.toLowerCase(), "_event");
        desc += desc !== "" ? ", ".concat(name) : name;
      });
      return isWildcardWebHook ? "*" : desc;
    },
    createProperties: function createProperties() {
      var types = this.web_hook_event_types;
      var categoryIds = this.categories.map(function (c) {
        return c.id;
      });
      var tagNames = this.tag_names; // Hack as {{group-selector}} accepts a comma-separated string as data source, but
      // we use an array to populate the datasource above.

      var groupsFilter = this.groupsFilterInName;
      var groupNames = typeof groupsFilter === "string" ? groupsFilter.split(",") : groupsFilter;
      return {
        payload_url: this.payload_url,
        content_type: this.content_type,
        secret: this.secret,
        wildcard_web_hook: this.wildcard_web_hook,
        verify_certificate: this.verify_certificate,
        active: this.active,
        web_hook_event_type_ids: (0, _utils.isEmpty)(types) ? [null] : types.map(function (type) {
          return type.id;
        }),
        category_ids: (0, _utils.isEmpty)(categoryIds) ? [null] : categoryIds,
        tag_names: (0, _utils.isEmpty)(tagNames) ? [null] : tagNames,
        group_ids: (0, _utils.isEmpty)(groupNames) || (0, _utils.isEmpty)(groupNames[0]) ? [null] : _site.default.currentProp("groups").reduce(function (groupIds, g) {
          if (groupNames.includes(g.name)) {
            groupIds.push(g.id);
          }

          return groupIds;
        }, [])
      };
    },
    updateProperties: function updateProperties() {
      return this.createProperties();
    }
  }, (_applyDecoratedDescriptor(_obj, "webHookType", [_dec], (_init = Object.getOwnPropertyDescriptor(_obj, "webHookType"), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
      return _init;
    }
  }), _obj), _applyDecoratedDescriptor(_obj, "categories", [_dec2], Object.getOwnPropertyDescriptor(_obj, "categories"), _obj), _applyDecoratedDescriptor(_obj, "updateGroupsFilter", [_dec3], Object.getOwnPropertyDescriptor(_obj, "updateGroupsFilter"), _obj), _applyDecoratedDescriptor(_obj, "description", [_dec4], Object.getOwnPropertyDescriptor(_obj, "description"), _obj)), _obj)));

  _exports.default = _default;
});
define("admin/routes/admin-api-index", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    beforeModel: function beforeModel() {
      this.transitionTo("adminApiKeys");
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-api-keys-index", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    model: function model() {
      return this.store.findAll("api-key");
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-api-keys-new", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    model: function model() {
      return this.store.createRecord("api-key");
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-api-keys-show", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    model: function model(params) {
      return this.store.find("api-key", params.api_key_id);
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-api-keys", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    actions: {
      show: function show(apiKey) {
        this.transitionTo("adminApiKeys.show", apiKey.id);
      },
      new: function _new() {
        this.transitionTo("adminApiKeys.new");
      }
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-backups-index", ["exports", "admin/models/backup", "@ember/routing/route"], function (_exports, _backup, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    activate: function activate() {
      var _this = this;

      this.messageBus.subscribe("/admin/backups", function (backups) {
        return _this.controller.set("model", backups.map(function (backup) {
          return _backup.default.create(backup);
        }));
      });
    },
    model: function model() {
      return _backup.default.find().then(function (backups) {
        return backups.map(function (backup) {
          return _backup.default.create(backup);
        });
      });
    },
    deactivate: function deactivate() {
      this.messageBus.unsubscribe("/admin/backups");
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-backups-logs", ["exports", "@ember/object", "discourse/lib/preload-store", "@ember/routing/route"], function (_exports, _object, _preloadStore, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    // since the logs are pushed via the message bus
    // we only want to preload them (hence the beforeModel hook)
    beforeModel: function beforeModel() {
      var logs = this.controllerFor("adminBackupsLogs").get("logs"); // preload the logs if any

      _preloadStore.default.getAndRemove("logs").then(function (preloadedLogs) {
        if (preloadedLogs && preloadedLogs.length) {
          // we need to filter out message like: "[SUCCESS]"
          // and convert POJOs to Ember Objects
          var newLogs = preloadedLogs.filter(function (log) {
            return log.message.length > 0 && log.message[0] !== "[";
          }).map(function (log) {
            return _object.default.create(log);
          });
          logs.pushObjects(newLogs);
        }
      });
    },
    setupController: function setupController() {
      /* prevent default behavior */
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-backups", ["exports", "admin/models/backup", "admin/models/backup-status", "discourse/routes/discourse", "@ember/object", "I18n", "discourse/lib/preload-store", "discourse/models/user", "discourse/lib/ajax", "bootbox", "discourse/lib/ajax-error", "discourse-common/lib/get-url", "discourse/lib/show-modal"], function (_exports, _backup, _backupStatus, _discourse, _object, _I18n, _preloadStore, _user, _ajax, _bootbox, _ajaxError, _getUrl, _showModal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var LOG_CHANNEL = "/admin/backups/logs";

  var _default = _discourse.default.extend({
    activate: function activate() {
      var _this = this;

      this.messageBus.subscribe(LOG_CHANNEL, function (log) {
        if (log.message === "[STARTED]") {
          _user.default.currentProp("hideReadOnlyAlert", true);

          _this.controllerFor("adminBackups").set("model.isOperationRunning", true);

          _this.controllerFor("adminBackupsLogs").get("logs").clear();
        } else if (log.message === "[FAILED]") {
          _this.controllerFor("adminBackups").set("model.isOperationRunning", false);

          _bootbox.default.alert(_I18n.default.t("admin.backups.operations.failed", {
            operation: log.operation
          }));
        } else if (log.message === "[SUCCESS]") {
          _user.default.currentProp("hideReadOnlyAlert", false);

          _this.controllerFor("adminBackups").set("model.isOperationRunning", false);

          if (log.operation === "restore") {
            // redirect to homepage when the restore is done (session might be lost)
            window.location = (0, _getUrl.default)("/");
          }
        } else {
          _this.controllerFor("adminBackupsLogs").get("logs").pushObject(_object.default.create(log));
        }
      });
    },
    model: function model() {
      return _preloadStore.default.getAndRemove("operations_status", function () {
        return (0, _ajax.ajax)("/admin/backups/status.json");
      }).then(function (status) {
        return _backupStatus.default.create({
          isOperationRunning: status.is_operation_running,
          canRollback: status.can_rollback,
          allowRestore: status.allow_restore
        });
      });
    },
    deactivate: function deactivate() {
      this.messageBus.unsubscribe(LOG_CHANNEL);
    },
    actions: {
      showStartBackupModal: function showStartBackupModal() {
        (0, _showModal.default)("admin-start-backup", {
          admin: true
        });
        this.controllerFor("modal").set("modalClass", "start-backup-modal");
      },
      startBackup: function startBackup(withUploads) {
        this.transitionTo("admin.backups.logs");

        _backup.default.start(withUploads).then(function (result) {
          if (!result.success) {
            _bootbox.default.alert(result.message);
          }
        });
      },
      destroyBackup: function destroyBackup(backup) {
        var _this2 = this;

        _bootbox.default.confirm(_I18n.default.t("admin.backups.operations.destroy.confirm"), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (confirmed) {
          if (confirmed) {
            backup.destroy().then(function () {
              return _this2.controllerFor("adminBackupsIndex").get("model").removeObject(backup);
            });
          }
        });
      },
      startRestore: function startRestore(backup) {
        var _this3 = this;

        _bootbox.default.confirm(_I18n.default.t("admin.backups.operations.restore.confirm"), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (confirmed) {
          if (confirmed) {
            _this3.transitionTo("admin.backups.logs");

            backup.restore();
          }
        });
      },
      cancelOperation: function cancelOperation() {
        var _this4 = this;

        _bootbox.default.confirm(_I18n.default.t("admin.backups.operations.cancel.confirm"), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (confirmed) {
          if (confirmed) {
            _backup.default.cancel().then(function () {
              _this4.controllerFor("adminBackups").set("model.isOperationRunning", false);
            });
          }
        });
      },
      rollback: function rollback() {
        _bootbox.default.confirm(_I18n.default.t("admin.backups.operations.rollback.confirm"), _I18n.default.t("no_value"), _I18n.default.t("yes_value"), function (confirmed) {
          if (confirmed) {
            _backup.default.rollback().then(function (result) {
              if (!result.success) {
                _bootbox.default.alert(result.message);
              } else {
                // redirect to homepage (session might be lost)
                window.location = (0, _getUrl.default)("/");
              }
            });
          }
        });
      },
      uploadSuccess: function uploadSuccess(filename) {
        _bootbox.default.alert(_I18n.default.t("admin.backups.upload.success", {
          filename: filename
        }));
      },
      uploadError: function uploadError(filename, message) {
        _bootbox.default.alert(_I18n.default.t("admin.backups.upload.error", {
          filename: filename,
          message: message
        }));
      },
      remoteUploadSuccess: function remoteUploadSuccess() {
        var _this5 = this;

        _backup.default.find().then(function (backups) {
          return backups.map(function (backup) {
            return _backup.default.create(backup);
          });
        }).then(function (backups) {
          _this5.controllerFor("adminBackupsIndex").set("model", backups.map(function (backup) {
            return _backup.default.create(backup);
          }));
        }).catch(function (error) {
          _bootbox.default.alert(_I18n.default.t("admin.backups.backup_storage_error", {
            error_message: (0, _ajaxError.extractError)(error)
          }));

          return [];
        });
      }
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-badges-award", ["exports", "discourse/routes/discourse"], function (_exports, _discourse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    model: function model(params) {
      if (params.badge_id !== "new") {
        return this.modelFor("adminBadges").findBy("id", parseInt(params.badge_id, 10));
      }
    },
    setupController: function setupController(controller) {
      this._super.apply(this, arguments);

      controller.resetState();
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-badges-index", ["exports", "@ember/routing/route", "discourse/lib/text"], function (_exports, _route, _text) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var badgeIntroLinks = [{
    text: "admin.badges.badge_intro.what_are_badges_title",
    href: "https://meta.discourse.org/t/32540",
    icon: "book"
  }, {
    text: "admin.badges.badge_intro.badge_query_examples_title",
    href: "https://meta.discourse.org/t/18978",
    icon: "book"
  }];

  var _default = _route.default.extend({
    setupController: function setupController(controller) {
      controller.setProperties({
        badgeIntroLinks: badgeIntroLinks,
        badgeIntroEmoji: (0, _text.emojiUrlFor)("woman_student:t4")
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-badges-show", ["exports", "discourse/models/badge", "I18n", "@ember/routing/route", "discourse/lib/ajax", "bootbox", "@ember/object", "discourse/lib/show-modal"], function (_exports, _badge, _I18n, _route, _ajax, _bootbox, _object, _showModal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    serialize: function serialize(m) {
      return {
        badge_id: (0, _object.get)(m, "id") || "new"
      };
    },
    model: function model(params) {
      if (params.badge_id === "new") {
        return _badge.default.create({
          name: _I18n.default.t("admin.badges.new_badge")
        });
      }

      return this.modelFor("adminBadges").findBy("id", parseInt(params.badge_id, 10));
    },
    setupController: function setupController(controller, model) {
      this._super.apply(this, arguments);

      if (model.image_url) {
        controller.showImageUploader();
      } else if (model.icon) {
        controller.showIconSelector();
      }
    },
    actions: {
      saveError: function saveError(e) {
        var msg = _I18n.default.t("generic_error");

        if (e.responseJSON && e.responseJSON.errors) {
          msg = _I18n.default.t("generic_error_with_reason", {
            error: e.responseJSON.errors.join(". ")
          });
        }

        _bootbox.default.alert(msg);
      },
      editGroupings: function editGroupings() {
        var model = this.controllerFor("admin-badges").get("badgeGroupings");
        (0, _showModal.default)("admin-edit-badge-groupings", {
          model: model,
          admin: true
        });
      },
      preview: function preview(badge, explain) {
        badge.set("preview_loading", true);
        (0, _ajax.ajax)("/admin/badges/preview.json", {
          type: "POST",
          data: {
            sql: badge.get("query"),
            target_posts: !!badge.get("target_posts"),
            trigger: badge.get("trigger"),
            explain: explain
          }
        }).then(function (model) {
          badge.set("preview_loading", false);
          (0, _showModal.default)("admin-badge-preview", {
            model: model,
            admin: true
          });
        }).catch(function (error) {
          badge.set("preview_loading", false); // eslint-disable-next-line no-console

          console.error(error);

          _bootbox.default.alert("Network error");
        });
      }
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-badges", ["exports", "discourse/models/badge", "discourse/models/badge-grouping", "discourse/routes/discourse", "I18n", "discourse/lib/ajax"], function (_exports, _badge, _badgeGrouping, _discourse, _I18n, _ajax) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    _json: null,
    model: function model() {
      var _this = this;

      return (0, _ajax.ajax)("/admin/badges.json").then(function (json) {
        _this._json = json;
        return _badge.default.createFromJson(json);
      });
    },
    setupController: function setupController(controller, model) {
      var json = this._json;
      var badgeTriggers = [];
      var badgeGroupings = [];
      Object.keys(json.admin_badges.triggers).forEach(function (k) {
        var id = json.admin_badges.triggers[k];
        badgeTriggers.push({
          id: id,
          name: _I18n.default.t("admin.badges.trigger_type." + k)
        });
      });
      json.badge_groupings.forEach(function (badgeGroupingJson) {
        badgeGroupings.push(_badgeGrouping.default.create(badgeGroupingJson));
      });
      controller.setProperties({
        badgeGroupings: badgeGroupings,
        badgeTypes: json.badge_types,
        protectedSystemFields: json.admin_badges.protected_system_fields,
        badgeTriggers: badgeTriggers,
        model: model
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-customize-colors-show", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    model: function model(params) {
      var all = this.modelFor("adminCustomize.colors");
      var model = all.findBy("id", parseInt(params.scheme_id, 10));
      return model ? model : this.replaceWith("adminCustomize.colors.index");
    },
    serialize: function serialize(model) {
      return {
        scheme_id: model.get("id")
      };
    },
    setupController: function setupController(controller, model) {
      controller.set("model", model);
      controller.set("allColors", this.modelFor("adminCustomize.colors"));
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-customize-colors", ["exports", "admin/models/color-scheme", "@ember/routing/route"], function (_exports, _colorScheme, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    model: function model() {
      return _colorScheme.default.findAll();
    },
    setupController: function setupController(controller, model) {
      controller.set("model", model);
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-customize-email-style-edit", ["exports", "I18n", "@ember/routing/route", "bootbox"], function (_exports, _I18n, _route, _bootbox) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    model: function model(params) {
      return {
        model: this.modelFor("adminCustomizeEmailStyle"),
        fieldName: params.field_name
      };
    },
    setupController: function setupController(controller, model) {
      controller.setProperties({
        fieldName: model.fieldName,
        model: model.model
      });
      this._shouldAlertUnsavedChanges = true;
    },
    actions: {
      willTransition: function willTransition(transition) {
        var _this = this;

        if (this.get("controller.model.changed") && this._shouldAlertUnsavedChanges && transition.intent.name !== this.routeName) {
          transition.abort();

          _bootbox.default.confirm(_I18n.default.t("admin.customize.theme.unsaved_changes_alert"), _I18n.default.t("admin.customize.theme.discard"), _I18n.default.t("admin.customize.theme.stay"), function (result) {
            if (!result) {
              _this._shouldAlertUnsavedChanges = false;
              transition.retry();
            }
          });
        }
      }
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-customize-email-style-index", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    beforeModel: function beforeModel() {
      this.replaceWith("adminCustomizeEmailStyle.edit", "html");
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-customize-email-style", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    model: function model() {
      return this.store.find("email-style");
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-customize-email-templates-edit", ["exports", "@ember/routing/route", "discourse/mixins/scroll-top"], function (_exports, _route, _scrollTop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    model: function model(params) {
      var all = this.modelFor("adminCustomizeEmailTemplates");
      return all.findBy("id", params.id);
    },
    setupController: function setupController(controller, emailTemplate) {
      controller.setProperties({
        emailTemplate: emailTemplate,
        saved: false
      });
      (0, _scrollTop.scrollTop)();
    },
    deactivate: function deactivate() {
      this.controller.set("emailTemplate", null);
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-customize-email-templates", ["exports", "@ember/routing/route", "@ember/object"], function (_exports, _route, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _obj;

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  var _default = _route.default.extend((_obj = {
    model: function model() {
      return this.store.findAll("email-template");
    },
    setupController: function setupController(controller, model) {
      controller.set("emailTemplates", model);
    },
    didTransition: function didTransition() {
      var editController = this.controllerFor("adminCustomizeEmailTemplates.edit");

      if (!editController.emailTemplate) {
        this.transitionTo("adminCustomizeEmailTemplates.edit", this.controller.get("sortedTemplates.firstObject"));
      }
    }
  }, (_applyDecoratedDescriptor(_obj, "didTransition", [_object.action], Object.getOwnPropertyDescriptor(_obj, "didTransition"), _obj)), _obj));

  _exports.default = _default;
});
define("admin/routes/admin-customize-index", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    beforeModel: function beforeModel() {
      if (this.currentUser.admin) {
        this.transitionTo("adminCustomizeThemes");
      } else {
        this.transitionTo("adminWatchedWords");
      }
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-customize-robots-txt", ["exports", "@ember/routing/route", "discourse/lib/ajax"], function (_exports, _route, _ajax) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    model: function model() {
      return (0, _ajax.ajax)("/admin/customize/robots");
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-customize-themes-edit", ["exports", "I18n", "@ember/routing/route", "bootbox"], function (_exports, _I18n, _route, _bootbox) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    model: function model(params) {
      var all = this.modelFor("adminCustomizeThemes");
      var model = all.findBy("id", parseInt(params.theme_id, 10));
      return model ? {
        model: model,
        target: params.target,
        field_name: params.field_name
      } : this.replaceWith("adminCustomizeThemes.index");
    },
    serialize: function serialize(wrapper) {
      return {
        model: wrapper.model,
        target: wrapper.target || "common",
        field_name: wrapper.field_name || "scss",
        theme_id: wrapper.model.get("id")
      };
    },
    setupController: function setupController(controller, wrapper) {
      var fields = wrapper.model.get("fields")[wrapper.target].map(function (f) {
        return f.name;
      });

      if (wrapper.model.remote_theme && wrapper.model.remote_theme.is_git) {
        this.transitionTo("adminCustomizeThemes.index");
        return;
      }

      if (!fields.includes(wrapper.field_name)) {
        this.transitionTo("adminCustomizeThemes.edit", wrapper.model.id, wrapper.target, fields[0]);
        return;
      }

      controller.set("model", wrapper.model);
      controller.setTargetName(wrapper.target || "common");
      controller.set("fieldName", wrapper.field_name || "scss");
      this.controllerFor("adminCustomizeThemes").set("editingTheme", true);
      this.set("shouldAlertUnsavedChanges", true);
    },
    actions: {
      willTransition: function willTransition(transition) {
        var _this = this;

        if (this.get("controller.model.changed") && this.shouldAlertUnsavedChanges && transition.intent.name !== this.routeName) {
          transition.abort();

          _bootbox.default.confirm(_I18n.default.t("admin.customize.theme.unsaved_changes_alert"), _I18n.default.t("admin.customize.theme.discard"), _I18n.default.t("admin.customize.theme.stay"), function (result) {
            if (!result) {
              _this.set("shouldAlertUnsavedChanges", false);

              transition.retry();
            }
          });
        }
      }
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-customize-themes-index", ["exports", "@ember/routing/route", "discourse/lib/text"], function (_exports, _route, _text) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  var externalResources = [{
    key: "admin.customize.theme.beginners_guide_title",
    link: "https://meta.discourse.org/t/91966",
    icon: "book"
  }, {
    key: "admin.customize.theme.developers_guide_title",
    link: "https://meta.discourse.org/t/93648",
    icon: "book"
  }, {
    key: "admin.customize.theme.browse_themes",
    link: "https://meta.discourse.org/c/theme",
    icon: "paint-brush"
  }];

  var _default = _route.default.extend({
    setupController: function setupController(controller) {
      this._super.apply(this, arguments);

      this.controllerFor("adminCustomizeThemes").set("editingTheme", false);
      controller.setProperties({
        externalResources: externalResources,
        womanArtistEmojiURL: (0, _text.emojiUrlFor)("woman_artist:t5")
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-customize-themes-show", ["exports", "admin/models/theme", "I18n", "@ember/routing/route", "discourse/mixins/scroll-top"], function (_exports, _theme, _I18n, _route, _scrollTop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.showUnassignedComponentWarning = showUnassignedComponentWarning;
  _exports.default = void 0;

  function showUnassignedComponentWarning(theme, callback) {
    bootbox.confirm(_I18n.default.t("admin.customize.theme.unsaved_parent_themes"), _I18n.default.t("admin.customize.theme.discard"), _I18n.default.t("admin.customize.theme.stay"), function (result) {
      if (!result) {
        theme.set("recentlyInstalled", false);
      }

      callback(result);
    });
  }

  var _default = _route.default.extend({
    serialize: function serialize(model) {
      return {
        theme_id: model.get("id")
      };
    },
    model: function model(params) {
      var all = this.modelFor("adminCustomizeThemes");
      var model = all.findBy("id", parseInt(params.theme_id, 10));
      return model ? model : this.replaceWith("adminCustomizeThemes.index");
    },
    setupController: function setupController(controller, model) {
      this._super.apply(this, arguments);

      var parentController = this.controllerFor("adminCustomizeThemes");
      parentController.setProperties({
        editingTheme: false,
        currentTab: model.get("component") ? _theme.COMPONENTS : _theme.THEMES
      });
      controller.setProperties({
        model: model,
        parentController: parentController,
        allThemes: parentController.get("model"),
        colorSchemeId: model.get("color_scheme_id"),
        colorSchemes: parentController.get("model.extras.color_schemes"),
        editingName: false
      });
      this.handleHighlight(model);
    },
    deactivate: function deactivate() {
      this.handleHighlight();
    },
    handleHighlight: function handleHighlight(theme) {
      this.get("controller.allThemes").filter(function (t) {
        return t.get("selected");
      }).forEach(function (t) {
        return t.set("selected", false);
      });

      if (theme) {
        theme.set("selected", true);
      }
    },
    actions: {
      didTransition: function didTransition() {
        (0, _scrollTop.scrollTop)();
      },
      willTransition: function willTransition(transition) {
        var model = this.controller.model;

        if (model.warnUnassignedComponent) {
          transition.abort();
          showUnassignedComponentWarning(model, function (result) {
            if (!result) {
              transition.retry();
            }
          });
        }
      }
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-customize-themes", ["exports", "@ember/routing/route", "discourse/lib/show-modal", "@ember/runloop", "admin/routes/admin-customize-themes-show"], function (_exports, _route, _showModal, _runloop, _adminCustomizeThemesShow) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    queryParams: {
      repoUrl: null,
      repoName: null
    },
    model: function model() {
      return this.store.findAll("theme");
    },
    setupController: function setupController(controller, model) {
      this._super(controller, model);

      controller.set("editingTheme", false);

      if (controller.repoUrl) {
        (0, _runloop.next)(function () {
          (0, _showModal.default)("admin-install-theme", {
            admin: true
          }).setProperties({
            uploadUrl: controller.repoUrl,
            uploadName: controller.repoName,
            selection: "directRepoInstall"
          });
        });
      }
    },
    actions: {
      installModal: function installModal() {
        var currentTheme = this.controllerFor("adminCustomizeThemes.show").model;

        if (currentTheme && currentTheme.warnUnassignedComponent) {
          (0, _adminCustomizeThemesShow.showUnassignedComponentWarning)(currentTheme, function (result) {
            if (!result) {
              (0, _showModal.default)("admin-install-theme", {
                admin: true
              });
            }
          });
        } else {
          (0, _showModal.default)("admin-install-theme", {
            admin: true
          });
        }
      },
      addTheme: function addTheme(theme) {
        this.refresh();
        theme.setProperties({
          recentlyInstalled: true
        });
        this.transitionTo("adminCustomizeThemes.show", theme.get("id"), {
          queryParams: {
            repoName: null,
            repoUrl: null
          }
        });
      }
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-dashboard-general", ["exports", "discourse/routes/discourse"], function (_exports, _discourse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    activate: function activate() {
      this.controllerFor("admin-dashboard-general").fetchDashboard();
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-dashboard-reports", ["exports", "discourse/routes/discourse", "discourse/lib/ajax"], function (_exports, _discourse, _ajax) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    model: function model() {
      return (0, _ajax.ajax)("/admin/reports");
    },
    setupController: function setupController(controller, model) {
      controller.setProperties({
        model: model.reports,
        filter: null
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-dashboard", ["exports", "discourse/routes/discourse", "discourse/mixins/scroll-top"], function (_exports, _discourse, _scrollTop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    activate: function activate() {
      this.controllerFor("admin-dashboard").fetchProblems();
      this.controllerFor("admin-dashboard").fetchDashboard();
      (0, _scrollTop.scrollTop)();
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-email-bounced", ["exports", "admin/routes/admin-email-logs", "discourse/lib/show-modal"], function (_exports, _adminEmailLogs, _showModal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _adminEmailLogs.default.extend({
    status: "bounced",
    actions: {
      showIncomingEmail: function showIncomingEmail(id) {
        (0, _showModal.default)("admin-incoming-email", {
          admin: true
        });
        this.controllerFor("modals/admin-incoming-email").loadFromBounced(id);
      }
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-email-incomings", ["exports", "discourse/routes/discourse", "admin/models/incoming-email"], function (_exports, _discourse, _incomingEmail) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    model: function model() {
      return _incomingEmail.default.findAll({
        status: this.status
      });
    },
    setupController: function setupController(controller, model) {
      controller.set("model", model);
      controller.set("filter.status", this.status);
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-email-index", ["exports", "discourse/routes/discourse", "admin/models/email-settings"], function (_exports, _discourse, _emailSettings) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    model: function model() {
      return _emailSettings.default.find();
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-email-logs", ["exports", "discourse/routes/discourse"], function (_exports, _discourse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    setupController: function setupController(controller) {
      controller.setProperties({
        loading: true,
        filter: {
          status: this.status
        }
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-email-preview-digest", ["exports", "admin/models/email-preview", "discourse/routes/discourse"], function (_exports, _emailPreview, _discourse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    model: function model() {
      return _emailPreview.default.findDigest(this.currentUser.get("username"));
    },
    afterModel: function afterModel(model) {
      var controller = this.controllerFor("adminEmailPreviewDigest");
      controller.setProperties({
        model: model,
        username: this.currentUser.get("username"),
        lastSeen: (0, _emailPreview.oneWeekAgo)(),
        showHtml: true
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-email-received", ["exports", "admin/routes/admin-email-incomings"], function (_exports, _adminEmailIncomings) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _adminEmailIncomings.default.extend({
    status: "received"
  });

  _exports.default = _default;
});
define("admin/routes/admin-email-rejected", ["exports", "admin/routes/admin-email-incomings", "discourse/lib/show-modal"], function (_exports, _adminEmailIncomings, _showModal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _adminEmailIncomings.default.extend({
    status: "rejected",
    actions: {
      showIncomingEmail: function showIncomingEmail(id) {
        (0, _showModal.default)("admin-incoming-email", {
          admin: true
        });
        this.controllerFor("modals/admin-incoming-email").load(id);
      }
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-email-sent", ["exports", "admin/routes/admin-email-logs"], function (_exports, _adminEmailLogs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _adminEmailLogs.default.extend({
    status: "sent"
  });

  _exports.default = _default;
});
define("admin/routes/admin-email-skipped", ["exports", "admin/routes/admin-email-logs"], function (_exports, _adminEmailLogs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _adminEmailLogs.default.extend({
    status: "skipped"
  });

  _exports.default = _default;
});
define("admin/routes/admin-embedding", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    model: function model() {
      return this.store.find("embedding");
    },
    setupController: function setupController(controller, model) {
      controller.set("embedding", model);
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-emojis", ["exports", "discourse/routes/discourse", "@ember/object", "discourse/lib/ajax"], function (_exports, _discourse, _object, _ajax) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    model: function model() {
      return (0, _ajax.ajax)("/admin/customize/emojis.json").then(function (emojis) {
        return emojis.map(function (emoji) {
          return _object.default.create(emoji);
        });
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-flags-posts-active", ["exports", "discourse/routes/discourse"], function (_exports, _discourse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    model: function model() {
      return this.store.findAll("flagged-post", {
        filter: "active"
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-flags-posts-old", ["exports", "discourse/routes/discourse"], function (_exports, _discourse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    model: function model() {
      return this.store.findAll("flagged-post", {
        filter: "old"
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-flags-topics-index", ["exports", "discourse/routes/discourse"], function (_exports, _discourse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    model: function model() {
      return this.store.findAll("flagged-topic");
    },
    setupController: function setupController(controller, model) {
      controller.set("flaggedTopics", model);
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-logs-index", ["exports", "discourse/routes/discourse"], function (_exports, _discourse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    redirect: function redirect() {
      this.transitionTo("adminLogs.staffActionLogs");
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-logs-screened-emails", ["exports", "discourse/routes/discourse"], function (_exports, _discourse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    renderTemplate: function renderTemplate() {
      this.render("admin/templates/logs/screened-emails", {
        into: "adminLogs"
      });
    },
    setupController: function setupController() {
      return this.controllerFor("adminLogsScreenedEmails").show();
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-logs-screened-ip-addresses", ["exports", "discourse/routes/discourse"], function (_exports, _discourse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    renderTemplate: function renderTemplate() {
      this.render("admin/templates/logs/screened-ip-addresses", {
        into: "adminLogs"
      });
    },
    setupController: function setupController() {
      return this.controllerFor("adminLogsScreenedIpAddresses").show();
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-logs-screened-urls", ["exports", "discourse/routes/discourse"], function (_exports, _discourse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    renderTemplate: function renderTemplate() {
      this.render("admin/templates/logs/screened-urls", {
        into: "adminLogs"
      });
    },
    setupController: function setupController() {
      return this.controllerFor("adminLogsScreenedUrls").show();
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-logs-staff-action-logs", ["exports", "discourse/routes/discourse", "@ember/object", "discourse/lib/show-modal"], function (_exports, _discourse, _object, _showModal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    queryParams: {
      filters: {
        refreshModel: true
      }
    },
    beforeModel: function beforeModel(transition) {
      var params = transition.to.queryParams;
      var controller = this.controllerFor("admin-logs-staff-action-logs");

      if (controller.filters === null || params.force_refresh) {
        controller.resetFilters();
      }
    },
    deserializeQueryParam: function deserializeQueryParam(value, urlKey, defaultValueType) {
      if (urlKey === "filters") {
        return _object.default.create(JSON.parse(decodeURIComponent(value)));
      }

      return this._super(value, urlKey, defaultValueType);
    },
    serializeQueryParam: function serializeQueryParam(value, urlKey, defaultValueType) {
      if (urlKey === "filters") {
        if (value && Object.keys(value).length > 0) {
          return JSON.stringify(value);
        } else {
          return null;
        }
      }

      return this._super(value, urlKey, defaultValueType);
    },
    // TODO: make this automatic using an `{{outlet}}`
    renderTemplate: function renderTemplate() {
      this.render("admin/templates/logs/staff-action-logs", {
        into: "adminLogs"
      });
    },
    actions: {
      showDetailsModal: function showDetailsModal(model) {
        (0, _showModal.default)("admin-staff-action-log-details", {
          model: model,
          admin: true
        });
        this.controllerFor("modal").set("modalClass", "log-details-modal");
      },
      showCustomDetailsModal: function showCustomDetailsModal(model) {
        var modal = (0, _showModal.default)("admin-theme-change", {
          model: model,
          admin: true
        });
        this.controllerFor("modal").set("modalClass", "history-modal");
        modal.loadDiff();
      },
      onFiltersChange: function onFiltersChange(filters) {
        if (filters && Object.keys(filters) === 0) {
          this.transitionTo("adminLogs.staffActionLogs");
        } else {
          this.transitionTo("adminLogs.staffActionLogs", {
            queryParams: {
              filters: filters
            }
          });
        }
      }
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-permalinks", ["exports", "discourse/routes/discourse", "admin/models/permalink"], function (_exports, _discourse, _permalink) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    model: function model() {
      return _permalink.default.findAll();
    },
    setupController: function setupController(controller, model) {
      controller.set("model", model);
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-plugins", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    model: function model() {
      return this.store.findAll("plugin");
    },
    actions: {
      showSettings: function showSettings(plugin) {
        var controller = this.controllerFor("adminSiteSettings");
        this.transitionTo("adminSiteSettingsCategory", "plugins").then(function () {
          if (plugin) {
            // filterContent() is normally on a debounce from typing.
            // Because we don't want the default of "All Results", we tell it
            // to skip the next debounce.
            controller.set("filter", "plugin:".concat(plugin.id));
            controller.set("_skipBounce", true);
            controller.filterContentNow("plugins");
          }
        });
      }
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-reports-index", ["exports", "discourse/routes/discourse"], function (_exports, _discourse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    beforeModel: function beforeModel() {
      this.transitionTo("admin.dashboardReports");
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-reports-show", ["exports", "discourse/routes/discourse"], function (_exports, _discourse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    queryParams: {
      start_date: {
        refreshModel: true
      },
      end_date: {
        refreshModel: true
      },
      filters: {
        refreshModel: true
      },
      chart_grouping: {
        refreshModel: true
      },
      mode: {
        refreshModel: true
      }
    },
    model: function model(params) {
      params.customFilters = params.filters;
      delete params.filters;
      params.startDate = params.start_date || moment().subtract(1, "day").subtract(1, "month").startOf("day").format("YYYY-MM-DD");
      delete params.start_date;
      params.endDate = params.end_date || moment().endOf("day").format("YYYY-MM-DD");
      delete params.end_date;
      params.chartGrouping = params.chart_grouping || "daily";
      delete params.chart_grouping;
      return params;
    },
    deserializeQueryParam: function deserializeQueryParam(value, urlKey, defaultValueType) {
      if (urlKey === "filters") {
        return JSON.parse(decodeURIComponent(value));
      }

      return this._super(value, urlKey, defaultValueType);
    },
    serializeQueryParam: function serializeQueryParam(value, urlKey, defaultValueType) {
      if (urlKey === "filters") {
        if (value && Object.keys(value).length > 0) {
          return JSON.stringify(value);
        } else {
          return null;
        }
      }

      return this._super(value, urlKey, defaultValueType);
    },
    actions: {
      onParamsChange: function onParamsChange(params) {
        var queryParams = {
          type: params.type,
          mode: params.mode,
          start_date: params.startDate ? params.startDate.toISOString(true).split("T")[0] : null,
          chart_grouping: params.chartGrouping,
          filters: params.filters,
          end_date: params.endDate ? params.endDate.toISOString(true).split("T")[0] : null
        };
        this.transitionTo("adminReports.show", {
          queryParams: queryParams
        });
      }
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-route-map", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;

  function _default() {
    this.route("admin", {
      resetNamespace: true
    }, function () {
      this.route("dashboard", {
        path: "/"
      }, function () {
        this.route("general", {
          path: "/"
        });
        this.route("admin.dashboardModeration", {
          path: "/dashboard/moderation",
          resetNamespace: true
        });
        this.route("admin.dashboardSecurity", {
          path: "/dashboard/security",
          resetNamespace: true
        });
        this.route("admin.dashboardReports", {
          path: "/dashboard/reports",
          resetNamespace: true
        });
      });
      this.route("adminSiteSettings", {
        path: "/site_settings",
        resetNamespace: true
      }, function () {
        this.route("adminSiteSettingsCategory", {
          path: "category/:category_id",
          resetNamespace: true
        });
      });
      this.route("adminEmail", {
        path: "/email",
        resetNamespace: true
      }, function () {
        this.route("sent");
        this.route("skipped");
        this.route("bounced");
        this.route("received");
        this.route("rejected");
        this.route("previewDigest", {
          path: "/preview-digest"
        });
        this.route("advancedTest", {
          path: "/advanced-test"
        });
      });
      this.route("adminCustomize", {
        path: "/customize",
        resetNamespace: true
      }, function () {
        this.route("colors", function () {
          this.route("show", {
            path: "/:scheme_id"
          });
        });
        this.route("adminCustomizeThemes", {
          path: "themes",
          resetNamespace: true
        }, function () {
          this.route("show", {
            path: "/:theme_id"
          });
          this.route("edit", {
            path: "/:theme_id/:target/:field_name/edit"
          });
        });
        this.route("adminSiteText", {
          path: "/site_texts",
          resetNamespace: true
        }, function () {
          this.route("edit", {
            path: "/:id"
          });
        });
        this.route("adminUserFields", {
          path: "/user_fields",
          resetNamespace: true
        });
        this.route("adminEmojis", {
          path: "/emojis",
          resetNamespace: true
        });
        this.route("adminPermalinks", {
          path: "/permalinks",
          resetNamespace: true
        });
        this.route("adminEmbedding", {
          path: "/embedding",
          resetNamespace: true
        });
        this.route("adminCustomizeEmailTemplates", {
          path: "/email_templates",
          resetNamespace: true
        }, function () {
          this.route("edit", {
            path: "/:id"
          });
        });
        this.route("adminCustomizeRobotsTxt", {
          path: "/robots",
          resetNamespace: true
        });
        this.route("adminCustomizeEmailStyle", {
          path: "/email_style",
          resetNamespace: true
        }, function () {
          this.route("edit", {
            path: "/:field_name"
          });
        });
        this.route("adminWatchedWords", {
          path: "/watched_words",
          resetNamespace: true
        }, function () {
          this.route("index", {
            path: "/"
          });
          this.route("action", {
            path: "/action/:action_id"
          });
        });
      });
      this.route("adminApi", {
        path: "/api",
        resetNamespace: true
      }, function () {
        this.route("adminApiKeys", {
          path: "/keys",
          resetNamespace: true
        }, function () {
          this.route("show", {
            path: "/:api_key_id"
          });
          this.route("new", {
            path: "/new"
          });
        });
        this.route("adminWebHooks", {
          path: "/web_hooks",
          resetNamespace: true
        }, function () {
          this.route("show", {
            path: "/:web_hook_id"
          });
          this.route("showEvents", {
            path: "/:web_hook_id/events"
          });
        });
      });
      this.route("admin.backups", {
        path: "/backups",
        resetNamespace: true
      }, function () {
        this.route("logs");
      });
      this.route("adminReports", {
        path: "/reports",
        resetNamespace: true
      }, function () {
        this.route("show", {
          path: ":type"
        });
      });
      this.route("adminLogs", {
        path: "/logs",
        resetNamespace: true
      }, function () {
        this.route("staffActionLogs", {
          path: "/staff_action_logs"
        });
        this.route("screenedEmails", {
          path: "/screened_emails"
        });
        this.route("screenedIpAddresses", {
          path: "/screened_ip_addresses"
        });
        this.route("screenedUrls", {
          path: "/screened_urls"
        });
        this.route("adminSearchLogs", {
          path: "/search_logs",
          resetNamespace: true
        }, function () {
          this.route("index", {
            path: "/"
          });
          this.route("term", {
            path: "/term"
          });
        });
      });
      this.route("adminUsers", {
        path: "/users",
        resetNamespace: true
      }, function () {
        this.route("adminUser", {
          path: "/:user_id/:username",
          resetNamespace: true
        }, function () {
          this.route("badges");
          this.route("tl3Requirements", {
            path: "/tl3_requirements"
          });
        });
        this.route("adminUsersList", {
          path: "/list",
          resetNamespace: true
        }, function () {
          this.route("show", {
            path: "/:filter"
          });
        });
      });
      this.route("adminBadges", {
        path: "/badges",
        resetNamespace: true
      }, function () {
        this.route("award", {
          path: "/award/:badge_id"
        });
        this.route("show", {
          path: "/:badge_id"
        });
      });
      this.route("adminPlugins", {
        path: "/plugins",
        resetNamespace: true
      }, function () {
        this.route("index", {
          path: "/"
        });
      });
    });
  }
});
define("admin/routes/admin-search-logs-index", ["exports", "discourse/routes/discourse", "@ember/object", "discourse/lib/ajax"], function (_exports, _discourse, _object, _ajax) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    queryParams: {
      period: {
        refreshModel: true
      },
      searchType: {
        refreshModel: true
      }
    },
    model: function model(params) {
      this._params = params;
      return (0, _ajax.ajax)("/admin/logs/search_logs.json", {
        data: {
          period: params.period,
          search_type: params.searchType
        }
      }).then(function (search_logs) {
        return search_logs.map(function (sl) {
          return _object.default.create(sl);
        });
      });
    },
    setupController: function setupController(controller, model) {
      var params = this._params;
      controller.setProperties({
        model: model,
        period: params.period,
        searchType: params.searchType
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-search-logs-term", ["exports", "discourse/routes/discourse", "@ember/object", "discourse/lib/ajax", "discourse/lib/utilities", "discourse/lib/search"], function (_exports, _discourse, _object, _ajax, _utilities, _search) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    queryParams: {
      term: {
        refreshModel: true
      },
      period: {
        refreshModel: true
      },
      searchType: {
        refreshModel: true
      }
    },
    model: function model(params) {
      this._params = params;
      return (0, _ajax.ajax)("/admin/logs/search_logs/term.json", {
        data: {
          period: params.period,
          search_type: params.searchType,
          term: params.term
        }
      }).then(async function (json) {
        // Add zero values for missing dates
        if (json.term.data.length > 0) {
          var startDate = json.term.period === "all" ? moment(json.term.data[0].x).format("YYYY-MM-DD") : moment(json.term.start_date).format("YYYY-MM-DD");
          var endDate = moment(json.term.end_date).format("YYYY-MM-DD");
          json.term.data = (0, _utilities.fillMissingDates)(json.term.data, startDate, endDate);
        }

        if (json.term.search_result) {
          json.term.search_result = await (0, _search.translateResults)(json.term.search_result);
        }

        var model = _object.default.create({
          type: "search_log_term"
        });

        model.setProperties(json.term);
        return model;
      });
    },
    setupController: function setupController(controller, model) {
      var params = this._params;
      controller.setProperties({
        model: model,
        term: params.term,
        period: params.period,
        searchType: params.searchType
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-site-settings-category", ["exports", "discourse/routes/discourse", "@ember/object", "I18n"], function (_exports, _discourse, _object, _I18n) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    model: function model(params) {
      // The model depends on user input, so let the controller do the work:
      this.controllerFor("adminSiteSettingsCategory").set("categoryNameKey", params.category_id);
      this.controllerFor("adminSiteSettings").set("categoryNameKey", params.category_id);
      return _object.default.create({
        nameKey: params.category_id,
        name: _I18n.default.t("admin.site_settings.categories." + params.category_id),
        siteSettings: this.controllerFor("adminSiteSettingsCategory").get("filteredContent")
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-site-settings-index", ["exports", "discourse/routes/discourse"], function (_exports, _discourse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  /**
    Handles when you click the Site Settings tab in admin, but haven't
    chosen a category. It will redirect to the first category.
  **/
  var _default = _discourse.default.extend({
    beforeModel: function beforeModel() {
      this.replaceWith("adminSiteSettingsCategory", this.controllerFor("adminSiteSettings").get("visibleSiteSettings")[0].nameKey);
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-site-settings", ["exports", "discourse/routes/discourse", "admin/models/site-setting"], function (_exports, _discourse, _siteSetting) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    queryParams: {
      filter: {
        replace: true
      }
    },
    model: function model() {
      return _siteSetting.default.findAll();
    },
    afterModel: function afterModel(siteSettings) {
      var controller = this.controllerFor("adminSiteSettings");

      if (!controller.get("visibleSiteSettings")) {
        controller.set("visibleSiteSettings", siteSettings);
      }
    },
    actions: {
      refreshAll: function refreshAll() {
        var _this = this;

        _siteSetting.default.findAll().then(function (settings) {
          _this.controllerFor("adminSiteSettings").set("model", settings);
        });
      }
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-site-text-edit", ["exports", "@ember/routing/route", "discourse/lib/ajax"], function (_exports, _route, _ajax) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    queryParams: {
      locale: {
        replace: true
      }
    },
    model: function model(params) {
      var _this = this;

      return (0, _ajax.ajax)("/admin/customize/site_texts/".concat(params.id, "?locale=").concat(params.locale)).then(function (result) {
        return _this.store.createRecord("site-text", result.site_text);
      });
    },
    setupController: function setupController(controller, siteText) {
      var locales = JSON.parse(this.siteSettings.available_locales);
      var localeFullName = locales.find(function (locale) {
        return locale.value === controller.locale;
      }).name;
      controller.setProperties({
        siteText: siteText,
        saved: false,
        localeFullName: localeFullName
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-site-text-index", ["exports", "@ember/routing/route", "@ember/object", "discourse/lib/show-modal"], function (_exports, _route, _object, _showModal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    queryParams: {
      q: {
        replace: true
      },
      overridden: {
        replace: true
      },
      locale: {
        replace: true
      }
    },
    model: function model(params) {
      return this.store.find("site-text", (0, _object.getProperties)(params, "q", "overridden", "locale"));
    },
    setupController: function setupController(controller, model) {
      controller.set("siteTexts", model);
    },
    actions: {
      showReseedModal: function showReseedModal() {
        (0, _showModal.default)("admin-reseed", {
          admin: true
        });
      }
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-user-badges", ["exports", "discourse/models/badge", "discourse/routes/discourse", "discourse/models/user-badge"], function (_exports, _badge, _discourse, _userBadge) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    model: function model() {
      var username = this.modelFor("adminUser").get("username");
      return _userBadge.default.findByUsername(username);
    },
    setupController: function setupController(controller, model) {
      // Find all badges.
      controller.set("loading", true);

      _badge.default.findAll().then(function (badges) {
        controller.set("badges", badges);

        if (badges.length > 0) {
          var grantableBadges = controller.get("grantableBadges");

          if (grantableBadges.length > 0) {
            controller.set("selectedBadgeId", grantableBadges[0].get("id"));
          }
        }

        controller.set("loading", false);
      }); // Set the model.


      controller.set("model", model);
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-user-fields", ["exports", "discourse/routes/discourse", "admin/models/user-field"], function (_exports, _discourse, _userField) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    model: function model() {
      return this.store.findAll("user-field");
    },
    setupController: function setupController(controller, model) {
      controller.setProperties({
        model: model,
        fieldTypes: _userField.default.fieldTypes()
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-user-index", ["exports", "discourse/routes/discourse", "discourse/models/group"], function (_exports, _discourse, _group) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    model: function model() {
      return this.modelFor("adminUser");
    },
    afterModel: function afterModel(model) {
      var _this = this;

      if (this.currentUser.admin) {
        return _group.default.findAll().then(function (groups) {
          _this._availableGroups = groups.filterBy("automatic", false);
          return model;
        });
      }
    },
    setupController: function setupController(controller, model) {
      controller.setProperties({
        originalPrimaryGroupId: model.primary_group_id,
        availableGroups: this._availableGroups,
        customGroupIdsBuffer: model.customGroups.mapBy("id"),
        model: model
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-user-tl3-requirements", ["exports", "discourse/routes/discourse"], function (_exports, _discourse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    model: function model() {
      return this.modelFor("adminUser");
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-user", ["exports", "admin/models/admin-user", "discourse/routes/discourse", "@ember/object"], function (_exports, _adminUser, _discourse, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    serialize: function serialize(model) {
      return {
        user_id: model.get("id"),
        username: model.get("username").toLowerCase()
      };
    },
    model: function model(params) {
      return _adminUser.default.find((0, _object.get)(params, "user_id"));
    },
    renderTemplate: function renderTemplate() {
      this.render({
        into: "admin"
      });
    },
    afterModel: function afterModel(adminUser) {
      return adminUser.loadDetails().then(function () {
        adminUser.setOriginalTrustLevel();
        return adminUser;
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-users-index", ["exports", "discourse/routes/discourse"], function (_exports, _discourse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    redirect: function redirect() {
      this.transitionTo("adminUsersList");
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-users-list-index", ["exports", "discourse/routes/discourse"], function (_exports, _discourse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    beforeModel: function beforeModel() {
      this.transitionTo("adminUsersList.show", "active");
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-users-list-show", ["exports", "discourse/routes/discourse"], function (_exports, _discourse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    queryParams: {
      order: {
        refreshModel: true
      },
      asc: {
        refreshModel: true
      }
    },
    // TODO: this has been introduced to fix a bug in admin-users-list-show
    // loading AdminUser model multiple times without refactoring the controller
    beforeModel: function beforeModel(transition) {
      var routeName = "adminUsersList.show";

      if (transition.targetName === routeName) {
        var params = transition.routeInfos.find(function (a) {
          return a.name === routeName;
        }).params;
        var controller = this.controllerFor(routeName);

        if (controller) {
          controller.setProperties({
            order: transition.to.queryParams.order,
            asc: transition.to.queryParams.asc,
            query: params.filter,
            refreshing: false
          });
          controller.resetFilters();
        }
      }
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-users-list", ["exports", "admin/models/admin-user", "discourse/routes/discourse", "discourse/lib/export-csv", "discourse/lib/export-result"], function (_exports, _adminUser, _discourse, _exportCsv, _exportResult) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    actions: {
      exportUsers: function exportUsers() {
        (0, _exportCsv.exportEntity)("user_list", {
          trust_level: this.controllerFor("admin-users-list-show").get("query")
        }).then(_exportResult.outputExportResult);
      },
      sendInvites: function sendInvites() {
        this.transitionTo("userInvited", this.currentUser);
      },
      deleteUser: function deleteUser(user) {
        _adminUser.default.create(user).destroy({
          deletePosts: true
        });
      }
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-watched-words-action", ["exports", "discourse/routes/discourse", "@ember/object", "I18n"], function (_exports, _discourse, _object, _I18n) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    model: function model(params) {
      var controller = this.controllerFor("adminWatchedWordsAction");
      controller.set("actionNameKey", params.action_id);
      return _object.default.create({
        nameKey: params.action_id,
        name: _I18n.default.t("admin.watched_words.actions." + params.action_id),
        words: controller.filteredContent
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-watched-words-index", ["exports", "discourse/routes/discourse"], function (_exports, _discourse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    beforeModel: function beforeModel() {
      this.replaceWith("adminWatchedWords.action", this.modelFor("adminWatchedWords")[0].nameKey);
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-watched-words", ["exports", "discourse/routes/discourse", "admin/models/watched-word"], function (_exports, _discourse, _watchedWord) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    queryParams: {
      filter: {
        replace: true
      }
    },
    model: function model() {
      return _watchedWord.default.findAll();
    },
    afterModel: function afterModel(model) {
      var controller = this.controllerFor("adminWatchedWords");
      controller.set("allWatchedWords", model);
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-web-hooks-show-events", ["exports", "discourse/routes/discourse", "@ember/object"], function (_exports, _discourse, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    model: function model(params) {
      return this.store.findAll("web-hook-event", (0, _object.get)(params, "web_hook_id"));
    },
    setupController: function setupController(controller, model) {
      controller.set("model", model);
      controller.subscribe();
    },
    deactivate: function deactivate() {
      this.controllerFor("adminWebHooks.showEvents").unsubscribe();
    },
    renderTemplate: function renderTemplate() {
      this.render("admin/templates/web-hooks-show-events", {
        into: "adminApi"
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-web-hooks-show", ["exports", "discourse/routes/discourse", "@ember/object"], function (_exports, _discourse, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    serialize: function serialize(model) {
      return {
        web_hook_id: model.get("id") || "new"
      };
    },
    model: function model(params) {
      if (params.web_hook_id === "new") {
        return this.store.createRecord("web-hook");
      }

      return this.store.find("web-hook", (0, _object.get)(params, "web_hook_id"));
    },
    setupController: function setupController(controller, model) {
      if (model.get("isNew")) {
        model.set("web_hook_event_types", controller.get("defaultEventTypes"));
      }

      model.set("category_ids", model.get("category_ids"));
      model.set("tag_names", model.get("tag_names"));
      model.set("group_ids", model.get("group_ids"));
      controller.setProperties({
        model: model,
        saved: false
      });
    },
    renderTemplate: function renderTemplate() {
      this.render("admin/templates/web-hooks-show", {
        into: "adminApi"
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin-web-hooks", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _route.default.extend({
    model: function model() {
      return this.store.findAll("web-hook");
    },
    setupController: function setupController(controller, model) {
      controller.setProperties({
        model: model,
        eventTypes: model.extras.event_types,
        defaultEventTypes: model.extras.default_event_types,
        contentTypes: model.extras.content_types,
        deliveryStatuses: model.extras.delivery_statuses
      });
    }
  });

  _exports.default = _default;
});
define("admin/routes/admin", ["exports", "discourse/routes/discourse", "I18n"], function (_exports, _discourse, _I18n) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _default = _discourse.default.extend({
    titleToken: function titleToken() {
      return _I18n.default.t("admin_title");
    },
    activate: function activate() {
      this.controllerFor("application").setProperties({
        showTop: false,
        showFooter: false
      });
    },
    deactivate: function deactivate() {
      this.controllerFor("application").set("showTop", true);
    }
  });

  _exports.default = _default;
});
define("admin/services/admin-tools", ["exports", "admin/models/admin-user", "I18n", "rsvp", "@ember/service", "discourse/lib/ajax", "bootbox", "discourse-common/lib/get-owner", "discourse-common/lib/icon-library", "discourse/lib/show-modal"], function (_exports, _adminUser, _I18n, _rsvp, _service, _ajax, _bootbox, _getOwner, _iconLibrary, _showModal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  // A service that can act as a bridge between the front end Discourse application
  // and the admin application. Use this if you need front end code to access admin
  // modules. Inject it optionally, and if it exists go to town!
  var _default = _service.default.extend({
    init: function init() {
      this._super.apply(this, arguments); // TODO: Make `siteSettings` a service that can be injected


      this.siteSettings = (0, _getOwner.getOwner)(this).lookup("site-settings:main");
    },
    showActionLogs: function showActionLogs(target, filters) {
      var controller = (0, _getOwner.getOwner)(target).lookup("controller:adminLogs.staffActionLogs");
      target.transitionToRoute("adminLogs.staffActionLogs").then(function () {
        controller.changeFilters(filters);
      });
    },
    checkSpammer: function checkSpammer(userId) {
      var _this = this;

      return _adminUser.default.find(userId).then(function (au) {
        return _this.spammerDetails(au);
      });
    },
    deleteUser: function deleteUser(id, formData) {
      return _adminUser.default.find(id).then(function (user) {
        return user.destroy(formData);
      });
    },
    spammerDetails: function spammerDetails(adminUser) {
      var _this2 = this;

      return {
        deleteUser: function deleteUser() {
          return _this2._deleteSpammer(adminUser);
        },
        canDelete: adminUser.get("can_be_deleted") && adminUser.get("can_delete_all_posts")
      };
    },
    _showControlModal: function _showControlModal(type, user, opts) {
      opts = opts || {};
      var controller = (0, _showModal.default)("admin-".concat(type, "-user"), {
        admin: true,
        modalClass: "".concat(type, "-user-modal")
      });
      controller.setProperties({
        postId: opts.postId,
        postEdit: opts.postEdit
      });
      return (user.adminUserView ? _rsvp.Promise.resolve(user) : _adminUser.default.find(user.get("id"))).then(function (loadedUser) {
        controller.setProperties({
          user: loadedUser,
          loadingUser: false,
          before: opts.before,
          successCallback: opts.successCallback
        });
        controller.finishedSetup();
      });
    },
    showSilenceModal: function showSilenceModal(user, opts) {
      this._showControlModal("silence", user, opts);
    },
    showSuspendModal: function showSuspendModal(user, opts) {
      this._showControlModal("suspend", user, opts);
    },
    _deleteSpammer: function _deleteSpammer(adminUser) {
      // Try loading the email if the site supports it
      var tryEmail = this.siteSettings.moderators_view_emails ? adminUser.checkEmail() : _rsvp.Promise.resolve();
      return tryEmail.then(function () {
        var message = _I18n.default.messageFormat("flagging.delete_confirm_MF", {
          POSTS: adminUser.get("post_count"),
          TOPICS: adminUser.get("topic_count"),
          email: adminUser.get("email") || _I18n.default.t("flagging.hidden_email_address"),
          ip_address: adminUser.get("ip_address") || _I18n.default.t("flagging.ip_address_missing")
        });

        var userId = adminUser.get("id");
        return new _rsvp.Promise(function (resolve, reject) {
          var buttons = [{
            label: _I18n.default.t("composer.cancel"),
            class: "d-modal-cancel",
            link: true
          }, {
            label: "".concat((0, _iconLibrary.iconHTML)("exclamation-triangle"), " ") + _I18n.default.t("flagging.yes_delete_spammer"),
            class: "btn btn-danger confirm-delete",
            callback: function callback() {
              return (0, _ajax.ajax)("/admin/users/".concat(userId, ".json"), {
                type: "DELETE",
                data: {
                  delete_posts: true,
                  block_email: true,
                  block_urls: true,
                  block_ip: true,
                  delete_as_spammer: true,
                  context: window.location.pathname
                }
              }).then(function (result) {
                if (result.deleted) {
                  resolve();
                } else {
                  throw new Error("failed to delete");
                }
              }).catch(function () {
                _bootbox.default.alert(_I18n.default.t("admin.user.delete_failed"));

                reject();
              });
            }
          }];

          _bootbox.default.dialog(message, buttons, {
            classes: "flagging-delete-spammer"
          });
        });
      });
    }
  });

  _exports.default = _default;
});
Ember.TEMPLATES["admin/templates/admin"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"admin-wrapper\",null,[[\"class\"],[\"container\"]],{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"full-width\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"admin-main-nav\"],[8],[0,\"\\n        \"],[7,\"ul\",true],[10,\"class\",\"nav nav-pills\"],[8],[0,\"\\n          \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"admin.dashboard\",\"admin.dashboard.title\"]]],false],[0,\"\\n\"],[4,\"if\",[[24,[\"currentUser\",\"admin\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminSiteSettings\",\"admin.site_settings.title\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"          \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminUsersList\",\"admin.users.title\"]]],false],[0,\"\\n\"],[4,\"if\",[[24,[\"showGroups\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"groups\",\"admin.groups.title\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"showBadges\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminBadges\",\"admin.badges.title\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"currentUser\",\"admin\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminEmail\",\"admin.email.title\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"          \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminLogs\",\"admin.logs.title\"]]],false],[0,\"\\n          \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminCustomize\",\"admin.customize.title\"]]],false],[0,\"\\n\"],[4,\"if\",[[24,[\"currentUser\",\"admin\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminApi\",\"admin.api.title\"]]],false],[0,\"\\n\"],[4,\"if\",[[24,[\"siteSettings\",\"enable_backups\"]]],null,{\"statements\":[[0,\"              \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"admin.backups\",\"admin.backups.title\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"          \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminPlugins\",\"admin.plugins.title\"]]],false],[0,\"\\n          \"],[1,[28,\"plugin-outlet\",null,[[\"name\",\"connectorTagName\",\"tagName\"],[\"admin-menu\",\"\",\"\"]]],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\\n      \"],[7,\"div\",true],[10,\"class\",\"boxed white admin-content\"],[8],[0,\"\\n        \"],[7,\"div\",true],[11,\"class\",[29,[\"admin-contents \",[22,\"adminContentsClassName\"]]]],[8],[0,\"\\n          \"],[1,[22,\"outlet\"],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/admin"}});
Ember.TEMPLATES["admin/templates/api-keys-index"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"k\"],\"statements\":[[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-primary\",[28,\"route-action\",[\"new\"],null],\"plus\",\"admin.api.new_key\"]]],false],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"  \"],[7,\"table\",true],[10,\"class\",\"api-keys grid\"],[8],[0,\"\\n    \"],[7,\"thead\",true],[8],[0,\"\\n      \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.api.key\"],null],false],[9],[0,\"\\n      \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.api.description\"],null],false],[9],[0,\"\\n      \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.api.user\"],null],false],[9],[0,\"\\n      \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.api.created\"],null],false],[9],[0,\"\\n      \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.api.last_used\"],null],false],[9],[0,\"\\n      \"],[7,\"th\",true],[8],[0,\" \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"        \"],[7,\"tr\",true],[11,\"class\",[28,\"if\",[[23,1,[\"revoked_at\"]],\"revoked\"],null]],[8],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"key\"],[8],[0,\"\\n            \"],[4,\"if\",[[23,1,[\"revoked_at\"]]],null,{\"statements\":[[1,[28,\"d-icon\",[\"times-circle\"],null],false]],\"parameters\":[]},null],[0,\"\\n            \"],[1,[23,1,[\"truncatedKey\"]],false],[0,\"\\n          \"],[9],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"key-description\"],[8],[0,\"\\n            \"],[1,[23,1,[\"shortDescription\"]],false],[0,\"\\n          \"],[9],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"key-user\"],[8],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.api.user\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[23,1,[\"user\"]]],null,{\"statements\":[[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[23,1,[\"user\"]]]],{\"statements\":[[0,\"                \"],[1,[28,\"avatar\",[[23,1,[\"user\"]]],[[\"imageSize\"],[\"small\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"              \"],[1,[28,\"i18n\",[\"admin.api.all_users\"],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"          \"],[9],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"key-created\"],[8],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.api.created\"],null],false],[9],[0,\"\\n            \"],[1,[28,\"format-date\",[[23,1,[\"created_at\"]]],null],false],[0,\"\\n          \"],[9],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"key-last-used\"],[8],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.api.last_used\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[23,1,[\"last_used_at\"]]],null,{\"statements\":[[0,\"              \"],[1,[28,\"format-date\",[[23,1,[\"last_used_at\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"              \"],[1,[28,\"i18n\",[\"admin.api.never_used\"],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"          \"],[9],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"key-controls\"],[8],[0,\"\\n            \"],[1,[28,\"d-button\",null,[[\"action\",\"icon\",\"title\"],[[28,\"route-action\",[\"show\",[23,1,[]]],null],\"far-eye\",\"admin.api.show_details\"]]],false],[0,\"\\n\"],[4,\"if\",[[23,1,[\"revoked_at\"]]],null,{\"statements\":[[0,\"              \"],[1,[28,\"d-button\",null,[[\"action\",\"actionParam\",\"icon\",\"title\"],[[28,\"action\",[[23,0,[]],\"undoRevokeKey\"],null],[23,1,[]],\"undo\",\"admin.api.undo_revoke\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"              \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"actionParam\",\"icon\",\"title\"],[\"btn-danger\",[28,\"action\",[[23,0,[]],\"revokeKey\"],null],[23,1,[]],\"times\",\"admin.api.revoke\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.api.none\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/api-keys-index"}});
Ember.TEMPLATES["admin/templates/api-keys-new"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"actions\",\"resource\",\"act\",\"p\"],\"statements\":[[4,\"link-to\",null,[[\"class\",\"route\"],[\"go-back\",\"adminApiKeys.index\"]],{\"statements\":[[0,\"  \"],[1,[28,\"d-icon\",[\"arrow-left\"],null],false],[0,\"\\n  \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"admin.api.all_api_keys\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"api-key api-key-new\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"id\"]]],null,{\"statements\":[[4,\"admin-form-row\",null,[[\"label\"],[\"admin.api.key\"]],{\"statements\":[[0,\"      \"],[7,\"div\",true],[8],[1,[24,[\"model\",\"key\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"admin-form-row\",null,null,{\"statements\":[[0,\"      \"],[1,[28,\"i18n\",[\"admin.api.not_shown_again\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"admin-form-row\",null,null,{\"statements\":[[0,\"      \"],[1,[28,\"d-button\",null,[[\"icon\",\"label\",\"action\",\"class\"],[\"angle-right\",\"admin.api.continue\",[28,\"action\",[[23,0,[]],\"continue\"],null],\"btn-primary\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[4,\"admin-form-row\",null,[[\"label\"],[\"admin.api.description\"]],{\"statements\":[[0,\"      \"],[1,[28,\"input\",null,[[\"value\",\"maxlength\",\"placeholder\"],[[24,[\"model\",\"description\"]],\"255\",[28,\"i18n\",[\"admin.api.description_placeholder\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"admin-form-row\",null,[[\"label\"],[\"admin.api.user_mode\"]],{\"statements\":[[0,\"      \"],[1,[28,\"combo-box\",null,[[\"content\",\"value\",\"onChange\"],[[24,[\"userModes\"]],[24,[\"userMode\"]],[28,\"action\",[[23,0,[]],\"changeUserMode\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"showUserSelector\"]]],null,{\"statements\":[[4,\"admin-form-row\",null,[[\"label\"],[\"admin.api.user\"]],{\"statements\":[[0,\"        \"],[1,[28,\"email-group-user-chooser\",null,[[\"value\",\"onChange\",\"options\"],[[24,[\"model\",\"username\"]],[28,\"action\",[[23,0,[]],\"updateUsername\"],null],[28,\"hash\",null,[[\"maximum\",\"filterPlaceholder\"],[1,\"admin.api.user_placeholder\"]]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"admin-form-row\",null,[[\"label\"],[\"admin.api.use_global_key\"]],{\"statements\":[[0,\"      \"],[1,[28,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[24,[\"useGlobalKey\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"unless\",[[24,[\"useGlobalKey\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"scopes-title\"],[8],[1,[28,\"i18n\",[\"admin.api.scopes.title\"],null],false],[9],[0,\"\\n      \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.api.scopes.description\"],null],false],[9],[0,\"\\n      \"],[7,\"table\",true],[10,\"class\",\"scopes-table grid\"],[8],[0,\"\\n        \"],[7,\"thead\",true],[8],[0,\"\\n          \"],[7,\"tr\",true],[8],[0,\"\\n            \"],[7,\"td\",true],[8],[9],[0,\"\\n            \"],[7,\"td\",true],[8],[9],[0,\"\\n            \"],[7,\"td\",true],[8],[1,[28,\"i18n\",[\"admin.api.scopes.allowed_urls\"],null],false],[9],[0,\"\\n            \"],[7,\"td\",true],[8],[1,[28,\"i18n\",[\"admin.api.scopes.optional_allowed_parameters\"],null],false],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[28,\"-each-in\",[[24,[\"scopes\"]]],null]],null,{\"statements\":[[0,\"            \"],[7,\"tr\",true],[10,\"class\",\"scope-resource-name\"],[8],[0,\"\\n              \"],[7,\"td\",true],[8],[7,\"b\",true],[8],[1,[23,2,[]],false],[9],[9],[0,\"\\n              \"],[7,\"td\",true],[8],[9],[0,\"\\n              \"],[7,\"td\",true],[8],[9],[0,\"\\n              \"],[7,\"td\",true],[8],[9],[0,\"\\n            \"],[9],[0,\"\\n\"],[4,\"each\",[[23,1,[]]],null,{\"statements\":[[0,\"              \"],[7,\"tr\",true],[8],[0,\"\\n                \"],[7,\"td\",true],[8],[1,[28,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[23,3,[\"selected\"]]]]],false],[9],[0,\"\\n                \"],[7,\"td\",true],[8],[0,\"\\n                  \"],[7,\"div\",true],[10,\"class\",\"scope-name\"],[8],[1,[23,3,[\"name\"]],false],[9],[0,\"\\n                  \"],[7,\"span\",true],[10,\"class\",\"scope-tooltip\"],[11,\"data-tooltip\",[28,\"i18n\",[[28,\"concat\",[\"admin.api.scopes.descriptions.\",[23,2,[]],\".\",[23,3,[\"key\"]]],null]],null]],[8],[0,\"\\n                    \"],[1,[28,\"d-icon\",[\"question-circle\"],null],false],[0,\"\\n                  \"],[9],[0,\"\\n                \"],[9],[0,\"\\n                \"],[7,\"td\",true],[8],[0,\"\\n                  \"],[1,[28,\"d-button\",null,[[\"icon\",\"action\",\"class\"],[\"link\",[28,\"action\",[[23,0,[]],\"showURLs\",[23,3,[\"urls\"]]],null],\"btn-info\"]]],false],[0,\"\\n                \"],[9],[0,\"\\n                \"],[7,\"td\",true],[8],[0,\"\\n\"],[4,\"each\",[[23,3,[\"params\"]]],null,{\"statements\":[[0,\"                    \"],[1,[28,\"input\",null,[[\"maxlength\",\"value\",\"placeholder\"],[\"255\",[28,\"get\",[[23,3,[]],[23,4,[]]],null],[23,4,[]]]]],false],[0,\"\\n\"]],\"parameters\":[4]},null],[0,\"                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[3]},null]],\"parameters\":[1,2]},null],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"icon\",\"label\",\"action\",\"class\",\"disabled\"],[\"check\",\"admin.api.save\",[28,\"action\",[[23,0,[]],\"save\"],null],\"btn-primary\",[24,[\"saveDisabled\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/api-keys-new"}});
Ember.TEMPLATES["admin/templates/api-keys-show"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"scope\",\"p\"],\"statements\":[[4,\"link-to\",null,[[\"class\",\"route\"],[\"go-back\",\"adminApiKeys.index\"]],{\"statements\":[[0,\"  \"],[1,[28,\"d-icon\",[\"arrow-left\"],null],false],[0,\"\\n  \"],[1,[28,\"i18n\",[\"admin.api.all_api_keys\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"api-key api-key-show\"],[8],[0,\"\\n\"],[4,\"admin-form-row\",null,[[\"label\"],[\"admin.api.key\"]],{\"statements\":[[0,\"    \"],[4,\"if\",[[24,[\"model\",\"revoked_at\"]]],null,{\"statements\":[[1,[28,\"d-icon\",[\"times-circle\"],null],false]],\"parameters\":[]},null],[0,\"\\n    \"],[1,[24,[\"model\",\"truncatedKey\"]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"admin-form-row\",null,[[\"label\"],[\"admin.api.description\"]],{\"statements\":[[4,\"if\",[[24,[\"editingDescription\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"input\",null,[[\"value\",\"maxlength\",\"placeholder\"],[[24,[\"buffered\",\"description\"]],\"255\",[28,\"i18n\",[\"admin.api.description_placeholder\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[7,\"span\",true],[8],[0,\"\\n        \"],[1,[28,\"if\",[[24,[\"model\",\"description\"]],[24,[\"model\",\"description\"]],[28,\"i18n\",[\"admin.api.no_description\"],null]],null],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"editingDescription\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\"],[\"ok\",[28,\"action\",[[23,0,[]],\"saveDescription\"],null],\"check\"]]],false],[0,\"\\n        \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\"],[\"cancel\",[28,\"action\",[[23,0,[]],\"editDescription\"],null],\"times\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"editDescription\"],null],\"pencil-alt\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"admin-form-row\",null,[[\"label\"],[\"admin.api.user\"]],{\"statements\":[[4,\"if\",[[24,[\"model\",\"user\"]]],null,{\"statements\":[[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[24,[\"model\",\"user\"]]]],{\"statements\":[[0,\"        \"],[1,[28,\"avatar\",[[24,[\"model\",\"user\"]]],[[\"imageSize\"],[\"small\"]]],false],[0,\" \"],[1,[24,[\"model\",\"user\",\"username\"]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[1,[28,\"i18n\",[\"admin.api.all_users\"],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"admin-form-row\",null,[[\"label\"],[\"admin.api.created\"]],{\"statements\":[[0,\"    \"],[1,[28,\"format-date\",[[24,[\"model\",\"created_at\"]]],[[\"leaveAgo\"],[\"true\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"admin-form-row\",null,[[\"label\"],[\"admin.api.updated\"]],{\"statements\":[[0,\"    \"],[1,[28,\"format-date\",[[24,[\"model\",\"updated_at\"]]],[[\"leaveAgo\"],[\"true\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"admin-form-row\",null,[[\"label\"],[\"admin.api.last_used\"]],{\"statements\":[[4,\"if\",[[24,[\"model\",\"last_used_at\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"format-date\",[[24,[\"model\",\"last_used_at\"]]],[[\"leaveAgo\"],[\"true\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[1,[28,\"i18n\",[\"admin.api.never_used\"],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"admin-form-row\",null,[[\"label\"],[\"admin.api.revoked\"]],{\"statements\":[[4,\"if\",[[24,[\"model\",\"revoked_at\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"format-date\",[[24,[\"model\",\"revoked_at\"]]],[[\"leaveAgo\"],[\"true\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"no_value\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"revoked_at\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"d-button\",null,[[\"action\",\"actionParam\",\"icon\",\"label\"],[[28,\"action\",[[23,0,[]],\"undoRevokeKey\"],null],[24,[\"model\"]],\"undo\",\"admin.api.undo_revoke\"]]],false],[0,\"\\n        \"],[1,[28,\"d-button\",null,[[\"action\",\"actionParam\",\"icon\",\"label\",\"class\"],[[28,\"action\",[[23,0,[]],\"deleteKey\"],null],[24,[\"model\"]],\"trash-alt\",\"admin.api.delete\",\"btn-danger\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"actionParam\",\"icon\",\"label\"],[\"btn-danger\",[28,\"action\",[[23,0,[]],\"revokeKey\"],null],[24,[\"model\"]],\"times\",\"admin.api.revoke\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"api_key_scopes\",\"length\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"scopes-title\"],[8],[1,[28,\"i18n\",[\"admin.api.scopes.title\"],null],false],[9],[0,\"\\n\\n    \"],[7,\"table\",true],[10,\"class\",\"scopes-table grid\"],[8],[0,\"\\n      \"],[7,\"thead\",true],[8],[0,\"\\n        \"],[7,\"tr\",true],[8],[0,\"\\n          \"],[7,\"td\",true],[8],[1,[28,\"i18n\",[\"admin.api.scopes.resource\"],null],false],[9],[0,\"\\n          \"],[7,\"td\",true],[8],[1,[28,\"i18n\",[\"admin.api.scopes.action\"],null],false],[9],[0,\"\\n          \"],[7,\"td\",true],[8],[1,[28,\"i18n\",[\"admin.api.scopes.allowed_urls\"],null],false],[9],[0,\"\\n          \"],[7,\"td\",true],[8],[1,[28,\"i18n\",[\"admin.api.scopes.allowed_parameters\"],null],false],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\",\"api_key_scopes\"]]],null,{\"statements\":[[0,\"          \"],[7,\"tr\",true],[8],[0,\"\\n            \"],[7,\"td\",true],[8],[1,[23,1,[\"resource\"]],false],[9],[0,\"\\n            \"],[7,\"td\",true],[8],[0,\"\\n              \"],[1,[23,1,[\"action\"]],false],[0,\"\\n              \"],[7,\"span\",true],[10,\"class\",\"scope-tooltip\"],[11,\"data-tooltip\",[28,\"i18n\",[[28,\"concat\",[\"admin.api.scopes.descriptions.\",[23,1,[\"resource\"]],\".\",[23,1,[\"key\"]]],null]],null]],[8],[0,\"\\n                \"],[1,[28,\"d-icon\",[\"question-circle\"],null],false],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n            \"],[7,\"td\",true],[8],[0,\"\\n              \"],[1,[28,\"d-button\",null,[[\"icon\",\"action\",\"class\"],[\"link\",[28,\"action\",[[23,0,[]],\"showURLs\",[23,1,[\"urls\"]]],null],\"btn-info\"]]],false],[0,\"\\n            \"],[9],[0,\"\\n            \"],[7,\"td\",true],[8],[0,\"\\n\"],[4,\"each\",[[23,1,[\"parameters\"]]],null,{\"statements\":[[0,\"                \"],[7,\"div\",true],[8],[0,\"\\n                  \"],[7,\"b\",true],[8],[1,[23,2,[]],false],[0,\":\"],[9],[0,\"\\n\"],[4,\"if\",[[28,\"get\",[[23,1,[\"allowed_parameters\"]],[23,2,[]]],null]],null,{\"statements\":[[0,\"                    \"],[1,[28,\"get\",[[23,1,[\"allowed_parameters\"]],[23,2,[]]],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                    \"],[1,[28,\"i18n\",[\"admin.api.scopes.any_parameter\"],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"                \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/api-keys-show"}});
Ember.TEMPLATES["admin/templates/api"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"admin-nav\",null,null,{\"statements\":[[0,\"  \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminApiKeys\",\"admin.api.title\"]]],false],[0,\"\\n  \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminWebHooks\",\"admin.web_hooks.title\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"admin-container\"],[8],[0,\"\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/api"}});
Ember.TEMPLATES["admin/templates/backups-index"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"backup\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"backup-options\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"localBackupStorage\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"resumable-upload\",null,[[\"target\",\"success\",\"error\",\"uploadText\",\"title\",\"class\"],[\"/admin/backups/upload\",[28,\"route-action\",[\"uploadSuccess\"],null],[28,\"route-action\",[\"uploadError\"],null],[24,[\"uploadLabel\"]],\"admin.backups.upload.title\",\"btn-default\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[1,[28,\"backup-uploader\",null,[[\"done\"],[[28,\"route-action\",[\"remoteUploadSuccess\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n\"],[4,\"if\",[[24,[\"site\",\"isReadOnly\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"d-button\",null,[[\"class\",\"icon\",\"action\",\"disabled\",\"title\",\"label\"],[\"btn-default\",\"far-eye\",[28,\"action\",[[23,0,[]],\"toggleReadOnlyMode\"],null],[24,[\"status\",\"isOperationRunning\"]],\"admin.backups.read_only.disable.title\",\"admin.backups.read_only.disable.label\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[1,[28,\"d-button\",null,[[\"class\",\"icon\",\"action\",\"disabled\",\"title\",\"label\"],[\"btn-default\",\"far-eye\",[28,\"action\",[[23,0,[]],\"toggleReadOnlyMode\"],null],[24,[\"status\",\"isOperationRunning\"]],\"admin.backups.read_only.enable.title\",\"admin.backups.read_only.enable.label\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[7,\"div\",true],[10,\"class\",\"backup-message\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"status\",\"restoreDisabled\"]]],null,{\"statements\":[[0,\"      \"],[7,\"a\",true],[10,\"href\",\"site_settings/category/all_results?filter=allow_restore\"],[8],[1,[28,\"d-icon\",[\"info-circle\"],null],false],[0,\" \"],[1,[28,\"i18n\",[\"admin.backups.operations.restore.is_disabled\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"table\",true],[10,\"class\",\"grid\"],[8],[0,\"\\n  \"],[7,\"thead\",true],[8],[0,\"\\n    \"],[7,\"th\",true],[10,\"width\",\"55%\"],[8],[1,[28,\"i18n\",[\"admin.backups.columns.filename\"],null],false],[9],[0,\"\\n    \"],[7,\"th\",true],[10,\"width\",\"10%\"],[8],[1,[28,\"i18n\",[\"admin.backups.columns.size\"],null],false],[9],[0,\"\\n    \"],[7,\"th\",true],[8],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"td\",true],[10,\"class\",\"backup-filename\"],[8],[1,[23,1,[\"filename\"]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[10,\"class\",\"backup-size\"],[8],[1,[28,\"human-size\",[[23,1,[\"size\"]]],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[10,\"class\",\"backup-controls\"],[8],[0,\"\\n          \"],[7,\"div\",true],[8],[0,\"\\n            \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"actionParam\",\"icon\",\"title\",\"label\"],[\"btn-default download\",[28,\"action\",[[23,0,[]],\"download\"],null],[23,1,[]],\"download\",\"admin.backups.operations.download.title\",\"admin.backups.operations.download.label\"]]],false],[0,\"\\n\"],[4,\"if\",[[24,[\"status\",\"isOperationRunning\"]]],null,{\"statements\":[[0,\"              \"],[1,[28,\"d-button\",null,[[\"icon\",\"action\",\"actionParam\",\"class\",\"disabled\",\"title\"],[\"far-trash-alt\",[28,\"route-action\",[\"destroyBackup\"],null],[23,1,[]],\"btn-danger\",\"true\",\"admin.backups.operations.is_running\"]]],false],[0,\"\\n              \"],[1,[28,\"d-button\",null,[[\"icon\",\"action\",\"actionParam\",\"disabled\",\"class\",\"title\",\"label\"],[\"play\",[28,\"route-action\",[\"startRestore\"],null],[23,1,[]],[24,[\"status\",\"restoreDisabled\"]],\"btn-default\",[24,[\"restoreTitle\"]],\"admin.backups.operations.restore.label\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"              \"],[1,[28,\"d-button\",null,[[\"icon\",\"action\",\"actionParam\",\"class\",\"title\"],[\"far-trash-alt\",[28,\"route-action\",[\"destroyBackup\"],null],[23,1,[]],\"btn-danger\",\"admin.backups.operations.destroy.title\"]]],false],[0,\"\\n              \"],[1,[28,\"d-button\",null,[[\"icon\",\"action\",\"actionParam\",\"disabled\",\"class\",\"title\",\"label\"],[\"play\",[28,\"route-action\",[\"startRestore\"],null],[23,1,[]],[24,[\"status\",\"restoreDisabled\"]],\"btn-default btn-restore\",[24,[\"restoreTitle\"]],\"admin.backups.operations.restore.label\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[1]},{\"statements\":[[0,\"      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"i18n\",[\"admin.backups.none\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/backups-index"}});
Ember.TEMPLATES["admin/templates/backups-logs"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"admin-backups-logs\",null,[[\"logs\",\"status\"],[[24,[\"logs\"]],[24,[\"status\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/backups-logs"}});
Ember.TEMPLATES["admin/templates/backups"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"admin-backups\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"admin-controls\"],[8],[0,\"\\n    \"],[7,\"nav\",true],[8],[0,\"\\n      \"],[7,\"ul\",true],[10,\"class\",\"nav nav-pills\"],[8],[0,\"\\n        \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"admin.backups.index\",\"admin.backups.menu.backups\"]]],false],[0,\"\\n        \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"admin.backups.logs\",\"admin.backups.menu.logs\"]]],false],[0,\"\\n        \"],[1,[28,\"plugin-outlet\",null,[[\"name\",\"tagName\"],[\"downloader\",\"\"]]],false],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"admin-actions\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"canRollback\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"label\",\"title\",\"icon\",\"disabled\"],[[28,\"route-action\",[\"rollback\"],null],\"btn-default btn-rollback\",\"admin.backups.operations.rollback.label\",\"admin.backups.operations.rollback.title\",\"ambulance\",[24,[\"rollbackDisabled\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"model\",\"isOperationRunning\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"title\",\"label\",\"icon\"],[[28,\"route-action\",[\"cancelOperation\"],null],\"btn-danger\",\"admin.backups.operations.cancel.title\",\"admin.backups.operations.cancel.label\",\"times\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"            \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"title\",\"label\",\"icon\"],[[28,\"route-action\",[\"showStartBackupModal\"],null],\"btn-primary\",\"admin.backups.operations.backup.title\",\"admin.backups.operations.backup.label\",\"rocket\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[1,[28,\"plugin-outlet\",null,[[\"name\",\"tagName\"],[\"before-backup-list\",\"\"]]],false],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"admin-container\"],[8],[0,\"\\n    \"],[1,[22,\"outlet\"],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/backups"}});
Ember.TEMPLATES["admin/templates/badges-award"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"entry\"],\"statements\":[[4,\"d-section\",null,[[\"class\"],[\"award-badge\"]],{\"statements\":[[0,\"  \"],[7,\"h1\",true],[8],[1,[28,\"i18n\",[\"admin.badges.mass_award.title\"],null],false],[9],[0,\"\\n  \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.badges.mass_award.description\"],null],false],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"    \"],[7,\"form\",true],[10,\"class\",\"form-horizontal\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"badge-preview control-group\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"icon-or-image\",[[24,[\"model\"]]],null],false],[0,\"\\n          \"],[7,\"span\",true],[10,\"class\",\"badge-display-name\"],[8],[1,[24,[\"model\",\"name\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[7,\"span\",true],[10,\"class\",\"badge-placeholder\"],[8],[1,[28,\"i18n\",[\"admin.badges.mass_award.no_badge_selected\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n        \"],[7,\"h4\",true],[8],[1,[28,\"i18n\",[\"admin.badges.mass_award.upload_csv\"],null],false],[9],[0,\"\\n        \"],[7,\"input\",true],[10,\"id\",\"massAwardCSVUpload\"],[10,\"accept\",\".csv\"],[11,\"onchange\",[28,\"action\",[[23,0,[]],\"updateFileSelected\"],null]],[10,\"type\",\"file\"],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n        \"],[7,\"label\",true],[8],[0,\"\\n          \"],[1,[28,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[24,[\"replaceBadgeOwners\"]]]]],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.badges.mass_award.replace_owners\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"multiple_grant\"]]],null,{\"statements\":[[0,\"          \"],[7,\"label\",true],[10,\"class\",\"grant-existing-holders\"],[8],[0,\"\\n            \"],[1,[28,\"input\",null,[[\"type\",\"checked\",\"class\"],[\"checkbox\",[24,[\"grantExistingHolders\"]],\"grant-existing-holders-checkbox\"]]],false],[0,\"\\n            \"],[1,[28,\"i18n\",[\"admin.badges.mass_award.grant_existing_holders\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n      \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"type\",\"disabled\",\"icon\",\"label\"],[\"btn-primary\",[28,\"action\",[[23,0,[]],\"massAward\"],null],\"submit\",[24,[\"massAwardButtonDisabled\"]],\"certificate\",\"admin.badges.mass_award.perform\"]]],false],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"route\"],[\"btn btn-normal\",\"adminBadges.index\"]],{\"statements\":[[0,\"        \"],[1,[28,\"d-icon\",[\"times\"],null],false],[0,\"\\n        \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"cancel\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"saving\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"i18n\",[\"uploading\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"resultsMessage\"]]],null,{\"statements\":[[0,\"      \"],[7,\"p\",true],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"success\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-icon\",[\"check\"],[[\"class\"],[\"bulk-award-status-icon success\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[1,[28,\"d-icon\",[\"times\"],[[\"class\"],[\"bulk-award-status-icon failure\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"        \"],[1,[22,\"resultsMessage\"],false],[0,\"\\n      \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"unmatchedEntries\",\"length\"]]],null,{\"statements\":[[0,\"        \"],[7,\"p\",true],[8],[0,\"\\n          \"],[1,[28,\"d-icon\",[\"exclamation-triangle\"],[[\"class\"],[\"bulk-award-status-icon failure\"]]],false],[0,\"\\n          \"],[7,\"span\",true],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"unmatchedEntriesTruncated\"]]],null,{\"statements\":[[0,\"              \"],[1,[28,\"i18n\",[\"admin.badges.mass_award.csv_has_unmatched_users_truncated_list\"],[[\"count\"],[[24,[\"unmatchedEntriesCount\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"              \"],[1,[28,\"i18n\",[\"admin.badges.mass_award.csv_has_unmatched_users\"],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"ul\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"unmatchedEntries\"]]],null,{\"statements\":[[0,\"            \"],[7,\"li\",true],[8],[1,[23,1,[]],false],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[7,\"span\",true],[10,\"class\",\"badge-required\"],[8],[1,[28,\"i18n\",[\"admin.badges.mass_award.no_badge_selected\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/badges-award"}});
Ember.TEMPLATES["admin/templates/badges-index"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"link\"],\"statements\":[[4,\"d-section\",null,[[\"class\"],[\"current-badges\"]],{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"badge-intro admin-intro\"],[8],[0,\"\\n    \"],[7,\"img\",true],[11,\"src\",[22,\"badgeIntroEmoji\"]],[10,\"class\",\"badge-intro-emoji\"],[11,\"alt\",[28,\"i18n\",[\"admin.badges.badge_intro.emoji\"],null]],[8],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"content-wrapper\"],[8],[0,\"\\n      \"],[7,\"h1\",true],[8],[1,[28,\"i18n\",[\"admin.badges.badge_intro.title\"],null],false],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"external-resources\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"badgeIntroLinks\"]]],null,{\"statements\":[[0,\"          \"],[7,\"a\",true],[11,\"href\",[23,1,[\"href\"]]],[10,\"class\",\"external-link\"],[10,\"target\",\"_blank\"],[10,\"rel\",\"noopener noreferrer\"],[8],[0,\"\\n            \"],[1,[28,\"d-icon\",[[23,1,[\"icon\"]]],null],false],[0,\"\\n            \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[[23,1,[\"text\"]]],null],false],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/badges-index"}});
Ember.TEMPLATES["admin/templates/badges-show"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"d-section\",null,[[\"class\"],[\"current-badge content-body\"]],{\"statements\":[[0,\"  \"],[7,\"form\",true],[10,\"class\",\"form-horizontal\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"for\",\"name\"],[8],[1,[28,\"i18n\",[\"admin.badges.name\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"readOnly\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"input\",null,[[\"type\",\"name\",\"value\",\"disabled\"],[\"text\",\"name\",[24,[\"buffered\",\"name\"]],true]]],false],[0,\"\\n        \"],[7,\"p\",true],[10,\"class\",\"help\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"query\",\"route\"],[[28,\"hash\",null,[[\"q\"],[[28,\"concat\",[[24,[\"textCustomizationPrefix\"]],\"name\"],null]]]],\"adminSiteText\"]],{\"statements\":[[0,\"            \"],[1,[28,\"i18n\",[\"admin.badges.read_only_setting_help\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[1,[28,\"input\",null,[[\"type\",\"name\",\"value\"],[\"text\",\"name\",[24,[\"buffered\",\"name\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"for\",\"graphic\"],[8],[1,[28,\"i18n\",[\"admin.badges.graphic\"],null],false],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"radios inline-form full-width\"],[8],[0,\"\\n        \"],[7,\"label\",true],[10,\"class\",\"radio-label\"],[10,\"for\",\"badge-icon\"],[8],[0,\"\\n          \"],[1,[28,\"radio-button\",null,[[\"name\",\"id\",\"value\",\"selection\",\"onChange\"],[\"badge-icon\",\"badge-icon\",\"icon\",[24,[\"selectedGraphicType\"]],[28,\"action\",[[23,0,[]],\"changeGraphicType\"],null]]]],false],[0,\"\\n          \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"admin.badges.select_an_icon\"],null],false],[9],[0,\"\\n        \"],[9],[0,\"\\n\\n        \"],[7,\"label\",true],[10,\"class\",\"radio-label\"],[10,\"for\",\"badge-image\"],[8],[0,\"\\n          \"],[1,[28,\"radio-button\",null,[[\"name\",\"id\",\"value\",\"selection\",\"onChange\"],[\"badge-image\",\"badge-image\",\"image\",[24,[\"selectedGraphicType\"]],[28,\"action\",[[23,0,[]],\"changeGraphicType\"],null]]]],false],[0,\"\\n          \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"admin.badges.upload_an_image\"],null],false],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"imageUploaderSelected\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"image-uploader\",null,[[\"imageUrl\",\"onUploadDone\",\"onUploadDeleted\",\"type\",\"class\"],[[24,[\"buffered\",\"image_url\"]],[28,\"action\",[[23,0,[]],\"setImage\"],null],[28,\"action\",[[23,0,[]],\"removeImage\"],null],\"badge_image\",\"no-repeat contain-image\"]]],false],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"control-instructions\"],[8],[0,\"\\n          \"],[7,\"p\",true],[10,\"class\",\"help\"],[8],[1,[28,\"i18n\",[\"admin.badges.image_help\"],null],false],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"iconSelectorSelected\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"icon-picker\",null,[[\"name\",\"value\",\"options\",\"onChange\"],[\"icon\",[24,[\"buffered\",\"icon\"]],[28,\"hash\",null,[[\"maximum\"],[1]]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"buffered\",\"icon\"]]],null]],null]]]],false],[0,\"\\n      \"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"for\",\"badge_type_id\"],[8],[1,[28,\"i18n\",[\"admin.badges.badge_type\"],null],false],[9],[0,\"\\n      \"],[1,[28,\"combo-box\",null,[[\"name\",\"value\",\"content\",\"onChange\",\"isDisabled\"],[\"badge_type_id\",[24,[\"buffered\",\"badge_type_id\"]],[24,[\"badgeTypes\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"buffered\",\"badge_type_id\"]]],null]],null],[24,[\"readOnly\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"for\",\"badge_grouping_id\"],[8],[1,[28,\"i18n\",[\"admin.badges.badge_grouping\"],null],false],[9],[0,\"\\n\\n      \"],[7,\"div\",true],[10,\"class\",\"badge-grouping-control\"],[8],[0,\"\\n        \"],[1,[28,\"combo-box\",null,[[\"name\",\"value\",\"content\",\"class\",\"nameProperty\",\"onChange\"],[\"badge_grouping_id\",[24,[\"buffered\",\"badge_grouping_id\"]],[24,[\"badgeGroupings\"]],\"badge-selector\",\"name\",[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"buffered\",\"badge_grouping_id\"]]],null]],null]]]],false],[0,\"\\n        \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\"],[\"btn-default\",[28,\"route-action\",[\"editGroupings\"],null],\"pencil-alt\"]]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"for\",\"description\"],[8],[1,[28,\"i18n\",[\"admin.badges.description\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"buffered\",\"system\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"textarea\",null,[[\"name\",\"value\",\"disabled\"],[\"description\",[24,[\"buffered\",\"description\"]],true]]],false],[0,\"\\n        \"],[7,\"p\",true],[10,\"class\",\"help\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"query\",\"route\"],[[28,\"hash\",null,[[\"q\"],[[28,\"concat\",[[24,[\"textCustomizationPrefix\"]],\"description\"],null]]]],\"adminSiteText\"]],{\"statements\":[[0,\"            \"],[1,[28,\"i18n\",[\"admin.badges.read_only_setting_help\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[1,[28,\"textarea\",null,[[\"name\",\"value\"],[\"description\",[24,[\"buffered\",\"description\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"for\",\"long_description\"],[8],[1,[28,\"i18n\",[\"admin.badges.long_description\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"buffered\",\"system\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"textarea\",null,[[\"name\",\"value\",\"disabled\"],[\"long_description\",[24,[\"buffered\",\"long_description\"]],true]]],false],[0,\"\\n        \"],[7,\"p\",true],[10,\"class\",\"help\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"query\",\"route\"],[[28,\"hash\",null,[[\"q\"],[[28,\"concat\",[[24,[\"textCustomizationPrefix\"]],\"long_description\"],null]]]],\"adminSiteText\"]],{\"statements\":[[0,\"            \"],[1,[28,\"i18n\",[\"admin.badges.read_only_setting_help\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[1,[28,\"textarea\",null,[[\"name\",\"value\"],[\"long_description\",[24,[\"buffered\",\"long_description\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"siteSettings\",\"enable_badge_sql\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n        \"],[7,\"label\",true],[10,\"for\",\"query\"],[8],[1,[28,\"i18n\",[\"admin.badges.query\"],null],false],[9],[0,\"\\n        \"],[1,[28,\"ace-editor\",null,[[\"content\",\"mode\",\"disabled\"],[[24,[\"buffered\",\"query\"]],\"sql\",[24,[\"readOnly\"]]]]],false],[0,\"\\n      \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"hasQuery\"]]],null,{\"statements\":[[0,\"        \"],[7,\"a\",false],[12,\"href\",\"\"],[3,\"action\",[[23,0,[]],\"preview\",[24,[\"buffered\"]],\"false\"]],[8],[1,[28,\"i18n\",[\"admin.badges.preview.link_text\"],null],false],[9],[0,\"\\n        |\\n        \"],[7,\"a\",false],[12,\"href\",\"\"],[3,\"action\",[[23,0,[]],\"preview\",[24,[\"buffered\"]],\"true\"]],[8],[1,[28,\"i18n\",[\"admin.badges.preview.plan_text\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"preview_loading\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"i18n\",[\"loading\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n          \"],[7,\"label\",true],[8],[0,\"\\n            \"],[1,[28,\"input\",null,[[\"type\",\"checked\",\"disabled\"],[\"checkbox\",[24,[\"buffered\",\"auto_revoke\"]],[24,[\"readOnly\"]]]]],false],[0,\"\\n            \"],[1,[28,\"i18n\",[\"admin.badges.auto_revoke\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\\n        \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n          \"],[7,\"label\",true],[8],[0,\"\\n            \"],[1,[28,\"input\",null,[[\"type\",\"checked\",\"disabled\"],[\"checkbox\",[24,[\"buffered\",\"target_posts\"]],[24,[\"readOnly\"]]]]],false],[0,\"\\n            \"],[1,[28,\"i18n\",[\"admin.badges.target_posts\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\\n        \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n          \"],[7,\"label\",true],[10,\"for\",\"trigger\"],[8],[1,[28,\"i18n\",[\"admin.badges.trigger\"],null],false],[9],[0,\"\\n          \"],[1,[28,\"combo-box\",null,[[\"name\",\"value\",\"content\",\"onChange\",\"disabled\"],[\"trigger\",[24,[\"buffered\",\"trigger\"]],[24,[\"badgeTriggers\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"buffered\",\"trigger\"]]],null]],null],[24,[\"readOnly\"]]]]],false],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n      \"],[7,\"div\",true],[8],[0,\"\\n        \"],[7,\"label\",true],[8],[0,\"\\n          \"],[1,[28,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[24,[\"buffered\",\"allow_title\"]]]]],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.badges.allow_title\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\\n      \"],[7,\"div\",true],[8],[0,\"\\n        \"],[7,\"label\",true],[8],[0,\"\\n          \"],[1,[28,\"input\",null,[[\"type\",\"checked\",\"disabled\"],[\"checkbox\",[24,[\"buffered\",\"multiple_grant\"]],[24,[\"readOnly\"]]]]],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.badges.multiple_grant\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\\n      \"],[7,\"div\",true],[8],[0,\"\\n        \"],[7,\"label\",true],[8],[0,\"\\n          \"],[1,[28,\"input\",null,[[\"type\",\"checked\",\"disabled\"],[\"checkbox\",[24,[\"buffered\",\"listable\"]],[24,[\"readOnly\"]]]]],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.badges.listable\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\\n      \"],[7,\"div\",true],[8],[0,\"\\n        \"],[7,\"label\",true],[8],[0,\"\\n          \"],[1,[28,\"input\",null,[[\"type\",\"checked\",\"disabled\"],[\"checkbox\",[24,[\"buffered\",\"show_posts\"]],[24,[\"readOnly\"]]]]],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.badges.show_posts\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\\n      \"],[7,\"div\",true],[8],[0,\"\\n        \"],[7,\"label\",true],[8],[0,\"\\n          \"],[1,[28,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[24,[\"buffered\",\"enabled\"]]]]],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.badges.enabled\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"buttons\"],[8],[0,\"\\n      \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"type\",\"disabled\",\"label\"],[\"btn-primary\",[28,\"action\",[[23,0,[]],\"save\"],null],\"submit\",[24,[\"saving\"]],\"admin.badges.save\"]]],false],[0,\"\\n      \"],[7,\"span\",true],[10,\"class\",\"saving\"],[8],[1,[22,\"savingStatus\"],false],[9],[0,\"\\n\"],[4,\"unless\",[[24,[\"readOnly\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"label\"],[[28,\"action\",[[23,0,[]],\"destroy\"],null],\"btn-danger\",\"admin.badges.delete\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"grant_count\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"content-body current-badge-actions\"],[8],[0,\"\\n    \"],[7,\"div\",true],[8],[0,\"\\n      \"],[4,\"link-to\",null,[[\"route\",\"model\"],[\"badges.show\",[23,0,[]]]],{\"statements\":[[1,[28,\"i18n\",[\"badges.granted\"],[[\"count\"],[[24,[\"grant_count\"]]]]],false]],\"parameters\":[]},null],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/badges-show"}});
Ember.TEMPLATES["admin/templates/badges"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"badge\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"badges\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"badges-header\"],[8],[0,\"\\n    \"],[7,\"h3\",true],[10,\"class\",\"badges-heading\"],[8],[1,[28,\"i18n\",[\"admin.badges.title\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"create-new-badge\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"route\",\"model\"],[\"btn btn-primary\",\"adminBadges.show\",\"new\"]],{\"statements\":[[0,\"        \"],[1,[28,\"d-icon\",[\"plus\"],null],false],[0,\"\\n        \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"admin.badges.new\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"route\",\"model\"],[\"btn btn-default\",\"adminBadges.award\",\"new\"]],{\"statements\":[[0,\"        \"],[1,[28,\"d-icon\",[\"upload\"],null],false],[0,\"\\n        \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"admin.badges.mass_award.title\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"content-list\"],[8],[0,\"\\n    \"],[7,\"ul\",true],[10,\"class\",\"admin-badge-list\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"        \"],[7,\"li\",true],[10,\"class\",\"admin-badge-list-item\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"route\",\"model\"],[[24,[\"selectedRoute\"]],[23,1,[\"id\"]]]],{\"statements\":[[0,\"            \"],[1,[28,\"badge-button\",null,[[\"badge\"],[[23,1,[]]]]],false],[0,\"\\n\"],[4,\"if\",[[23,1,[\"newBadge\"]]],null,{\"statements\":[[0,\"              \"],[7,\"span\",true],[10,\"class\",\"list-badge\"],[8],[1,[28,\"i18n\",[\"filters.new.lower_title\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/badges"}});
Ember.TEMPLATES["admin/templates/components/ace-editor"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"ace\"],[8],[1,[22,\"content\"],false],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/ace-editor"}});
Ember.TEMPLATES["admin/templates/components/admin-backups-logs"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"if\",[[24,[\"hasFormattedLogs\"]]],null,{\"statements\":[[0,\"  \"],[7,\"pre\",true],[8],[1,[22,\"formattedLogs\"],false],[9],[0,\"\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[7,\"p\",true],[8],[1,[22,\"noLogsMessage\"],false],[9],[0,\"\\n\"]],\"parameters\":[]}],[4,\"if\",[[24,[\"showLoadingSpinner\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"spinner small\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-backups-logs"}});
Ember.TEMPLATES["admin/templates/components/admin-editable-field"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[[24,[\"name\"]]],null],false],[9],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"editing\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"text-field\",null,[[\"value\",\"autofocus\",\"autocomplete\"],[[24,[\"buffer\"]],\"autofocus\",\"discourse\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[7,\"a\",false],[12,\"href\",\"\"],[12,\"class\",\"inline-editable-field\"],[3,\"action\",[[23,0,[]],\"edit\"]],[8],[0,\"\\n      \"],[7,\"span\",true],[8],[1,[22,\"value\"],false],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[9],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"editing\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"save\"],null],\"admin.user_fields.save\"]]],false],[0,\"\\n    \"],[7,\"a\",false],[12,\"href\",\"\"],[3,\"action\",[[23,0,[]],\"edit\"]],[8],[1,[28,\"i18n\",[\"cancel\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"edit\"],null],\"pencil-alt\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-editable-field"}});
Ember.TEMPLATES["admin/templates/components/admin-form-row"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"&default\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"form-element label-area\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"label\"]]],null,{\"statements\":[[0,\"    \"],[7,\"label\",true],[8],[1,[28,\"i18n\",[[24,[\"label\"]]],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"     \\n\"]],\"parameters\":[]}],[9],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"form-element input-area\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"wrapLabel\"]]],null,{\"statements\":[[0,\"    \"],[7,\"label\",true],[8],[14,1],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[14,1],[0,\"\\n\"]],\"parameters\":[]}],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-form-row"}});
Ember.TEMPLATES["admin/templates/components/admin-nav"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"&default\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"admin-controls\"],[8],[0,\"\\n  \"],[7,\"nav\",true],[8],[0,\"\\n    \"],[7,\"ul\",true],[10,\"class\",\"nav nav-pills\"],[8],[0,\"\\n      \"],[14,1],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-nav"}});
Ember.TEMPLATES["admin/templates/components/admin-penalty-history"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[11,\"class\",[29,[\"suspended-count \",[22,\"suspendedCountClass\"]]]],[11,\"title\",[28,\"i18n\",[\"admin.user.last_six_months\"],null]],[8],[0,\"\\n  \"],[7,\"label\",true],[8],[1,[28,\"i18n\",[\"admin.user.suspended_count\"],null],false],[9],[0,\"\\n  \"],[7,\"span\",true],[8],[1,[24,[\"user\",\"penalty_counts\",\"suspended\"]],false],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"div\",true],[11,\"class\",[29,[\"silenced-count \",[22,\"silencedCountClass\"]]]],[11,\"title\",[28,\"i18n\",[\"admin.user.last_six_months\"],null]],[8],[0,\"\\n  \"],[7,\"label\",true],[8],[1,[28,\"i18n\",[\"admin.user.silenced_count\"],null],false],[9],[0,\"\\n  \"],[7,\"span\",true],[8],[1,[24,[\"user\",\"penalty_counts\",\"silenced\"]],false],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-penalty-history"}});
Ember.TEMPLATES["admin/templates/components/admin-report-chart"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"chart-canvas-container\"],[8],[0,\"\\n  \"],[7,\"canvas\",true],[10,\"class\",\"chart-canvas\"],[8],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-report-chart"}});
Ember.TEMPLATES["admin/templates/components/admin-report-counters"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"cell title\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"icon\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"d-icon\",[[24,[\"model\",\"icon\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[7,\"a\",true],[11,\"href\",[24,[\"model\",\"reportUrl\"]]],[8],[1,[24,[\"model\",\"title\"]],false],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"cell value today-count\"],[8],[1,[28,\"number\",[[24,[\"model\",\"todayCount\"]]],null],false],[9],[0,\"\\n\\n\"],[7,\"div\",true],[11,\"class\",[29,[\"cell value yesterday-count \",[24,[\"model\",\"yesterdayTrend\"]]]]],[11,\"title\",[24,[\"model\",\"yesterdayCountTitle\"]]],[8],[0,\"\\n  \"],[1,[28,\"number\",[[24,[\"model\",\"yesterdayCount\"]]],null],false],[0,\" \"],[1,[28,\"d-icon\",[[24,[\"model\",\"yesterdayTrendIcon\"]]],null],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[11,\"class\",[29,[\"cell value sevendays-count \",[24,[\"model\",\"sevenDaysTrend\"]]]]],[11,\"title\",[24,[\"model\",\"sevenDaysCountTitle\"]]],[8],[0,\"\\n  \"],[1,[28,\"number\",[[24,[\"model\",\"lastSevenDaysCount\"]]],null],false],[0,\" \"],[1,[28,\"d-icon\",[[24,[\"model\",\"sevenDaysTrendIcon\"]]],null],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[11,\"class\",[29,[\"cell value thirty-days-count \",[24,[\"model\",\"thirtyDaysTrend\"]]]]],[11,\"title\",[24,[\"model\",\"thirtyDaysCountTitle\"]]],[8],[0,\"\\n  \"],[1,[28,\"number\",[[24,[\"model\",\"lastThirtyDaysCount\"]]],null],false],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"model\",\"prev30Days\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"d-icon\",[[24,[\"model\",\"thirtyDaysTrendIcon\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-report-counters"}});
Ember.TEMPLATES["admin/templates/components/admin-report-counts"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"td\",true],[10,\"class\",\"title\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"report\",\"icon\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"d-icon\",[[24,[\"report\",\"icon\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[7,\"a\",true],[11,\"href\",[24,[\"report\",\"reportUrl\"]]],[8],[1,[24,[\"report\",\"title\"]],false],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"td\",true],[10,\"class\",\"value\"],[8],[1,[28,\"number\",[[24,[\"report\",\"todayCount\"]]],null],false],[9],[0,\"\\n\\n\"],[7,\"td\",true],[11,\"class\",[29,[\"value \",[24,[\"report\",\"yesterdayTrend\"]]]]],[11,\"title\",[24,[\"report\",\"yesterdayCountTitle\"]]],[8],[0,\"\\n  \"],[1,[28,\"number\",[[24,[\"report\",\"yesterdayCount\"]]],null],false],[0,\" \"],[1,[28,\"d-icon\",[[24,[\"report\",\"yesterdayTrendIcon\"]]],null],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"td\",true],[11,\"class\",[29,[\"value \",[24,[\"report\",\"sevenDaysTrend\"]]]]],[11,\"title\",[24,[\"report\",\"sevenDaysCountTitle\"]]],[8],[0,\"\\n  \"],[1,[28,\"number\",[[24,[\"report\",\"lastSevenDaysCount\"]]],null],false],[0,\" \"],[1,[28,\"d-icon\",[[24,[\"report\",\"sevenDaysTrendIcon\"]]],null],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"td\",true],[11,\"class\",[29,[\"value \",[24,[\"report\",\"thirtyDaysTrend\"]]]]],[11,\"title\",[24,[\"report\",\"thirtyDaysCountTitle\"]]],[8],[0,\"\\n  \"],[1,[28,\"number\",[[24,[\"report\",\"lastThirtyDaysCount\"]]],null],false],[0,\" \"],[1,[28,\"d-icon\",[[24,[\"report\",\"thirtyDaysTrendIcon\"]]],null],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"allTime\"]]],null,{\"statements\":[[0,\"  \"],[7,\"td\",true],[10,\"class\",\"value\"],[8],[1,[28,\"number\",[[24,[\"report\",\"total\"]]],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-report-counts"}});
Ember.TEMPLATES["admin/templates/components/admin-report-inline-table"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"data\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"table-container\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\",\"data\"]]],null,{\"statements\":[[0,\"    \"],[7,\"a\",true],[11,\"class\",[29,[\"table-cell user-\",[23,1,[\"key\"]]]]],[11,\"href\",[23,1,[\"url\"]]],[8],[0,\"\\n      \"],[7,\"span\",true],[10,\"class\",\"label\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"icon\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-icon\",[[23,1,[\"icon\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[1,[23,1,[\"x\"]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"span\",true],[10,\"class\",\"value\"],[8],[0,\"\\n        \"],[1,[28,\"number\",[[23,1,[\"y\"]]],null],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-report-inline-table"}});
Ember.TEMPLATES["admin/templates/components/admin-report-per-day-counts"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"td\",true],[10,\"class\",\"title\"],[8],[7,\"a\",true],[11,\"href\",[24,[\"report\",\"reportUrl\"]]],[8],[1,[24,[\"report\",\"title\"]],false],[9],[9],[0,\"\\n\"],[7,\"td\",true],[10,\"class\",\"value\"],[8],[1,[24,[\"report\",\"todayCount\"]],false],[9],[0,\"\\n\"],[7,\"td\",true],[10,\"class\",\"value\"],[8],[1,[24,[\"report\",\"yesterdayCount\"]],false],[9],[0,\"\\n\"],[7,\"td\",true],[10,\"class\",\"value\"],[8],[1,[24,[\"report\",\"sevenDaysAgoCount\"]],false],[9],[0,\"\\n\"],[7,\"td\",true],[10,\"class\",\"value\"],[8],[1,[24,[\"report\",\"thirtyDaysAgoCount\"]],false],[9],[0,\"\\n\"],[7,\"td\",true],[10,\"class\",\"value\"],[8],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-report-per-day-counts"}});
Ember.TEMPLATES["admin/templates/components/admin-report-stacked-chart"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"chart-canvas-container\"],[8],[0,\"\\n  \"],[7,\"canvas\",true],[10,\"class\",\"chart-canvas\"],[8],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-report-stacked-chart"}});
Ember.TEMPLATES["admin/templates/components/admin-report-storage-stats"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"if\",[[24,[\"showBackupStats\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"backups\"],[8],[0,\"\\n    \"],[7,\"h3\",true],[10,\"class\",\"storage-stats-title\"],[8],[0,\"\\n      \"],[7,\"a\",true],[11,\"href\",[28,\"get-url\",[\"/admin/backups\"],null]],[8],[1,[28,\"d-icon\",[\"archive\"],null],false],[0,\" \"],[1,[28,\"i18n\",[\"admin.dashboard.backups\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"p\",true],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"backupStats\",\"free_bytes\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"i18n\",[\"admin.dashboard.space_used_and_free\"],[[\"usedSize\",\"freeSize\"],[[24,[\"usedBackupSpace\"]],[24,[\"freeBackupSpace\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[1,[28,\"i18n\",[\"admin.dashboard.space_used\"],[[\"usedSize\"],[[24,[\"usedBackupSpace\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n      \"],[7,\"br\",true],[8],[9],[0,\"\\n      \"],[1,[28,\"i18n\",[\"admin.dashboard.backup_count\"],[[\"count\",\"location\"],[[24,[\"backupStats\",\"count\"]],[24,[\"backupLocationName\"]]]]],false],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"backupStats\",\"last_backup_taken_at\"]]],null,{\"statements\":[[0,\"        \"],[7,\"br\",true],[8],[9],[0,\"\\n        \"],[1,[28,\"html-safe\",[[28,\"i18n\",[\"admin.dashboard.lastest_backup\"],[[\"date\"],[[28,\"format-date\",[[24,[\"backupStats\",\"last_backup_taken_at\"]]],[[\"leaveAgo\"],[\"true\"]]]]]]],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"uploads\"],[8],[0,\"\\n  \"],[7,\"h3\",true],[10,\"class\",\"storage-stats-title\"],[8],[1,[28,\"d-icon\",[\"upload\"],null],false],[0,\" \"],[1,[28,\"i18n\",[\"admin.dashboard.uploads\"],null],false],[9],[0,\"\\n  \"],[7,\"p\",true],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"uploadStats\",\"free_bytes\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"i18n\",[\"admin.dashboard.space_used_and_free\"],[[\"usedSize\",\"freeSize\"],[[24,[\"usedUploadSpace\"]],[24,[\"freeUploadSpace\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[1,[28,\"i18n\",[\"admin.dashboard.space_used\"],[[\"usedSize\"],[[24,[\"usedUploadSpace\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-report-storage-stats"}});
Ember.TEMPLATES["admin/templates/components/admin-report-table-cell"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"html-safe\",[[24,[\"formatedValue\"]]],null],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-report-table-cell"}});
Ember.TEMPLATES["admin/templates/components/admin-report-table-header"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"if\",[[24,[\"showSortingUI\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"d-button\",null,[[\"action\",\"icon\",\"class\"],[[24,[\"sortByLabel\"]],[24,[\"sortIcon\"]],\"sort-btn\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"label\",\"htmlTitle\"]]],null,{\"statements\":[[0,\"  \"],[7,\"span\",true],[10,\"class\",\"title\"],[8],[1,[28,\"html-safe\",[[24,[\"label\",\"htmlTitle\"]]],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[7,\"span\",true],[10,\"class\",\"title\"],[8],[1,[24,[\"label\",\"title\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-report-table-header"}});
Ember.TEMPLATES["admin/templates/components/admin-report-table-row"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"label\"],\"statements\":[[4,\"each\",[[24,[\"labels\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"admin-report-table-cell\",null,[[\"label\",\"data\",\"options\"],[[23,1,[]],[24,[\"data\"]],[24,[\"options\"]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-report-table-row"}});
Ember.TEMPLATES["admin/templates/components/admin-report-table"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"pageState\",\"total\",\"data\",\"data\",\"label\"],\"statements\":[[7,\"table\",true],[10,\"class\",\"table\"],[8],[0,\"\\n  \"],[7,\"thead\",true],[8],[0,\"\\n    \"],[7,\"tr\",true],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"computedLabels\"]]],null,{\"statements\":[[4,\"each\",[[24,[\"model\",\"computedLabels\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"admin-report-table-header\",null,[[\"showSortingUI\",\"currentSortDirection\",\"currentSortLabel\",\"label\",\"sortByLabel\"],[[24,[\"showSortingUI\"]],[24,[\"sortDirection\"]],[24,[\"sortLabel\"]],[23,5,[]],[28,\"action\",[[23,0,[]],\"sortByLabel\",[23,5,[]]],null]]]],false],[0,\"\\n\"]],\"parameters\":[5]},null]],\"parameters\":[]},{\"statements\":[[4,\"each\",[[24,[\"model\",\"data\"]]],null,{\"statements\":[[0,\"          \"],[7,\"th\",true],[8],[1,[23,4,[\"x\"]],false],[9],[0,\"\\n\"]],\"parameters\":[4]},null]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"paginatedData\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"admin-report-table-row\",null,[[\"data\",\"labels\",\"options\"],[[23,3,[]],[24,[\"model\",\"computedLabels\"]],[24,[\"options\"]]]]],false],[0,\"\\n\"]],\"parameters\":[3]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"showTotalForSample\"]]],null,{\"statements\":[[0,\"      \"],[7,\"tr\",true],[10,\"class\",\"total-row\"],[8],[0,\"\\n        \"],[7,\"td\",true],[11,\"colspan\",[24,[\"totalsForSample\",\"length\"]]],[8],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.dashboard.reports.totals_for_sample\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tr\",true],[10,\"class\",\"admin-report-table-row\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"totalsForSample\"]]],null,{\"statements\":[[0,\"          \"],[7,\"td\",true],[11,\"class\",[29,[\"admin-report-table-cell \",[23,2,[\"type\"]],\" \",[23,2,[\"property\"]]]]],[8],[0,\"\\n            \"],[1,[23,2,[\"formatedValue\"]],false],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"showTotal\"]]],null,{\"statements\":[[0,\"      \"],[7,\"tr\",true],[10,\"class\",\"total-row\"],[8],[0,\"\\n        \"],[7,\"td\",true],[10,\"colspan\",\"2\"],[8],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.dashboard.reports.total\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tr\",true],[10,\"class\",\"admin-report-table-row\"],[8],[0,\"\\n        \"],[7,\"td\",true],[10,\"class\",\"admin-report-table-cell date x\"],[8],[0,\"—\"],[9],[0,\"\\n        \"],[7,\"td\",true],[10,\"class\",\"admin-report-table-cell number y\"],[8],[1,[28,\"number\",[[24,[\"model\",\"total\"]]],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"showAverage\"]]],null,{\"statements\":[[0,\"      \"],[7,\"tr\",true],[10,\"class\",\"total-row\"],[8],[0,\"\\n        \"],[7,\"td\",true],[10,\"colspan\",\"2\"],[8],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.dashboard.reports.average_for_sample\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tr\",true],[10,\"class\",\"admin-report-table-row\"],[8],[0,\"\\n        \"],[7,\"td\",true],[10,\"class\",\"admin-report-table-cell date x\"],[8],[0,\"—\"],[9],[0,\"\\n        \"],[7,\"td\",true],[10,\"class\",\"admin-report-table-cell number y\"],[8],[1,[28,\"number\",[[24,[\"averageForSample\"]]],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"pagination\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"pages\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"d-button\",null,[[\"translatedLabel\",\"action\",\"actionParam\",\"class\"],[[23,1,[\"page\"]],[28,\"action\",[[23,0,[]],\"changePage\"],null],[23,1,[\"index\"]],[23,1,[\"class\"]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-report-table"}});
Ember.TEMPLATES["admin/templates/components/admin-report-trust-level-counts"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"td\",true],[10,\"class\",\"title\"],[8],[1,[24,[\"report\",\"title\"]],false],[9],[0,\"\\n\"],[7,\"td\",true],[10,\"class\",\"value\"],[8],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUsersList.show\",\"newuser\"]],{\"statements\":[[1,[28,\"number\",[[28,\"value-at-tl\",[[24,[\"report\",\"data\"]]],[[\"level\"],[\"0\"]]]],null],false]],\"parameters\":[]},null],[9],[0,\"\\n\"],[7,\"td\",true],[10,\"class\",\"value\"],[8],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUsersList.show\",\"basic\"]],{\"statements\":[[1,[28,\"number\",[[28,\"value-at-tl\",[[24,[\"report\",\"data\"]]],[[\"level\"],[\"1\"]]]],null],false]],\"parameters\":[]},null],[9],[0,\"\\n\"],[7,\"td\",true],[10,\"class\",\"value\"],[8],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUsersList.show\",\"member\"]],{\"statements\":[[1,[28,\"number\",[[28,\"value-at-tl\",[[24,[\"report\",\"data\"]]],[[\"level\"],[\"2\"]]]],null],false]],\"parameters\":[]},null],[9],[0,\"\\n\"],[7,\"td\",true],[10,\"class\",\"value\"],[8],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUsersList.show\",\"regular\"]],{\"statements\":[[1,[28,\"number\",[[28,\"value-at-tl\",[[24,[\"report\",\"data\"]]],[[\"level\"],[\"3\"]]]],null],false]],\"parameters\":[]},null],[9],[0,\"\\n\"],[7,\"td\",true],[10,\"class\",\"value\"],[8],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUsersList.show\",\"leader\"]],{\"statements\":[[1,[28,\"number\",[[28,\"value-at-tl\",[[24,[\"report\",\"data\"]]],[[\"level\"],[\"4\"]]]],null],false]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-report-trust-level-counts"}});
Ember.TEMPLATES["admin/templates/components/admin-report"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"filter\",\"chartGrouping\",\"displayedMode\"],\"statements\":[[4,\"unless\",[[24,[\"isHidden\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"isEnabled\"]]],null,{\"statements\":[[4,\"conditional-loading-section\",null,[[\"isLoading\"],[[24,[\"isLoading\"]]]],{\"statements\":[[4,\"if\",[[24,[\"showHeader\"]]],null,{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"header\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"showTitle\"]]],null,{\"statements\":[[0,\"            \"],[7,\"ul\",true],[10,\"class\",\"breadcrumb\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"showAllReportsLink\"]]],null,{\"statements\":[[0,\"                \"],[7,\"li\",true],[10,\"class\",\"item all-reports\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"route\"],[\"report-url\",\"admin.dashboardReports\"]],{\"statements\":[[0,\"                    \"],[1,[28,\"i18n\",[\"admin.dashboard.all_reports\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"                \"],[9],[0,\"\\n\\n\"],[4,\"unless\",[[24,[\"showNotFoundError\"]]],null,{\"statements\":[[0,\"                  \"],[7,\"li\",true],[10,\"class\",\"item separator\"],[8],[0,\"|\"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"unless\",[[24,[\"showNotFoundError\"]]],null,{\"statements\":[[0,\"                \"],[7,\"li\",true],[10,\"class\",\"item report\"],[8],[0,\"\\n                  \"],[7,\"a\",true],[11,\"href\",[24,[\"model\",\"reportUrl\"]]],[10,\"class\",\"report-url\"],[8],[0,\"\\n                    \"],[1,[24,[\"model\",\"title\"]],false],[0,\"\\n                  \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"model\",\"description\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"model\",\"description_link\"]]],null,{\"statements\":[[0,\"                      \"],[7,\"a\",true],[10,\"target\",\"_blank\"],[10,\"rel\",\"noopener noreferrer\"],[11,\"href\",[24,[\"model\",\"description_link\"]]],[10,\"class\",\"info\"],[11,\"data-tooltip\",[24,[\"model\",\"description\"]]],[8],[0,\"\\n                        \"],[1,[28,\"d-icon\",[\"question-circle\"],null],false],[0,\"\\n                      \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                      \"],[7,\"span\",true],[10,\"class\",\"info\"],[11,\"data-tooltip\",[24,[\"model\",\"description\"]]],[8],[0,\"\\n                        \"],[1,[28,\"d-icon\",[\"question-circle\"],null],false],[0,\"\\n                      \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"                \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"            \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"shouldDisplayTrend\"]]],null,{\"statements\":[[0,\"            \"],[7,\"div\",true],[11,\"class\",[29,[\"trend \",[24,[\"model\",\"trend\"]]]]],[8],[0,\"\\n              \"],[7,\"span\",true],[10,\"class\",\"value\"],[11,\"title\",[24,[\"model\",\"trendTitle\"]]],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"average\"]]],null,{\"statements\":[[0,\"                  \"],[1,[28,\"number\",[[24,[\"model\",\"currentAverage\"]]],null],false],[4,\"if\",[[24,[\"model\",\"percent\"]]],null,{\"statements\":[[0,\"%\"]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                  \"],[1,[28,\"number\",[[24,[\"model\",\"currentTotal\"]]],[[\"noTitle\"],[\"true\"]]],false],[4,\"if\",[[24,[\"model\",\"percent\"]]],null,{\"statements\":[[0,\"%\"]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"trendIcon\"]]],null,{\"statements\":[[0,\"                  \"],[1,[28,\"d-icon\",[[24,[\"model\",\"trendIcon\"]]],[[\"class\"],[\"icon\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"body\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"main\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"showError\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"showTimeoutError\"]]],null,{\"statements\":[[0,\"              \"],[7,\"div\",true],[10,\"class\",\"alert alert-error report-alert timeout\"],[8],[0,\"\\n                \"],[1,[28,\"d-icon\",[\"exclamation-triangle\"],null],false],[0,\"\\n                \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"admin.dashboard.timeout_error\"],null],false],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"showExceptionError\"]]],null,{\"statements\":[[0,\"              \"],[7,\"div\",true],[10,\"class\",\"alert alert-error report-alert exception\"],[8],[0,\"\\n                \"],[1,[28,\"d-icon\",[\"exclamation-triangle\"],null],false],[0,\"\\n                \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"admin.dashboard.exception_error\"],null],false],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"showNotFoundError\"]]],null,{\"statements\":[[0,\"              \"],[7,\"div\",true],[10,\"class\",\"alert alert-error report-alert not-found\"],[8],[0,\"\\n                \"],[1,[28,\"d-icon\",[\"exclamation-triangle\"],null],false],[0,\"\\n                \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"admin.dashboard.not_found_error\"],null],false],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"hasData\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"currentMode\"]]],null,{\"statements\":[[0,\"                \"],[1,[28,\"component\",[[24,[\"modeComponent\"]]],[[\"model\",\"options\"],[[24,[\"model\"]],[24,[\"options\"]]]]],false],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"model\",\"relatedReport\"]]],null,{\"statements\":[[0,\"                  \"],[1,[28,\"admin-report\",null,[[\"showFilteringUI\",\"dataSourceName\"],[false,[24,[\"model\",\"relatedReport\",\"type\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"rateLimitationString\"]]],null,{\"statements\":[[0,\"                \"],[7,\"div\",true],[10,\"class\",\"alert alert-error report-alert rate-limited\"],[8],[0,\"\\n                  \"],[1,[28,\"d-icon\",[\"thermometer-three-quarters\"],null],false],[0,\"\\n                  \"],[7,\"span\",true],[8],[1,[22,\"rateLimitationString\"],false],[9],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                \"],[7,\"div\",true],[10,\"class\",\"alert alert-info report-alert no-data\"],[8],[0,\"\\n                  \"],[1,[28,\"d-icon\",[\"chart-pie\"],null],false],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"reportUrl\"]]],null,{\"statements\":[[0,\"                    \"],[7,\"a\",true],[11,\"href\",[24,[\"model\",\"reportUrl\"]]],[10,\"class\",\"report-url\"],[8],[0,\"\\n                      \"],[7,\"span\",true],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"title\"]]],null,{\"statements\":[[0,\"                          \"],[1,[24,[\"model\",\"title\"]],false],[0,\" —\\n\"]],\"parameters\":[]},null],[0,\"                        \"],[1,[28,\"i18n\",[\"admin.dashboard.reports.no_data\"],null],false],[0,\"\\n                      \"],[9],[0,\"\\n                    \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                    \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"admin.dashboard.reports.no_data\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"                \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]}]],\"parameters\":[]}],[0,\"        \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"showFilteringUI\"]]],null,{\"statements\":[[0,\"          \"],[7,\"div\",true],[10,\"class\",\"filters\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"showModes\"]]],null,{\"statements\":[[0,\"              \"],[7,\"div\",true],[10,\"class\",\"modes\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"displayedModes\"]]],null,{\"statements\":[[0,\"                  \"],[1,[28,\"d-button\",null,[[\"action\",\"actionParam\",\"class\",\"icon\"],[[28,\"action\",[[23,0,[]],\"onChangeMode\"],null],[23,3,[\"mode\"]],[23,3,[\"cssClass\"]],[23,3,[\"icon\"]]]]],false],[0,\"\\n\"]],\"parameters\":[3]},null],[0,\"              \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"isChartMode\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"model\",\"average\"]]],null,{\"statements\":[[0,\"                \"],[7,\"span\",true],[10,\"class\",\"average-chart\"],[8],[0,\"\\n                  \"],[1,[28,\"i18n\",[\"admin.dashboard.reports.average_chart_label\"],null],false],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"              \"],[7,\"div\",true],[10,\"class\",\"chart-groupings\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"chartGroupings\"]]],null,{\"statements\":[[0,\"                  \"],[1,[28,\"d-button\",null,[[\"label\",\"action\",\"class\",\"disabled\"],[[23,2,[\"label\"]],[28,\"action\",[[23,0,[]],\"changeGrouping\",[23,2,[\"id\"]]],null],[23,2,[\"class\"]],[23,2,[\"disabled\"]]]]],false],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"              \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"showDatesOptions\"]]],null,{\"statements\":[[0,\"              \"],[7,\"div\",true],[10,\"class\",\"control\"],[8],[0,\"\\n                \"],[7,\"span\",true],[10,\"class\",\"label\"],[8],[0,\"\\n                  \"],[1,[28,\"i18n\",[\"admin.dashboard.reports.dates\"],null],false],[0,\"\\n                \"],[9],[0,\"\\n\\n                \"],[7,\"div\",true],[10,\"class\",\"input\"],[8],[0,\"\\n                  \"],[1,[28,\"date-time-input-range\",null,[[\"from\",\"to\",\"onChange\",\"showFromTime\",\"showToTime\"],[[24,[\"startDate\"]],[24,[\"endDate\"]],[28,\"action\",[[23,0,[]],\"onChangeDateRange\"],null],false,false]]],false],[0,\"\\n                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"each\",[[24,[\"model\",\"available_filters\"]]],null,{\"statements\":[[0,\"              \"],[7,\"div\",true],[10,\"class\",\"control\"],[8],[0,\"\\n                \"],[7,\"span\",true],[10,\"class\",\"label\"],[8],[0,\"\\n                  \"],[1,[28,\"i18n\",[[28,\"concat\",[\"admin.dashboard.reports.filters.\",[23,1,[\"id\"]],\".label\"],null]],null],false],[0,\"\\n                \"],[9],[0,\"\\n\\n                \"],[7,\"div\",true],[10,\"class\",\"input\"],[8],[0,\"\\n                  \"],[1,[28,\"component\",[[28,\"concat\",[\"report-filters/\",[23,1,[\"type\"]]],null]],[[\"model\",\"filter\",\"applyFilter\"],[[24,[\"model\"]],[23,1,[]],[28,\"action\",[[23,0,[]],\"applyFilter\"],null]]]],false],[0,\"\\n                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"control\"],[8],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"input\"],[8],[0,\"\\n                \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"label\",\"icon\"],[\"btn-default export-csv-btn\",[28,\"action\",[[23,0,[]],\"exportCsv\"],null],\"admin.export_csv.button_text\",\"download\"]]],false],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"showRefresh\"]]],null,{\"statements\":[[0,\"              \"],[7,\"div\",true],[10,\"class\",\"control\"],[8],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"input\"],[8],[0,\"\\n                  \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"label\",\"icon\"],[\"refresh-report-btn btn-primary\",[28,\"action\",[[23,0,[]],\"refreshReport\"],null],\"admin.dashboard.reports.refresh_report\",\"sync\"]]],false],[0,\"\\n                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"alert alert-info\"],[8],[0,\"\\n      \"],[1,[28,\"html-safe\",[[24,[\"disabledLabel\"]]],null],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-report"}});
Ember.TEMPLATES["admin/templates/components/admin-theme-editor"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"field\",\"target\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"edit-main-nav admin-controls\"],[8],[0,\"\\n  \"],[7,\"nav\",true],[8],[0,\"\\n    \"],[7,\"ul\",true],[10,\"class\",\"nav nav-pills target\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"visibleTargets\"]]],null,{\"statements\":[[0,\"        \"],[7,\"li\",true],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"replace\",\"title\",\"class\",\"route\",\"models\"],[true,[24,[\"field\",\"title\"]],[28,\"if\",[[23,2,[\"edited\"]],\"edited\",\"blank\"],null],[24,[\"editRouteName\"]],[28,\"array\",[[24,[\"theme\",\"id\"]],[23,2,[\"name\"]],[24,[\"fieldName\"]]],null]]],{\"statements\":[[0,\"            \"],[4,\"if\",[[23,2,[\"error\"]]],null,{\"statements\":[[1,[28,\"d-icon\",[\"exclamation-triangle\"],null],false]],\"parameters\":[]},null],[0,\"\\n            \"],[4,\"if\",[[23,2,[\"icon\"]]],null,{\"statements\":[[1,[28,\"d-icon\",[[23,2,[\"icon\"]]],null],false]],\"parameters\":[]},null],[0,\"\\n            \"],[1,[28,\"i18n\",[[28,\"concat\",[\"admin.customize.theme.\",[23,2,[\"name\"]]],null]],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"allowAdvanced\"]]],null,{\"statements\":[[0,\"        \"],[7,\"li\",true],[8],[0,\"\\n          \"],[7,\"a\",false],[12,\"href\",\"\"],[12,\"title\",[28,\"i18n\",[[28,\"concat\",[\"admin.customize.theme.\",[28,\"if\",[[24,[\"showAdvanced\"]],\"hide_advanced\",\"show_advanced\"],null]],null]],null]],[12,\"class\",\"no-text\"],[3,\"action\",[[23,0,[]],\"toggleShowAdvanced\"]],[8],[0,\"\\n            \"],[1,[28,\"d-icon\",[[28,\"if\",[[24,[\"showAdvanced\"]],\"angle-double-left\",\"angle-double-right\"],null]],null],false],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[7,\"li\",true],[10,\"class\",\"spacer\"],[8],[9],[0,\"\\n      \"],[7,\"li\",true],[8],[0,\"\\n        \"],[7,\"label\",true],[8],[0,\"\\n          \"],[1,[28,\"input\",null,[[\"type\",\"checked\",\"click\"],[\"checkbox\",[24,[\"onlyOverridden\"]],[28,\"action\",[[23,0,[]],\"onlyOverriddenChanged\"],[[\"value\"],[\"target.checked\"]]]]]],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.customize.theme.hide_unused_fields\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"admin-controls\"],[8],[0,\"\\n  \"],[7,\"nav\",true],[8],[0,\"\\n    \"],[7,\"ul\",true],[10,\"class\",\"nav nav-pills fields\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"visibleFields\"]]],null,{\"statements\":[[0,\"        \"],[7,\"li\",true],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"replace\",\"title\",\"class\",\"route\",\"models\"],[true,[23,1,[\"title\"]],[28,\"if\",[[23,1,[\"edited\"]],\"edited\",\"blank\"],null],[24,[\"editRouteName\"]],[28,\"array\",[[24,[\"theme\",\"id\"]],[24,[\"currentTargetName\"]],[23,1,[\"name\"]]],null]]],{\"statements\":[[0,\"            \"],[4,\"if\",[[23,1,[\"error\"]]],null,{\"statements\":[[1,[28,\"d-icon\",[\"exclamation-triangle\"],null],false]],\"parameters\":[]},null],[0,\"\\n            \"],[4,\"if\",[[23,1,[\"icon\"]]],null,{\"statements\":[[1,[28,\"d-icon\",[[23,1,[\"icon\"]]],null],false]],\"parameters\":[]},null],[0,\"\\n            \"],[1,[23,1,[\"translatedName\"]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"showAddField\"]]],null,{\"statements\":[[0,\"        \"],[7,\"li\",true],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"addingField\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"input\",null,[[\"type\",\"value\",\"enter\",\"escape-press\"],[[24,[\"text\"]],[24,[\"newFieldName\"]],[28,\"action\",[[23,0,[]],\"addField\"],null],[28,\"action\",[[23,0,[]],\"cancelAddField\"],null]]]],false],[0,\"\\n            \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\"],[\"ok\",[28,\"action\",[[23,0,[]],\"addField\",[24,[\"newFieldName\"]]],null],\"check\"]]],false],[0,\"\\n            \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\"],[\"cancel\",[28,\"action\",[[23,0,[]],\"cancelAddField\"],null],\"times\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"            \"],[7,\"a\",false],[12,\"href\",\"\"],[12,\"class\",\"no-text\"],[3,\"action\",[[23,0,[]],\"toggleAddField\",[24,[\"currentTargetName\"]]]],[8],[0,\"\\n              \"],[1,[28,\"d-icon\",[\"plus\"],null],false],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n      \"],[7,\"li\",true],[10,\"class\",\"spacer\"],[8],[9],[0,\"\\n      \"],[7,\"li\",true],[8],[0,\"\\n        \"],[7,\"a\",false],[12,\"href\",\"\"],[12,\"class\",\"no-text\"],[3,\"action\",[[23,0,[]],\"toggleMaximize\"]],[8],[0,\"\\n          \"],[1,[28,\"d-icon\",[[24,[\"maximizeIcon\"]]],null],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"error\"]]],null,{\"statements\":[[0,\"  \"],[7,\"pre\",true],[10,\"class\",\"field-error\"],[8],[1,[22,\"error\"],false],[9],[0,\"\"]],\"parameters\":[]},null],[0,\"\"],[4,\"if\",[[24,[\"warning\"]]],null,{\"statements\":[[0,\"  \"],[7,\"pre\",true],[10,\"class\",\"field-warning\"],[8],[1,[28,\"html-safe\",[[24,[\"warning\"]]],null],false],[9],[0,\"\"]],\"parameters\":[]},null],[0,\"\"],[1,[28,\"ace-editor\",null,[[\"content\",\"editorId\",\"mode\",\"autofocus\",\"placeholder\",\"htmlPlaceholder\",\"save\",\"setWarning\"],[[24,[\"activeSection\"]],[24,[\"editorId\"]],[24,[\"activeSectionMode\"]],\"true\",[24,[\"placeholder\"]],true,[28,\"action\",[[23,0,[]],\"save\"],null],[28,\"action\",[[23,0,[]],\"setWarning\"],null]]]],false],[0,\"\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-theme-editor"}});
Ember.TEMPLATES["admin/templates/components/admin-user-field-item"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"if\",[[24,[\"editing\"]]],null,{\"statements\":[[4,\"admin-form-row\",null,[[\"label\"],[\"admin.user_fields.type\"]],{\"statements\":[[0,\"    \"],[1,[28,\"combo-box\",null,[[\"content\",\"value\",\"onChange\"],[[24,[\"fieldTypes\"]],[24,[\"buffered\",\"field_type\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"buffered\",\"field_type\"]]],null]],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"admin-form-row\",null,[[\"label\"],[\"admin.user_fields.name\"]],{\"statements\":[[0,\"    \"],[1,[28,\"input\",null,[[\"value\",\"class\",\"maxlength\"],[[24,[\"buffered\",\"name\"]],\"user-field-name\",\"255\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"admin-form-row\",null,[[\"label\"],[\"admin.user_fields.description\"]],{\"statements\":[[0,\"    \"],[1,[28,\"input\",null,[[\"value\",\"class\",\"maxlength\"],[[24,[\"buffered\",\"description\"]],\"user-field-desc\",\"255\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"bufferedFieldType\",\"hasOptions\"]]],null,{\"statements\":[[4,\"admin-form-row\",null,[[\"label\"],[\"admin.user_fields.options\"]],{\"statements\":[[0,\"      \"],[1,[28,\"value-list\",null,[[\"values\",\"inputType\"],[[24,[\"buffered\",\"options\"]],\"array\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"admin-form-row\",null,[[\"wrapLabel\"],[\"true\"]],{\"statements\":[[0,\"    \"],[1,[28,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[24,[\"buffered\",\"editable\"]]]]],false],[0,\" \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"admin.user_fields.editable.title\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"admin-form-row\",null,[[\"wrapLabel\"],[\"true\"]],{\"statements\":[[0,\"    \"],[1,[28,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[24,[\"buffered\",\"required\"]]]]],false],[0,\" \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"admin.user_fields.required.title\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"admin-form-row\",null,[[\"wrapLabel\"],[\"true\"]],{\"statements\":[[0,\"    \"],[1,[28,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[24,[\"buffered\",\"show_on_profile\"]]]]],false],[0,\" \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"admin.user_fields.show_on_profile.title\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"admin-form-row\",null,[[\"wrapLabel\"],[\"true\"]],{\"statements\":[[0,\"    \"],[1,[28,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[24,[\"buffered\",\"show_on_user_card\"]]]]],false],[0,\" \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"admin.user_fields.show_on_user_card.title\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"admin-form-row\",null,[[\"wrapLabel\"],[\"true\"]],{\"statements\":[[0,\"    \"],[1,[28,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[24,[\"buffered\",\"searchable\"]]]]],false],[0,\" \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"admin.user_fields.searchable.title\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"admin-form-row\",null,null,{\"statements\":[[0,\"    \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"icon\",\"label\"],[[28,\"action\",[[23,0,[]],\"save\"],null],\"btn-primary\",\"check\",\"admin.user_fields.save\"]]],false],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"icon\",\"label\"],[[28,\"action\",[[23,0,[]],\"cancel\"],null],\"btn-danger\",\"times\",\"admin.user_fields.cancel\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"form-display\"],[8],[0,\"\\n      \"],[7,\"strong\",true],[8],[1,[24,[\"userField\",\"name\"]],false],[9],[0,\"\\n      \"],[7,\"br\",true],[8],[9],[0,\"\\n      \"],[1,[28,\"html-safe\",[[24,[\"userField\",\"description\"]]],null],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"form-display\"],[8],[1,[22,\"fieldName\"],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"form-element controls\"],[8],[0,\"\\n      \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"icon\",\"label\"],[[28,\"action\",[[23,0,[]],\"edit\"],null],\"btn-default\",\"pencil-alt\",\"admin.user_fields.edit\"]]],false],[0,\"\\n      \"],[1,[28,\"d-button\",null,[[\"action\",\"actionParam\",\"class\",\"icon\",\"label\"],[[24,[\"destroyAction\"]],[24,[\"userField\"]],\"btn-danger\",\"far-trash-alt\",\"admin.user_fields.delete\"]]],false],[0,\"\\n      \"],[1,[28,\"d-button\",null,[[\"action\",\"actionParam\",\"class\",\"icon\",\"disabled\"],[[24,[\"moveUpAction\"]],[24,[\"userField\"]],\"btn-default\",\"arrow-up\",[24,[\"cantMoveUp\"]]]]],false],[0,\"\\n      \"],[1,[28,\"d-button\",null,[[\"action\",\"actionParam\",\"class\",\"icon\",\"disabled\"],[[24,[\"moveDownAction\"]],[24,[\"userField\"]],\"btn-default\",\"arrow-down\",[24,[\"cantMoveDown\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"row\"],[8],[1,[22,\"flags\"],false],[9],[0,\"\\n\"]],\"parameters\":[]}],[7,\"div\",true],[10,\"class\",\"clearfix\"],[8],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-user-field-item"}});
Ember.TEMPLATES["admin/templates/components/admin-watched-word"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"tag\"],\"statements\":[[7,\"span\",true],[10,\"role\",\"button\"],[11,\"onclick\",[28,\"action\",[[23,0,[]],\"deleteWord\"],null]],[10,\"class\",\"delete-word-record\"],[8],[1,[28,\"d-icon\",[\"times\"],null],false],[9],[0,\" \"],[1,[24,[\"word\",\"word\"]],false],[0,\"\\n\"],[4,\"if\",[[28,\"or\",[[24,[\"isReplace\"]],[24,[\"isLink\"]]],null]],null,{\"statements\":[[0,\"  → \"],[7,\"span\",true],[10,\"class\",\"replacement\"],[8],[1,[24,[\"word\",\"replacement\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"isTag\"]]],null,{\"statements\":[[0,\"  →\\n\"],[4,\"each\",[[24,[\"tags\"]]],null,{\"statements\":[[0,\"    \"],[7,\"span\",true],[10,\"class\",\"tag\"],[8],[1,[23,1,[]],false],[9],[0,\"\\n\"]],\"parameters\":[1]},null]],\"parameters\":[]},null]],\"parameters\":[]}]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-watched-word"}});
Ember.TEMPLATES["admin/templates/components/admin-web-hook-event-chooser"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"input\",null,[[\"id\",\"type\",\"name\",\"checked\"],[[24,[\"typeName\"]],\"checkbox\",\"event-choice\",[24,[\"enabled\"]]]]],false],[0,\"\\n\"],[7,\"label\",true],[11,\"for\",[22,\"typeName\"]],[8],[1,[22,\"name\"],false],[9],[0,\"\\n\"],[7,\"p\",true],[8],[1,[22,\"details\"],false],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-web-hook-event-chooser"}});
Ember.TEMPLATES["admin/templates/components/admin-web-hook-event"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"col first status\"],[8],[0,\"\\n  \"],[7,\"span\",true],[11,\"class\",[22,\"statusColorClasses\"]],[8],[1,[24,[\"model\",\"status\"]],false],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"col event-id\"],[8],[1,[24,[\"model\",\"id\"]],false],[9],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"col timestamp\"],[8],[1,[22,\"createdAt\"],false],[9],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"col completion\"],[8],[1,[22,\"completion\"],false],[9],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"col actions\"],[8],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"icon\",\"action\",\"label\"],[[24,[\"expandRequestIcon\"]],[28,\"action\",[[23,0,[]],\"toggleRequest\"],null],\"admin.web_hooks.events.request\"]]],false],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"icon\",\"action\",\"label\"],[[24,[\"expandResponseIcon\"]],[28,\"action\",[[23,0,[]],\"toggleResponse\"],null],\"admin.web_hooks.events.response\"]]],false],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"icon\",\"action\",\"label\"],[\"sync\",[28,\"action\",[[23,0,[]],\"redeliver\"],null],\"admin.web_hooks.events.redeliver\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"expandDetails\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"details\"],[8],[0,\"\\n    \"],[7,\"h3\",true],[8],[1,[28,\"i18n\",[\"admin.web_hooks.events.headers\"],null],false],[9],[0,\"\\n    \"],[7,\"pre\",true],[8],[7,\"code\",true],[8],[1,[22,\"headers\"],false],[9],[9],[0,\"    \"],[7,\"h3\",true],[8],[1,[22,\"bodyLabel\"],false],[9],[0,\"\\n    \"],[7,\"pre\",true],[8],[7,\"code\",true],[8],[1,[22,\"body\"],false],[9],[9],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-web-hook-event"}});
Ember.TEMPLATES["admin/templates/components/admin-web-hook-status"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[22,\"circleIcon\"],false],[0,\" \"],[1,[22,\"deliveryStatus\"],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/admin-web-hook-status"}});
Ember.TEMPLATES["admin/templates/components/dashboard-new-feature-item"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"admin-new-feature-item\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"new-feature-emoji\"],[8],[1,[24,[\"item\",\"emoji\"]],false],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"new-feature-content\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"header\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"item\",\"link\"]]],null,{\"statements\":[[0,\"        \"],[7,\"a\",true],[11,\"href\",[24,[\"item\",\"link\"]]],[10,\"target\",\"_blank\"],[10,\"rel\",\"noopener noreferrer\"],[8],[1,[24,[\"item\",\"title\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[1,[24,[\"item\",\"title\"]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"feature-description\"],[8],[1,[24,[\"item\",\"description\"]],false],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/dashboard-new-feature-item"}});
Ember.TEMPLATES["admin/templates/components/dashboard-new-features"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"feature\"],\"statements\":[[4,\"if\",[[24,[\"newFeatures\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"section-title\"],[8],[0,\"\\n    \"],[7,\"h2\",true],[8],[1,[28,\"replace-emoji\",[[28,\"i18n\",[\"admin.dashboard.new_features.title\"],null]],null],false],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[11,\"class\",[29,[\"section-body \",[22,\"columnCountClass\"]]]],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"newFeatures\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"dashboard-new-feature-item\",null,[[\"item\",\"tagName\"],[[23,1,[]],\"\"]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"section-footer\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"releaseNotesLink\"]]],null,{\"statements\":[[0,\"      \"],[7,\"a\",true],[10,\"rel\",\"noopener noreferrer\"],[10,\"target\",\"_blank\"],[11,\"href\",[22,\"releaseNotesLink\"]],[10,\"class\",\"btn btn-primary new-features-release-notes\"],[8],[0,\"\\n        \"],[1,[28,\"i18n\",[\"admin.dashboard.new_features.learn_more\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[28,\"d-button\",null,[[\"label\",\"class\",\"action\"],[\"admin.dashboard.new_features.dismiss\",\"btn-default new-features-dismiss\",[24,[\"dismissNewFeatures\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/dashboard-new-features"}});
Ember.TEMPLATES["admin/templates/components/dashboard-problems"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"problem\"],\"statements\":[[4,\"if\",[[24,[\"foundProblems\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"section dashboard-problems\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"section-title\"],[8],[0,\"\\n      \"],[7,\"h2\",true],[8],[0,\"\\n        \"],[1,[28,\"d-icon\",[\"heart\"],null],false],[0,\"\\n        \"],[1,[28,\"i18n\",[\"admin.dashboard.problems_found\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"section-body\"],[8],[0,\"\\n\"],[4,\"conditional-loading-section\",null,[[\"isLoading\"],[[24,[\"loadingProblems\"]]]],{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"problem-messages\"],[8],[0,\"\\n          \"],[7,\"ul\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"problems\"]]],null,{\"statements\":[[0,\"              \"],[7,\"li\",true],[8],[1,[28,\"html-safe\",[[23,1,[]]],null],false],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\\n        \"],[7,\"p\",true],[10,\"class\",\"actions\"],[8],[0,\"\\n          \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"icon\",\"label\"],[[24,[\"refreshProblems\"]],\"btn-default\",\"sync\",\"admin.dashboard.refresh_problems\"]]],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.dashboard.last_checked\"],null],false],[0,\": \"],[1,[22,\"problemsTimestamp\"],false],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/dashboard-problems"}});
Ember.TEMPLATES["admin/templates/components/email-styles-editor"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"admin-controls\"],[8],[0,\"\\n    \"],[7,\"nav\",true],[8],[0,\"\\n      \"],[7,\"ul\",true],[10,\"class\",\"nav nav-pills\"],[8],[0,\"\\n        \"],[7,\"li\",true],[8],[4,\"link-to\",null,[[\"replace\",\"route\",\"model\"],[true,\"adminCustomizeEmailStyle.edit\",\"html\"]],{\"statements\":[[1,[28,\"i18n\",[\"admin.customize.email_style.html\"],null],false]],\"parameters\":[]},null],[9],[0,\"\\n        \"],[7,\"li\",true],[8],[4,\"link-to\",null,[[\"replace\",\"route\",\"model\"],[true,\"adminCustomizeEmailStyle.edit\",\"css\"]],{\"statements\":[[1,[28,\"i18n\",[\"admin.customize.email_style.css\"],null],false]],\"parameters\":[]},null],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"ace-editor\",null,[[\"content\",\"mode\",\"editorId\",\"save\"],[[24,[\"editorContents\"]],[24,[\"currentEditorMode\"]],[24,[\"editorId\"]],[28,\"action\",[[23,0,[]],\"save\"],null]]]],false],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"admin-footer\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"buttons\"],[8],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"action\",\"disabled\",\"class\",\"label\"],[[28,\"action\",[[23,0,[]],\"reset\"],null],[24,[\"resetDisabled\"]],\"btn-default\",\"admin.customize.email_style.reset\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/email-styles-editor"}});
Ember.TEMPLATES["admin/templates/components/embeddable-host"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"if\",[[24,[\"editing\"]]],null,{\"statements\":[[0,\"  \"],[7,\"td\",true],[10,\"class\",\"editing-input\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.embedding.host\"],null],false],[9],[0,\"\\n    \"],[1,[28,\"input\",null,[[\"value\",\"placeholder\",\"enter\",\"class\",\"autofocus\"],[[24,[\"buffered\",\"host\"]],\"example.com\",[28,\"action\",[[23,0,[]],\"save\"],null],\"host-name\",true]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"td\",true],[10,\"class\",\"editing-input\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.embedding.class_name\"],null],false],[9],[0,\"\\n    \"],[1,[28,\"input\",null,[[\"value\",\"placeholder\",\"enter\",\"class\"],[[24,[\"buffered\",\"class_name\"]],\"class\",[28,\"action\",[[23,0,[]],\"save\"],null],\"class-name\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"td\",true],[10,\"class\",\"editing-input\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.embedding.allowed_paths\"],null],false],[9],[0,\"\\n    \"],[1,[28,\"input\",null,[[\"value\",\"placeholder\",\"enter\",\"class\"],[[24,[\"buffered\",\"allowed_paths\"]],\"/blog/.*\",[28,\"action\",[[23,0,[]],\"save\"],null],\"path-allowlist\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"td\",true],[10,\"class\",\"editing-input\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.embedding.category\"],null],false],[9],[0,\"\\n    \"],[1,[28,\"category-chooser\",null,[[\"value\",\"class\",\"onChange\"],[[24,[\"categoryId\"]],\"small\",[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"categoryId\"]]],null]],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"td\",true],[10,\"class\",\"editing-controls\"],[8],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"icon\",\"action\",\"class\",\"disabled\"],[\"check\",[28,\"action\",[[23,0,[]],\"save\"],null],\"btn-primary\",[24,[\"cantSave\"]]]]],false],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"icon\",\"action\",\"class\",\"disabled\"],[\"times\",[28,\"action\",[[23,0,[]],\"cancel\"],null],\"btn-danger\",[24,[\"host\",\"isSaving\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[7,\"td\",true],[8],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.embedding.host\"],null],false],[9],[1,[24,[\"host\",\"host\"]],false],[9],[0,\"\\n  \"],[7,\"td\",true],[8],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.embedding.class_name\"],null],false],[9],[1,[24,[\"host\",\"class_name\"]],false],[9],[0,\"\\n  \"],[7,\"td\",true],[8],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.embedding.allowed_paths\"],null],false],[9],[1,[24,[\"host\",\"allowed_paths\"]],false],[9],[0,\"\\n  \"],[7,\"td\",true],[8],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.embedding.category\"],null],false],[9],[1,[28,\"category-badge\",[[24,[\"host\",\"category\"]]],null],false],[9],[0,\"\\n  \"],[7,\"td\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"icon\",\"action\"],[\"pencil-alt\",[28,\"action\",[[23,0,[]],\"edit\"],null]]]],false],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"icon\",\"action\",\"class\"],[\"far-trash-alt\",[28,\"action\",[[23,0,[]],\"delete\"],null],\"btn-danger\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/embeddable-host"}});
Ember.TEMPLATES["admin/templates/components/embedding-setting"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"if\",[[24,[\"isCheckbox\"]]],null,{\"statements\":[[0,\"  \"],[7,\"label\",true],[11,\"for\",[22,\"inputId\"]],[8],[0,\"\\n    \"],[1,[28,\"input\",null,[[\"checked\",\"id\",\"type\"],[[24,[\"checked\"]],[24,[\"inputId\"]],\"checkbox\"]]],false],[0,\"\\n    \"],[1,[28,\"i18n\",[[24,[\"translationKey\"]]],null],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[7,\"label\",true],[11,\"for\",[22,\"inputId\"]],[8],[1,[28,\"i18n\",[[24,[\"translationKey\"]]],null],false],[9],[0,\"\\n  \"],[1,[28,\"input\",null,[[\"value\",\"id\",\"placeholder\"],[[24,[\"value\"]],[24,[\"inputId\"]],[24,[\"placeholder\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"clearfix\"],[8],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/embedding-setting"}});
Ember.TEMPLATES["admin/templates/components/emoji-value-list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"data\",\"index\"],\"statements\":[[4,\"if\",[[24,[\"collection\"]]],null,{\"statements\":[[0,\"  \"],[7,\"ul\",true],[10,\"class\",\"values emoji-value-list\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"collection\"]]],null,{\"statements\":[[0,\"      \"],[7,\"li\",true],[10,\"class\",\"value\"],[11,\"data-index\",[23,2,[]]],[8],[0,\"\\n        \"],[1,[28,\"d-button\",null,[[\"action\",\"actionParam\",\"icon\",\"class\",\"disabled\"],[[28,\"action\",[[23,0,[]],\"removeValue\"],null],[23,1,[]],\"times\",\"remove-value-btn btn-small\",[28,\"not\",[[23,1,[\"isEditable\"]]],null]]]],false],[0,\"\\n\\n        \"],[7,\"div\",false],[12,\"class\",[29,[\"value-input emoji-details \",[28,\"if\",[[23,1,[\"isEditable\"]],\"can-edit\"],null],\" \",[28,\"if\",[[23,1,[\"isEditing\"]],\"d-editor-textarea-wrapper\"],null]]]],[12,\"role\",\"button\"],[3,\"on\",[\"click\",[28,\"fn\",[[23,0,[\"editValue\"]],[23,2,[]]],null]]],[8],[0,\"\\n          \"],[7,\"img\",true],[10,\"height\",\"15px\"],[10,\"width\",\"15px\"],[11,\"src\",[23,1,[\"emojiUrl\"]]],[10,\"class\",\"emoji-list-emoji\"],[8],[9],[0,\"\\n          \"],[7,\"span\",true],[10,\"class\",\"emoji-name\"],[8],[1,[23,1,[\"value\"]],false],[9],[0,\"\\n        \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"showUpDownButtons\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-button\",null,[[\"action\",\"icon\",\"class\"],[[28,\"action\",[[23,0,[]],\"shift\",-1,[23,2,[]]],null],\"arrow-up\",\"shift-up-value-btn btn-small\"]]],false],[0,\"\\n          \"],[1,[28,\"d-button\",null,[[\"action\",\"icon\",\"class\"],[[28,\"action\",[[23,0,[]],\"shift\",1,[23,2,[]]],null],\"arrow-down\",\"shift-down-value-btn btn-small\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[1,2]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"action\",\"actionParam\",\"icon\",\"class\",\"label\"],[[28,\"action\",[[23,0,[]],\"editValue\"],null],[24,[\"data\"]],\"discourse-emojis\",\"add-emoji-button d-editor-textarea-wrapper\",\"admin.site_settings.emoji_list.add_emoji_button.label\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"emoji-picker\",null,[[\"isActive\",\"isEditorFocused\",\"emojiSelected\",\"onEmojiPickerClose\"],[[24,[\"emojiPickerIsActive\"]],[24,[\"isEditorFocused\"]],[28,\"action\",[[23,0,[]],\"emojiSelected\"],null],[28,\"action\",[[23,0,[]],\"closeEmojiPicker\"],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"setting-validation-message\",null,[[\"message\"],[[24,[\"validationMessage\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/emoji-value-list"}});
Ember.TEMPLATES["admin/templates/components/flag-user-lists"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"postAction\",\"postAction\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"flagged-by\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"user-list-title\"],[8],[0,\"\\n    \"],[1,[28,\"i18n\",[\"admin.flags.flagged_by\"],null],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"flag-users\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"flaggedPost\",\"post_actions\"]]],null,{\"statements\":[[4,\"flag-user\",null,[[\"user\",\"date\"],[[23,2,[\"user\"]],[23,2,[\"created_at\"]]]],{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"flagger-flag-type\"],[8],[0,\"\\n          \"],[1,[28,\"post-action-title\",[[23,2,[\"post_action_type_id\"]],[23,2,[\"name_key\"]]],null],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[1,[28,\"user-flag-percentage\",null,[[\"agreed\",\"disagreed\",\"ignored\"],[[23,2,[\"user\",\"flags_agreed\"]],[23,2,[\"user\",\"flags_disagreed\"]],[23,2,[\"user\",\"flags_ignored\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[2]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"showResolvedBy\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"flagged-post-resolved-by\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"user-list-title\"],[8],[0,\"\\n      \"],[1,[28,\"i18n\",[\"admin.flags.resolved_by\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"flag-users\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"flaggedPost\",\"post_actions\"]]],null,{\"statements\":[[4,\"flag-user\",null,[[\"user\",\"date\"],[[23,1,[\"disposed_by\"]],[23,1,[\"disposed_at\"]]]],{\"statements\":[[0,\"          \"],[1,[28,\"disposition-icon\",[[23,1,[\"disposition\"]]],null],false],[0,\"\\n\"],[4,\"if\",[[23,1,[\"staff_took_action\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"d-icon\",[\"gavel\"],[[\"title\"],[\"admin.flags.took_action\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"parameters\":[1]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/flag-user-lists"}});
Ember.TEMPLATES["admin/templates/components/flag-user"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"&default\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"flag-user\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"route\",\"models\"],[\"flag-user-avatar\",\"adminUser\",[28,\"array\",[[24,[\"user\",\"id\"]],[24,[\"user\",\"username\"]]],null]]],{\"statements\":[[0,\"    \"],[1,[28,\"avatar\",[[24,[\"user\"]]],[[\"imageSize\"],[\"small\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[7,\"div\",true],[10,\"class\",\"flag-user-details\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"flag-user-who\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"route\",\"models\"],[\"flag-user-username\",\"adminUser\",[28,\"array\",[[24,[\"user\",\"id\"]],[24,[\"user\",\"username\"]]],null]]],{\"statements\":[[0,\"        \"],[1,[24,[\"user\",\"username\"]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[7,\"div\",true],[11,\"title\",[28,\"raw-date\",[[24,[\"date\"]]],null]],[10,\"class\",\"flag-user-date\"],[8],[0,\"\\n        \"],[1,[28,\"format-age\",[[24,[\"date\"]]],null],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"flag-user-extra\"],[8],[0,\"\\n      \"],[14,1],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/flag-user"}});
Ember.TEMPLATES["admin/templates/components/highlighted-code"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"pre\",true],[8],[7,\"code\",true],[11,\"class\",[22,\"lang\"]],[8],[1,[22,\"code\"],false],[9],[9],[0,\"\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/highlighted-code"}});
Ember.TEMPLATES["admin/templates/components/inline-edit-checkbox"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"label\",true],[10,\"class\",\"checkbox-label\"],[8],[0,\"\\n  \"],[1,[28,\"input\",null,[[\"type\",\"disabled\",\"checked\"],[\"checkbox\",[24,[\"disabled\"]],[24,[\"buffer\"]]]]],false],[0,\"\\n  \"],[1,[28,\"i18n\",[[24,[\"labelKey\"]]],null],false],[0,\"\\n\"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"changed\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"icon\"],[[28,\"action\",[[23,0,[]],\"apply\"],null],\"btn-primary btn-small submit-edit\",\"check\"]]],false],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"icon\"],[[28,\"action\",[[23,0,[]],\"cancel\"],null],\"btn-small cancel-edit\",\"times\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/inline-edit-checkbox"}});
Ember.TEMPLATES["admin/templates/components/install-theme-item"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"radio-button\",null,[[\"name\",\"id\",\"value\",\"selection\"],[\"install-items\",[24,[\"value\"]],[24,[\"value\"]],[24,[\"selection\"]]]]],false],[0,\"\\n\"],[7,\"label\",true],[10,\"class\",\"radio\"],[11,\"for\",[22,\"value\"]],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"showIcon\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"d-icon\",[\"plus\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[28,\"i18n\",[[24,[\"label\"]]],null],false],[0,\"\\n\"],[9],[0,\"\\n\"],[1,[28,\"d-icon\",[\"caret-right\"],null],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/install-theme-item"}});
Ember.TEMPLATES["admin/templates/components/penalty-post-action"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"penalty-post-controls\"],[8],[0,\"\\n  \"],[7,\"label\",true],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"penalty-post-label\"],[8],[0,\"\\n      \"],[1,[28,\"html-safe\",[[28,\"i18n\",[\"admin.user.penalty_post_actions\"],null]],null],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[1,[28,\"combo-box\",null,[[\"value\",\"content\",\"onChange\"],[[24,[\"postAction\"]],[24,[\"penaltyActions\"]],[28,\"action\",[[23,0,[]],\"penaltyChanged\"],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"editing\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"penalty-post-edit\"],[8],[0,\"\\n    \"],[1,[28,\"textarea\",null,[[\"value\",\"class\"],[[24,[\"postEdit\"]],\"post-editor\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/penalty-post-action"}});
Ember.TEMPLATES["admin/templates/components/permalink-form"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"inline-form\"],[8],[0,\"\\n  \"],[7,\"label\",true],[8],[1,[28,\"i18n\",[\"admin.permalink.form.label\"],null],false],[9],[0,\"\\n\\n  \"],[1,[28,\"text-field\",null,[[\"value\",\"disabled\",\"class\",\"placeholderKey\",\"autocorrect\",\"autocapitalize\"],[[24,[\"url\"]],[24,[\"formSubmitted\"]],\"permalink-url\",\"admin.permalink.url\",\"off\",\"off\"]]],false],[0,\"\\n\\n  \"],[1,[28,\"combo-box\",null,[[\"content\",\"value\",\"onChange\",\"class\"],[[24,[\"permalinkTypes\"]],[24,[\"permalinkType\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"permalinkType\"]]],null]],null],\"permalink-type\"]]],false],[0,\"\\n\\n  \"],[1,[28,\"text-field\",null,[[\"value\",\"disabled\",\"class\",\"placeholderKey\",\"autocorrect\",\"autocapitalize\"],[[24,[\"permalink_type_value\"]],[24,[\"formSubmitted\"]],\"external-url\",[24,[\"permalinkTypePlaceholder\"]],\"off\",\"off\"]]],false],[0,\"\\n\\n  \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"disabled\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"submit\"],null],[24,[\"formSubmitted\"]],\"admin.permalink.form.add\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/permalink-form"}});
Ember.TEMPLATES["admin/templates/components/report-filters/bool"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"input\",null,[[\"type\",\"checked\",\"click\"],[\"checkbox\",[24,[\"checked\"]],[28,\"action\",[[23,0,[]],\"onChange\"],null]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/report-filters/bool"}});
Ember.TEMPLATES["admin/templates/components/report-filters/category"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"search-advanced-category-chooser\",null,[[\"value\",\"onChange\",\"options\"],[[24,[\"category\"]],[28,\"action\",[[23,0,[]],\"onChange\"],null],[28,\"hash\",null,[[\"filterable\"],[true]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/report-filters/category"}});
Ember.TEMPLATES["admin/templates/components/report-filters/group"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"combo-box\",null,[[\"filterable\",\"valueProperty\",\"content\",\"value\",\"none\",\"onChange\",\"options\"],[true,\"value\",[24,[\"groupOptions\"]],[24,[\"groupId\"]],\"admin.dashboard.reports.groups\",[28,\"action\",[[23,0,[]],\"onChange\"],null],[28,\"hash\",null,[[\"allowAny\"],[[24,[\"filter\",\"allow_any\"]]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/report-filters/group"}});
Ember.TEMPLATES["admin/templates/components/report-filters/list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"combo-box\",null,[[\"content\",\"filterable\",\"allowAny\",\"value\",\"none\",\"onChange\"],[[24,[\"filter\",\"choices\"]],true,[24,[\"filter\",\"allow_any\"]],[24,[\"filter\",\"default\"]],\"admin.dashboard.report_filter_any\",[28,\"action\",[[23,0,[]],\"onChange\"],null]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/report-filters/list"}});
Ember.TEMPLATES["admin/templates/components/resumable-upload"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[22,\"uploadingIcon\"],false],[0,\"\\n\"],[7,\"span\",true],[10,\"class\",\"ru-label\"],[8],[1,[22,\"text\"],false],[9],[0,\"\\n\"],[7,\"span\",true],[11,\"style\",[22,\"progressBar\"]],[10,\"class\",\"ru-progress\"],[8],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/resumable-upload"}});
Ember.TEMPLATES["admin/templates/components/screened-ip-address-form"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"label\",true],[8],[1,[28,\"i18n\",[\"admin.logs.screened_ips.form.label\"],null],false],[9],[0,\"\\n\"],[1,[28,\"text-field\",null,[[\"value\",\"disabled\",\"class\",\"placeholderKey\",\"autocorrect\",\"autocapitalize\"],[[24,[\"ip_address\"]],[24,[\"formSubmitted\"]],\"ip-address-input\",\"admin.logs.screened_ips.form.ip_address\",\"off\",\"off\"]]],false],[0,\"\\n\\n\"],[1,[28,\"combo-box\",null,[[\"content\",\"value\",\"onChange\"],[[24,[\"actionNames\"]],[24,[\"actionName\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"actionName\"]]],null]],null]]]],false],[0,\"\\n\\n\"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"disabled\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"submit\"],null],[24,[\"formSubmitted\"]],\"admin.logs.screened_ips.form.add\"]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/screened-ip-address-form"}});
Ember.TEMPLATES["admin/templates/components/secret-value-list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"value\",\"index\"],\"statements\":[[4,\"if\",[[24,[\"collection\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"values\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"collection\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"value\"],[11,\"data-index\",[23,2,[]]],[8],[0,\"\\n        \"],[1,[28,\"d-button\",null,[[\"action\",\"actionParam\",\"icon\",\"class\"],[[28,\"action\",[[23,0,[]],\"removeValue\"],null],[23,1,[]],\"times\",\"remove-value-btn btn-small\"]]],false],[0,\"\\n        \"],[1,[28,\"input\",null,[[\"value\",\"class\",\"focus-out\"],[[23,1,[\"key\"]],\"value-input\",[28,\"action\",[[23,0,[]],\"changeKey\",[23,2,[]]],null]]]],false],[0,\"\\n        \"],[1,[28,\"input\",null,[[\"value\",\"class\",\"focus-out\",\"type\"],[[23,1,[\"secret\"]],\"value-input\",[28,\"action\",[[23,0,[]],\"changeSecret\",[23,2,[]]],null],[28,\"if\",[[24,[\"isSecret\"]],\"password\",\"text\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[1,2]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n  \"],[1,[28,\"text-field\",null,[[\"value\",\"class\",\"placeholder\"],[[24,[\"newKey\"]],\"new-value-input key\",[24,[\"setting\",\"placeholder\",\"key\"]]]]],false],[0,\"\\n  \"],[1,[28,\"input\",null,[[\"type\",\"value\",\"class\",\"placeholder\"],[\"password\",[24,[\"newSecret\"]],\"new-value-input secret\",[24,[\"setting\",\"placeholder\",\"value\"]]]]],false],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"action\",\"icon\",\"class\"],[[28,\"action\",[[23,0,[]],\"addValue\"],null],\"plus\",\"add-value-btn btn-small\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"setting-validation-message\",null,[[\"message\"],[[24,[\"validationMessage\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/secret-value-list"}});
Ember.TEMPLATES["admin/templates/components/setting-validation-message"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[11,\"class\",[29,[\"validation-error \",[28,\"unless\",[[24,[\"message\"]],\"hidden\"],null]]]],[8],[0,\"\\n  \"],[1,[28,\"d-icon\",[\"times\"],null],false],[0,\"\\n  \"],[1,[22,\"message\"],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/setting-validation-message"}});
Ember.TEMPLATES["admin/templates/components/silence-details"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"reason-controls\"],[8],[0,\"\\n  \"],[7,\"label\",true],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"silence-reason-label\"],[8],[0,\"\\n      \"],[1,[28,\"html-safe\",[[28,\"i18n\",[\"admin.user.silence_reason_label\"],null]],null],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[1,[28,\"text-field\",null,[[\"value\",\"class\",\"placeholderKey\"],[[24,[\"reason\"]],\"silence-reason\",\"admin.user.silence_reason_placeholder\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"label\",true],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"silence-message-label\"],[8],[0,\"\\n    \"],[1,[28,\"i18n\",[\"admin.user.silence_message\"],null],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[1,[28,\"textarea\",null,[[\"value\",\"class\",\"placeholder\"],[[24,[\"message\"]],\"silence-message\",[28,\"i18n\",[\"admin.user.silence_message_placeholder\"],null]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/silence-details"}});
Ember.TEMPLATES["admin/templates/components/simple-list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"value\",\"index\"],\"statements\":[[4,\"if\",[[24,[\"collection\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"values\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"collection\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[11,\"data-index\",[23,2,[]]],[10,\"class\",\"value\"],[8],[0,\"\\n        \"],[1,[28,\"d-button\",null,[[\"action\",\"actionParam\",\"icon\",\"class\"],[[28,\"action\",[[23,0,[]],\"removeValue\"],null],[23,1,[]],\"times\",\"remove-value-btn btn-small\"]]],false],[0,\"\\n\\n        \"],[1,[28,\"input\",null,[[\"title\",\"value\",\"class\",\"focus-out\"],[[23,1,[]],[23,1,[]],\"value-input\",[28,\"action\",[[23,0,[]],\"changeValue\",[23,2,[]]],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[1,2]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"simple-list-input\"],[8],[0,\"\\n  \"],[1,[28,\"input\",null,[[\"type\",\"value\",\"placeholderKey\",\"class\",\"autocomplete\",\"autocorrect\",\"autocapitalize\"],[\"text\",[24,[\"newValue\"]],\"admin.site_settings.simple_list.add_item\",\"add-value-input\",\"discourse\",\"off\",\"off\"]]],false],[0,\"\\n\\n  \"],[1,[28,\"d-button\",null,[[\"action\",\"actionParam\",\"disabled\",\"icon\",\"class\"],[[28,\"action\",[[23,0,[]],\"addValue\"],null],[24,[\"newValue\"]],[24,[\"inputEmpty\"]],\"plus\",\"add-value-btn btn-small\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/simple-list"}});
Ember.TEMPLATES["admin/templates/components/site-customization-change-details"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"section\",true],[10,\"class\",\"field\"],[8],[0,\"\\n  \"],[7,\"b\",true],[8],[1,[28,\"i18n\",[\"admin.customize.enabled\"],null],false],[9],[0,\": \"],[1,[24,[\"change\",\"enabled\"]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"site-customization-change-field\",null,[[\"field\",\"name\"],[[24,[\"change\",\"stylesheet\"]],\"admin.customize.css\"]]],false],[0,\"\\n\"],[1,[28,\"site-customization-change-field\",null,[[\"icon\",\"field\",\"name\"],[\"mobile\",[24,[\"change\",\"mobile_stylesheet\"]],\"admin.customize.css\"]]],false],[0,\"\\n\\n\"],[1,[28,\"site-customization-change-field\",null,[[\"field\",\"name\"],[[24,[\"change\",\"header\"]],\"admin.customize.header\"]]],false],[0,\"\\n\"],[1,[28,\"site-customization-change-field\",null,[[\"icon\",\"field\",\"name\"],[\"mobile\",[24,[\"change\",\"mobile_header\"]],\"admin.customize.header\"]]],false],[0,\"\\n\\n\"],[1,[28,\"site-customization-change-field\",null,[[\"field\",\"name\"],[[24,[\"change\",\"top\"]],\"admin.customize.top\"]]],false],[0,\"\\n\"],[1,[28,\"site-customization-change-field\",null,[[\"icon\",\"field\",\"name\"],[\"mobile\",[24,[\"change\",\"mobile_top\"]],\"admin.customize.top\"]]],false],[0,\"\\n\\n\"],[1,[28,\"site-customization-change-field\",null,[[\"field\",\"name\"],[[24,[\"change\",\"footer\"]],\"admin.customize.footer\"]]],false],[0,\"\\n\"],[1,[28,\"site-customization-change-field\",null,[[\"icon\",\"field\",\"name\"],[\"mobile\",[24,[\"change\",\"mobile_footer\"]],\"admin.customize.footer\"]]],false],[0,\"\\n\\n\"],[1,[28,\"site-customization-change-field\",null,[[\"icon\",\"field\",\"name\"],[\"file-text-o\",[24,[\"change\",\"head_tag\"]],\"admin.customize.head_tag.text\"]]],false],[0,\"\\n\"],[1,[28,\"site-customization-change-field\",null,[[\"icon\",\"field\",\"name\"],[\"file-text-o\",[24,[\"change\",\"body_tag\"]],\"admin.customize.body_tag.text\"]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-customization-change-details"}});
Ember.TEMPLATES["admin/templates/components/site-customization-change-field"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"if\",[[24,[\"field\"]]],null,{\"statements\":[[0,\"  \"],[7,\"section\",true],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[7,\"b\",true],[8],[1,[28,\"i18n\",[[24,[\"name\"]]],null],false],[9],[0,\": (\"],[1,[28,\"i18n\",[\"character_count\"],[[\"count\"],[[24,[\"field\",\"length\"]]]]],false],[0,\")\\n    \"],[7,\"br\",true],[8],[9],[0,\"\\n    \"],[1,[28,\"textarea\",null,[[\"value\",\"class\"],[[24,[\"field\"]],\"plain\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-customization-change-field"}});
Ember.TEMPLATES["admin/templates/components/site-setting"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"setting-label\"],[8],[0,\"\\n  \"],[7,\"h3\",true],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"staffLogFilter\"]]],null,{\"statements\":[[0,\"      \"],[1,[22,\"settingName\"],false],[0,\"\\n\"],[4,\"link-to\",null,[[\"title\",\"query\",\"route\"],[[28,\"i18n\",[\"admin.settings.history\"],null],[28,\"hash\",null,[[\"filters\",\"force_refresh\"],[[24,[\"staffLogFilter\"]],true]]],\"adminLogs.staffActionLogs\"]],{\"statements\":[[0,\"        \"],[7,\"span\",true],[10,\"class\",\"history-icon\"],[8],[0,\"\\n          \"],[1,[28,\"d-icon\",[\"history\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[1,[22,\"settingName\"],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"defaultIsAvailable\"]]],null,{\"statements\":[[0,\"    \"],[7,\"a\",true],[10,\"href\",\"\"],[11,\"onClick\",[28,\"action\",[[23,0,[]],\"setDefaultValues\"],null]],[8],[1,[24,[\"setting\",\"setDefaultValuesLabel\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"setting-value\"],[8],[0,\"\\n  \"],[1,[28,\"component\",[[24,[\"componentName\"]]],[[\"setting\",\"value\",\"validationMessage\",\"preview\",\"isSecret\",\"allowAny\"],[[24,[\"setting\"]],[24,[\"buffered\",\"value\"]],[24,[\"validationMessage\"]],[24,[\"preview\"]],[24,[\"isSecret\"]],[24,[\"allowAny\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"dirty\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"setting-controls\"],[8],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\"],[\"ok\",[28,\"action\",[[23,0,[]],\"update\"],null],\"check\"]]],false],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\"],[\"cancel\",[28,\"action\",[[23,0,[]],\"cancel\"],null],\"times\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"setting\",\"overridden\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"setting\",\"secret\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"d-button\",null,[[\"action\",\"icon\"],[[28,\"action\",[[23,0,[]],\"toggleSecret\"],null],\"far-eye-slash\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-default undo\",[28,\"action\",[[23,0,[]],\"resetDefault\"],null],\"undo\",\"admin.settings.reset\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-setting"}});
Ember.TEMPLATES["admin/templates/components/site-settings/bool"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"label\",true],[8],[0,\"\\n  \"],[1,[28,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[24,[\"enabled\"]]]]],false],[0,\"\\n  \"],[7,\"span\",true],[8],[1,[28,\"html-safe\",[[24,[\"setting\",\"description\"]]],null],false],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"setting-validation-message\",null,[[\"message\"],[[24,[\"validationMessage\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-settings/bool"}});
Ember.TEMPLATES["admin/templates/components/site-settings/category-list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"category-selector\",null,[[\"categories\",\"onChange\"],[[24,[\"selectedCategories\"]],[28,\"action\",[[23,0,[]],\"onChangeSelectedCategories\"],null]]]],false],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"desc\"],[8],[1,[28,\"html-safe\",[[24,[\"setting\",\"description\"]]],null],false],[9],[0,\"\\n\"],[1,[28,\"setting-validation-message\",null,[[\"message\"],[[24,[\"validationMessage\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-settings/category-list"}});
Ember.TEMPLATES["admin/templates/components/site-settings/category"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"category-chooser\",null,[[\"value\",\"allowUncategorized\",\"onChange\"],[[24,[\"value\"]],true,[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"value\"]]],null]],null]]]],false],[0,\"\\n\"],[1,[28,\"setting-validation-message\",null,[[\"message\"],[[24,[\"validationMessage\"]]]]],false],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"desc\"],[8],[1,[28,\"html-safe\",[[24,[\"setting\",\"description\"]]],null],false],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-settings/category"}});
Ember.TEMPLATES["admin/templates/components/site-settings/color"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"color-input\",null,[[\"hexValue\",\"valid\",\"onlyHex\",\"styleSelection\",\"onChangeColor\"],[[28,\"readonly\",[[24,[\"value\"]]],null],[24,[\"valid\"]],false,false,[28,\"action\",[[23,0,[]],\"onChangeColor\"],null]]]],false],[0,\"\\n\"],[1,[28,\"setting-validation-message\",null,[[\"message\"],[[24,[\"validationMessage\"]]]]],false],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"desc\"],[8],[1,[28,\"html-safe\",[[24,[\"setting\",\"description\"]]],null],false],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-settings/color"}});
Ember.TEMPLATES["admin/templates/components/site-settings/compact-list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"list-setting\",null,[[\"value\",\"settingName\",\"choices\",\"onChange\",\"onChangeChoices\",\"options\"],[[24,[\"settingValue\"]],[24,[\"setting\",\"setting\"]],[24,[\"settingChoices\"]],[28,\"action\",[[23,0,[]],\"onChangeListSetting\"],null],[28,\"action\",[[23,0,[]],\"onChangeChoices\"],null],[28,\"hash\",null,[[\"allowAny\"],[[24,[\"allowAny\"]]]]]]]],false],[0,\"\\n\\n\"],[1,[28,\"setting-validation-message\",null,[[\"message\"],[[24,[\"validationMessage\"]]]]],false],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"desc\"],[8],[1,[28,\"html-safe\",[[24,[\"setting\",\"description\"]]],null],false],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-settings/compact-list"}});
Ember.TEMPLATES["admin/templates/components/site-settings/emoji-list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"emoji-value-list\",null,[[\"setting\",\"values\"],[[24,[\"setting\"]],[24,[\"value\"]]]]],false],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"desc\"],[8],[1,[28,\"html-safe\",[[24,[\"setting\",\"description\"]]],null],false],[9],[0,\"\\n\"],[1,[28,\"setting-validation-message\",null,[[\"message\"],[[24,[\"validationMessage\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-settings/emoji-list"}});
Ember.TEMPLATES["admin/templates/components/site-settings/enum"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"combo-box\",null,[[\"content\",\"value\",\"onChange\",\"valueProperty\",\"nameProperty\",\"options\"],[[24,[\"setting\",\"validValues\"]],[24,[\"value\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"value\"]]],null]],null],[24,[\"setting\",\"computedValueProperty\"]],[24,[\"setting\",\"computedNameProperty\"]],[28,\"hash\",null,[[\"castInteger\",\"allowAny\"],[true,[24,[\"setting\",\"allowsNone\"]]]]]]]],false],[0,\"\\n\\n\"],[1,[22,\"preview\"],false],[0,\"\\n\\n\"],[1,[28,\"setting-validation-message\",null,[[\"message\"],[[24,[\"validationMessage\"]]]]],false],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"desc\"],[8],[0,\"\\n  \"],[1,[28,\"html-safe\",[[24,[\"setting\",\"description\"]]],null],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-settings/enum"}});
Ember.TEMPLATES["admin/templates/components/site-settings/group-list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"list-setting\",null,[[\"value\",\"choices\",\"settingName\",\"nameProperty\",\"valueProperty\",\"onChange\"],[[24,[\"settingValue\"]],[24,[\"groupChoices\"]],\"name\",[24,[\"nameProperty\"]],[24,[\"valueProperty\"]],[28,\"action\",[[23,0,[]],\"onChangeGroupListSetting\"],null]]]],false],[0,\"\\n\"],[1,[28,\"setting-validation-message\",null,[[\"message\"],[[24,[\"validationMessage\"]]]]],false],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"desc\"],[8],[1,[28,\"html-safe\",[[24,[\"setting\",\"description\"]]],null],false],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-settings/group-list"}});
Ember.TEMPLATES["admin/templates/components/site-settings/host-list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"value-list\",null,[[\"values\",\"addKey\"],[[24,[\"value\"]],\"admin.site_settings.add_host\"]]],false],[0,\"\\n\"],[1,[28,\"setting-validation-message\",null,[[\"message\"],[[24,[\"validationMessage\"]]]]],false],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"desc\"],[8],[1,[28,\"html-safe\",[[24,[\"setting\",\"description\"]]],null],false],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-settings/host-list"}});
Ember.TEMPLATES["admin/templates/components/site-settings/list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"value-list\",null,[[\"values\",\"inputDelimiter\",\"choices\"],[[24,[\"value\"]],\"|\",[24,[\"setting\",\"choices\"]]]]],false],[0,\"\\n\"],[1,[28,\"setting-validation-message\",null,[[\"message\"],[[24,[\"validationMessage\"]]]]],false],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"desc\"],[8],[1,[28,\"html-safe\",[[24,[\"setting\",\"description\"]]],null],false],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-settings/list"}});
Ember.TEMPLATES["admin/templates/components/site-settings/secret-list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"secret-value-list\",null,[[\"setting\",\"values\",\"isSecret\"],[[24,[\"setting\"]],[24,[\"value\"]],[24,[\"isSecret\"]]]]],false],[0,\"\\n\"],[1,[28,\"setting-validation-message\",null,[[\"message\"],[[24,[\"validationMessage\"]]]]],false],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"desc\"],[8],[1,[28,\"html-safe\",[[24,[\"setting\",\"description\"]]],null],false],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-settings/secret-list"}});
Ember.TEMPLATES["admin/templates/components/site-settings/simple-list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"simple-list\",null,[[\"values\",\"inputDelimiter\",\"onChange\"],[[24,[\"value\"]],[24,[\"inputDelimiter\"]],[28,\"action\",[[23,0,[]],\"onChange\"],null]]]],false],[0,\"\\n\"],[1,[28,\"setting-validation-message\",null,[[\"message\"],[[24,[\"validationMessage\"]]]]],false],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"desc\"],[8],[1,[28,\"html-safe\",[[24,[\"setting\",\"description\"]]],null],false],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-settings/simple-list"}});
Ember.TEMPLATES["admin/templates/components/site-settings/string"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"if\",[[24,[\"setting\",\"textarea\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"textarea\",null,[[\"value\",\"classNames\"],[[24,[\"value\"]],\"input-setting-textarea\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"setting\",\"json_schema\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"d-button\",null,[[\"action\",\"icon\",\"label\"],[[28,\"action\",[[23,0,[]],\"launchJsonEditorModal\"],null],\"pencil-alt\",\"admin.site_settings.json_schema.edit\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"isSecret\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"input\",null,[[\"type\",\"value\",\"classNames\"],[\"password\",[24,[\"value\"]],\"input-setting-string\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[1,[28,\"text-field\",null,[[\"value\",\"classNames\"],[[24,[\"value\"]],\"input-setting-string\"]]],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]}]],\"parameters\":[]}],[0,\"\\n\"],[1,[28,\"setting-validation-message\",null,[[\"message\"],[[24,[\"validationMessage\"]]]]],false],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"desc\"],[8],[1,[28,\"html-safe\",[[24,[\"setting\",\"description\"]]],null],false],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-settings/string"}});
Ember.TEMPLATES["admin/templates/components/site-settings/tag-list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"tag-chooser\",null,[[\"tags\",\"onChange\",\"everyTag\",\"options\"],[[24,[\"selectedTags\"]],[28,\"action\",[[23,0,[]],\"changeSelectedTags\"],null],true,[28,\"hash\",null,[[\"allowAny\",\"maximum\"],[false,null]]]]]],false],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"desc\"],[8],[1,[28,\"html-safe\",[[24,[\"setting\",\"description\"]]],null],false],[9],[0,\"\\n\"],[1,[28,\"setting-validation-message\",null,[[\"message\"],[[24,[\"validationMessage\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-settings/tag-list"}});
Ember.TEMPLATES["admin/templates/components/site-settings/upload"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"site-settings-image-uploader\",null,[[\"imageUrl\",\"placeholderUrl\",\"type\"],[[24,[\"value\"]],[24,[\"setting\",\"placeholder\"]],\"site_setting\"]]],false],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"desc\"],[8],[1,[28,\"html-safe\",[[24,[\"setting\",\"description\"]]],null],false],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-settings/upload"}});
Ember.TEMPLATES["admin/templates/components/site-settings/uploaded-image-list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"d-button\",null,[[\"label\",\"action\",\"actionParam\"],[\"admin.site_settings.uploaded_image_list.label\",[28,\"action\",[[23,0,[]],\"showUploadModal\"],null],[28,\"hash\",null,[[\"value\",\"setting\"],[[24,[\"value\"]],[24,[\"setting\"]]]]]]]],false],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"desc\"],[8],[1,[28,\"html-safe\",[[24,[\"setting\",\"description\"]]],null],false],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-settings/uploaded-image-list"}});
Ember.TEMPLATES["admin/templates/components/site-settings/url-list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"value-list\",null,[[\"values\",\"addKey\"],[[24,[\"value\"]],\"admin.site_settings.add_url\"]]],false],[0,\"\\n\"],[1,[28,\"setting-validation-message\",null,[[\"message\"],[[24,[\"validationMessage\"]]]]],false],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"desc\"],[8],[1,[28,\"html-safe\",[[24,[\"setting\",\"description\"]]],null],false],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-settings/url-list"}});
Ember.TEMPLATES["admin/templates/components/site-settings/value-list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"value-list\",null,[[\"values\"],[[24,[\"value\"]]]]],false],[0,\"\\n\"],[1,[28,\"setting-validation-message\",null,[[\"message\"],[[24,[\"validationMessage\"]]]]],false],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"desc\"],[8],[1,[28,\"html-safe\",[[24,[\"setting\",\"description\"]]],null],false],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-settings/value-list"}});
Ember.TEMPLATES["admin/templates/components/site-text-summary"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"d-button\",null,[[\"label\",\"class\",\"action\",\"actionParam\"],[\"admin.site_text.edit\",\"btn-default edit\",[24,[\"editAction\"]],[24,[\"siteText\"]]]]],false],[0,\"\\n\"],[7,\"h3\",true],[10,\"class\",\"site-text-id\"],[8],[1,[24,[\"siteText\",\"id\"]],false],[9],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"site-text-value\"],[8],[1,[24,[\"siteText\",\"value\"]],false],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"clearfix\"],[8],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/site-text-summary"}});
Ember.TEMPLATES["admin/templates/components/suspension-details"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"reason-controls\"],[8],[0,\"\\n  \"],[7,\"label\",true],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"suspend-reason-label\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"siteSettings\",\"hide_suspension_reasons\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"html-safe\",[[28,\"i18n\",[\"admin.user.suspend_reason_hidden_label\"],null]],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[1,[28,\"html-safe\",[[28,\"i18n\",[\"admin.user.suspend_reason_label\"],null]],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"label\",true],[8],[0,\"\\n    \"],[1,[28,\"i18n\",[\"admin.user.suspend_reason_title\"],null],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[1,[28,\"combo-box\",null,[[\"content\",\"value\",\"class\",\"onChange\"],[[24,[\"reasons\"]],[24,[\"selectedReason\"]],\"suspend-reason\",[28,\"action\",[[23,0,[]],[24,[\"setSelectedReason\"]]],null]]]],false],[0,\"\\n\"],[4,\"if\",[[24,[\"isCustomReason\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"text-field\",null,[[\"value\",\"class\",\"onChange\"],[[24,[\"customReason\"]],\"suspend-reason\",[28,\"action\",[[23,0,[]],[24,[\"setCustomReason\"]]],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\\n\"],[7,\"label\",true],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"suspend-message-label\"],[8],[0,\"\\n    \"],[1,[28,\"i18n\",[\"admin.user.suspend_message\"],null],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[1,[28,\"textarea\",null,[[\"value\",\"class\",\"placeholder\"],[[24,[\"message\"]],\"suspend-message\",[28,\"i18n\",[\"admin.user.suspend_message_placeholder\"],null]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/suspension-details"}});
Ember.TEMPLATES["admin/templates/components/tags-uploader"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"label\",true],[11,\"class\",[29,[\"btn btn-default \",[28,\"if\",[[24,[\"addDisabled\"]],\"disabled\"],null]]]],[8],[0,\"\\n  \"],[1,[28,\"d-icon\",[\"upload\"],null],false],[0,\"\\n  \"],[1,[28,\"i18n\",[\"admin.watched_words.form.upload\"],null],false],[0,\"\\n  \"],[7,\"input\",true],[10,\"class\",\"hidden-upload-field\"],[11,\"disabled\",[22,\"addDisabled\"]],[10,\"accept\",\"text/plain,text/csv\"],[10,\"type\",\"file\"],[8],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"span\",true],[10,\"class\",\"instructions\"],[8],[1,[28,\"i18n\",[\"tagging.upload_instructions\"],null],false],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/tags-uploader"}});
Ember.TEMPLATES["admin/templates/components/themes-list-item"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"inner-wrapper\"],[8],[0,\"\\n  \"],[1,[28,\"plugin-outlet\",null,[[\"name\",\"connectorTagName\",\"args\"],[\"admin-customize-themes-list-item\",\"span\",[28,\"hash\",null,[[\"theme\"],[[24,[\"theme\"]]]]]]]],false],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"info\"],[8],[0,\"\\n    \"],[7,\"span\",true],[10,\"class\",\"name\"],[8],[0,\"\\n      \"],[1,[24,[\"theme\",\"name\"]],false],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"span\",true],[10,\"class\",\"icons\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"theme\",\"selected\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"d-icon\",[\"caret-right\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"theme\",\"default\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-icon\",[\"check\"],[[\"class\",\"title\"],[\"default-indicator\",\"admin.customize.theme.default_theme_tooltip\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"theme\",\"isPendingUpdates\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-icon\",[\"sync\"],[[\"title\",\"class\"],[\"admin.customize.theme.updates_available_tooltip\",\"light-grey-icon\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"theme\",\"isBroken\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-icon\",[\"exclamation-circle\"],[[\"class\",\"title\"],[\"broken-indicator\",\"admin.customize.theme.broken_theme_tooltip\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[24,[\"theme\",\"enabled\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-icon\",[\"ban\"],[[\"class\",\"title\"],[\"light-grey-icon\",\"admin.customize.theme.disabled_component_tooltip\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"displayComponents\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"components-list\"],[8],[0,\"\\n      \"],[7,\"span\",true],[10,\"class\",\"components\"],[8],[1,[28,\"html-safe\",[[24,[\"childrenString\"]]],null],false],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"displayHasMore\"]]],null,{\"statements\":[[0,\"        \"],[7,\"a\",false],[12,\"href\",\"\"],[12,\"class\",\"others-count\"],[3,\"action\",[[23,0,[]],\"toggleChildrenExpanded\"]],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"childrenExpanded\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"i18n\",[\"admin.customize.theme.collapse\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"            \"],[1,[28,\"i18n\",[\"admin.customize.theme.and_x_more\"],[[\"count\"],[[24,[\"moreCount\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/themes-list-item"}});
Ember.TEMPLATES["admin/templates/components/themes-list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"theme\",\"theme\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"themes-list-header\"],[8],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"action\",\"actionParam\",\"class\",\"label\"],[[28,\"action\",[[23,0,[]],\"changeView\"],null],[24,[\"THEMES\"]],[28,\"concat\",[\"themes-tab \",\"tab \",[28,\"if\",[[24,[\"themesTabActive\"]],\"btn-danger active\",\"\"],null]],null],\"admin.customize.theme.title\"]]],false],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"action\",\"actionParam\",\"class\",\"label\",\"icon\"],[[28,\"action\",[[23,0,[]],\"changeView\"],null],[24,[\"COMPONENTS\"]],[28,\"concat\",[\"components-tab \",\"tab \",[28,\"if\",[[24,[\"componentsTabActive\"]],\"btn-danger active\",\"\"],null]],null],\"admin.customize.theme.components\",\"puzzle-piece\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"themes-list-container\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"showFilter\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"themes-list-filter themes-list-item\"],[8],[0,\"\\n      \"],[1,[28,\"input\",null,[[\"class\",\"placeholder\",\"autocomplete\",\"value\"],[\"filter-input\",[28,\"i18n\",[\"admin.customize.theme.filter_placeholder\"],null],\"discourse\",[28,\"mut\",[[24,[\"filterTerm\"]]],null]]]],false],[0,\"\\n      \"],[1,[28,\"d-icon\",[\"search\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"hasThemes\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"hasActiveThemes\"]]],null,{\"statements\":[[4,\"each\",[[24,[\"activeThemes\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"themes-list-item\",null,[[\"theme\",\"navigateToTheme\"],[[23,2,[]],[28,\"action\",[[23,0,[]],\"navigateToTheme\",[23,2,[]]],null]]]],false],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"hasInactiveThemes\"]]],null,{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"themes-list-item inactive-indicator\"],[8],[0,\"\\n          \"],[7,\"span\",true],[10,\"class\",\"empty\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"themesTabActive\"]]],null,{\"statements\":[[0,\"              \"],[1,[28,\"i18n\",[\"admin.customize.theme.inactive_themes\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"              \"],[1,[28,\"i18n\",[\"admin.customize.theme.inactive_components\"],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"hasInactiveThemes\"]]],null,{\"statements\":[[4,\"each\",[[24,[\"inactiveThemes\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"themes-list-item\",null,[[\"theme\",\"navigateToTheme\"],[[23,1,[]],[28,\"action\",[[23,0,[]],\"navigateToTheme\",[23,1,[]]],null]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"themes-list-item\"],[8],[0,\"\\n      \"],[7,\"span\",true],[10,\"class\",\"empty\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.empty\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"create-actions\"],[8],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"action\",\"icon\",\"label\",\"class\"],[[24,[\"installModal\"]],\"upload\",\"admin.customize.install\",\"btn-primary\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/themes-list"}});
Ember.TEMPLATES["admin/templates/components/value-list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"value\",\"index\"],\"statements\":[[4,\"if\",[[24,[\"collection\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"values\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"collection\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[11,\"data-index\",[23,2,[]]],[10,\"class\",\"value\"],[8],[0,\"\\n        \"],[1,[28,\"d-button\",null,[[\"action\",\"actionParam\",\"icon\",\"class\"],[[28,\"action\",[[23,0,[]],\"removeValue\"],null],[23,1,[]],\"times\",\"remove-value-btn btn-small\"]]],false],[0,\"\\n\\n        \"],[1,[28,\"input\",null,[[\"title\",\"value\",\"class\",\"focus-out\"],[[23,1,[]],[23,1,[]],\"value-input\",[28,\"action\",[[23,0,[]],\"changeValue\",[23,2,[]]],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[1,2]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"combo-box\",null,[[\"options\",\"none\",\"valueProperty\",\"nameProperty\",\"value\",\"content\",\"onChange\"],[[28,\"hash\",null,[[\"allowAny\"],[true]]],[24,[\"noneKey\"]],null,null,[24,[\"newValue\"]],[24,[\"filteredChoices\"]],[28,\"action\",[[23,0,[]],\"selectChoice\"],null]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/value-list"}});
Ember.TEMPLATES["admin/templates/components/version-checks"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"section-title\"],[8],[0,\"\\n  \"],[7,\"h2\",true],[8],[0,\"\\n    \"],[1,[28,\"i18n\",[\"admin.dashboard.version\"],null],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[11,\"class\",[29,[\"dashboard-stats version-check\\n    \",[28,\"if\",[[24,[\"versionCheck\",\"critical_updates\"]],\"critical\",\"normal\"],null]]]],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"version-number\"],[8],[0,\"\\n    \"],[7,\"h4\",true],[8],[0,\"\\n      \"],[1,[28,\"i18n\",[\"admin.dashboard.installed_version\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"h3\",true],[8],[0,\"\\n      \"],[1,[28,\"dash-if-empty\",[[24,[\"versionCheck\",\"installed_version\"]]],null],false],[0,\"\\n    \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"versionCheck\",\"gitLink\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"sha-link\"],[8],[0,\"\\n        (\\n        \"],[7,\"a\",true],[11,\"href\",[24,[\"versionCheck\",\"gitLink\"]]],[10,\"rel\",\"noopener noreferrer\"],[10,\"target\",\"_blank\"],[8],[0,\"\\n          \"],[1,[24,[\"versionCheck\",\"shortSha\"]],false],[0,\"\\n        \"],[9],[0,\"\\n        )\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"versionCheck\",\"noCheckPerformed\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"version-number\"],[8],[0,\"\\n      \"],[7,\"h4\",true],[8],[0,\"\\n        \"],[1,[28,\"i18n\",[\"admin.dashboard.latest_version\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"h3\",true],[8],[0,\"\\n        —\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"version-status\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"face\"],[8],[0,\"\\n        \"],[7,\"span\",true],[10,\"class\",\"icon critical-updates-available\"],[8],[0,\"\\n          \"],[1,[28,\"d-icon\",[\"far-frown\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"version-notes\"],[8],[0,\"\\n        \"],[7,\"span\",true],[10,\"class\",\"normal-note\"],[8],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.dashboard.no_check_performed\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"versionCheck\",\"stale_data\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"version-number\"],[8],[0,\"\\n      \"],[7,\"h4\",true],[8],[0,\"\\n        \"],[1,[28,\"i18n\",[\"admin.dashboard.latest_version\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"h3\",true],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"versionCheck\",\"version_check_pending\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"dash-if-empty\",[[24,[\"versionCheck\",\"installed_version\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"version-status\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"face\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"versionCheck\",\"version_check_pending\"]]],null,{\"statements\":[[0,\"          \"],[7,\"span\",true],[10,\"class\",\"icon up-to-date\"],[8],[0,\"\\n            \"],[1,[28,\"d-icon\",[\"far-smile\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[7,\"span\",true],[10,\"class\",\"icon critical-updates-available\"],[8],[0,\"\\n            \"],[1,[28,\"d-icon\",[\"far-frown\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"version-notes\"],[8],[0,\"\\n        \"],[7,\"span\",true],[10,\"class\",\"normal-note\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"versionCheck\",\"version_check_pending\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"i18n\",[\"admin.dashboard.version_check_pending\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"            \"],[1,[28,\"i18n\",[\"admin.dashboard.stale_data\"],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"version-number\"],[8],[0,\"\\n      \"],[7,\"h4\",true],[8],[0,\"\\n        \"],[1,[28,\"i18n\",[\"admin.dashboard.latest_version\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"h3\",true],[8],[0,\"\\n        \"],[1,[28,\"dash-if-empty\",[[24,[\"versionCheck\",\"latest_version\"]]],null],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"version-status\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"face\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"versionCheck\",\"upToDate\"]]],null,{\"statements\":[[0,\"          \"],[7,\"span\",true],[10,\"class\",\"icon up-to-date\"],[8],[0,\"\\n            \"],[1,[28,\"d-icon\",[\"far-smile\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[7,\"span\",true],[11,\"class\",[29,[\"icon\\n              \",[28,\"if\",[[24,[\"versionCheck\",\"critical_updates\"]],\"critical-updates-available\",\"updates-available\"],null]]]],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"versionCheck\",\"behindByOneVersion\"]]],null,{\"statements\":[[0,\"              \"],[1,[28,\"d-icon\",[\"far-meh\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"              \"],[1,[28,\"d-icon\",[\"far-frown\"],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"          \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"version-notes\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"versionCheck\",\"upToDate\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"i18n\",[\"admin.dashboard.up_to_date\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[7,\"span\",true],[10,\"class\",\"critical-note\"],[8],[0,\"\\n            \"],[1,[28,\"i18n\",[\"admin.dashboard.critical_available\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n          \"],[7,\"span\",true],[10,\"class\",\"normal-note\"],[8],[0,\"\\n            \"],[1,[28,\"i18n\",[\"admin.dashboard.updates_available\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.dashboard.please_upgrade\"],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"]],\"parameters\":[]}]],\"parameters\":[]}],[0,\"  \"],[1,[28,\"custom-html\",null,[[\"name\",\"versionCheck\",\"tagName\",\"classNames\"],[\"upgrade-header\",[24,[\"versionCheck\"]],\"div\",\"upgrade-header\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/version-checks"}});
Ember.TEMPLATES["admin/templates/components/watched-word-form"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"watched-word-input\"],[8],[0,\"\\n  \"],[7,\"label\",true],[10,\"for\",\"watched-word\"],[8],[1,[28,\"i18n\",[\"admin.watched_words.form.label\"],null],false],[9],[0,\"\\n  \"],[1,[28,\"text-field\",null,[[\"id\",\"value\",\"disabled\",\"class\",\"autocorrect\",\"autocapitalize\",\"placeholderKey\",\"title\"],[\"watched-word\",[24,[\"word\"]],[24,[\"formSubmitted\"]],\"watched-word-input-field\",\"off\",\"off\",[24,[\"placeholderKey\"]],[28,\"i18n\",[[24,[\"placeholderKey\"]]],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"canReplace\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"watched-word-input\"],[8],[0,\"\\n    \"],[7,\"label\",true],[10,\"for\",\"watched-replacement\"],[8],[1,[28,\"i18n\",[\"admin.watched_words.form.replace_label\"],null],false],[9],[0,\"\\n    \"],[1,[28,\"text-field\",null,[[\"id\",\"value\",\"disabled\",\"class\",\"autocorrect\",\"autocapitalize\",\"placeholderKey\"],[\"watched-replacement\",[24,[\"replacement\"]],[24,[\"formSubmitted\"]],\"watched-word-input-field\",\"off\",\"off\",\"admin.watched_words.form.replace_placeholder\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"canTag\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"watched-word-input\"],[8],[0,\"\\n    \"],[7,\"label\",true],[10,\"for\",\"watched-tag\"],[8],[1,[28,\"i18n\",[\"admin.watched_words.form.tag_label\"],null],false],[9],[0,\"\\n    \"],[1,[28,\"tag-chooser\",null,[[\"id\",\"class\",\"tags\",\"onChange\",\"options\"],[\"watched-tag\",\"watched-word-input-field\",[24,[\"selectedTags\"]],[28,\"action\",[[23,0,[]],\"changeSelectedTags\"],null],[28,\"hash\",null,[[\"allowAny\",\"disabled\"],[true,[24,[\"formSubmitted\"]]]]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"canLink\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"watched-word-input\"],[8],[0,\"\\n    \"],[7,\"label\",true],[10,\"for\",\"watched-replacement\"],[8],[1,[28,\"i18n\",[\"admin.watched_words.form.link_label\"],null],false],[9],[0,\"\\n    \"],[1,[28,\"text-field\",null,[[\"id\",\"value\",\"disabled\",\"class\",\"autocorrect\",\"autocapitalize\",\"placeholderKey\"],[\"watched-replacement\",[24,[\"replacement\"]],[24,[\"formSubmitted\"]],\"watched-word-input-field\",\"off\",\"off\",\"admin.watched_words.form.link_placeholder\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"disabled\",\"label\"],[\"btn btn-primary\",[28,\"action\",[[23,0,[]],\"submit\"],null],[24,[\"formSubmitted\"]],\"admin.watched_words.form.add\"]]],false],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"showMessage\"]]],null,{\"statements\":[[0,\"  \"],[7,\"span\",true],[10,\"class\",\"success-message\"],[8],[1,[22,\"message\"],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/watched-word-form"}});
Ember.TEMPLATES["admin/templates/components/watched-word-uploader"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"label\",true],[11,\"class\",[29,[\"btn btn-default \",[28,\"if\",[[24,[\"addDisabled\"]],\"disabled\"],null]]]],[8],[0,\"\\n  \"],[1,[28,\"d-icon\",[\"upload\"],null],false],[0,\"\\n  \"],[1,[28,\"i18n\",[\"admin.watched_words.form.upload\"],null],false],[0,\"\\n  \"],[7,\"input\",true],[10,\"class\",\"hidden-upload-field\"],[11,\"disabled\",[22,\"addDisabled\"]],[10,\"type\",\"file\"],[8],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/components/watched-word-uploader"}});
Ember.TEMPLATES["admin/templates/customize-colors-index"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"p\",true],[10,\"class\",\"about\"],[8],[1,[28,\"i18n\",[\"admin.customize.colors.about\"],null],false],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/customize-colors-index"}});
Ember.TEMPLATES["admin/templates/customize-colors-show"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"c\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"color-scheme show-current-style\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"admin-container\"],[8],[0,\"\\n    \"],[7,\"h1\",true],[8],[4,\"if\",[[24,[\"model\",\"theme_id\"]]],null,{\"statements\":[[1,[24,[\"model\",\"name\"]],false]],\"parameters\":[]},{\"statements\":[[1,[28,\"text-field\",null,[[\"class\",\"value\"],[\"style-name\",[24,[\"model\",\"name\"]]]]],false]],\"parameters\":[]}],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"unless\",[[24,[\"model\",\"theme_id\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"disabled\",\"label\"],[\"btn-primary\",[28,\"action\",[[23,0,[]],\"save\"],null],[24,[\"model\",\"disableSave\"]],\"admin.customize.save\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"copy\",[24,[\"model\"]]],null],\"copy\",\"admin.customize.copy\"]]],false],[0,\"\\n      \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-default copy-to-clipboard\",[28,\"action\",[[23,0,[]],\"copyToClipboard\",[24,[\"model\"]]],null],\"far-clipboard\",\"admin.customize.copy_to_clipboard\"]]],false],[0,\"\\n      \"],[7,\"span\",true],[11,\"class\",[29,[\"saving \",[28,\"unless\",[[24,[\"model\",\"savingStatus\"]],\"hidden\"],null]]]],[8],[1,[24,[\"model\",\"savingStatus\"]],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"theme_id\"]]],null,{\"statements\":[[0,\"        \"],[7,\"span\",true],[10,\"class\",\"not-editable\"],[8],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.customize.theme_owner\"],null],false],[0,\"\\n          \"],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminCustomizeThemes.show\",[24,[\"model\",\"theme_id\"]]]],{\"statements\":[[1,[24,[\"model\",\"theme_name\"]],false]],\"parameters\":[]},null],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"icon\",\"label\"],[[28,\"action\",[[23,0,[]],\"destroy\"],null],\"btn-danger\",\"far-trash-alt\",\"admin.customize.delete\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"admin-controls\"],[8],[0,\"\\n\"],[4,\"unless\",[[24,[\"model\",\"theme_id\"]]],null,{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"pull-right\"],[8],[0,\"\\n          \"],[7,\"label\",true],[8],[0,\"\\n            \"],[1,[28,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[24,[\"onlyOverridden\"]]]]],false],[0,\"\\n            \"],[1,[28,\"i18n\",[\"admin.settings.show_overriden\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n      \"],[7,\"div\",true],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"theme_id\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"inline-edit-checkbox\",null,[[\"action\",\"labelKey\",\"checked\",\"modelId\"],[[28,\"action\",[[23,0,[]],\"applyUserSelectable\"],null],\"admin.customize.theme.color_scheme_user_selectable\",[24,[\"model\",\"user_selectable\"]],[24,[\"model\",\"id\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[7,\"label\",true],[8],[0,\"\\n            \"],[1,[28,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[24,[\"model\",\"user_selectable\"]]]]],false],[0,\"\\n            \"],[1,[28,\"i18n\",[\"admin.customize.theme.color_scheme_user_selectable\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"colors\",\"length\"]]],null,{\"statements\":[[0,\"      \"],[7,\"table\",true],[10,\"class\",\"table colors\"],[8],[0,\"\\n        \"],[7,\"thead\",true],[8],[0,\"\\n          \"],[7,\"tr\",true],[8],[0,\"\\n            \"],[7,\"th\",true],[8],[9],[0,\"\\n            \"],[7,\"th\",true],[10,\"class\",\"hex\"],[8],[1,[28,\"i18n\",[\"admin.customize.color\"],null],false],[9],[0,\"\\n            \"],[7,\"th\",true],[8],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"colors\"]]],null,{\"statements\":[[0,\"            \"],[7,\"tr\",true],[11,\"class\",[29,[[28,\"if\",[[23,1,[\"changed\"]],\"changed\"],null],\" \",[28,\"if\",[[23,1,[\"valid\"]],\"valid\",\"invalid\"],null]]]],[8],[0,\"\\n              \"],[7,\"td\",true],[10,\"class\",\"name\"],[11,\"title\",[23,1,[\"name\"]]],[8],[0,\"\\n                \"],[7,\"h3\",true],[8],[1,[23,1,[\"translatedName\"]],false],[9],[0,\"\\n                \"],[7,\"p\",true],[10,\"class\",\"description\"],[8],[1,[23,1,[\"description\"]],false],[9],[0,\"\\n              \"],[9],[0,\"\\n              \"],[7,\"td\",true],[10,\"class\",\"hex\"],[8],[1,[28,\"color-input\",null,[[\"hexValue\",\"brightnessValue\",\"valid\"],[[23,1,[\"hex\"]],[23,1,[\"brightness\"]],[23,1,[\"valid\"]]]]],false],[9],[0,\"\\n              \"],[7,\"td\",true],[10,\"class\",\"actions\"],[8],[0,\"\\n\"],[4,\"unless\",[[24,[\"model\",\"theme_id\"]]],null,{\"statements\":[[0,\"                  \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"title\",\"label\"],[[28,\"concat\",[\"btn-default revert \",[28,\"unless\",[[23,1,[\"savedIsOverriden\"]],\"invisible\"],null]],null],[28,\"action\",[[23,0,[]],\"revert\",[23,1,[]]],null],\"admin.customize.colors.revert_title\",\"revert\"]]],false],[0,\"\\n                  \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"title\",\"label\"],[[28,\"concat\",[\"btn-default undo \",[28,\"unless\",[[23,1,[\"changed\"]],\"invisible\"],null]],null],[28,\"action\",[[23,0,[]],\"undo\",[23,1,[]]],null],\"admin.customize.colors.undo_title\",\"undo\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"search.no_results\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/customize-colors-show"}});
Ember.TEMPLATES["admin/templates/customize-colors"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"scheme\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"content-list color-schemes\"],[8],[0,\"\\n  \"],[7,\"h3\",true],[8],[1,[28,\"i18n\",[\"admin.customize.colors.long_title\"],null],false],[9],[0,\"\\n\\n  \"],[7,\"ul\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[4,\"unless\",[[23,1,[\"is_base\"]]],null,{\"statements\":[[0,\"        \"],[7,\"li\",true],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"replace\",\"route\",\"model\"],[true,\"adminCustomize.colors.show\",[23,1,[]]]],{\"statements\":[[0,\"            \"],[1,[28,\"d-icon\",[\"paint-brush\"],null],false],[0,\"\\n            \"],[1,[23,1,[\"description\"]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[1]},null],[0,\"  \"],[9],[0,\"\\n\\n  \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"newColorScheme\"],null],\"plus\",\"admin.customize.new\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[22,\"outlet\"],false],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"clearfix\"],[8],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/customize-colors"}});
Ember.TEMPLATES["admin/templates/customize-email-style-edit"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"email-styles-editor\",null,[[\"styles\",\"fieldName\",\"save\"],[[24,[\"model\"]],[24,[\"fieldName\"]],[28,\"action\",[[23,0,[]],\"save\"],null]]]],false],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"admin-footer\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"buttons\"],[8],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"action\",\"disabled\",\"class\",\"translatedLabel\"],[[28,\"action\",[[23,0,[]],\"save\"],null],[24,[\"saveDisabled\"]],\"btn-primary\",[24,[\"saveButtonText\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/customize-email-style-edit"}});
Ember.TEMPLATES["admin/templates/customize-email-style"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[7,\"h2\",true],[8],[1,[28,\"i18n\",[\"admin.customize.email_style.heading\"],null],false],[9],[0,\"\\n\\n  \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.customize.email_style.instructions\"],null],false],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/customize-email-style"}});
Ember.TEMPLATES["admin/templates/customize-email-templates-edit"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"combo-box\",null,[[\"value\",\"content\",\"onChange\",\"nameProperty\"],[[24,[\"emailTemplate\",\"id\"]],[24,[\"adminCustomizeEmailTemplates\",\"sortedTemplates\"]],[24,[\"adminCustomizeEmailTemplates\",\"onSelectTemplate\"]],\"title\"]]],false],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"email-template\"],[8],[0,\"\\n  \"],[7,\"label\",true],[8],[1,[28,\"i18n\",[\"admin.customize.email_templates.subject\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"hasMultipleSubjects\"]]],null,{\"statements\":[[0,\"    \"],[7,\"h3\",true],[8],[4,\"link-to\",null,[[\"query\",\"route\"],[[28,\"hash\",null,[[\"q\"],[[24,[\"hasMultipleSubjects\"]]]]],\"adminSiteText\"]],{\"statements\":[[1,[28,\"i18n\",[\"admin.customize.email_templates.multiple_subjects\"],null],false]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[1,[28,\"input\",null,[[\"value\"],[[24,[\"buffered\",\"subject\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[7,\"br\",true],[8],[9],[0,\"\\n\\n  \"],[7,\"label\",true],[8],[1,[28,\"i18n\",[\"admin.customize.email_templates.body\"],null],false],[9],[0,\"\\n  \"],[1,[28,\"d-editor\",null,[[\"value\"],[[24,[\"buffered\",\"body\"]]]]],false],[0,\"\\n\\n\"],[4,\"save-controls\",null,[[\"model\",\"action\",\"saved\",\"saveDisabled\"],[[24,[\"emailTemplate\"]],[28,\"action\",[[23,0,[]],\"saveChanges\"],null],[24,[\"saved\"]],[24,[\"saveDisabled\"]]]],{\"statements\":[[4,\"if\",[[24,[\"emailTemplate\",\"can_revert\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"d-button\",null,[[\"action\",\"label\"],[[28,\"action\",[[23,0,[]],\"revertChanges\"],null],\"admin.customize.email_templates.revert\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/customize-email-templates-edit"}});
Ember.TEMPLATES["admin/templates/customize-email-templates"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/customize-email-templates"}});
Ember.TEMPLATES["admin/templates/customize-robots-txt"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"robots-txt-edit\"],[8],[0,\"\\n  \"],[7,\"h3\",true],[8],[1,[28,\"i18n\",[\"admin.customize.robots.title\"],null],false],[9],[0,\"\\n  \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.customize.robots.warning\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"overridden\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"overridden\"],[8],[0,\"\\n      \"],[1,[28,\"i18n\",[\"admin.customize.robots.overridden\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[28,\"textarea\",null,[[\"value\",\"class\"],[[24,[\"buffered\",\"robots_txt\"]],\"robots-txt-input\"]]],false],[0,\"\\n\"],[4,\"save-controls\",null,[[\"model\",\"action\",\"saved\",\"saveDisabled\"],[[23,0,[]],[28,\"action\",[[23,0,[]],\"save\"],null],[24,[\"saved\"]],[24,[\"saveDisabled\"]]]],{\"statements\":[[0,\"    \"],[1,[28,\"d-button\",null,[[\"class\",\"disabled\",\"icon\",\"action\",\"label\"],[\"btn-default\",[24,[\"resetDisbaled\"]],\"undo\",[28,\"action\",[[23,0,[]],\"reset\"],null],\"admin.settings.reset\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/customize-robots-txt"}});
Ember.TEMPLATES["admin/templates/customize-themes-edit"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[11,\"class\",[29,[\"current-style \",[28,\"if\",[[24,[\"maximized\"]],\"maximized\"],null]]]],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"wrapper\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"editor-information\"],[8],[0,\"\\n      \"],[1,[28,\"d-button\",null,[[\"title\",\"action\",\"icon\",\"class\"],[\"go_back\",[28,\"action\",[[23,0,[]],\"goBack\"],null],\"chevron-left\",\"btn-small editor-back-button\"]]],false],[0,\"\\n\\n      \"],[7,\"span\",true],[10,\"class\",\"editor-theme-name-wrapper\"],[8],[0,\"\\n        \"],[1,[28,\"i18n\",[\"admin.customize.theme.edit_css_html\"],null],false],[0,\"\\n\"],[4,\"link-to\",null,[[\"replace\",\"class\",\"route\",\"model\"],[true,\"editor-theme-name\",[24,[\"showRouteName\"]],[24,[\"model\",\"id\"]]]],{\"statements\":[[0,\"          \"],[1,[24,[\"model\",\"name\"]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[1,[28,\"admin-theme-editor\",null,[[\"theme\",\"editRouteName\",\"currentTargetName\",\"fieldName\",\"fieldAdded\",\"maximized\",\"onlyOverriddenChanged\",\"save\"],[[24,[\"model\"]],[24,[\"editRouteName\"]],[24,[\"currentTargetName\"]],[24,[\"fieldName\"]],[28,\"action\",[[23,0,[]],\"fieldAdded\"],null],[24,[\"maximized\"]],[28,\"action\",[[23,0,[]],\"onlyOverriddenChanged\"],null],[28,\"action\",[[23,0,[]],\"save\"],null]]]],false],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"admin-footer\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"status-actions\"],[8],[0,\"\\n\"],[4,\"unless\",[[24,[\"model\",\"changed\"]]],null,{\"statements\":[[0,\"          \"],[7,\"a\",true],[11,\"href\",[22,\"previewUrl\"]],[10,\"rel\",\"noopener noreferrer\"],[11,\"title\",[28,\"i18n\",[\"admin.customize.explain_preview\"],null]],[10,\"class\",\"preview-link\"],[10,\"target\",\"_blank\"],[8],[0,\"\\n            \"],[1,[28,\"i18n\",[\"admin.customize.preview\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n\\n      \"],[7,\"div\",true],[10,\"class\",\"buttons\"],[8],[0,\"\\n        \"],[1,[28,\"d-button\",null,[[\"action\",\"disabled\",\"class\",\"translatedLabel\"],[[28,\"action\",[[23,0,[]],\"save\"],null],[24,[\"saveDisabled\"]],\"btn-primary\",[24,[\"saveButtonText\"]]]]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/customize-themes-edit"}});
Ember.TEMPLATES["admin/templates/customize-themes-index"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"resource\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"themes-intro admin-intro\"],[8],[0,\"\\n  \"],[7,\"img\",true],[11,\"src\",[22,\"womanArtistEmojiURL\"]],[11,\"alt\",[28,\"i18n\",[\"admin.customize.theme.themes_intro_emoji\"],null]],[8],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"content-wrapper\"],[8],[0,\"\\n    \"],[7,\"h1\",true],[8],[1,[28,\"i18n\",[\"admin.customize.theme.themes_intro\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"create-actions\"],[8],[0,\"\\n      \"],[1,[28,\"d-button\",null,[[\"action\",\"icon\",\"label\",\"class\"],[[28,\"route-action\",[\"installModal\"],null],\"upload\",\"admin.customize.install\",\"btn-primary\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"external-resources\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"externalResources\"]]],null,{\"statements\":[[0,\"        \"],[7,\"a\",true],[11,\"href\",[23,1,[\"link\"]]],[10,\"class\",\"external-link\"],[10,\"rel\",\"noopener noreferrer\"],[10,\"target\",\"_blank\"],[8],[0,\"\\n          \"],[1,[28,\"d-icon\",[[23,1,[\"icon\"]]],null],false],[0,\"\\n          \"],[1,[28,\"i18n\",[[23,1,[\"key\"]]],null],false],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/customize-themes-index"}});
Ember.TEMPLATES["admin/templates/customize-themes-show"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"translation\",\"setting\",\"extraFile\",\"upload\",\"field\",\"theme\",\"error\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"show-current-style\"],[8],[0,\"\\n  \"],[1,[28,\"plugin-outlet\",null,[[\"name\",\"args\"],[\"admin-customize-themes-show-top\",[28,\"hash\",null,[[\"theme\"],[[24,[\"model\"]]]]]]]],false],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"title\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"editingName\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"text-field\",null,[[\"value\",\"autofocus\"],[[24,[\"model\",\"name\"]],\"true\"]]],false],[0,\"\\n      \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"icon\"],[[28,\"action\",[[23,0,[]],\"finishedEditingName\"],null],\"btn-primary btn-small submit-edit\",\"check\"]]],false],[0,\"\\n      \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"icon\"],[[28,\"action\",[[23,0,[]],\"cancelEditingName\"],null],\"btn-small cancel-edit\",\"times\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[7,\"span\",true],[8],[1,[24,[\"model\",\"name\"]],false],[9],[0,\"\\n      \"],[1,[28,\"d-button\",null,[[\"action\",\"icon\",\"class\"],[[28,\"action\",[[23,0,[]],\"startEditingName\"],null],\"pencil-alt\",\"btn-small\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\\n\"],[4,\"each\",[[24,[\"model\",\"errors\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"alert alert-error\"],[8],[1,[23,7,[]],false],[9],[0,\"\\n\"]],\"parameters\":[7]},null],[0,\"\\n\"],[4,\"unless\",[[24,[\"model\",\"supported\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"alert alert-error\"],[8],[0,\"\\n      \"],[1,[28,\"i18n\",[\"admin.customize.theme.required_version.error\"],null],false],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"remote_theme\",\"minimum_discourse_version\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"i18n\",[\"admin.customize.theme.required_version.minimum\"],[[\"version\"],[[24,[\"model\",\"remote_theme\",\"minimum_discourse_version\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"model\",\"remote_theme\",\"maximum_discourse_version\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"i18n\",[\"admin.customize.theme.required_version.maximum\"],[[\"version\"],[[24,[\"model\",\"remote_theme\",\"maximum_discourse_version\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"unless\",[[24,[\"model\",\"enabled\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"alert alert-error\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"disabled_by\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"i18n\",[\"admin.customize.theme.disabled_by\"],null],false],[0,\"\\n\"],[4,\"user-link\",null,[[\"user\"],[[24,[\"model\",\"disabled_by\"]]]],{\"statements\":[[0,\"          \"],[1,[28,\"avatar\",[[24,[\"model\",\"disabled_by\"]]],[[\"imageSize\"],[\"tiny\"]]],false],[0,\"\\n          \"],[1,[24,[\"model\",\"disabled_by\",\"username\"]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[1,[28,\"format-date\",[[24,[\"model\",\"disabled_at\"]]],[[\"leaveAgo\"],[\"true\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[1,[28,\"i18n\",[\"admin.customize.theme.disabled\"],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"enableComponent\"],null],\"check\",\"admin.customize.theme.enable\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"metadata control-unit\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"remote_theme\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"model\",\"remote_theme\",\"remote_url\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"sourceIsHttp\"]]],null,{\"statements\":[[0,\"          \"],[7,\"a\",true],[10,\"class\",\"remote-url\"],[11,\"href\",[22,\"remoteThemeLink\"]],[8],[1,[28,\"i18n\",[\"admin.customize.theme.source_url\"],null],false],[1,[28,\"d-icon\",[\"link\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[7,\"div\",true],[10,\"class\",\"remote-url\"],[8],[0,\"\\n            \"],[7,\"code\",true],[8],[1,[24,[\"model\",\"remote_theme\",\"remote_url\"]],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"remote_theme\",\"branch\"]]],null,{\"statements\":[[0,\"              (\"],[7,\"code\",true],[8],[1,[24,[\"model\",\"remote_theme\",\"branch\"]],false],[9],[0,\")\\n\"]],\"parameters\":[]},null],[0,\"          \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[4,\"if\",[[24,[\"model\",\"remote_theme\",\"about_url\"]]],null,{\"statements\":[[0,\"        \"],[7,\"a\",true],[10,\"class\",\"url about-url\"],[11,\"href\",[24,[\"model\",\"remote_theme\",\"about_url\"]]],[8],[1,[28,\"i18n\",[\"admin.customize.theme.about_theme\"],null],false],[1,[28,\"d-icon\",[\"link\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"model\",\"remote_theme\",\"license_url\"]]],null,{\"statements\":[[0,\"        \"],[7,\"a\",true],[10,\"class\",\"url license-url\"],[11,\"href\",[24,[\"model\",\"remote_theme\",\"license_url\"]]],[8],[1,[28,\"i18n\",[\"admin.customize.theme.license\"],null],false],[1,[28,\"d-icon\",[\"link\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"description\"]]],null,{\"statements\":[[0,\"        \"],[7,\"span\",true],[10,\"class\",\"theme-description\"],[8],[1,[24,[\"model\",\"description\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n      \"],[4,\"if\",[[24,[\"model\",\"remote_theme\",\"authors\"]]],null,{\"statements\":[[7,\"span\",true],[10,\"class\",\"authors\"],[8],[7,\"span\",true],[10,\"class\",\"heading\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.authors\"],null],false],[9],[0,\" \"],[1,[24,[\"model\",\"remote_theme\",\"authors\"]],false],[9]],\"parameters\":[]},null],[0,\"\\n      \"],[4,\"if\",[[24,[\"model\",\"remote_theme\",\"theme_version\"]]],null,{\"statements\":[[7,\"span\",true],[10,\"class\",\"version\"],[8],[7,\"span\",true],[10,\"class\",\"heading\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.version\"],null],false],[9],[0,\" \"],[1,[24,[\"model\",\"remote_theme\",\"theme_version\"]],false],[9]],\"parameters\":[]},null],[0,\"\\n\\n      \"],[7,\"div\",true],[10,\"class\",\"control-unit\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"remote_theme\",\"is_git\"]]],null,{\"statements\":[[0,\"          \"],[7,\"div\",true],[10,\"class\",\"alert alert-info\"],[8],[0,\"\\n            \"],[1,[28,\"html-safe\",[[28,\"i18n\",[\"admin.customize.theme.remote_theme_edits\"],[[\"repoURL\"],[[24,[\"remoteThemeLink\"]]]]]],null],false],[0,\"\\n          \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"showRemoteError\"]]],null,{\"statements\":[[0,\"            \"],[7,\"div\",true],[10,\"class\",\"error-message\"],[8],[0,\"\\n              \"],[1,[28,\"d-icon\",[\"exclamation-triangle\"],null],false],[0,\" \"],[1,[28,\"i18n\",[\"admin.customize.theme.repo_unreachable\"],null],false],[0,\"\\n            \"],[9],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"raw-error\"],[8],[0,\"\\n              \"],[7,\"code\",true],[8],[1,[24,[\"model\",\"remoteError\"]],false],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"remote_theme\",\"commits_behind\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"d-button\",null,[[\"action\",\"icon\",\"class\",\"label\"],[[28,\"action\",[[23,0,[]],\"updateToLatest\"],null],\"download\",\"btn-primary\",\"admin.customize.theme.update_to_latest\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"            \"],[1,[28,\"d-button\",null,[[\"action\",\"icon\",\"class\",\"label\"],[[28,\"action\",[[23,0,[]],\"checkForThemeUpdates\"],null],\"sync\",\"btn-default\",\"admin.customize.theme.check_for_updates\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n          \"],[7,\"span\",true],[10,\"class\",\"status-message\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"updatingRemote\"]]],null,{\"statements\":[[0,\"              \"],[1,[28,\"i18n\",[\"admin.customize.theme.updating\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"model\",\"remote_theme\",\"commits_behind\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"hasOverwrittenHistory\"]]],null,{\"statements\":[[0,\"                  \"],[1,[28,\"i18n\",[\"admin.customize.theme.has_overwritten_history\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                  \"],[1,[28,\"i18n\",[\"admin.customize.theme.commits_behind\"],[[\"count\"],[[24,[\"model\",\"remote_theme\",\"commits_behind\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[4,\"if\",[[24,[\"model\",\"remote_theme\",\"github_diff_link\"]]],null,{\"statements\":[[0,\"                  \"],[7,\"a\",true],[11,\"href\",[24,[\"model\",\"remote_theme\",\"github_diff_link\"]]],[8],[0,\"\\n                    \"],[1,[28,\"i18n\",[\"admin.customize.theme.compare_commits\"],null],false],[0,\"\\n                  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[4,\"unless\",[[24,[\"showRemoteError\"]]],null,{\"statements\":[[0,\"                  \"],[1,[28,\"i18n\",[\"admin.customize.theme.up_to_date\"],null],false],[0,\" \"],[1,[28,\"format-date\",[[24,[\"model\",\"remote_theme\",\"updated_at\"]]],[[\"leaveAgo\"],[\"true\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}]],\"parameters\":[]}],[0,\"          \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[7,\"span\",true],[10,\"class\",\"status-message\"],[8],[0,\"\\n            \"],[1,[28,\"d-icon\",[\"info-circle\"],null],false],[0,\" \"],[1,[28,\"i18n\",[\"admin.customize.theme.imported_from_archive\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[7,\"span\",true],[10,\"class\",\"heading\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.creator\"],null],false],[9],[0,\"\\n      \"],[7,\"span\",true],[8],[0,\"\\n\"],[4,\"user-link\",null,[[\"user\"],[[24,[\"model\",\"user\"]]]],{\"statements\":[[0,\"          \"],[1,[28,\"format-username\",[[24,[\"model\",\"user\",\"username\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"showCheckboxes\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"control-unit\"],[8],[0,\"\\n\"],[4,\"unless\",[[24,[\"model\",\"component\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"inline-edit-checkbox\",null,[[\"action\",\"labelKey\",\"checked\",\"modelId\"],[[28,\"action\",[[23,0,[]],\"applyDefault\"],null],\"admin.customize.theme.is_default\",[24,[\"model\",\"default\"]],[24,[\"model\",\"id\"]]]]],false],[0,\"\\n        \"],[1,[28,\"inline-edit-checkbox\",null,[[\"action\",\"labelKey\",\"checked\",\"modelId\"],[[28,\"action\",[[23,0,[]],\"applyUserSelectable\"],null],\"admin.customize.theme.user_selectable\",[24,[\"model\",\"user_selectable\"]],[24,[\"model\",\"id\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"model\",\"remote_theme\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"inline-edit-checkbox\",null,[[\"action\",\"labelKey\",\"checked\",\"modelId\"],[[28,\"action\",[[23,0,[]],\"applyAutoUpdateable\"],null],\"admin.customize.theme.auto_update\",[24,[\"model\",\"auto_update\"]],[24,[\"model\",\"id\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"unless\",[[24,[\"model\",\"component\"]]],null,{\"statements\":[[4,\"d-section\",null,[[\"class\"],[\"form-horizontal theme settings control-unit\"]],{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"row setting\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"setting-label\"],[8],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.customize.theme.color_scheme\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"setting-value\"],[8],[0,\"\\n          \"],[1,[28,\"color-palettes\",null,[[\"content\",\"filterable\",\"forceEscape\",\"value\",\"icon\"],[[24,[\"colorSchemes\"]],true,true,[24,[\"colorSchemeId\"]],\"paint-brush\"]]],false],[0,\"\\n\\n          \"],[7,\"div\",true],[10,\"class\",\"desc\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.color_scheme_select\"],null],false],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"setting-controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"colorSchemeChanged\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"icon\"],[[28,\"action\",[[23,0,[]],\"changeScheme\"],null],\"ok submit-edit\",\"check\"]]],false],[0,\"\\n            \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"icon\"],[[28,\"action\",[[23,0,[]],\"cancelChangeScheme\"],null],\"cancel cancel-edit\",\"times\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"parentThemes\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"control-unit\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"mini-title\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.component_of\"],null],false],[9],[0,\"\\n      \"],[7,\"ul\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"parentThemes\"]]],null,{\"statements\":[[0,\"          \"],[7,\"li\",true],[8],[4,\"link-to\",null,[[\"replace\",\"route\",\"model\"],[true,\"adminCustomizeThemes.show\",[23,6,[]]]],{\"statements\":[[1,[23,6,[\"name\"]],false]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"parameters\":[6]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"component\"]]],null,{\"statements\":[[4,\"d-section\",null,[[\"class\"],[\"form-horizontal theme settings control-unit\"]],{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"row setting\"],[8],[0,\"\\n        \"],[1,[28,\"theme-setting-relatives-selector\",null,[[\"setting\",\"model\",\"class\"],[[24,[\"relativesSelectorSettingsForComponent\"]],[24,[\"model\"]],\"theme-setting\"]]],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[4,\"d-section\",null,[[\"class\"],[\"form-horizontal theme settings control-unit\"]],{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"row setting\"],[8],[0,\"\\n        \"],[1,[28,\"theme-setting-relatives-selector\",null,[[\"setting\",\"model\",\"class\"],[[24,[\"relativesSelectorSettingsForTheme\"]],[24,[\"model\"]],\"theme-setting\"]]],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"\\n\"],[4,\"unless\",[[24,[\"model\",\"remote_theme\",\"is_git\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"control-unit\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"mini-title\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.css_html\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"hasEditedFields\"]]],null,{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"description\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.custom_sections\"],null],false],[9],[0,\"\\n        \"],[7,\"ul\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"editedFieldsFormatted\"]]],null,{\"statements\":[[0,\"            \"],[7,\"li\",true],[8],[1,[23,5,[]],false],[9],[0,\"\\n\"]],\"parameters\":[5]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"description\"],[8],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.customize.theme.edit_css_html_help\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n      \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"label\"],[\"btn-default edit\",[28,\"action\",[[23,0,[]],\"editTheme\"],null],\"admin.customize.theme.edit_css_html\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"control-unit\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"mini-title\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.uploads\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"uploads\"]]],null,{\"statements\":[[0,\"        \"],[7,\"ul\",true],[10,\"class\",\"removable-list\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\",\"uploads\"]]],null,{\"statements\":[[0,\"            \"],[7,\"li\",true],[8],[0,\"\\n              \"],[7,\"span\",true],[10,\"class\",\"col\"],[8],[0,\"$\"],[1,[23,4,[\"name\"]],false],[0,\": \"],[7,\"a\",true],[11,\"href\",[23,4,[\"url\"]]],[10,\"rel\",\"noopener noreferrer\"],[10,\"target\",\"_blank\"],[8],[1,[23,4,[\"filename\"]],false],[9],[9],[0,\"\\n              \"],[7,\"span\",true],[10,\"class\",\"col\"],[8],[0,\"\\n                \"],[1,[28,\"d-button\",null,[[\"action\",\"actionParam\",\"class\",\"icon\"],[[28,\"action\",[[23,0,[]],\"removeUpload\"],null],[23,4,[]],\"second btn-default btn-default cancel-edit\",\"times\"]]],false],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[4]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"description\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.no_uploads\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"icon\",\"label\"],[[28,\"action\",[[23,0,[]],\"addUploadModal\"],null],\"btn-default\",\"plus\",\"admin.customize.theme.add\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"extraFiles\",\"length\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"control-unit\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"mini-title\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.extra_files\"],null],false],[9],[0,\"\\n      \"],[7,\"details\",true],[8],[0,\"\\n        \"],[7,\"summary\",true],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"remote_theme\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"i18n\",[\"admin.customize.theme.extra_files_remote\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"            \"],[1,[28,\"i18n\",[\"admin.customize.theme.extra_files_upload\"],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"        \"],[9],[0,\"\\n        \"],[7,\"ul\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"extraFiles\"]]],null,{\"statements\":[[0,\"            \"],[7,\"li\",true],[8],[1,[23,3,[\"name\"]],false],[9],[0,\"\\n\"]],\"parameters\":[3]},null],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"hasSettings\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"control-unit\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"mini-title\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.theme_settings\"],null],false],[9],[0,\"\\n\"],[4,\"d-section\",null,[[\"class\"],[\"form-horizontal theme settings control-unit\"]],{\"statements\":[[4,\"each\",[[24,[\"settings\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"theme-setting-editor\",null,[[\"setting\",\"model\",\"class\"],[[23,2,[]],[24,[\"model\"]],\"theme-setting control-unit\"]]],false],[0,\"\\n\"]],\"parameters\":[2]},null]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"hasTranslations\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"control-unit\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"mini-title\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.theme_translations\"],null],false],[9],[0,\"\\n\"],[4,\"d-section\",null,[[\"class\"],[\"form-horizontal theme settings translations control-unit\"]],{\"statements\":[[4,\"each\",[[24,[\"translations\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"theme-translation\",null,[[\"translation\",\"model\",\"class\"],[[23,1,[]],[24,[\"model\"]],\"theme-translation\"]]],false],[0,\"\\n\"]],\"parameters\":[1]},null]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"theme-controls\"],[8],[0,\"\\n\\n    \"],[7,\"a\",true],[11,\"href\",[22,\"previewUrl\"]],[11,\"title\",[28,\"i18n\",[\"admin.customize.explain_preview\"],null]],[10,\"rel\",\"noopener noreferrer\"],[10,\"target\",\"_blank\"],[10,\"class\",\"btn btn-default\"],[8],[1,[28,\"d-icon\",[\"desktop\"],null],false],[1,[28,\"i18n\",[\"admin.customize.theme.preview\"],null],false],[9],[0,\"\\n    \"],[7,\"a\",true],[10,\"class\",\"btn btn-default export\"],[10,\"rel\",\"noopener noreferrer\"],[10,\"target\",\"_blank\"],[11,\"href\",[22,\"downloadUrl\"]],[8],[1,[28,\"d-icon\",[\"download\"],null],false],[0,\" \"],[1,[28,\"i18n\",[\"admin.export_json.button_text\"],null],false],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"showConvert\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"d-button\",null,[[\"action\",\"label\",\"icon\",\"class\",\"title\"],[[28,\"action\",[[23,0,[]],\"switchType\"],null],\"admin.customize.theme.convert\",[24,[\"convertIcon\"]],\"btn-default btn-normal\",[24,[\"convertTooltip\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"component\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"model\",\"enabled\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"disableComponent\"],null],\"ban\",\"admin.customize.theme.disable\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"enableComponent\"],null],\"check\",\"admin.customize.theme.enable\"]]],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"action\",\"label\",\"icon\",\"class\"],[[28,\"action\",[[23,0,[]],\"destroy\"],null],\"admin.customize.delete\",\"trash-alt\",\"btn-danger\"]]],false],[0,\"\\n\\n  \"],[9],[0,\"\\n\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/customize-themes-show"}});
Ember.TEMPLATES["admin/templates/customize-themes"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"unless\",[[24,[\"editingTheme\"]]],null,{\"statements\":[[0,\"  \"],[1,[28,\"themes-list\",null,[[\"themes\",\"components\",\"currentTab\",\"installModal\"],[[24,[\"fullThemes\"]],[24,[\"childThemes\"]],[24,[\"currentTab\"]],[28,\"route-action\",[\"installModal\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/customize-themes"}});
Ember.TEMPLATES["admin/templates/customize"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"admin-nav\",null,null,{\"statements\":[[4,\"if\",[[24,[\"currentUser\",\"admin\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\",\"class\"],[\"adminCustomizeThemes\",\"admin.customize.theme.title\",\"admin-customize-themes\"]]],false],[0,\"\\n    \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\",\"class\"],[\"adminCustomize.colors\",\"admin.customize.colors.title\",\"admin-customize-colors\"]]],false],[0,\"\\n    \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\",\"class\"],[\"adminSiteText\",\"admin.site_text.title\",\"admin-customize-site-text\"]]],false],[0,\"\\n    \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\",\"class\"],[\"adminCustomizeEmailTemplates\",\"admin.customize.email_templates.title\",\"admin-customize-email-templates\"]]],false],[0,\"\\n    \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\",\"class\"],[\"adminCustomizeEmailStyle\",\"admin.customize.email_style.title\",\"admin-customize-email-styles\"]]],false],[0,\"\\n    \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\",\"class\"],[\"adminUserFields\",\"admin.user_fields.title\",\"admin-customize-user-fields\"]]],false],[0,\"\\n    \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\",\"class\"],[\"adminEmojis\",\"admin.emoji.title\",\"admin-customize-emojis\"]]],false],[0,\"\\n    \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\",\"class\"],[\"adminPermalinks\",\"admin.permalink.title\",\"admin-customize-permalinks\"]]],false],[0,\"\\n    \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\",\"class\"],[\"adminEmbedding\",\"admin.embedding.title\",\"admin-customize-embedding\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\",\"class\"],[\"adminWatchedWords\",\"admin.watched_words.title\",\"admin-customize-watched-words\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"admin-container\"],[8],[0,\"\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/customize"}});
Ember.TEMPLATES["admin/templates/dashboard"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"plugin-outlet\",null,[[\"name\"],[\"admin-dashboard-top\"]]],false],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"showVersionChecks\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"section-top\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"version-checks\"],[8],[0,\"\\n      \"],[1,[28,\"version-checks\",null,[[\"versionCheck\",\"tagName\"],[[24,[\"versionCheck\"]],\"\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"dashboard-problems\",null,[[\"loadingProblems\",\"foundProblems\",\"problems\",\"problemsTimestamp\",\"refreshProblems\"],[[24,[\"loadingProblems\"]],[24,[\"foundProblems\"]],[24,[\"problems\"]],[24,[\"problemsTimestamp\"]],[28,\"action\",[[23,0,[]],\"refreshProblems\"],null]]]],false],[0,\"\\n\\n\"],[7,\"ul\",true],[10,\"class\",\"navigation\"],[8],[0,\"\\n  \"],[7,\"li\",true],[10,\"class\",\"navigation-item general\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"route\"],[\"navigation-link\",\"admin.dashboard.general\"]],{\"statements\":[[0,\"      \"],[1,[28,\"i18n\",[\"admin.dashboard.general_tab\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"isModerationTabVisible\"]]],null,{\"statements\":[[0,\"    \"],[7,\"li\",true],[10,\"class\",\"navigation-item moderation\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"route\"],[\"navigation-link\",\"admin.dashboardModeration\"]],{\"statements\":[[0,\"        \"],[1,[28,\"i18n\",[\"admin.dashboard.moderation_tab\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"isSecurityTabVisible\"]]],null,{\"statements\":[[0,\"    \"],[7,\"li\",true],[10,\"class\",\"navigation-item security\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"route\"],[\"navigation-link\",\"admin.dashboardSecurity\"]],{\"statements\":[[0,\"        \"],[1,[28,\"i18n\",[\"admin.dashboard.security_tab\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"isReportsTabVisible\"]]],null,{\"statements\":[[0,\"    \"],[7,\"li\",true],[10,\"class\",\"navigation-item reports\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"route\"],[\"navigation-link\",\"admin.dashboardReports\"]],{\"statements\":[[0,\"        \"],[1,[28,\"i18n\",[\"admin.dashboard.reports_tab\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\\n\"],[1,[22,\"outlet\"],false],[0,\"\\n\\n\"],[1,[28,\"dashboard-new-features\",null,[[\"tagName\"],[\"div\"]]],false],[0,\"\\n\\n\"],[1,[28,\"plugin-outlet\",null,[[\"name\"],[\"admin-dashboard-bottom\"]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/dashboard"}});
Ember.TEMPLATES["admin/templates/dashboard_general"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"metric\"],\"statements\":[[4,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"isLoading\"]]]],{\"statements\":[[0,\"  \"],[1,[28,\"plugin-outlet\",null,[[\"name\"],[\"admin-dashboard-general-top\"]]],false],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"isCommunityHealthVisible\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"community-health section\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"period-section\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"section-title\"],[8],[0,\"\\n          \"],[7,\"h2\",true],[8],[0,\"\\n            \"],[7,\"a\",true],[11,\"href\",[28,\"get-url\",[\"/admin/dashboard/reports\"],null]],[8],[0,\"\\n              \"],[1,[28,\"i18n\",[\"admin.dashboard.community_health\"],null],false],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n          \"],[1,[28,\"period-chooser\",null,[[\"period\",\"action\",\"content\",\"fullDay\"],[[24,[\"period\"]],[28,\"action\",[[23,0,[]],\"changePeriod\"],null],[24,[\"availablePeriods\"]],false]]],false],[0,\"\\n        \"],[9],[0,\"\\n\\n        \"],[7,\"div\",true],[10,\"class\",\"section-body\"],[8],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"charts\"],[8],[0,\"\\n            \"],[1,[28,\"admin-report\",null,[[\"dataSourceName\",\"forcedModes\",\"filters\"],[\"consolidated_page_views\",\"stacked-chart\",[24,[\"filters\"]]]]],false],[0,\"\\n\\n            \"],[1,[28,\"admin-report\",null,[[\"dataSourceName\",\"showTrend\",\"forcedModes\",\"filters\"],[\"signups\",true,\"chart\",[24,[\"filters\"]]]]],false],[0,\"\\n\\n            \"],[1,[28,\"admin-report\",null,[[\"dataSourceName\",\"showTrend\",\"forcedModes\",\"filters\"],[\"topics\",true,\"chart\",[24,[\"filters\"]]]]],false],[0,\"\\n\\n            \"],[1,[28,\"admin-report\",null,[[\"dataSourceName\",\"showTrend\",\"forcedModes\",\"filters\"],[\"posts\",true,\"chart\",[24,[\"filters\"]]]]],false],[0,\"\\n\\n            \"],[1,[28,\"admin-report\",null,[[\"dataSourceName\",\"showTrend\",\"forcedModes\",\"filters\"],[\"dau_by_mau\",true,\"chart\",[24,[\"filters\"]]]]],false],[0,\"\\n\\n            \"],[1,[28,\"admin-report\",null,[[\"dataSourceName\",\"showTrend\",\"forcedModes\",\"filters\"],[\"daily_engaged_users\",true,\"chart\",[24,[\"filters\"]]]]],false],[0,\"\\n\\n            \"],[1,[28,\"admin-report\",null,[[\"dataSourceName\",\"showTrend\",\"forcedModes\",\"filters\"],[\"new_contributors\",true,\"chart\",[24,[\"filters\"]]]]],false],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"section-columns\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"section-column\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"isActivityMetricsVisible\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"activityMetrics\",\"length\"]]],null,{\"statements\":[[0,\"          \"],[7,\"div\",true],[10,\"class\",\"admin-report activity-metrics\"],[8],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"header\"],[8],[0,\"\\n              \"],[7,\"ul\",true],[10,\"class\",\"breadcrumb\"],[8],[0,\"\\n                \"],[7,\"li\",true],[10,\"class\",\"item report\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"route\"],[\"report-url\",\"adminReports\"]],{\"statements\":[[0,\"                    \"],[1,[28,\"i18n\",[\"admin.dashboard.activity_metrics\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"report-body\"],[8],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"counters-list\"],[8],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"counters-header\"],[8],[0,\"\\n                  \"],[7,\"div\",true],[10,\"class\",\"counters-cell\"],[8],[9],[0,\"\\n                  \"],[7,\"div\",true],[10,\"class\",\"counters-cell\"],[8],[1,[28,\"i18n\",[\"admin.dashboard.reports.today\"],null],false],[9],[0,\"\\n                  \"],[7,\"div\",true],[10,\"class\",\"counters-cell\"],[8],[1,[28,\"i18n\",[\"admin.dashboard.reports.yesterday\"],null],false],[9],[0,\"\\n                  \"],[7,\"div\",true],[10,\"class\",\"counters-cell\"],[8],[1,[28,\"i18n\",[\"admin.dashboard.reports.last_7_days\"],null],false],[9],[0,\"\\n                  \"],[7,\"div\",true],[10,\"class\",\"counters-cell\"],[8],[1,[28,\"i18n\",[\"admin.dashboard.reports.last_30_days\"],null],false],[9],[0,\"\\n                \"],[9],[0,\"\\n\\n\"],[4,\"each\",[[24,[\"activityMetrics\"]]],null,{\"statements\":[[0,\"                  \"],[1,[28,\"admin-report\",null,[[\"showHeader\",\"filters\",\"forcedModes\",\"dataSourceName\"],[false,[24,[\"activityMetricsFilters\"]],\"counters\",[23,1,[]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"user-metrics\"],[8],[0,\"\\n\"],[4,\"conditional-loading-section\",null,[[\"isLoading\"],[[24,[\"isLoading\"]]]],{\"statements\":[[0,\"          \"],[1,[28,\"admin-report\",null,[[\"forcedModes\",\"dataSourceName\"],[\"inline-table\",\"users_by_type\"]]],false],[0,\"\\n\\n          \"],[1,[28,\"admin-report\",null,[[\"forcedModes\",\"dataSourceName\"],[\"inline-table\",\"users_by_trust_level\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n\\n      \"],[7,\"div\",true],[10,\"class\",\"misc\"],[8],[0,\"\\n        \"],[1,[28,\"admin-report\",null,[[\"forcedModes\",\"dataSourceName\",\"showHeader\"],[\"storage-stats\",\"storage_stats\",false]]],false],[0,\"\\n\\n        \"],[7,\"div\",true],[10,\"class\",\"last-dashboard-update\"],[8],[0,\"\\n          \"],[7,\"div\",true],[8],[0,\"\\n            \"],[7,\"h4\",true],[8],[1,[28,\"i18n\",[\"admin.dashboard.last_updated\"],null],false],[0,\" \"],[9],[0,\"\\n            \"],[7,\"p\",true],[8],[1,[28,\"format-date\",[[24,[\"model\",\"attributes\",\"updated_at\"]]],[[\"leaveAgo\"],[\"true\"]]],false],[9],[0,\"\\n          \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"attributes\",\"discourse_updated_at\"]]],null,{\"statements\":[[0,\"            \"],[7,\"div\",true],[8],[0,\"\\n              \"],[7,\"h4\",true],[8],[1,[28,\"i18n\",[\"admin.dashboard.discourse_last_updated\"],null],false],[0,\" \"],[9],[0,\"\\n              \"],[7,\"p\",true],[8],[1,[28,\"format-date\",[[24,[\"model\",\"attributes\",\"discourse_updated_at\"]]],[[\"leaveAgo\"],[\"true\"]]],false],[9],[0,\"\\n              \"],[7,\"a\",true],[10,\"rel\",\"noopener noreferrer\"],[10,\"target\",\"_blank\"],[11,\"href\",[24,[\"model\",\"attributes\",\"release_notes_link\"]]],[10,\"class\",\"btn btn-default\"],[8],[0,\"\\n                \"],[1,[28,\"i18n\",[\"admin.dashboard.whats_new_in_discourse\"],null],false],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"isSearchReportsVisible\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"section-column\"],[8],[0,\"\\n        \"],[1,[28,\"admin-report\",null,[[\"filters\",\"dataSourceName\",\"reportOptions\"],[[24,[\"topReferredTopicsFilters\"]],\"top_referred_topics\",[24,[\"topReferredTopicsOptions\"]]]]],false],[0,\"\\n\\n        \"],[1,[28,\"admin-report\",null,[[\"dataSourceName\",\"reportOptions\",\"filters\",\"isEnabled\",\"disabledLabel\"],[\"trending_search\",[24,[\"trendingSearchOptions\"]],[24,[\"trendingSearchFilters\"]],[24,[\"logSearchQueriesEnabled\"]],[24,[\"trendingSearchDisabledLabel\"]]]]],false],[0,\"\\n        \"],[1,[28,\"html-safe\",[[28,\"i18n\",[\"admin.dashboard.reports.trending_search.more\"],[[\"basePath\"],[[28,\"base-path\",null,null]]]]],null],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\\n  \"],[1,[28,\"plugin-outlet\",null,[[\"name\"],[\"admin-dashboard-general-bottom\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/dashboard_general"}});
Ember.TEMPLATES["admin/templates/dashboard_moderation"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"sections\"],[8],[0,\"\\n  \"],[1,[28,\"plugin-outlet\",null,[[\"name\"],[\"admin-dashboard-moderation-top\"]]],false],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"isModeratorsActivityVisible\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"moderators-activity section\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"section-title\"],[8],[0,\"\\n        \"],[7,\"h2\",true],[8],[0,\"\\n          \"],[7,\"a\",true],[11,\"href\",[28,\"get-url\",[\"/admin/reports/moderators_activity\"],null]],[8],[0,\"\\n            \"],[1,[28,\"i18n\",[\"admin.dashboard.moderators_activity\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[1,[28,\"period-chooser\",null,[[\"period\",\"action\",\"content\",\"fullDay\"],[[24,[\"period\"]],[28,\"action\",[[23,0,[]],\"changePeriod\"],null],[24,[\"availablePeriods\"]],false]]],false],[0,\"\\n      \"],[9],[0,\"\\n\\n      \"],[7,\"div\",true],[10,\"class\",\"section-body\"],[8],[0,\"\\n        \"],[1,[28,\"admin-report\",null,[[\"filters\",\"showHeader\",\"dataSourceName\"],[[24,[\"filters\"]],false,\"moderators_activity\"]]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"main-section\"],[8],[0,\"\\n    \"],[1,[28,\"admin-report\",null,[[\"dataSourceName\",\"reportOptions\",\"filters\"],[\"flags_status\",[24,[\"flagsStatusOptions\"]],[24,[\"lastWeekfilters\"]]]]],false],[0,\"\\n\\n    \"],[1,[28,\"admin-report\",null,[[\"dataSourceName\",\"filters\"],[\"post_edits\",[24,[\"lastWeekfilters\"]]]]],false],[0,\"\\n\\n    \"],[1,[28,\"admin-report\",null,[[\"dataSourceName\",\"filters\",\"reportOptions\"],[\"user_flagging_ratio\",[24,[\"lastWeekfilters\"]],[24,[\"userFlaggingRatioOptions\"]]]]],false],[0,\"\\n\\n    \"],[1,[28,\"plugin-outlet\",null,[[\"name\"],[\"admin-dashboard-moderation-bottom\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/dashboard_moderation"}});
Ember.TEMPLATES["admin/templates/dashboard_reports"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"report\"],\"statements\":[[4,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"isLoading\"]]]],{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"reports-index section\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"section-title\"],[8],[0,\"\\n      \"],[7,\"h2\",true],[8],[1,[28,\"i18n\",[\"admin.reports.title\"],null],false],[9],[0,\"\\n      \"],[1,[28,\"input\",null,[[\"class\",\"input\",\"placeholder\",\"autofocus\"],[\"filter-reports-input\",[28,\"action\",[[23,0,[]],\"filterReports\"],[[\"value\"],[\"target.value\"]]],[28,\"i18n\",[\"admin.dashboard.filter_reports\"],null],true]]],false],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"ul\",true],[10,\"class\",\"reports-list\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"filterReports\"]]],null,{\"statements\":[[0,\"        \"],[7,\"li\",true],[10,\"class\",\"report\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminReports.show\",[23,1,[\"type\"]]]],{\"statements\":[[0,\"            \"],[7,\"h3\",true],[10,\"class\",\"report-title\"],[8],[1,[23,1,[\"title\"]],false],[9],[0,\"\\n\"],[4,\"if\",[[23,1,[\"description\"]]],null,{\"statements\":[[0,\"              \"],[7,\"p\",true],[10,\"class\",\"report-description\"],[8],[0,\"\\n                \"],[1,[23,1,[\"description\"]],false],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/dashboard_reports"}});
Ember.TEMPLATES["admin/templates/dashboard_security"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"sections\"],[8],[0,\"\\n  \"],[1,[28,\"plugin-outlet\",null,[[\"name\"],[\"admin-dashboard-security-top\"]]],false],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"main-section\"],[8],[0,\"\\n    \"],[1,[28,\"admin-report\",null,[[\"dataSourceName\",\"filters\"],[\"suspicious_logins\",[24,[\"lastWeekfilters\"]]]]],false],[0,\"\\n\\n    \"],[1,[28,\"admin-report\",null,[[\"dataSourceName\",\"filters\"],[\"staff_logins\",[24,[\"lastWeekfilters\"]]]]],false],[0,\"\\n\\n    \"],[1,[28,\"plugin-outlet\",null,[[\"name\"],[\"admin-dashboard-security-bottom\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/dashboard_security"}});
Ember.TEMPLATES["admin/templates/email-advanced-test"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.email.advanced_test.desc\"],null],false],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"email-advanced-test\"],[8],[0,\"\\n  \"],[7,\"label\",true],[10,\"for\",\"email\"],[8],[1,[28,\"i18n\",[\"admin.email.advanced_test.email\"],null],false],[9],[0,\"\\n  \"],[1,[28,\"textarea\",null,[[\"name\",\"value\",\"class\"],[\"email\",[24,[\"email\"]],\"email-body\"]]],false],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"action\",\"label\"],[[28,\"action\",[[23,0,[]],\"run\"],null],\"admin.email.advanced_test.run\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"loading\"]]]],{\"statements\":[[4,\"if\",[[24,[\"format\"]]],null,{\"statements\":[[0,\"    \"],[7,\"hr\",true],[8],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"text\"],[8],[0,\"\\n      \"],[7,\"h3\",true],[8],[1,[28,\"i18n\",[\"admin.email.advanced_test.text\"],null],false],[9],[0,\"\\n      \"],[7,\"pre\",true],[10,\"class\",\"full-reason\"],[8],[1,[28,\"html-safe\",[[24,[\"text\"]]],null],false],[9],[0,\"    \"],[9],[0,\"\\n    \"],[7,\"hr\",true],[8],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"elided\"],[8],[0,\"\\n      \"],[7,\"h3\",true],[8],[1,[28,\"i18n\",[\"admin.email.advanced_test.elided\"],null],false],[9],[0,\"\\n      \"],[7,\"pre\",true],[10,\"class\",\"full-reason\"],[8],[1,[28,\"html-safe\",[[24,[\"elided\"]]],null],false],[9],[0,\"    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/email-advanced-test"}});
Ember.TEMPLATES["admin/templates/email-bounced"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"l\"],\"statements\":[[4,\"load-more\",null,[[\"selector\",\"action\"],[\".email-list tr\",[28,\"action\",[[23,0,[]],\"loadMore\"],null]]],{\"statements\":[[0,\"  \"],[7,\"table\",true],[10,\"class\",\"table email-list\"],[8],[0,\"\\n    \"],[7,\"thead\",true],[8],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.time\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.user\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.to_address\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.email_type\"],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"tbody\",true],[8],[0,\"\\n      \"],[7,\"tr\",true],[10,\"class\",\"filters\"],[8],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"i18n\",[\"admin.email.logs.filters.title\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\"],[[24,[\"filter\",\"user\"]],\"admin.email.logs.filters.user_placeholder\"]]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\"],[[24,[\"filter\",\"address\"]],\"admin.email.logs.filters.address_placeholder\"]]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\"],[[24,[\"filter\",\"type\"]],\"admin.email.logs.filters.type_placeholder\"]]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"        \"],[7,\"tr\",true],[8],[0,\"\\n          \"],[7,\"td\",true],[8],[1,[28,\"format-date\",[[23,1,[\"created_at\"]]],null],false],[9],[0,\"\\n          \"],[7,\"td\",true],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"user\"]]],null,{\"statements\":[[0,\"              \"],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[23,1,[\"user\"]]]],{\"statements\":[[1,[28,\"avatar\",[[23,1,[\"user\"]]],[[\"imageSize\"],[\"tiny\"]]],false]],\"parameters\":[]},null],[0,\"\\n              \"],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[23,1,[\"user\"]]]],{\"statements\":[[1,[23,1,[\"user\",\"username\"]],false]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"              —\\n\"]],\"parameters\":[]}],[0,\"          \"],[9],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"email-address\"],[8],[7,\"a\",true],[11,\"href\",[29,[\"mailto:\",[23,1,[\"to_address\"]]]]],[8],[1,[23,1,[\"to_address\"]],false],[9],[9],[0,\"\\n\"],[4,\"if\",[[23,1,[\"has_bounce_key\"]]],null,{\"statements\":[[0,\"            \"],[7,\"td\",true],[8],[7,\"a\",false],[12,\"href\",\"\"],[3,\"action\",[[23,0,[]],\"showIncomingEmail\",[23,1,[\"id\"]]]],[8],[1,[23,1,[\"email_type\"]],false],[9],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"            \"],[7,\"td\",true],[8],[1,[23,1,[\"email_type\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[1]},{\"statements\":[[4,\"unless\",[[24,[\"loading\"]]],null,{\"statements\":[[0,\"          \"],[7,\"tr\",true],[8],[7,\"td\",true],[10,\"colspan\",\"4\"],[8],[1,[28,\"i18n\",[\"admin.email.logs.none\"],null],false],[9],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"loading\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/email-bounced"}});
Ember.TEMPLATES["admin/templates/email-index"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"s\"],\"statements\":[[7,\"table\",true],[10,\"class\",\"table\"],[8],[0,\"\\n  \"],[7,\"tbody\",true],[8],[0,\"\\n    \"],[7,\"tr\",true],[8],[0,\"\\n      \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.delivery_method\"],null],false],[9],[0,\"\\n      \"],[7,\"td\",true],[8],[1,[22,\"delivery_method\"],false],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n\"],[4,\"each\",[[24,[\"model\",\"settings\"]]],null,{\"statements\":[[0,\"      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[10,\"style\",\"width: 25%\"],[8],[1,[23,1,[\"name\"]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[23,1,[\"value\"]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"form\",true],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"admin-controls\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"inline-form\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"sendingEmail\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"i18n\",[\"admin.email.sending_test\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\"],[[24,[\"testEmailAddress\"]],\"admin.email.test_email_address\"]]],false],[0,\"\\n          \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"disabled\",\"label\",\"type\"],[\"btn-primary\",[28,\"action\",[[23,0,[]],\"sendTestEmail\"],null],[24,[\"sendTestEmailDisabled\"]],\"admin.email.send_test\",\"submit\"]]],false],[0,\"\\n\"],[4,\"if\",[[24,[\"sentTestEmailMessage\"]]],null,{\"statements\":[[0,\"            \"],[7,\"span\",true],[10,\"class\",\"result-message\"],[8],[1,[22,\"sentTestEmailMessage\"],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/email-index"}});
Ember.TEMPLATES["admin/templates/email-preview-digest"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.email.preview_digest_desc\"],null],false],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"admin-controls email-preview\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"inline-form\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"for\",\"last-seen\"],[8],[1,[28,\"i18n\",[\"admin.email.last_seen_user\"],null],false],[9],[0,\"\\n      \"],[1,[28,\"date-picker-past\",null,[[\"value\",\"id\"],[[24,[\"lastSeen\"]],\"last-seen\"]]],false],[0,\"\\n      \"],[7,\"label\",true],[8],[1,[28,\"i18n\",[\"admin.email.user\"],null],false],[0,\":\"],[9],[0,\"\\n      \"],[1,[28,\"email-group-user-chooser\",null,[[\"value\",\"onChange\",\"options\"],[[24,[\"username\"]],[28,\"action\",[[23,0,[]],\"updateUsername\"],null],[28,\"hash\",null,[[\"maximum\"],[1]]]]]],false],[0,\"\\n      \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"label\"],[\"btn-primary digest-refresh-button\",[28,\"action\",[[23,0,[]],\"refresh\"],null],\"admin.email.refresh\"]]],false],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"toggle\"],[8],[0,\"\\n        \"],[7,\"label\",true],[8],[1,[28,\"i18n\",[\"admin.email.format\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"showHtml\"]]],null,{\"statements\":[[0,\"          \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"admin.email.html\"],null],false],[9],[0,\"\\n          |\\n          \"],[7,\"a\",false],[12,\"href\",\"\"],[3,\"action\",[[23,0,[]],\"toggleShowHtml\"]],[8],[0,\"\\n            \"],[1,[28,\"i18n\",[\"admin.email.text\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[7,\"a\",false],[12,\"href\",\"\"],[3,\"action\",[[23,0,[]],\"toggleShowHtml\"]],[8],[1,[28,\"i18n\",[\"admin.email.html\"],null],false],[9],[0,\" |\\n          \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"admin.email.text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"loading\"]]]],{\"statements\":[[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"email-preview-digest\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"showSendEmailForm\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"inline-form\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"sendingEmail\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"i18n\",[\"admin.email.sending_test\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"            \"],[7,\"label\",true],[8],[1,[28,\"i18n\",[\"admin.email.send_digest_label\"],null],false],[9],[0,\"\\n            \"],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\"],[[24,[\"email\"]],\"admin.email.test_email_address\"]]],false],[0,\"\\n            \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"disabled\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"sendEmail\"],null],[24,[\"sendEmailDisabled\"]],\"admin.email.send_digest\"]]],false],[0,\"\\n\"],[4,\"if\",[[24,[\"sentEmail\"]]],null,{\"statements\":[[0,\"              \"],[7,\"span\",true],[10,\"class\",\"result-message\"],[8],[1,[28,\"i18n\",[\"admin.email.sent_test\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"preview-output\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"showHtml\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"htmlEmpty\"]]],null,{\"statements\":[[0,\"          \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.email.no_result\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[7,\"iframe\",true],[11,\"title\",[28,\"i18n\",[\"admin.email.html_preview\"],null]],[11,\"srcdoc\",[24,[\"model\",\"html_content\"]]],[8],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[7,\"pre\",true],[8],[1,[28,\"html-safe\",[[24,[\"model\",\"text_content\"]]],null],false],[9],[0,\"\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/email-preview-digest"}});
Ember.TEMPLATES["admin/templates/email-received"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"email\",\"cc\",\"to\"],\"statements\":[[4,\"load-more\",null,[[\"selector\",\"action\"],[\".email-list tr\",[28,\"action\",[[23,0,[]],\"loadMore\"],null]]],{\"statements\":[[0,\"  \"],[7,\"table\",true],[10,\"class\",\"table email-list\"],[8],[0,\"\\n    \"],[7,\"thead\",true],[8],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.time\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.incoming_emails.from_address\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.incoming_emails.to_addresses\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.incoming_emails.subject\"],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"tbody\",true],[8],[0,\"\\n      \"],[7,\"tr\",true],[10,\"class\",\"filters\"],[8],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"i18n\",[\"admin.email.logs.filters.title\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\"],[[24,[\"filter\",\"from\"]],\"admin.email.incoming_emails.filters.from_placeholder\"]]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\"],[[24,[\"filter\",\"to\"]],\"admin.email.incoming_emails.filters.to_placeholder\"]]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\"],[[24,[\"filter\",\"subject\"]],\"admin.email.incoming_emails.filters.subject_placeholder\"]]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"        \"],[7,\"tr\",true],[8],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"time\"],[8],[1,[28,\"format-date\",[[23,1,[\"created_at\"]]],null],false],[9],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"username\"],[8],[0,\"\\n            \"],[7,\"div\",true],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"user\"]]],null,{\"statements\":[[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[23,1,[\"user\"]]]],{\"statements\":[[0,\"                  \"],[1,[28,\"avatar\",[[23,1,[\"user\"]]],[[\"imageSize\"],[\"tiny\"]]],false],[0,\"\\n                  \"],[1,[23,1,[\"from_address\"]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"                —\\n\"]],\"parameters\":[]}],[0,\"            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"addresses\"],[8],[0,\"\\n\"],[4,\"each\",[[23,1,[\"to_addresses\"]]],null,{\"statements\":[[0,\"              \"],[7,\"p\",true],[8],[7,\"a\",true],[11,\"href\",[29,[\"mailto:\",[23,3,[]]]]],[10,\"title\",\"TO\"],[8],[1,[23,3,[]],false],[9],[9],[0,\"\\n\"]],\"parameters\":[3]},null],[4,\"each\",[[23,1,[\"cc_addresses\"]]],null,{\"statements\":[[0,\"              \"],[7,\"p\",true],[8],[7,\"a\",true],[11,\"href\",[29,[\"mailto:\",[23,2,[]]]]],[10,\"title\",\"CC\"],[8],[1,[23,2,[]],false],[9],[9],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"          \"],[9],[0,\"\\n          \"],[7,\"td\",true],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"post_url\"]]],null,{\"statements\":[[0,\"              \"],[7,\"a\",true],[11,\"href\",[23,1,[\"post_url\"]]],[8],[1,[23,1,[\"subject\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"              \"],[1,[23,1,[\"subject\"]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[1]},{\"statements\":[[0,\"        \"],[7,\"tr\",true],[8],[7,\"td\",true],[10,\"colspan\",\"4\"],[8],[1,[28,\"i18n\",[\"admin.email.incoming_emails.none\"],null],false],[9],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"loading\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/email-received"}});
Ember.TEMPLATES["admin/templates/email-rejected"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"email\",\"cc\",\"to\"],\"statements\":[[4,\"load-more\",null,[[\"selector\",\"action\"],[\".email-list tr\",[28,\"action\",[[23,0,[]],\"loadMore\"],null]]],{\"statements\":[[0,\"  \"],[7,\"table\",true],[10,\"class\",\"table email-list\"],[8],[0,\"\\n    \"],[7,\"thead\",true],[8],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.time\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.incoming_emails.from_address\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.incoming_emails.to_addresses\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.incoming_emails.subject\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.incoming_emails.error\"],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"tbody\",true],[8],[0,\"\\n      \"],[7,\"tr\",true],[10,\"class\",\"filters\"],[8],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"i18n\",[\"admin.email.logs.filters.title\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\"],[[24,[\"filter\",\"from\"]],\"admin.email.incoming_emails.filters.from_placeholder\"]]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\"],[[24,[\"filter\",\"to\"]],\"admin.email.incoming_emails.filters.to_placeholder\"]]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\"],[[24,[\"filter\",\"subject\"]],\"admin.email.incoming_emails.filters.subject_placeholder\"]]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\"],[[24,[\"filter\",\"error\"]],\"admin.email.incoming_emails.filters.error_placeholder\"]]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"        \"],[7,\"tr\",true],[8],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"time\"],[8],[1,[28,\"format-date\",[[23,1,[\"created_at\"]]],null],false],[9],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"username\"],[8],[0,\"\\n            \"],[7,\"div\",true],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"user\"]]],null,{\"statements\":[[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[23,1,[\"user\"]]]],{\"statements\":[[0,\"                  \"],[1,[28,\"avatar\",[[23,1,[\"user\"]]],[[\"imageSize\"],[\"tiny\"]]],false],[0,\"\\n                  \"],[1,[23,1,[\"from_address\"]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[23,1,[\"from_address\"]]],null,{\"statements\":[[0,\"                  \"],[7,\"a\",true],[11,\"href\",[29,[\"mailto:\",[23,1,[\"from_address\"]]]]],[8],[1,[23,1,[\"from_address\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                  —\\n\"]],\"parameters\":[]}]],\"parameters\":[]}],[0,\"            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"addresses\"],[8],[0,\"\\n\"],[4,\"each\",[[23,1,[\"to_addresses\"]]],null,{\"statements\":[[0,\"              \"],[7,\"p\",true],[8],[7,\"a\",true],[11,\"href\",[29,[\"mailto:\",[23,3,[]]]]],[10,\"title\",\"TO\"],[8],[1,[23,3,[]],false],[9],[9],[0,\"\\n\"]],\"parameters\":[3]},null],[4,\"each\",[[23,1,[\"cc_addresses\"]]],null,{\"statements\":[[0,\"              \"],[7,\"p\",true],[8],[7,\"a\",true],[11,\"href\",[29,[\"mailto:\",[23,2,[]]]]],[10,\"title\",\"CC\"],[8],[1,[23,2,[]],false],[9],[9],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"          \"],[9],[0,\"\\n          \"],[7,\"td\",true],[8],[1,[23,1,[\"subject\"]],false],[9],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"error\"],[8],[0,\"\\n            \"],[7,\"a\",false],[12,\"href\",\"\"],[3,\"action\",[[23,0,[]],\"showIncomingEmail\",[23,1,[\"id\"]]]],[8],[1,[23,1,[\"error\"]],false],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[1]},{\"statements\":[[0,\"        \"],[7,\"tr\",true],[8],[7,\"td\",true],[10,\"colspan\",\"5\"],[8],[1,[28,\"i18n\",[\"admin.email.incoming_emails.none\"],null],false],[9],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"loading\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/email-rejected"}});
Ember.TEMPLATES["admin/templates/email-sent"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"l\"],\"statements\":[[4,\"load-more\",null,[[\"selector\",\"action\"],[\".email-list tr\",[28,\"action\",[[23,0,[]],\"loadMore\"],null]]],{\"statements\":[[0,\"  \"],[7,\"table\",true],[10,\"class\",\"table email-list\"],[8],[0,\"\\n    \"],[7,\"thead\",true],[8],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.sent_at\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.user\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.to_address\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.email_type\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.reply_key\"],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"tbody\",true],[8],[0,\"\\n      \"],[7,\"tr\",true],[10,\"class\",\"filters\"],[8],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"i18n\",[\"admin.email.logs.filters.title\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\"],[[24,[\"filter\",\"user\"]],\"admin.email.logs.filters.user_placeholder\"]]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\"],[[24,[\"filter\",\"address\"]],\"admin.email.logs.filters.address_placeholder\"]]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\"],[[24,[\"filter\",\"type\"]],\"admin.email.logs.filters.type_placeholder\"]]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\"],[[24,[\"filter\",\"reply_key\"]],\"admin.email.logs.filters.reply_key_placeholder\"]]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"        \"],[7,\"tr\",true],[10,\"class\",\"sent-email-item\"],[8],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"sent-email-date\"],[8],[1,[28,\"format-date\",[[23,1,[\"created_at\"]]],null],false],[9],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"sent-email-username\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"user\"]]],null,{\"statements\":[[0,\"              \"],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[23,1,[\"user\"]]]],{\"statements\":[[1,[28,\"avatar\",[[23,1,[\"user\"]]],[[\"imageSize\"],[\"tiny\"]]],false]],\"parameters\":[]},null],[0,\"\\n              \"],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[23,1,[\"user\"]]]],{\"statements\":[[1,[23,1,[\"user\",\"username\"]],false]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"              —\\n\"]],\"parameters\":[]}],[0,\"          \"],[9],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"sent-email-address\"],[8],[0,\"\\n            \"],[4,\"if\",[[23,1,[\"bounced\"]]],null,{\"statements\":[[1,[28,\"d-icon\",[\"redo\"],[[\"title\"],[\"admin.email.bounced\"]]],false]],\"parameters\":[]},null],[0,\"\\n            \"],[7,\"a\",true],[11,\"href\",[29,[\"mailto:\",[23,1,[\"to_address\"]]]]],[8],[1,[23,1,[\"to_address\"]],false],[9],[0,\"\\n          \"],[9],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"sent-email-type\"],[8],[1,[23,1,[\"email_type\"]],false],[9],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"sent-email-post-link\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"post_url\"]]],null,{\"statements\":[[0,\"              \"],[7,\"a\",true],[11,\"href\",[23,1,[\"post_url\"]]],[8],[1,[23,1,[\"post_description\"]],false],[9],[0,\"\\n              \"],[7,\"span\",true],[10,\"class\",\"reply-key\"],[8],[1,[23,1,[\"reply_key\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"              \"],[7,\"span\",true],[10,\"class\",\"reply-key\"],[8],[1,[23,1,[\"reply_key\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[1]},{\"statements\":[[4,\"unless\",[[24,[\"loading\"]]],null,{\"statements\":[[0,\"          \"],[7,\"tr\",true],[8],[7,\"td\",true],[10,\"colspan\",\"5\"],[8],[1,[28,\"i18n\",[\"admin.email.logs.none\"],null],false],[9],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"loading\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/email-sent"}});
Ember.TEMPLATES["admin/templates/email-skipped"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"l\"],\"statements\":[[4,\"load-more\",null,[[\"selector\",\"action\"],[\".email-list tr\",[28,\"action\",[[23,0,[]],\"loadMore\"],null]]],{\"statements\":[[0,\"  \"],[7,\"table\",true],[10,\"class\",\"table email-list\"],[8],[0,\"\\n    \"],[7,\"thead\",true],[8],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.time\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.user\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.to_address\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.email_type\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.email.skipped_reason\"],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"tbody\",true],[8],[0,\"\\n      \"],[7,\"tr\",true],[10,\"class\",\"filters\"],[8],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"i18n\",[\"admin.email.logs.filters.title\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\"],[[24,[\"filter\",\"user\"]],\"admin.email.logs.filters.user_placeholder\"]]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\"],[[24,[\"filter\",\"address\"]],\"admin.email.logs.filters.address_placeholder\"]]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\"],[[24,[\"filter\",\"type\"]],\"admin.email.logs.filters.type_placeholder\"]]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"        \"],[7,\"tr\",true],[8],[0,\"\\n          \"],[7,\"td\",true],[8],[1,[28,\"format-date\",[[23,1,[\"created_at\"]]],null],false],[9],[0,\"\\n          \"],[7,\"td\",true],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"user\"]]],null,{\"statements\":[[0,\"              \"],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[23,1,[\"user\"]]]],{\"statements\":[[1,[28,\"avatar\",[[23,1,[\"user\"]]],[[\"imageSize\"],[\"tiny\"]]],false]],\"parameters\":[]},null],[0,\"\\n              \"],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[23,1,[\"user\"]]]],{\"statements\":[[1,[23,1,[\"user\",\"username\"]],false]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"              —\\n\"]],\"parameters\":[]}],[0,\"          \"],[9],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"email-address\"],[8],[7,\"a\",true],[11,\"href\",[29,[\"mailto:\",[23,1,[\"to_address\"]]]]],[8],[1,[23,1,[\"to_address\"]],false],[9],[9],[0,\"\\n          \"],[7,\"td\",true],[8],[1,[23,1,[\"email_type\"]],false],[9],[0,\"\\n          \"],[7,\"td\",true],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"post_url\"]]],null,{\"statements\":[[0,\"              \"],[7,\"a\",true],[11,\"href\",[23,1,[\"post_url\"]]],[8],[1,[23,1,[\"skipped_reason\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"              \"],[1,[23,1,[\"skipped_reason\"]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[1]},{\"statements\":[[4,\"unless\",[[24,[\"loading\"]]],null,{\"statements\":[[0,\"          \"],[7,\"tr\",true],[8],[7,\"td\",true],[10,\"colspan\",\"5\"],[8],[1,[28,\"i18n\",[\"admin.email.logs.none\"],null],false],[9],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"loading\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/email-skipped"}});
Ember.TEMPLATES["admin/templates/email"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"admin-nav\",null,null,{\"statements\":[[0,\"  \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminEmail.index\",\"admin.email.settings\"]]],false],[0,\"\\n  \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminEmail.previewDigest\",\"admin.email.preview_digest\"]]],false],[0,\"\\n  \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminEmail.advancedTest\",\"admin.email.advanced_test.title\"]]],false],[0,\"\\n  \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminCustomizeEmailTemplates\",\"admin.email.templates\"]]],false],[0,\"\\n  \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminEmail.sent\",\"admin.email.sent\"]]],false],[0,\"\\n  \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminEmail.skipped\",\"admin.email.skipped\"]]],false],[0,\"\\n  \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminEmail.bounced\",\"admin.email.bounced\"]]],false],[0,\"\\n  \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminEmail.received\",\"admin.email.received\"]]],false],[0,\"\\n  \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminEmail.rejected\",\"admin.email.rejected\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"admin-container\"],[8],[0,\"\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/email"}});
Ember.TEMPLATES["admin/templates/embedding"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"host\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"embeddable-hosts\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"embedding\",\"embeddable_hosts\"]]],null,{\"statements\":[[0,\"    \"],[7,\"table\",true],[10,\"class\",\"embedding grid\"],[8],[0,\"\\n      \"],[7,\"thead\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[10,\"style\",\"width: 25%\"],[8],[1,[28,\"i18n\",[\"admin.embedding.host\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"style\",\"width: 15%\"],[8],[1,[28,\"i18n\",[\"admin.embedding.class_name\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"style\",\"width: 25%\"],[8],[1,[28,\"i18n\",[\"admin.embedding.allowed_paths\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"style\",\"width: 25%\"],[8],[1,[28,\"i18n\",[\"admin.embedding.category\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"style\",\"width: 10%\"],[8],[0,\" \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"embedding\",\"embeddable_hosts\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"embeddable-host\",null,[[\"host\",\"deleteHost\"],[[23,1,[]],[28,\"action\",[[23,0,[]],\"deleteHost\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.embedding.get_started\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"label\",\"action\",\"icon\",\"class\"],[\"admin.embedding.add_host\",[28,\"action\",[[23,0,[]],\"addHost\"],null],\"plus\",\"btn-primary add-host\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"showSecondary\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"embedding-secondary\"],[8],[0,\"\\n    \"],[7,\"p\",true],[8],[1,[28,\"html-safe\",[[28,\"i18n\",[\"admin.embedding.sample\"],null]],null],false],[9],[0,\"\\n    \"],[1,[28,\"highlighted-code\",null,[[\"code\",\"lang\"],[[24,[\"embeddingCode\"]],\"html\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"hr\",true],[8],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"embedding-secondary\"],[8],[0,\"\\n    \"],[7,\"h3\",true],[8],[1,[28,\"i18n\",[\"admin.embedding.settings\"],null],false],[9],[0,\"\\n\\n    \"],[1,[28,\"embedding-setting\",null,[[\"field\",\"value\"],[\"embed_by_username\",[24,[\"embedding\",\"embed_by_username\"]]]]],false],[0,\"\\n    \"],[1,[28,\"embedding-setting\",null,[[\"field\",\"value\"],[\"embed_post_limit\",[24,[\"embedding\",\"embed_post_limit\"]]]]],false],[0,\"\\n    \"],[1,[28,\"embedding-setting\",null,[[\"field\",\"value\",\"placeholder\"],[\"embed_title_scrubber\",[24,[\"embedding\",\"embed_title_scrubber\"]],\"- site.com$\"]]],false],[0,\"\\n    \"],[1,[28,\"embedding-setting\",null,[[\"field\",\"value\",\"type\"],[\"embed_truncate\",[24,[\"embedding\",\"embed_truncate\"]],\"checkbox\"]]],false],[0,\"\\n    \"],[1,[28,\"embedding-setting\",null,[[\"field\",\"value\",\"type\"],[\"embed_unlisted\",[24,[\"embedding\",\"embed_unlisted\"]],\"checkbox\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"embedding-secondary\"],[8],[0,\"\\n    \"],[7,\"h3\",true],[8],[1,[28,\"i18n\",[\"admin.embedding.crawling_settings\"],null],false],[9],[0,\"\\n    \"],[7,\"p\",true],[10,\"class\",\"description\"],[8],[1,[28,\"i18n\",[\"admin.embedding.crawling_description\"],null],false],[9],[0,\"\\n\\n    \"],[1,[28,\"embedding-setting\",null,[[\"field\",\"value\",\"placeholder\"],[\"allowed_embed_selectors\",[24,[\"embedding\",\"allowed_embed_selectors\"]],\"article, #story, .post\"]]],false],[0,\"\\n\\n    \"],[1,[28,\"embedding-setting\",null,[[\"field\",\"value\",\"placeholder\"],[\"blocked_embed_selectors\",[24,[\"embedding\",\"blocked_embed_selectors\"]],\".ad-unit, header\"]]],false],[0,\"\\n\\n    \"],[1,[28,\"embedding-setting\",null,[[\"field\",\"value\",\"placeholder\"],[\"allowed_embed_classnames\",[24,[\"embedding\",\"allowed_embed_classnames\"]],\"emoji, classname\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"embedding-secondary\"],[8],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"label\",\"action\",\"class\",\"disabled\"],[\"admin.embedding.save\",[28,\"action\",[[23,0,[]],\"saveChanges\"],null],\"btn-primary embed-save\",[24,[\"embedding\",\"isSaving\"]]]]],false],[0,\"\\n\\n    \"],[4,\"if\",[[24,[\"saved\"]]],null,{\"statements\":[[1,[28,\"i18n\",[\"saved\"],null],false]],\"parameters\":[]},null],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/embedding"}});
Ember.TEMPLATES["admin/templates/emojis"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"e\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"admin-emojis\"],[8],[0,\"\\n  \"],[7,\"h1\",true],[8],[1,[28,\"i18n\",[\"admin.emoji.title\"],null],false],[9],[0,\"\\n\\n  \"],[7,\"p\",true],[10,\"class\",\"desc\"],[8],[1,[28,\"i18n\",[\"admin.emoji.help\"],null],false],[9],[0,\"\\n\\n  \"],[1,[28,\"emoji-uploader\",null,[[\"emojiGroups\",\"done\"],[[24,[\"emojiGroups\"]],[28,\"action\",[[23,0,[]],\"emojiUploaded\"],null]]]],false],[0,\"\\n\\n  \"],[7,\"hr\",true],[8],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"sortedEmojis\"]]],null,{\"statements\":[[0,\"    \"],[7,\"table\",true],[10,\"id\",\"custom_emoji\"],[8],[0,\"\\n      \"],[7,\"thead\",true],[8],[0,\"\\n        \"],[7,\"tr\",true],[8],[0,\"\\n          \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.emoji.image\"],null],false],[9],[0,\"\\n          \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.emoji.name\"],null],false],[9],[0,\"\\n          \"],[7,\"th\",true],[10,\"colspan\",\"2\"],[8],[0,\"\\n            \"],[1,[28,\"combo-box\",null,[[\"value\",\"content\",\"nameProperty\",\"valueProperty\",\"onChange\"],[[24,[\"filter\"]],[24,[\"sortingGroups\"]],null,null,[28,\"action\",[[23,0,[]],\"filterGroups\"],null]]]],false],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"sortedEmojis\"]]],null,{\"statements\":[[0,\"          \"],[7,\"tr\",true],[8],[0,\"\\n            \"],[7,\"td\",true],[8],[7,\"img\",true],[10,\"class\",\"emoji emoji-custom\"],[11,\"src\",[23,1,[\"url\"]]],[11,\"title\",[23,1,[\"name\"]]],[11,\"alt\",[28,\"i18n\",[\"admin.emoji.alt\"],null]],[8],[9],[9],[0,\"\\n            \"],[7,\"td\",true],[8],[0,\":\"],[1,[23,1,[\"name\"]],false],[0,\":\"],[9],[0,\"\\n            \"],[7,\"td\",true],[8],[1,[23,1,[\"group\"]],false],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"action\"],[8],[0,\"\\n              \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"icon\"],[[28,\"action\",[[23,0,[]],\"destroyEmoji\",[23,1,[]]],null],\"btn-danger\",\"far-trash-alt\"]]],false],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/emojis"}});
Ember.TEMPLATES["admin/templates/logs"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"admin-nav\",null,null,{\"statements\":[[0,\"  \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminLogs.staffActionLogs\",\"admin.logs.staff_actions.title\"]]],false],[0,\"\\n  \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminLogs.screenedEmails\",\"admin.logs.screened_emails.title\"]]],false],[0,\"\\n  \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminLogs.screenedIpAddresses\",\"admin.logs.screened_ips.title\"]]],false],[0,\"\\n  \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminLogs.screenedUrls\",\"admin.logs.screened_urls.title\"]]],false],[0,\"\\n  \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminSearchLogs\",\"admin.logs.search_logs.title\"]]],false],[0,\"\\n\"],[4,\"if\",[[24,[\"currentUser\",\"admin\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"nav-item\",null,[[\"path\",\"label\"],[\"/logs\",\"admin.logs.logster.title\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"admin-container\"],[8],[0,\"\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/logs"}});
Ember.TEMPLATES["admin/templates/logs/screened-emails"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"item\"],\"statements\":[[7,\"p\",true],[8],[0,\"\\n  \"],[1,[28,\"i18n\",[\"admin.logs.screened_emails.description\"],null],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"title\",\"icon\",\"label\"],[\"btn-default screened-email-export\",[28,\"action\",[[23,0,[]],\"exportScreenedEmailList\"],null],\"admin.export_csv.button_title.screened_email\",\"download\",\"admin.export_csv.button_text\"]]],false],[0,\"\\n\\n\"],[7,\"br\",true],[8],[9],[0,\"\\n\\n\"],[4,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"loading\"]]]],{\"statements\":[[4,\"if\",[[24,[\"model\",\"length\"]]],null,{\"statements\":[[0,\"\\n    \"],[7,\"table\",true],[10,\"class\",\"screened-emails grid\"],[8],[0,\"\\n      \"],[7,\"thead\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"first email\"],[8],[1,[28,\"i18n\",[\"admin.logs.screened_emails.email\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"action\"],[8],[1,[28,\"i18n\",[\"admin.logs.action\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"match_count\"],[8],[1,[28,\"i18n\",[\"admin.logs.match_count\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"last_match_at\"],[8],[1,[28,\"i18n\",[\"admin.logs.last_match_at\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"created_at\"],[8],[1,[28,\"i18n\",[\"admin.logs.created_at\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"ip_address\"],[8],[1,[28,\"i18n\",[\"admin.logs.ip_address\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"action\"],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"          \"],[7,\"tr\",true],[10,\"class\",\"admin-list-item\"],[8],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"col first email\"],[8],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"overflow-ellipsis\"],[11,\"title\",[23,1,[\"email\"]]],[8],[1,[23,1,[\"email\"]],false],[9],[0,\"\\n            \"],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"action\"],[8],[1,[23,1,[\"actionName\"]],false],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"match_count\"],[8],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.logs.match_count\"],null],false],[9],[1,[23,1,[\"match_count\"]],false],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"last_match_at\"],[8],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.logs.last_match_at\"],null],false],[9],[1,[28,\"age-with-tooltip\",[[23,1,[\"last_match_at\"]]],null],false],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"created_at\"],[8],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.logs.created_at\"],null],false],[9],[1,[28,\"age-with-tooltip\",[[23,1,[\"created_at\"]]],null],false],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"ip_address\"],[8],[1,[23,1,[\"ip_address\"]],false],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"action\"],[8],[0,\"\\n              \"],[1,[28,\"d-button\",null,[[\"action\",\"actionParam\",\"icon\",\"label\"],[[28,\"action\",[[23,0,[]],\"clearBlock\"],null],[23,1,[]],\"check\",\"admin.logs.screened_emails.actions.allow\"]]],false],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[1,[28,\"i18n\",[\"search.no_results\"],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/logs/screened-emails"}});
Ember.TEMPLATES["admin/templates/logs/screened-ip-addresses"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"item\"],\"statements\":[[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.logs.screened_ips.description\"],null],false],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"screened-ip-controls\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"filter-screened-ip-address inline-form\"],[8],[0,\"\\n    \"],[1,[28,\"text-field\",null,[[\"value\",\"class\",\"placeholderKey\",\"autocorrect\",\"autocapitalize\"],[[24,[\"filter\"]],\"ip-address-input\",\"admin.logs.screened_ips.form.filter\",\"off\",\"off\"]]],false],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"title\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"rollUp\"],null],\"admin.logs.screened_ips.roll_up.title\",\"admin.logs.screened_ips.roll_up.text\"]]],false],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"title\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"exportScreenedIpList\"],null],\"download\",\"admin.export_csv.button_title.screened_ip\",\"admin.export_csv.button_text\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[1,[28,\"screened-ip-address-form\",null,[[\"action\"],[[28,\"action\",[[23,0,[]],\"recordAdded\"],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"loading\"]]]],{\"statements\":[[4,\"if\",[[24,[\"model\",\"length\"]]],null,{\"statements\":[[0,\"    \"],[7,\"table\",true],[10,\"class\",\"admin-logs-table screened-ip-addresses grid\"],[8],[0,\"\\n      \"],[7,\"thead\",true],[10,\"class\",\"heading-container\"],[8],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"col heading first ip_address\"],[8],[1,[28,\"i18n\",[\"admin.logs.ip_address\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"col heading action\"],[8],[1,[28,\"i18n\",[\"admin.logs.action\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"col heading match_count\"],[8],[1,[28,\"i18n\",[\"admin.logs.match_count\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"col heading created_at\"],[8],[1,[28,\"i18n\",[\"admin.logs.created_at\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"col heading last_match_at\"],[8],[1,[28,\"i18n\",[\"admin.logs.last_match_at\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"col heading actions\"],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"          \"],[7,\"tr\",true],[10,\"class\",\"admin-list-item\"],[8],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"col first ip_address\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"editing\"]]],null,{\"statements\":[[0,\"                \"],[1,[28,\"text-field\",null,[[\"value\",\"autofocus\"],[[23,1,[\"ip_address\"]],\"autofocus\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                \"],[7,\"a\",false],[12,\"href\",\"\"],[12,\"class\",\"inline-editable-field\"],[3,\"action\",[[23,0,[]],\"edit\",[23,1,[]]]],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"isRange\"]]],null,{\"statements\":[[0,\"                    \"],[7,\"strong\",true],[8],[1,[23,1,[\"ip_address\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                    \"],[1,[23,1,[\"ip_address\"]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"                \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"            \"],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"col action\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"isBlocked\"]]],null,{\"statements\":[[0,\"                \"],[1,[28,\"d-icon\",[\"ban\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                \"],[1,[28,\"d-icon\",[\"check\"],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"              \"],[1,[23,1,[\"actionName\"]],false],[0,\"\\n            \"],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"col match_count\"],[8],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.logs.match_count\"],null],false],[9],[0,\"\\n              \"],[1,[23,1,[\"match_count\"]],false],[0,\"\\n            \"],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"col created_at\"],[8],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.logs.created_at\"],null],false],[9],[0,\"\\n              \"],[1,[28,\"age-with-tooltip\",[[23,1,[\"created_at\"]]],null],false],[0,\"\\n            \"],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"col last_match_at\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"last_match_at\"]]],null,{\"statements\":[[0,\"                \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[0,\"\\n                  \"],[1,[28,\"i18n\",[\"admin.logs.last_match_at\"],null],false],[0,\"\\n                  \"],[1,[28,\"age-with-tooltip\",[[23,1,[\"last_match_at\"]]],null],false],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"            \"],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"col actions\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"editing\"]]],null,{\"statements\":[[0,\"                \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"actionParam\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"save\"],null],[23,1,[]],\"admin.logs.save\"]]],false],[0,\"\\n                \"],[7,\"a\",false],[12,\"href\",\"\"],[12,\"class\",\"cancel-action\"],[3,\"action\",[[23,0,[]],\"cancel\",[23,1,[]]]],[8],[0,\"\\n                  \"],[1,[28,\"i18n\",[\"cancel\"],null],false],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"actionParam\",\"icon\"],[\"btn-default btn-danger\",[28,\"action\",[[23,0,[]],\"destroy\"],null],[23,1,[]],\"far-trash-alt\"]]],false],[0,\"\\n                \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"actionParam\",\"icon\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"edit\"],null],[23,1,[]],\"pencil-alt\"]]],false],[0,\"\\n\"],[4,\"if\",[[23,1,[\"isBlocked\"]]],null,{\"statements\":[[0,\"                  \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"actionParam\",\"icon\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"allow\"],null],[23,1,[]],\"check\",\"admin.logs.screened_ips.actions.do_nothing\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                  \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"actionParam\",\"icon\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"block\"],null],[23,1,[]],\"ban\",\"admin.logs.screened_ips.actions.block\"]]],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]}],[0,\"            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[1,[28,\"i18n\",[\"search.no_results\"],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/logs/screened-ip-addresses"}});
Ember.TEMPLATES["admin/templates/logs/screened-urls"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"url\"],\"statements\":[[7,\"p\",true],[8],[0,\"\\n  \"],[1,[28,\"i18n\",[\"admin.logs.screened_urls.description\"],null],false],[0,\"\\n\"],[9],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"title\",\"icon\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"exportScreenedUrlList\"],null],\"admin.export_csv.button_title.screened_url\",\"download\",\"admin.export_csv.button_text\"]]],false],[0,\"\\n\"],[7,\"br\",true],[8],[9],[0,\"\\n\\n\"],[4,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"loading\"]]]],{\"statements\":[[4,\"if\",[[24,[\"model\",\"length\"]]],null,{\"statements\":[[0,\"    \"],[7,\"table\",true],[10,\"class\",\"screened-urls grid\"],[8],[0,\"\\n      \"],[7,\"thead\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"first domain\"],[8],[1,[28,\"i18n\",[\"admin.logs.screened_urls.domain\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"action\"],[8],[1,[28,\"i18n\",[\"admin.logs.action\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"match_count\"],[8],[1,[28,\"i18n\",[\"admin.logs.match_count\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"last_match_at\"],[8],[1,[28,\"i18n\",[\"admin.logs.last_match_at\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"created_at\"],[8],[1,[28,\"i18n\",[\"admin.logs.created_at\"],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"          \"],[7,\"tr\",true],[10,\"class\",\"admin-list-item\"],[8],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"col first domain\"],[8],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"overflow-ellipsis\"],[11,\"title\",[23,1,[\"domain\"]]],[8],[1,[23,1,[\"domain\"]],false],[9],[0,\"\\n            \"],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"col action\"],[8],[1,[23,1,[\"actionName\"]],false],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"col match_count\"],[8],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.logs.match_count\"],null],false],[9],[1,[23,1,[\"match_count\"]],false],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"col last_match_at\"],[8],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.logs.last_match_at\"],null],false],[9],[1,[28,\"age-with-tooltip\",[[23,1,[\"last_match_at\"]]],null],false],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"col created_at\"],[8],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.logs.created_at\"],null],false],[9],[1,[28,\"age-with-tooltip\",[[23,1,[\"created_at\"]]],null],false],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[1,[28,\"i18n\",[\"search.no_results\"],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/logs/screened-urls"}});
Ember.TEMPLATES["admin/templates/logs/staff-action-logs"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"item\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"staff-action-logs-controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"filtersExists\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"staff-action-logs-filters\"],[8],[0,\"\\n      \"],[7,\"a\",false],[12,\"href\",\"\"],[12,\"class\",\"clear-filters filter btn\"],[3,\"action\",[[23,0,[]],\"clearAllFilters\"]],[8],[0,\"\\n        \"],[7,\"span\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.logs.staff_actions.clear_filters\"],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"actionFilter\"]]],null,{\"statements\":[[0,\"        \"],[7,\"a\",false],[12,\"href\",\"\"],[12,\"class\",\"filter btn\"],[3,\"action\",[[23,0,[]],\"clearFilter\",\"actionFilter\"]],[8],[0,\"\\n          \"],[7,\"span\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.logs.action\"],null],false],[9],[0,\": \"],[1,[22,\"actionFilter\"],false],[0,\"\\n          \"],[1,[28,\"d-icon\",[\"times-circle\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"filters\",\"acting_user\"]]],null,{\"statements\":[[0,\"        \"],[7,\"a\",false],[12,\"href\",\"\"],[12,\"class\",\"filter btn\"],[3,\"action\",[[23,0,[]],\"clearFilter\",\"acting_user\"]],[8],[0,\"\\n          \"],[7,\"span\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.logs.staff_actions.staff_user\"],null],false],[9],[0,\": \"],[1,[24,[\"filters\",\"acting_user\"]],false],[0,\"\\n          \"],[1,[28,\"d-icon\",[\"times-circle\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"filters\",\"target_user\"]]],null,{\"statements\":[[0,\"        \"],[7,\"a\",false],[12,\"href\",\"\"],[12,\"class\",\"filter btn\"],[3,\"action\",[[23,0,[]],\"clearFilter\",\"target_user\"]],[8],[0,\"\\n          \"],[7,\"span\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.logs.staff_actions.target_user\"],null],false],[9],[0,\": \"],[1,[24,[\"filters\",\"target_user\"]],false],[0,\"\\n          \"],[1,[28,\"d-icon\",[\"times-circle\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"filters\",\"subject\"]]],null,{\"statements\":[[0,\"        \"],[7,\"a\",false],[12,\"href\",\"\"],[12,\"class\",\"filter btn\"],[3,\"action\",[[23,0,[]],\"clearFilter\",\"subject\"]],[8],[0,\"\\n          \"],[7,\"span\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.logs.staff_actions.subject\"],null],false],[9],[0,\": \"],[1,[24,[\"filters\",\"subject\"]],false],[0,\"\\n          \"],[1,[28,\"d-icon\",[\"times-circle\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[1,[28,\"i18n\",[\"admin.logs.staff_actions.filter\"],null],false],[0,\"\\n    \"],[1,[28,\"combo-box\",null,[[\"content\",\"value\",\"none\",\"onChange\"],[[24,[\"userHistoryActions\"]],[24,[\"filterActionId\"]],\"admin.logs.staff_actions.all\",[28,\"action\",[[23,0,[]],\"filterActionIdChanged\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"label\",\"icon\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"exportStaffActionLogs\"],null],\"admin.export_csv.button_text\",\"download\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"clearfix\"],[8],[9],[0,\"\\n\\n\"],[4,\"staff-actions\",null,null,{\"statements\":[[4,\"load-more\",null,[[\"selector\",\"action\"],[\".staff-logs tr\",[28,\"action\",[[23,0,[]],\"loadMore\"],null]]],{\"statements\":[[4,\"if\",[[24,[\"model\",\"content\"]]],null,{\"statements\":[[0,\"      \"],[7,\"table\",true],[10,\"class\",\"table staff-logs grid\"],[8],[0,\"\\n        \"],[7,\"thead\",true],[8],[0,\"\\n          \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.logs.staff_actions.staff_user\"],null],false],[9],[0,\"\\n          \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.logs.action\"],null],false],[9],[0,\"\\n          \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.logs.staff_actions.subject\"],null],false],[9],[0,\"\\n          \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.logs.staff_actions.when\"],null],false],[9],[0,\"\\n          \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.logs.staff_actions.details\"],null],false],[9],[0,\"\\n          \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.logs.staff_actions.context\"],null],false],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\",\"content\"]]],null,{\"statements\":[[0,\"            \"],[7,\"tr\",true],[10,\"class\",\"admin-list-item\"],[8],[0,\"\\n              \"],[7,\"td\",true],[10,\"class\",\"staff-users\"],[8],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"staff-user\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"acting_user\"]]],null,{\"statements\":[[0,\"                    \"],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[23,1,[\"acting_user\"]]]],{\"statements\":[[1,[28,\"avatar\",[[23,1,[\"acting_user\"]]],[[\"imageSize\"],[\"tiny\"]]],false]],\"parameters\":[]},null],[0,\"\\n                    \"],[7,\"a\",false],[12,\"href\",\"\"],[3,\"action\",[[23,0,[]],\"filterByStaffUser\",[23,1,[\"acting_user\"]]]],[8],[1,[23,1,[\"acting_user\",\"username\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                    \"],[7,\"span\",true],[10,\"class\",\"deleted-user\"],[11,\"title\",[28,\"i18n\",[\"admin.user.deleted\"],null]],[8],[0,\"\\n                      \"],[1,[28,\"d-icon\",[\"far-trash-alt\"],null],false],[0,\"\\n                    \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n              \"],[7,\"td\",true],[10,\"class\",\"col value action\"],[8],[0,\"\\n                \"],[7,\"a\",false],[12,\"href\",\"\"],[3,\"action\",[[23,0,[]],\"filterByAction\",[23,1,[]]]],[8],[1,[23,1,[\"actionName\"]],false],[9],[0,\"\\n              \"],[9],[0,\"\\n              \"],[7,\"td\",true],[10,\"class\",\"col value subject\"],[8],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"subject\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"target_user\"]]],null,{\"statements\":[[0,\"                    \"],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[23,1,[\"target_user\"]]]],{\"statements\":[[1,[28,\"avatar\",[[23,1,[\"target_user\"]]],[[\"imageSize\"],[\"tiny\"]]],false]],\"parameters\":[]},null],[0,\"\\n                    \"],[7,\"a\",false],[12,\"href\",\"\"],[3,\"action\",[[23,0,[]],\"filterByTargetUser\",[23,1,[\"target_user\"]]]],[8],[1,[23,1,[\"target_user\",\"username\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[23,1,[\"subject\"]]],null,{\"statements\":[[0,\"                    \"],[7,\"a\",false],[12,\"href\",\"\"],[12,\"title\",[23,1,[\"subject\"]]],[3,\"action\",[[23,0,[]],\"filterBySubject\",[23,1,[\"subject\"]]]],[8],[1,[23,1,[\"subject\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n              \"],[7,\"td\",true],[10,\"class\",\"col value created-at\"],[8],[1,[28,\"age-with-tooltip\",[[23,1,[\"created_at\"]]],null],false],[9],[0,\"\\n              \"],[7,\"td\",true],[10,\"class\",\"col value details\"],[8],[0,\"\\n                \"],[7,\"div\",true],[8],[0,\"\\n                  \"],[1,[28,\"html-safe\",[[23,1,[\"formattedDetails\"]]],null],false],[0,\"\\n\"],[4,\"if\",[[23,1,[\"useCustomModalForDetails\"]]],null,{\"statements\":[[0,\"                    \"],[7,\"a\",false],[12,\"href\",\"\"],[3,\"action\",[[23,0,[]],\"showCustomDetailsModal\",[23,1,[]]]],[8],[1,[28,\"d-icon\",[\"info-circle\"],null],false],[0,\" \"],[1,[28,\"i18n\",[\"admin.logs.staff_actions.show\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[23,1,[\"useModalForDetails\"]]],null,{\"statements\":[[0,\"                    \"],[7,\"a\",false],[12,\"href\",\"\"],[3,\"action\",[[23,0,[]],\"showDetailsModal\",[23,1,[]]]],[8],[1,[28,\"d-icon\",[\"info-circle\"],null],false],[0,\" \"],[1,[28,\"i18n\",[\"admin.logs.staff_actions.show\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n              \"],[7,\"td\",true],[10,\"class\",\"col value context\"],[8],[1,[23,1,[\"context\"]],false],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"model\",\"loadingMore\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"model\",\"loadingMore\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[1,[28,\"i18n\",[\"search.no_results\"],null],false],[0,\"\\n    \"]],\"parameters\":[]}]],\"parameters\":[]}]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/logs/staff-action-logs"}});
Ember.TEMPLATES["admin/templates/modal/admin-add-upload"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"d-modal-body\",null,[[\"class\",\"title\"],[\"add-upload-modal\",\"admin.customize.theme.add_upload\"]],{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"inputs\"],[8],[0,\"\\n    \"],[7,\"section\",true],[10,\"class\",\"field\"],[8],[0,\"\\n      \"],[7,\"input\",true],[11,\"onchange\",[28,\"action\",[[23,0,[]],\"updateName\"],null]],[10,\"id\",\"file-input\"],[10,\"accept\",\"*\"],[10,\"type\",\"file\"],[8],[9],[0,\"\\n      \"],[7,\"label\",true],[10,\"for\",\"file-input\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.upload_file_tip\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"section\",true],[10,\"class\",\"field\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"for\",\"theme-variable-name\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.variable_name\"],null],false],[9],[0,\"\\n      \"],[1,[28,\"input\",null,[[\"id\",\"value\"],[\"theme-variable-name\",[24,[\"name\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"fileSelected\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"errorMessage\"]]],null,{\"statements\":[[0,\"        \"],[7,\"span\",true],[10,\"class\",\"alert alert-error\"],[8],[1,[22,\"errorMessage\"],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"modal-footer\"],[8],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"action\",\"disabled\",\"class\",\"icon\",\"label\"],[[28,\"action\",[[23,0,[]],\"upload\"],null],[24,[\"disabled\"]],\"btn btn-primary\",\"upload\",\"admin.customize.theme.upload\"]]],false],[0,\"\\n  \"],[1,[28,\"d-modal-cancel\",null,[[\"close\"],[[28,\"route-action\",[\"closeModal\"],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-add-upload"}});
Ember.TEMPLATES["admin/templates/modal/admin-api-key-urls"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"url\"],\"statements\":[[4,\"d-modal-body\",null,[[\"title\"],[\"admin.api.scopes.allowed_urls\"]],{\"statements\":[[0,\"  \"],[7,\"div\",true],[8],[0,\"\\n    \"],[7,\"ul\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\",\"urls\"]]],null,{\"statements\":[[0,\"        \"],[7,\"li\",true],[8],[0,\"\\n          \"],[7,\"code\",true],[8],[1,[23,1,[]],false],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-api-key-urls"}});
Ember.TEMPLATES["admin/templates/modal/admin-badge-preview"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"html\"],\"statements\":[[4,\"d-modal-body\",null,[[\"title\",\"class\"],[\"admin.badges.preview.modal_title\",\"badge-query-preview\"]],{\"statements\":[[4,\"if\",[[24,[\"errors\"]]],null,{\"statements\":[[0,\"    \"],[7,\"p\",true],[10,\"class\",\"error-header\"],[8],[1,[28,\"i18n\",[\"admin.badges.preview.sql_error_header\"],null],false],[9],[0,\"\\n\\n    \"],[7,\"pre\",true],[10,\"class\",\"badge-errors\"],[8],[1,[22,\"errors\"],false],[9],[0,\"\\n\"],[0,\"\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[7,\"p\",true],[10,\"class\",\"grant-count\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"count\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"html-safe\",[[28,\"i18n\",[\"admin.badges.preview.grant_count\"],[[\"count\"],[[24,[\"count\"]]]]]],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[1,[28,\"html-safe\",[[28,\"i18n\",[\"admin.badges.preview.no_grant_count\"],null]],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"countWarning\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"count-warning\"],[8],[0,\"\\n        \"],[7,\"p\",true],[10,\"class\",\"heading\"],[8],[0,\"\\n          \"],[1,[28,\"d-icon\",[\"exclamation-triangle\"],null],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.badges.preview.bad_count_warning.header\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"p\",true],[10,\"class\",\"body\"],[8],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.badges.preview.bad_count_warning.text\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"sample\"]]],null,{\"statements\":[[0,\"      \"],[7,\"p\",true],[10,\"class\",\"sample\"],[8],[0,\"\\n        \"],[1,[28,\"i18n\",[\"admin.badges.preview.sample\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"ul\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"processedSample\"]]],null,{\"statements\":[[0,\"          \"],[7,\"li\",true],[8],[1,[28,\"html-safe\",[[23,1,[]]],null],false],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"hasQueryPlan\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"badge-query-plan\"],[8],[0,\"\\n        \"],[1,[28,\"html-safe\",[[24,[\"queryPlanHtml\"]]],null],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-badge-preview"}});
Ember.TEMPLATES["admin/templates/modal/admin-color-scheme-select-base"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[8],[0,\"\\n\"],[4,\"d-modal-body\",null,[[\"title\"],[\"admin.customize.colors.select_base.title\"]],{\"statements\":[[0,\"    \"],[1,[28,\"i18n\",[\"admin.customize.colors.select_base.description\"],null],false],[0,\"\\n    \"],[1,[28,\"combo-box\",null,[[\"content\",\"value\",\"onChange\",\"valueProperty\"],[[24,[\"model\"]],[24,[\"selectedBaseThemeId\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"selectedBaseThemeId\"]]],null]],null],\"base_scheme_id\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"modal-footer\"],[8],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-primary\",[28,\"action\",[[23,0,[]],\"selectBase\"],null],\"plus\",\"admin.customize.new\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-color-scheme-select-base"}});
Ember.TEMPLATES["admin/templates/modal/admin-delete-posts-confirmation"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[8],[0,\"\\n\"],[4,\"d-modal-body\",null,[[\"rawTitle\"],[[28,\"i18n\",[\"admin.user.delete_posts.confirmation.title\"],[[\"username\"],[[24,[\"username\"]]]]]]],{\"statements\":[[0,\"    \"],[7,\"p\",true],[8],[1,[28,\"html-safe\",[[28,\"i18n\",[\"admin.user.delete_posts.confirmation.description\"],[[\"username\",\"post_count\",\"text\"],[[24,[\"username\"]],[24,[\"postCount\"]],[24,[\"text\"]]]]]],null],false],[9],[0,\"\\n    \"],[1,[28,\"input\",null,[[\"type\",\"value\"],[\"text\",[24,[\"value\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"modal-footer\"],[8],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"disabled\",\"translatedLabel\"],[\"btn-danger\",[28,\"action\",[[23,0,[]],\"confirm\"],null],\"trash-alt\",[24,[\"deleteDisabled\"]],[24,[\"deleteButtonText\"]]]]],false],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"action\",\"label\"],[[28,\"action\",[[23,0,[]],\"close\"],null],\"admin.user.delete_posts.confirmation.cancel\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-delete-posts-confirmation"}});
Ember.TEMPLATES["admin/templates/modal/admin-delete-user-posts-progress"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"d-modal-body\",null,[[\"title\",\"dismissable\"],[\"admin.user.delete_posts.progress.title\",false]],{\"statements\":[[0,\"  \"],[7,\"p\",true],[8],[1,[28,\"I18n\",[\"admin.user.delete_posts.progress.description\"],null],false],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"progress-bar\"],[8],[7,\"span\",true],[11,\"style\",[28,\"html-safe\",[[28,\"concat\",[\"width: \",[24,[\"deletedPercentage\"]],\"%\"],null]],null]],[8],[9],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-delete-user-posts-progress"}});
Ember.TEMPLATES["admin/templates/modal/admin-edit-badge-groupings"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"wc\"],\"statements\":[[4,\"d-modal-body\",null,[[\"title\",\"class\"],[\"admin.badges.badge_groupings.modal_title\",\"badge-groupings-modal\"]],{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"badge-groupings\"],[8],[0,\"\\n    \"],[7,\"ul\",true],[10,\"class\",\"badge-groupings-list\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"workingCopy\"]]],null,{\"statements\":[[0,\"        \"],[7,\"li\",true],[10,\"class\",\"badge-grouping-item\"],[8],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"badge-grouping\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"editing\"]]],null,{\"statements\":[[0,\"              \"],[1,[28,\"input\",null,[[\"value\",\"class\"],[[23,1,[\"name\"]],\"badge-grouping-name-input\"]]],false],[0,\"\\n              \"],[1,[28,\"d-button\",null,[[\"action\",\"icon\"],[[28,\"action\",[[23,0,[]],\"save\",[23,1,[]]],null],\"check\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"              \"],[7,\"span\",true],[8],[1,[23,1,[\"displayName\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"          \"],[9],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"actions\"],[8],[0,\"\\n            \"],[1,[28,\"d-button\",null,[[\"action\",\"disabled\",\"icon\"],[[28,\"action\",[[23,0,[]],\"edit\",[23,1,[]]],null],[23,1,[\"system\"]],\"pencil-alt\"]]],false],[0,\"\\n            \"],[1,[28,\"d-button\",null,[[\"action\",\"icon\"],[[28,\"action\",[[23,0,[]],\"up\",[23,1,[]]],null],\"chevron-up\"]]],false],[0,\"\\n            \"],[1,[28,\"d-button\",null,[[\"action\",\"icon\"],[[28,\"action\",[[23,0,[]],\"down\",[23,1,[]]],null],\"chevron-down\"]]],false],[0,\"\\n            \"],[1,[28,\"d-button\",null,[[\"action\",\"disabled\",\"icon\"],[[28,\"action\",[[23,0,[]],\"delete\",[23,1,[]]],null],[23,1,[\"system\"]],\"times\"]]],false],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"action\",\"label\"],[[28,\"action\",[[23,0,[]],\"add\"],null],\"admin.badges.new\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"modal-footer\"],[8],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"action\",\"label\",\"class\",\"disabled\"],[[28,\"action\",[[23,0,[]],\"saveAll\"],null],\"admin.badges.save\",\"btn-primary\",[24,[\"submitDisabled\"]]]]],false],[0,\"\\n  \"],[1,[28,\"d-modal-cancel\",null,[[\"close\"],[[28,\"route-action\",[\"closeModal\"],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-edit-badge-groupings"}});
Ember.TEMPLATES["admin/templates/modal/admin-incoming-email"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"d-modal-body\",null,[[\"class\",\"title\"],[\"incoming-emails\",\"admin.email.incoming_emails.modal.title\"]],{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n    \"],[7,\"label\",true],[8],[1,[28,\"i18n\",[\"admin.email.incoming_emails.modal.error\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n      \"],[7,\"p\",true],[8],[1,[24,[\"model\",\"error\"]],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"error_description\"]]],null,{\"statements\":[[0,\"        \"],[7,\"p\",true],[10,\"class\",\"error-description\"],[8],[1,[24,[\"model\",\"error_description\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"hr\",true],[8],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n    \"],[7,\"label\",true],[8],[1,[28,\"i18n\",[\"admin.email.incoming_emails.modal.headers\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n      \"],[1,[28,\"textarea\",null,[[\"value\",\"wrap\"],[[24,[\"model\",\"headers\"]],\"off\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n    \"],[7,\"label\",true],[8],[1,[28,\"i18n\",[\"admin.email.incoming_emails.modal.subject\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n      \"],[1,[24,[\"model\",\"subject\"]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n    \"],[7,\"label\",true],[8],[1,[28,\"i18n\",[\"admin.email.incoming_emails.modal.body\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n      \"],[1,[28,\"textarea\",null,[[\"value\"],[[24,[\"model\",\"body\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"model\",\"rejection_message\"]]],null,{\"statements\":[[0,\"    \"],[7,\"hr\",true],[8],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n      \"],[7,\"label\",true],[8],[1,[28,\"i18n\",[\"admin.email.incoming_emails.modal.rejection_message\"],null],false],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n        \"],[1,[28,\"textarea\",null,[[\"value\"],[[24,[\"model\",\"rejection_message\"]]]]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-incoming-email"}});
Ember.TEMPLATES["admin/templates/modal/admin-install-theme"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"theme\"],\"statements\":[[4,\"d-modal-body\",null,[[\"class\",\"title\"],[\"install-theme\",\"admin.customize.theme.install\"]],{\"statements\":[[4,\"unless\",[[24,[\"directRepoInstall\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"install-theme-items\"],[8],[0,\"\\n      \"],[1,[28,\"install-theme-item\",null,[[\"value\",\"selection\",\"label\"],[\"popular\",[24,[\"selection\"]],\"admin.customize.theme.install_popular\"]]],false],[0,\"\\n      \"],[1,[28,\"install-theme-item\",null,[[\"value\",\"selection\",\"label\"],[\"local\",[24,[\"selection\"]],\"admin.customize.theme.install_upload\"]]],false],[0,\"\\n      \"],[1,[28,\"install-theme-item\",null,[[\"value\",\"selection\",\"label\"],[\"remote\",[24,[\"selection\"]],\"admin.customize.theme.install_git_repo\"]]],false],[0,\"\\n      \"],[1,[28,\"install-theme-item\",null,[[\"value\",\"selection\",\"label\",\"showIcon\"],[\"create\",[24,[\"selection\"]],\"admin.customize.theme.install_create\",true]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[7,\"div\",true],[10,\"class\",\"install-theme-content\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"popular\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"popular-theme-items\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"themes\"]]],null,{\"statements\":[[0,\"          \"],[7,\"div\",true],[10,\"class\",\"popular-theme-item\"],[11,\"data-name\",[23,1,[\"name\"]]],[8],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"popular-theme-name\"],[8],[0,\"\\n              \"],[7,\"a\",true],[11,\"href\",[23,1,[\"meta_url\"]]],[10,\"rel\",\"noopener noreferrer\"],[10,\"target\",\"_blank\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"component\"]]],null,{\"statements\":[[0,\"                  \"],[1,[28,\"d-icon\",[\"puzzle-piece\"],[[\"title\"],[\"admin.customize.theme.component\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"                \"],[1,[23,1,[\"name\"]],false],[0,\"\\n              \"],[9],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"popular-theme-description\"],[8],[0,\"\\n                \"],[1,[23,1,[\"description\"]],false],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n\\n            \"],[7,\"div\",true],[10,\"class\",\"popular-theme-buttons\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"installed\"]]],null,{\"statements\":[[0,\"                \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"admin.customize.theme.installed\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                \"],[1,[28,\"d-button\",null,[[\"class\",\"label\",\"disabled\",\"icon\",\"action\"],[\"btn-small\",\"admin.customize.theme.install\",[24,[\"installDisabled\"]],\"upload\",[28,\"action\",[[23,0,[]],\"installThemeFromList\",[23,1,[\"value\"]]],null]]]],false],[0,\"\\n\\n\"],[4,\"if\",[[23,1,[\"preview\"]]],null,{\"statements\":[[0,\"                  \"],[7,\"a\",true],[11,\"href\",[23,1,[\"preview\"]]],[10,\"rel\",\"noopener noreferrer\"],[10,\"target\",\"_blank\"],[8],[1,[28,\"d-icon\",[\"desktop\"],null],false],[0,\" \"],[1,[28,\"i18n\",[\"admin.customize.theme.preview\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"local\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"inputs\"],[8],[0,\"\\n        \"],[7,\"input\",true],[11,\"onchange\",[28,\"action\",[[23,0,[]],\"uploadLocaleFile\"],null]],[10,\"id\",\"file-input\"],[10,\"accept\",\".dcstyle.json,application/json,.tar.gz,application/x-gzip,.zip,application/zip\"],[10,\"type\",\"file\"],[8],[9],[7,\"br\",true],[8],[9],[0,\"\\n        \"],[7,\"span\",true],[10,\"class\",\"description\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.import_file_tip\"],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"remote\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"inputs\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"repo\"],[8],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.import_web_tip\"],null],false],[9],[0,\"\\n          \"],[1,[28,\"input\",null,[[\"value\",\"placeholder\"],[[24,[\"uploadUrl\"]],[24,[\"urlPlaceholder\"]]]]],false],[0,\"\\n        \"],[9],[0,\"\\n\\n        \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"label\"],[\"btn-small advanced-repo\",[28,\"action\",[[23,0,[]],\"toggleAdvanced\"],null],\"admin.customize.theme.import_web_advanced\"]]],false],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"advancedVisible\"]]],null,{\"statements\":[[0,\"          \"],[7,\"div\",true],[10,\"class\",\"branch\"],[8],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.remote_branch\"],null],false],[9],[0,\"\\n            \"],[1,[28,\"input\",null,[[\"value\",\"placeholder\"],[[24,[\"branch\"]],\"master\"]]],false],[0,\"\\n          \"],[9],[0,\"\\n\\n          \"],[7,\"div\",true],[10,\"class\",\"check-private\"],[8],[0,\"\\n            \"],[7,\"label\",true],[8],[0,\"\\n              \"],[1,[28,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[24,[\"privateChecked\"]]]]],false],[0,\"\\n              \"],[1,[28,\"i18n\",[\"admin.customize.theme.is_private\"],null],false],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"showPublicKey\"]]],null,{\"statements\":[[0,\"            \"],[7,\"div\",true],[10,\"class\",\"public-key\"],[8],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.public_key\"],null],false],[9],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"public-key-text-wrapper\"],[8],[0,\"\\n                \"],[1,[28,\"textarea\",null,[[\"class\",\"readonly\",\"value\"],[\"public-key-value\",true,[24,[\"publicKey\"]]]]],false],[0,\"\\n                \"],[1,[28,\"copy-button\",null,[[\"selector\"],[\"textarea.public-key-value\"]]],false],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"privateChecked\"]]],null,{\"statements\":[[0,\"              \"],[7,\"div\",true],[10,\"class\",\"public-key-note\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.public_key_note\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"create\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"inputs\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.create_name\"],null],false],[9],[0,\"\\n        \"],[1,[28,\"input\",null,[[\"value\",\"placeholder\"],[[24,[\"name\"]],[24,[\"placeholder\"]]]]],false],[0,\"\\n\\n        \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.customize.theme.create_type\"],null],false],[9],[0,\"\\n        \"],[1,[28,\"combo-box\",null,[[\"valueProperty\",\"content\",\"value\",\"onChange\"],[\"value\",[24,[\"createTypes\"]],[24,[\"selectedType\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"selectedType\"]]],null]],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"directRepoInstall\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"repo\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"html-safe\",[[28,\"i18n\",[\"admin.customize.theme.direct_install_tip\"],[[\"name\"],[[24,[\"uploadName\"]]]]]],null],false],[9],[0,\"\\n        \"],[7,\"pre\",true],[8],[7,\"code\",true],[8],[1,[22,\"uploadUrl\"],false],[9],[9],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"unless\",[[24,[\"popular\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"modal-footer\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"duplicateRemoteThemeWarning\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"install-theme-warning\"],[8],[0,\"\\n        ⚠️ \"],[1,[22,\"duplicateRemoteThemeWarning\"],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[28,\"d-button\",null,[[\"action\",\"disabled\",\"class\",\"label\"],[[28,\"action\",[[23,0,[]],\"installTheme\"],null],[24,[\"installDisabled\"]],\"btn btn-primary\",[24,[\"submitLabel\"]]]]],false],[0,\"\\n    \"],[1,[28,\"d-modal-cancel\",null,[[\"close\"],[[28,\"route-action\",[\"closeModal\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-install-theme"}});
Ember.TEMPLATES["admin/templates/modal/admin-merge-users-confirmation"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[8],[0,\"\\n\"],[4,\"d-modal-body\",null,[[\"rawTitle\"],[[28,\"i18n\",[\"admin.user.merge.confirmation.title\"],[[\"username\"],[[24,[\"username\"]]]]]]],{\"statements\":[[0,\"    \"],[7,\"p\",true],[8],[1,[28,\"html-safe\",[[28,\"i18n\",[\"admin.user.merge.confirmation.description\"],[[\"username\",\"targetUsername\",\"text\"],[[24,[\"username\"]],[24,[\"targetUsername\"]],[24,[\"text\"]]]]]],null],false],[9],[0,\"\\n    \"],[1,[28,\"input\",null,[[\"type\",\"value\"],[\"text\",[24,[\"value\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"modal-footer\"],[8],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"disabled\",\"translatedLabel\"],[\"btn-danger\",[28,\"action\",[[23,0,[]],\"confirm\"],null],\"trash-alt\",[24,[\"mergeDisabled\"]],[24,[\"mergeButtonText\"]]]]],false],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"action\",\"label\"],[[28,\"action\",[[23,0,[]],\"close\"],null],\"admin.user.merge.confirmation.cancel\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-merge-users-confirmation"}});
Ember.TEMPLATES["admin/templates/modal/admin-merge-users-progress"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"d-modal-body\",null,[[\"title\",\"dismissable\"],[\"admin.user.merge.progress.title\",false]],{\"statements\":[[0,\"  \"],[1,[22,\"message\"],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-merge-users-progress"}});
Ember.TEMPLATES["admin/templates/modal/admin-merge-users-prompt"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[8],[0,\"\\n\"],[4,\"d-modal-body\",null,[[\"rawTitle\"],[[28,\"i18n\",[\"admin.user.merge.prompt.title\"],[[\"username\"],[[24,[\"username\"]]]]]]],{\"statements\":[[0,\"    \"],[7,\"p\",true],[8],[1,[28,\"html-safe\",[[28,\"i18n\",[\"admin.user.merge.prompt.description\"],[[\"username\"],[[24,[\"username\"]]]]]],null],false],[9],[0,\"\\n    \"],[1,[28,\"email-group-user-chooser\",null,[[\"value\",\"onChange\",\"options\"],[[24,[\"targetUsername\"]],[28,\"action\",[[23,0,[]],\"updateUsername\"],null],[28,\"hash\",null,[[\"maximum\",\"filterPlaceholder\"],[1,\"admin.user.merge.prompt.target_username_placeholder\"]]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"modal-footer\"],[8],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"disabled\",\"translatedLabel\"],[\"btn-primary\",[28,\"action\",[[23,0,[]],\"showConfirmation\"],null],\"trash-alt\",[24,[\"mergeDisabled\"]],[24,[\"mergeButtonText\"]]]]],false],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"action\",\"label\"],[[28,\"action\",[[23,0,[]],\"close\"],null],\"admin.user.merge.prompt.cancel\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-merge-users-prompt"}});
Ember.TEMPLATES["admin/templates/modal/admin-reseed"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"topic\",\"category\"],\"statements\":[[4,\"d-modal-body\",null,[[\"title\",\"subtitle\",\"class\"],[\"admin.reseed.modal.title\",\"admin.reseed.modal.subtitle\",\"reseed-modal\"]],{\"statements\":[[4,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"loading\"]]]],{\"statements\":[[4,\"if\",[[24,[\"categories\"]]],null,{\"statements\":[[0,\"      \"],[7,\"fieldset\",true],[8],[0,\"\\n        \"],[7,\"legend\",true],[10,\"class\",\"options-group-title\"],[8],[1,[28,\"i18n\",[\"admin.reseed.modal.categories\"],null],false],[9],[0,\"\\n\\n\"],[4,\"each\",[[24,[\"categories\"]]],null,{\"statements\":[[0,\"          \"],[7,\"label\",true],[8],[0,\"\\n            \"],[1,[28,\"input\",null,[[\"class\",\"type\",\"checked\"],[\"option\",\"checkbox\",[23,2,[\"selected\"]]]]],false],[0,\"\\n            \"],[7,\"span\",true],[8],[1,[23,2,[\"name\"]],false],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n    \"],[7,\"br\",true],[8],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"topics\"]]],null,{\"statements\":[[0,\"      \"],[7,\"fieldset\",true],[8],[0,\"\\n        \"],[7,\"legend\",true],[10,\"class\",\"options-group-title\"],[8],[1,[28,\"i18n\",[\"admin.reseed.modal.topics\"],null],false],[9],[0,\"\\n\\n\"],[4,\"each\",[[24,[\"topics\"]]],null,{\"statements\":[[0,\"          \"],[7,\"label\",true],[8],[0,\"\\n            \"],[1,[28,\"input\",null,[[\"class\",\"type\",\"checked\"],[\"option\",\"checkbox\",[23,1,[\"selected\"]]]]],false],[0,\"\\n            \"],[7,\"span\",true],[8],[1,[23,1,[\"name\"]],false],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"modal-footer\"],[8],[0,\"\\n  \"],[1,[28,\"conditional-loading-spinner\",null,[[\"condition\",\"size\"],[[24,[\"reseeding\"]],\"small\"]]],false],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"label\",\"disabled\"],[[28,\"action\",[[23,0,[]],\"reseed\"],null],\"btn-danger\",\"admin.reseed.modal.replace\",[24,[\"reseeding\"]]]]],false],[0,\"\\n\\n\"],[4,\"unless\",[[24,[\"reseeding\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"d-modal-cancel\",null,[[\"close\"],[[28,\"route-action\",[\"closeModal\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-reseed"}});
Ember.TEMPLATES["admin/templates/modal/admin-silence-user"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"d-modal-body\",null,[[\"title\"],[\"admin.user.silence_modal_title\"]],{\"statements\":[[4,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"loadingUser\"]]]],{\"statements\":[[0,\"\\n\"],[4,\"if\",[[24,[\"errorMessage\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"alert alert-error\"],[8],[1,[22,\"errorMessage\"],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n    \"],[1,[28,\"admin-penalty-history\",null,[[\"user\"],[[24,[\"user\"]]]]],false],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"until-controls\"],[8],[0,\"\\n      \"],[7,\"label\",true],[8],[0,\"\\n        \"],[1,[28,\"future-date-input\",null,[[\"class\",\"label\",\"includeFarFuture\",\"clearable\",\"input\",\"onChangeInput\"],[\"silence-until\",\"admin.user.silence_duration\",true,false,[24,[\"silenceUntil\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"silenceUntil\"]]],null]],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[1,[28,\"silence-details\",null,[[\"reason\",\"message\"],[[24,[\"reason\"]],[24,[\"message\"]]]]],false],[0,\"\\n\"],[4,\"if\",[[24,[\"postId\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"penalty-post-action\",null,[[\"postId\",\"postAction\",\"postEdit\"],[[24,[\"postId\"]],[24,[\"postAction\"]],[24,[\"postEdit\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"modal-footer\"],[8],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"disabled\",\"icon\",\"label\"],[\"btn-danger perform-silence\",[28,\"action\",[[23,0,[]],\"silence\"],null],[24,[\"submitDisabled\"]],\"microphone-slash\",\"admin.user.silence\"]]],false],[0,\"\\n  \"],[1,[28,\"d-modal-cancel\",null,[[\"close\"],[[28,\"route-action\",[\"closeModal\"],null]]]],false],[0,\"\\n  \"],[1,[28,\"conditional-loading-spinner\",null,[[\"condition\",\"size\"],[[24,[\"loading\"]],\"small\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-silence-user"}});
Ember.TEMPLATES["admin/templates/modal/admin-staff-action-log-details"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"d-modal-body\",null,[[\"title\"],[\"admin.logs.staff_actions.modal_title\"]],{\"statements\":[[0,\"  \"],[7,\"pre\",true],[8],[1,[24,[\"model\",\"details\"]],false],[9],[0,\"\"]],\"parameters\":[]},null],[7,\"div\",true],[10,\"class\",\"modal-footer\"],[8],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"action\",\"label\"],[[28,\"route-action\",[\"closeModal\"],null],\"close\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-staff-action-log-details"}});
Ember.TEMPLATES["admin/templates/modal/admin-start-backup"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"d-modal-body\",null,[[\"title\"],[\"admin.backups.operations.backup.confirm\"]],{\"statements\":[[0,\"  \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"label\"],[\"btn-primary backup-with-uploads\",[28,\"action\",[[23,0,[]],\"startBackupWithUploads\"],null],\"yes_value\"]]],false],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"label\"],[\"backup-no-uploads\",[28,\"action\",[[23,0,[]],\"startBackupWithoutUploads\"],null],\"admin.backups.operations.backup.without_uploads\"]]],false],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"cancel\"],null],\"no_value\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-start-backup"}});
Ember.TEMPLATES["admin/templates/modal/admin-suspend-user"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"d-modal-body\",null,[[\"title\"],[\"admin.user.suspend_modal_title\"]],{\"statements\":[[4,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"loadingUser\"]]]],{\"statements\":[[0,\"\\n\"],[4,\"if\",[[24,[\"errorMessage\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"alert alert-error\"],[8],[1,[22,\"errorMessage\"],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"user\",\"canSuspend\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"admin-penalty-history\",null,[[\"user\"],[[24,[\"user\"]]]]],false],[0,\"\\n\\n      \"],[7,\"div\",true],[10,\"class\",\"until-controls\"],[8],[0,\"\\n        \"],[7,\"label\",true],[8],[0,\"\\n          \"],[1,[28,\"future-date-input\",null,[[\"class\",\"label\",\"includeFarFuture\",\"clearable\",\"input\",\"onChangeInput\"],[\"suspend-until\",\"admin.user.suspend_duration\",true,false,[24,[\"suspendUntil\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"suspendUntil\"]]],null]],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[1,[28,\"suspension-details\",null,[[\"reason\",\"message\"],[[24,[\"reason\"]],[24,[\"message\"]]]]],false],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"postId\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"penalty-post-action\",null,[[\"postId\",\"postAction\",\"postEdit\"],[[24,[\"postId\"]],[24,[\"postAction\"]],[24,[\"postEdit\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"cant-suspend\"],[8],[0,\"\\n        \"],[1,[28,\"i18n\",[\"admin.user.cant_suspend\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"modal-footer\"],[8],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"disabled\",\"icon\",\"label\"],[\"btn-danger perform-suspend\",[28,\"action\",[[23,0,[]],\"suspend\"],null],[24,[\"submitDisabled\"]],\"ban\",\"admin.user.suspend\"]]],false],[0,\"\\n  \"],[1,[28,\"d-modal-cancel\",null,[[\"close\"],[[28,\"route-action\",[\"closeModal\"],null]]]],false],[0,\"\\n  \"],[1,[28,\"conditional-loading-spinner\",null,[[\"condition\",\"size\"],[[24,[\"loading\"]],\"small\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-suspend-user"}});
Ember.TEMPLATES["admin/templates/modal/admin-theme-change"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[8],[0,\"\\n\"],[4,\"d-modal-body\",null,[[\"title\"],[\"admin.logs.staff_actions.modal_title\"]],{\"statements\":[[0,\"    \"],[1,[28,\"html-safe\",[[24,[\"diff\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[7,\"div\",true],[10,\"class\",\"modal-footer\"],[8],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"label\"],[\"btn-primary\",[28,\"route-action\",[\"closeModal\"],null],\"close\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-theme-change"}});
Ember.TEMPLATES["admin/templates/modal/admin-theme-item"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"popular-theme-item\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"popular-theme-name\"],[8],[0,\"\\n    \"],[1,[24,[\"theme\",\"name\"]],false],[0,\"\\n\"],[4,\"if\",[[24,[\"theme\",\"preview\"]]],null,{\"statements\":[[0,\"      \"],[7,\"a\",true],[11,\"href\",[24,[\"theme\",\"preview\"]]],[10,\"title\",\"Preview\"],[10,\"rel\",\"noopener noreferrer\"],[10,\"target\",\"_blank\"],[8],[1,[28,\"d-icon\",[\"far-eye\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"popular-theme-buttons\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"theme\",\"installed\"]]],null,{\"statements\":[[0,\"      \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"admin.customize.theme.installed\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[1,[28,\"d-button\",null,[[\"class\",\"label\",\"disabled\",\"icon\",\"action\"],[\"btn-small\",\"admin.customize.theme.install\",[24,[\"installDisabled\"]],\"upload\",[28,\"action\",[[23,0,[]],\"installThemeFromList\",[24,[\"theme\",\"value\"]]],null]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-theme-item"}});
Ember.TEMPLATES["admin/templates/modal/admin-uploaded-image-list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"image\"],\"statements\":[[4,\"d-modal-body\",null,[[\"class\"],[\"uploaded-image-list\"]],{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"selectable-avatars\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"images\"]]],null,{\"statements\":[[0,\"      \"],[7,\"a\",false],[12,\"href\",\"\"],[12,\"class\",\"selectable-avatar\"],[3,\"action\",[[23,0,[]],\"remove\",[23,1,[]]]],[8],[0,\"\\n        \"],[1,[28,\"bound-avatar-template\",[[23,1,[]],\"huge\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[1]},{\"statements\":[[0,\"      \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.site_settings.uploaded_image_list.empty\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[7,\"div\",true],[10,\"class\",\"modal-footer\"],[8],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"action\",\"label\"],[[28,\"action\",[[23,0,[]],\"close\"],null],\"close\"]]],false],[0,\"\\n  \"],[1,[28,\"images-uploader\",null,[[\"uploading\",\"done\",\"class\"],[[24,[\"uploading\"]],[28,\"action\",[[23,0,[]],\"uploadDone\"],null],\"pull-right\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-uploaded-image-list"}});
Ember.TEMPLATES["admin/templates/modal/admin-watched-word-test"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"match\",\"match\",\"tag\",\"match\"],\"statements\":[[4,\"d-modal-body\",null,[[\"rawTitle\",\"class\"],[[28,\"i18n\",[\"admin.watched_words.test.modal_title\"],[[\"action\"],[[24,[\"model\",\"name\"]]]]],\"watched-words-test-modal\"]],{\"statements\":[[0,\"  \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.watched_words.test.description\"],null],false],[9],[0,\"\\n  \"],[1,[28,\"textarea\",null,[[\"name\",\"value\",\"autofocus\"],[\"test_value\",[24,[\"value\"]],\"autofocus\"]]],false],[0,\"\\n\"],[4,\"if\",[[24,[\"matches\"]]],null,{\"statements\":[[0,\"    \"],[7,\"p\",true],[8],[0,\"\\n      \"],[1,[28,\"i18n\",[\"admin.watched_words.test.found_matches\"],null],false],[0,\"\\n      \"],[7,\"ul\",true],[8],[0,\"\\n\"],[4,\"if\",[[28,\"or\",[[24,[\"isReplace\"]],[24,[\"isLink\"]]],null]],null,{\"statements\":[[4,\"each\",[[24,[\"matches\"]]],null,{\"statements\":[[0,\"            \"],[7,\"li\",true],[8],[0,\"\\n              \"],[7,\"span\",true],[10,\"class\",\"match\"],[8],[1,[23,4,[\"match\"]],false],[9],[0,\"\\n              →\\n              \"],[7,\"span\",true],[10,\"class\",\"replacement\"],[8],[1,[23,4,[\"replacement\"]],false],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[4]},null]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"isTag\"]]],null,{\"statements\":[[4,\"each\",[[24,[\"matches\"]]],null,{\"statements\":[[0,\"            \"],[7,\"li\",true],[8],[0,\"\\n              \"],[7,\"span\",true],[10,\"class\",\"match\"],[8],[1,[23,2,[\"match\"]],false],[9],[0,\"\\n              →\\n\"],[4,\"each\",[[23,2,[\"tags\"]]],null,{\"statements\":[[0,\"                \"],[7,\"span\",true],[10,\"class\",\"tag\"],[8],[1,[23,3,[]],false],[9],[0,\"\\n\"]],\"parameters\":[3]},null],[0,\"            \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null]],\"parameters\":[]},{\"statements\":[[4,\"each\",[[24,[\"matches\"]]],null,{\"statements\":[[0,\"            \"],[7,\"li\",true],[8],[1,[23,1,[]],false],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"        \"]],\"parameters\":[]}]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.watched_words.test.no_matches\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/admin-watched-word-test"}});
Ember.TEMPLATES["admin/templates/modal/site-setting-default-categories"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"d-modal-body\",null,[[\"class\",\"rawTitle\"],[\"incoming-emails\",[24,[\"model\",\"key\"]]]],{\"statements\":[[0,\"  \"],[1,[28,\"i18n\",[\"admin.site_settings.default_categories.modal_description\"],[[\"count\"],[[24,[\"model\",\"count\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"modal-footer\"],[8],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"label\"],[[28,\"action\",[[23,0,[]],\"updateExistingUsers\"],null],\"btn-primary\",\"admin.site_settings.default_categories.modal_yes\"]]],false],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"action\",\"label\"],[[28,\"action\",[[23,0,[]],\"cancel\"],null],\"admin.site_settings.default_categories.modal_no\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/modal/site-setting-default-categories"}});
Ember.TEMPLATES["admin/templates/permalinks"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"pl\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"permalink-title\"],[8],[0,\"\\n  \"],[7,\"h2\",true],[8],[1,[28,\"i18n\",[\"admin.permalink.title\"],null],false],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"permalink-description\"],[8],[0,\"\\n  \"],[7,\"span\",true],[8],[1,[28,\"i18n\",[\"admin.permalink.description\"],null],false],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"permalink-search\"],[8],[0,\"\\n  \"],[1,[28,\"text-field\",null,[[\"value\",\"class\",\"placeholderKey\",\"autocorrect\",\"autocapitalize\"],[[24,[\"filter\"]],\"url-input\",\"admin.permalink.form.filter\",\"off\",\"off\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[1,[28,\"permalink-form\",null,[[\"action\"],[[28,\"action\",[[23,0,[]],\"recordAdded\"],null]]]],false],[0,\"\\n\"],[7,\"br\",true],[8],[9],[0,\"\\n\\n\"],[4,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"loading\"]]]],{\"statements\":[[4,\"if\",[[24,[\"model\",\"length\"]]],null,{\"statements\":[[0,\"    \"],[7,\"table\",true],[10,\"class\",\"admin-logs-table permalinks grid\"],[8],[0,\"\\n      \"],[7,\"thead\",true],[10,\"class\",\"heading-container\"],[8],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"col heading first url\"],[8],[1,[28,\"i18n\",[\"admin.permalink.url\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"col heading destination\"],[8],[1,[28,\"i18n\",[\"admin.permalink.destination\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"col heading actions\"],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"          \"],[7,\"tr\",true],[10,\"class\",\"admin-list-item\"],[8],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"col first url\"],[8],[1,[28,\"d-button\",null,[[\"title\",\"icon\",\"action\"],[\"admin.permalink.copy_to_clipboard\",\"far-clipboard\",[28,\"action\",[[23,0,[]],\"copyUrl\",[23,1,[]]],null]]]],false],[0,\" \"],[7,\"span\",true],[11,\"id\",[29,[\"admin-permalink-\",[23,1,[\"id\"]]]]],[11,\"title\",[23,1,[\"url\"]]],[8],[1,[23,1,[\"url\"]],false],[9],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"col destination\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"topic_id\"]]],null,{\"statements\":[[0,\"                \"],[7,\"a\",true],[11,\"href\",[23,1,[\"topic_url\"]]],[8],[1,[23,1,[\"topic_title\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[23,1,[\"post_id\"]]],null,{\"statements\":[[0,\"                \"],[7,\"a\",true],[11,\"href\",[23,1,[\"post_url\"]]],[8],[1,[23,1,[\"post_topic_title\"]],false],[0,\" #\"],[1,[23,1,[\"post_number\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[23,1,[\"category_id\"]]],null,{\"statements\":[[0,\"                \"],[1,[28,\"category-link\",[[23,1,[\"category\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[23,1,[\"tag_id\"]]],null,{\"statements\":[[0,\"                \"],[7,\"a\",true],[11,\"href\",[23,1,[\"tag_url\"]]],[8],[1,[23,1,[\"tag_name\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[23,1,[\"external_url\"]]],null,{\"statements\":[[4,\"if\",[[23,1,[\"linkIsExternal\"]]],null,{\"statements\":[[0,\"                  \"],[1,[28,\"d-icon\",[\"external-link-alt\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"                \"],[7,\"a\",true],[11,\"href\",[23,1,[\"external_url\"]]],[8],[1,[23,1,[\"external_url\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"            \"],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"col action\"],[10,\"style\",\"text-align: right;\"],[8],[0,\"\\n              \"],[1,[28,\"d-button\",null,[[\"action\",\"actionParam\",\"icon\",\"class\"],[[28,\"action\",[[23,0,[]],\"destroy\"],null],[23,1,[]],\"far-trash-alt\",\"btn-danger\"]]],false],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[1,[28,\"i18n\",[\"search.no_results\"],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/permalinks"}});
Ember.TEMPLATES["admin/templates/plugins-index"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"plugin\"],\"statements\":[[4,\"if\",[[24,[\"model\",\"length\"]]],null,{\"statements\":[[0,\"  \"],[7,\"h3\",true],[8],[1,[28,\"i18n\",[\"admin.plugins.installed\"],null],false],[9],[0,\"\\n\\n  \"],[7,\"table\",true],[10,\"class\",\"admin-plugins grid\"],[8],[0,\"\\n    \"],[7,\"thead\",true],[8],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.plugins.name\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.plugins.version\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.plugins.enabled\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"        \"],[7,\"tr\",true],[8],[0,\"\\n          \"],[7,\"td\",true],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"is_official\"]]],null,{\"statements\":[[0,\"              \"],[1,[28,\"d-icon\",[\"check-circle\"],[[\"title\",\"class\"],[\"admin.plugins.official\",\"admin-plugins-official-badge\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"          \"],[9],[0,\"\\n\\n          \"],[7,\"td\",true],[10,\"class\",\"plugin-name\"],[8],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"name\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"url\"]]],null,{\"statements\":[[0,\"                \"],[7,\"a\",true],[11,\"href\",[23,1,[\"url\"]]],[10,\"rel\",\"noopener noreferrer\"],[10,\"target\",\"_blank\"],[8],[1,[23,1,[\"name\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                \"],[1,[23,1,[\"name\"]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"            \"],[9],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"about\"],[8],[0,\"\\n              \"],[1,[23,1,[\"about\"]],false],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"version\"],[8],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.plugins.version\"],null],false],[9],[0,\"\\n            \"],[1,[23,1,[\"version\"]],false],[0,\"\\n          \"],[9],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"col-enabled\"],[8],[0,\"\\n            \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.plugins.enabled\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[23,1,[\"enabled_setting\"]]],null,{\"statements\":[[4,\"if\",[[23,1,[\"enabled\"]]],null,{\"statements\":[[0,\"                \"],[1,[28,\"i18n\",[\"admin.plugins.is_enabled\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                \"],[1,[28,\"i18n\",[\"admin.plugins.not_enabled\"],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},{\"statements\":[[0,\"              \"],[1,[28,\"i18n\",[\"admin.plugins.is_enabled\"],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"          \"],[9],[0,\"\\n          \"],[7,\"td\",true],[10,\"class\",\"settings\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"currentUser\",\"admin\"]]],null,{\"statements\":[[4,\"if\",[[23,1,[\"has_settings\"]]],null,{\"statements\":[[0,\"                \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"actionParam\",\"icon\",\"label\"],[\"btn-default\",[28,\"route-action\",[\"showSettings\"],null],[23,1,[]],\"cog\",\"admin.plugins.change_settings_short\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.plugins.none_installed\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n\"],[7,\"p\",true],[10,\"class\",\"admin-plugins-howto\"],[8],[7,\"a\",true],[10,\"href\",\"https://meta.discourse.org/t/install-a-plugin/19157\"],[8],[1,[28,\"i18n\",[\"admin.plugins.howto\"],null],false],[9],[9],[0,\"\\n\\n\"],[1,[28,\"plugin-outlet\",null,[[\"name\",\"args\"],[\"admin-below-plugins-index\",[28,\"hash\",null,[[\"model\"],[[24,[\"model\"]]]]]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/plugins-index"}});
Ember.TEMPLATES["admin/templates/plugins"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"route\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"admin-controls\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"icon\"],[[28,\"action\",[[23,0,[]],\"toggleMenu\"],null],\"menu-toggle\",\"bars\"]]],false],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"currentUser\",\"admin\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"d-button\",null,[[\"label\",\"icon\",\"class\",\"action\"],[\"admin.plugins.change_settings\",\"cog\",\"btn-default settings-button\",[28,\"route-action\",[\"showSettings\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"admin-nav pull-left\"],[8],[0,\"\\n  \"],[7,\"ul\",true],[10,\"class\",\"nav nav-stacked\"],[8],[0,\"\\n    \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[\"adminPlugins.index\",\"admin.plugins.title\"]]],false],[0,\"\\n\\n\"],[4,\"each\",[[24,[\"adminRoutes\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\"],[[23,1,[\"full_location\"]],[23,1,[\"label\"]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"admin-detail pull-left mobile-closed\"],[8],[0,\"\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"clearfix\"],[8],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/plugins"}});
Ember.TEMPLATES["admin/templates/reports-show"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[1,[28,\"admin-report\",null,[[\"showAllReportsLink\",\"dataSourceName\",\"filters\",\"reportOptions\",\"showFilteringUI\",\"onRefresh\"],[true,[24,[\"model\",\"type\"]],[24,[\"model\"]],[24,[\"reportOptions\"]],true,[28,\"route-action\",[\"onParamsChange\"],null]]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/reports-show"}});
Ember.TEMPLATES["admin/templates/search-logs-index"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"item\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"admin-title\"],[8],[0,\"\\n  \"],[1,[28,\"period-chooser\",null,[[\"period\",\"onChange\"],[[24,[\"period\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"period\"]]],null]],null]]]],false],[0,\"\\n  \"],[1,[28,\"combo-box\",null,[[\"content\",\"value\",\"class\",\"onChange\"],[[24,[\"searchTypeOptions\"]],[24,[\"searchType\"]],\"search-logs-filter\",[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"searchType\"]]],null]],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"loading\"]]]],{\"statements\":[[4,\"if\",[[24,[\"model\",\"length\"]]],null,{\"statements\":[[0,\"\\n    \"],[7,\"table\",true],[10,\"class\",\"search-logs-list grid\"],[8],[0,\"\\n      \"],[7,\"thead\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"col heading term\"],[8],[1,[28,\"i18n\",[\"admin.logs.search_logs.term\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"col heading\"],[8],[1,[28,\"i18n\",[\"admin.logs.search_logs.searches\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[10,\"class\",\"col heading\"],[8],[1,[28,\"i18n\",[\"admin.logs.search_logs.click_through_rate\"],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"          \"],[7,\"tr\",true],[10,\"class\",\"admin-list-item\"],[8],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"col term\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"query\",\"route\"],[\"test\",[28,\"hash\",null,[[\"term\",\"period\"],[[23,1,[\"term\"]],[24,[\"period\"]]]]],\"adminSearchLogs.term\"]],{\"statements\":[[0,\"                \"],[1,[23,1,[\"term\"]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"            \"],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"col\"],[8],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.logs.search_logs.searches\"],null],false],[9],[1,[23,1,[\"searches\"]],false],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"col\"],[8],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.logs.search_logs.click_through_rate\"],null],false],[9],[1,[23,1,[\"ctr\"]],false],[0,\"%\"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[1,[28,\"i18n\",[\"search.no_results\"],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/search-logs-index"}});
Ember.TEMPLATES["admin/templates/search-logs-term"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"result\",\"tag\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"admin-title\"],[8],[0,\"\\n  \"],[1,[28,\"period-chooser\",null,[[\"period\",\"onChange\"],[[24,[\"period\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"period\"]]],null]],null]]]],false],[0,\"\\n  \"],[1,[28,\"combo-box\",null,[[\"content\",\"value\",\"class\",\"onChange\"],[[24,[\"searchTypeOptions\"]],[24,[\"searchType\"]],\"search-logs-filter\",[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"searchType\"]]],null]],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"h2\",true],[8],[0,\"\\n  \"],[4,\"link-to\",null,[[\"query\",\"route\"],[[28,\"hash\",null,[[\"q\"],[[24,[\"term\"]]]]],\"full-page-search\"]],{\"statements\":[[1,[22,\"term\"],false]],\"parameters\":[]},null],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"refreshing\"]]]],{\"statements\":[[0,\"  \"],[1,[28,\"admin-graph\",null,[[\"model\",\"type\"],[[24,[\"model\"]],\"bar\"]]],false],[0,\"\\n\\n  \"],[7,\"br\",true],[8],[9],[7,\"br\",true],[8],[9],[0,\"\\n  \"],[7,\"h2\",true],[8],[0,\" \"],[1,[28,\"i18n\",[\"admin.logs.search_logs.header_search_results\"],null],false],[0,\" \"],[9],[0,\"\\n  \"],[7,\"br\",true],[8],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"header-search-results\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\",\"search_result\",\"posts\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"fps-result\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"author\"],[8],[0,\"\\n          \"],[7,\"a\",true],[11,\"href\",[23,1,[\"userPath\"]]],[11,\"data-user-card\",[23,1,[\"username\"]]],[8],[0,\"\\n            \"],[1,[28,\"avatar\",[[23,1,[]]],[[\"imageSize\"],[\"large\"]]],false],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\\n        \"],[7,\"div\",true],[10,\"class\",\"fps-topic\"],[8],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"topic\"],[8],[0,\"\\n            \"],[7,\"a\",true],[11,\"href\",[23,1,[\"url\"]]],[10,\"class\",\"search-link\"],[8],[0,\"\\n              \"],[1,[28,\"topic-status\",null,[[\"topic\",\"disableActions\"],[[23,1,[\"topic\"]],true]]],false],[0,\"\\n              \"],[7,\"span\",true],[10,\"class\",\"topic-title\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"useTopicTitleHeadline\"]]],null,{\"statements\":[[0,\"                  \"],[1,[28,\"html-safe\",[[23,1,[\"topicTitleHeadline\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"highlight-search\",null,[[\"highlight\"],[[24,[\"q\"]]]],{\"statements\":[[0,\"                    \"],[1,[28,\"html-safe\",[[23,1,[\"topic\",\"fancyTitle\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n\\n            \"],[7,\"div\",true],[10,\"class\",\"search-category\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"topic\",\"category\",\"parentCategory\"]]],null,{\"statements\":[[0,\"                \"],[1,[28,\"category-link\",[[23,1,[\"topic\",\"category\",\"parentCategory\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"              \"],[1,[28,\"category-link\",[[23,1,[\"topic\",\"category\"]]],[[\"hideParent\"],[true]]],false],[0,\"\\n\"],[4,\"each\",[[23,1,[\"topic\",\"tags\"]]],null,{\"statements\":[[0,\"                \"],[1,[28,\"discourse-tag\",[[23,2,[]]],null],false],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\\n          \"],[7,\"div\",true],[10,\"class\",\"blurb container\"],[8],[0,\"\\n            \"],[7,\"span\",true],[10,\"class\",\"date\"],[8],[0,\"\\n              \"],[1,[28,\"format-age\",[[23,1,[\"created_at\"]]],null],false],[0,\"\\n\"],[4,\"if\",[[23,1,[\"blurb\"]]],null,{\"statements\":[[0,\"                -\\n\"]],\"parameters\":[]},null],[0,\"            \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[23,1,[\"blurb\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"siteSettings\",\"use_pg_headlines_for_excerpt\"]]],null,{\"statements\":[[0,\"                \"],[1,[28,\"html-safe\",[[23,1,[\"blurb\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"highlight-search\",null,[[\"highlight\"],[[24,[\"highlightQuery\"]]]],{\"statements\":[[0,\"                  \"],[1,[28,\"html-safe\",[[23,1,[\"blurb\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/search-logs-term"}});
Ember.TEMPLATES["admin/templates/site-settings-category"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"setting\"],\"statements\":[[4,\"if\",[[24,[\"filteredContent\"]]],null,{\"statements\":[[4,\"d-section\",null,[[\"class\"],[\"form-horizontal settings\"]],{\"statements\":[[4,\"each\",[[24,[\"filteredContent\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"site-setting\",null,[[\"setting\",\"afterSave\"],[[23,1,[]],[28,\"route-action\",[\"refreshAll\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[4,\"if\",[[24,[\"category\",\"hasMore\"]]],null,{\"statements\":[[0,\"      \"],[7,\"p\",true],[10,\"class\",\"warning\"],[8],[1,[28,\"i18n\",[\"admin.site_settings.more_than_30_results\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[7,\"br\",true],[8],[9],[0,\"\\n  \"],[1,[28,\"i18n\",[\"admin.site_settings.no_results\"],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/site-settings-category"}});
Ember.TEMPLATES["admin/templates/site-settings"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"category\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"admin-controls\"],[8],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"inline-form\"],[8],[0,\"\\n      \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"icon\"],[[28,\"action\",[[23,0,[]],\"toggleMenu\"],null],\"menu-toggle\",\"bars\"]]],false],[0,\"\\n      \"],[1,[28,\"text-field\",null,[[\"id\",\"value\",\"placeholderKey\",\"class\"],[\"setting-filter\",[24,[\"filter\"]],\"type_to_filter\",\"no-blur\"]]],false],[0,\"\\n      \"],[1,[28,\"d-button\",null,[[\"class\",\"id\",\"action\",\"label\"],[\"btn-default\",\"clear-filter\",[28,\"action\",[[23,0,[]],\"clearFilter\"],null],\"admin.site_settings.clear_filter\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"search controls\"],[8],[0,\"\\n    \"],[7,\"label\",true],[8],[0,\"\\n      \"],[1,[28,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[24,[\"onlyOverridden\"]]]]],false],[0,\"\\n      \"],[1,[28,\"i18n\",[\"admin.settings.show_overriden\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"admin-nav pull-left\"],[8],[0,\"\\n  \"],[7,\"ul\",true],[10,\"class\",\"nav nav-stacked\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"visibleSiteSettings\"]]],null,{\"statements\":[[0,\"      \"],[7,\"li\",true],[11,\"class\",[23,1,[\"nameKey\"]]],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"route\",\"model\"],[[23,1,[\"nameKey\"]],\"adminSiteSettingsCategory\",[23,1,[\"nameKey\"]]]],{\"statements\":[[0,\"          \"],[1,[23,1,[\"name\"]],false],[0,\"\\n          \"],[4,\"if\",[[23,1,[\"count\"]]],null,{\"statements\":[[7,\"span\",true],[10,\"class\",\"count\"],[8],[0,\"(\"],[1,[23,1,[\"count\"]],false],[0,\")\"],[9]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"admin-detail pull-left mobile-closed\"],[8],[0,\"\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"clearfix\"],[8],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/site-settings"}});
Ember.TEMPLATES["admin/templates/site-text-edit"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"edit-site-text\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"title\"],[8],[0,\"\\n    \"],[7,\"h3\",true],[8],[1,[24,[\"siteText\",\"id\"]],false],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"title\"],[8],[0,\"\\n    \"],[7,\"h4\",true],[8],[1,[28,\"i18n\",[\"admin.site_text.locale\"],null],false],[0,\" \"],[1,[22,\"localeFullName\"],false],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[1,[28,\"expanding-text-area\",null,[[\"value\",\"rows\",\"class\"],[[24,[\"buffered\",\"value\"]],\"1\",\"site-text-value\"]]],false],[0,\"\\n\\n\"],[4,\"save-controls\",null,[[\"model\",\"action\",\"saved\",\"saveDisabled\"],[[24,[\"siteText\"]],[28,\"action\",[[23,0,[]],\"saveChanges\"],null],[24,[\"saved\"]],[24,[\"saveDisabled\"]]]],{\"statements\":[[4,\"if\",[[24,[\"siteText\",\"can_revert\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"d-button\",null,[[\"action\",\"label\",\"class\"],[[28,\"action\",[[23,0,[]],\"revertChanges\"],null],\"admin.site_text.revert\",\"revert-site-text\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"query\",\"route\"],[\"go-back\",[28,\"hash\",null,[[\"locale\"],[[24,[\"locale\"]]]]],\"adminSiteText.index\"]],{\"statements\":[[0,\"    \"],[1,[28,\"d-icon\",[\"arrow-left\"],null],false],[0,\"\\n    \"],[1,[28,\"i18n\",[\"admin.site_text.go_back\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/site-text-edit"}});
Ember.TEMPLATES["admin/templates/site-text-index"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"siteText\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"search-area\"],[8],[0,\"\\n  \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.site_text.description\"],null],false],[9],[0,\"\\n\\n  \"],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\",\"class\",\"autofocus\",\"key-up\"],[[24,[\"q\"]],\"admin.site_text.search\",\"no-blur site-text-search\",\"true\",[28,\"action\",[[23,0,[]],\"search\"],null]]]],false],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"reseed\"],[8],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"label\",\"title\",\"icon\"],[[28,\"route-action\",[\"showReseedModal\"],null],\"btn-default\",\"admin.reseed.action.label\",\"admin.reseed.action.title\",\"sync\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"p\",true],[10,\"class\",\"filter-options\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"locale\"],[8],[0,\"\\n      \"],[7,\"label\",true],[8],[1,[28,\"i18n\",[\"admin.site_text.locale\"],null],false],[9],[0,\"\\n      \"],[1,[28,\"combo-box\",null,[[\"valueProperty\",\"content\",\"value\",\"onChange\",\"class\",\"options\"],[\"value\",[24,[\"availableLocales\"]],[24,[\"locale\"]],[28,\"action\",[[23,0,[]],\"updateLocale\"],null],\"locale-search\",[28,\"hash\",null,[[\"filterable\"],[true]]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"label\",true],[8],[0,\"\\n      \"],[1,[28,\"input\",null,[[\"type\",\"checked\",\"click\"],[\"checkbox\",[24,[\"overridden\"]],[28,\"action\",[[23,0,[]],\"toggleOverridden\"],null]]]],false],[0,\"\\n      \"],[1,[28,\"i18n\",[\"admin.site_text.show_overriden\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"searching\"]]]],{\"statements\":[[4,\"if\",[[24,[\"showFallbackLocaleWarning\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"alert alert-info\"],[8],[0,\"\\n      \"],[1,[28,\"d-icon\",[\"exclamation-circle\"],null],false],[0,\"\\n      \"],[1,[28,\"i18n\",[\"admin.site_text.fallback_locale_warning\"],[[\"fallback\"],[[24,[\"fallbackLocaleFullName\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"siteTexts\",\"extras\",\"recommended\"]]],null,{\"statements\":[[0,\"    \"],[7,\"p\",true],[8],[7,\"b\",true],[8],[1,[28,\"i18n\",[\"admin.site_text.recommended\"],null],false],[9],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"each\",[[24,[\"siteTexts\"]]],null,{\"statements\":[[0,\"    \"],[1,[28,\"site-text-summary\",null,[[\"siteText\",\"editAction\",\"term\",\"searchRegex\"],[[23,1,[]],[28,\"action\",[[23,0,[]],\"edit\"],null],[24,[\"q\"]],[24,[\"siteTexts\",\"extras\",\"regex\"]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"siteTexts\",\"extras\",\"has_more\"]]],null,{\"statements\":[[0,\"    \"],[7,\"p\",true],[10,\"class\",\"warning\"],[8],[1,[28,\"i18n\",[\"admin.site_text.more_than_50_results\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/site-text-index"}});
Ember.TEMPLATES["admin/templates/site-text"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"row site-texts\"],[8],[0,\"\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/site-text"}});
Ember.TEMPLATES["admin/templates/user-badges"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"userBadge\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"admin-controls\"],[8],[0,\"\\n  \"],[7,\"nav\",true],[8],[0,\"\\n    \"],[7,\"ul\",true],[10,\"class\",\"nav nav-pills\"],[8],[0,\"\\n      \"],[7,\"li\",true],[8],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[24,[\"user\"]]]],{\"statements\":[[1,[28,\"d-icon\",[\"caret-left\"],null],false],[0,\"  \"],[1,[24,[\"user\",\"username\"]],false]],\"parameters\":[]},null],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"loading\"]]]],{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"admin-container user-badges\"],[8],[0,\"\\n    \"],[7,\"h2\",true],[8],[1,[28,\"i18n\",[\"admin.badges.grant_badge\"],null],false],[9],[0,\"\\n    \"],[7,\"br\",true],[8],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"noGrantableBadges\"]]],null,{\"statements\":[[0,\"      \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.badges.no_badges\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[7,\"form\",true],[10,\"class\",\"form-horizontal\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n          \"],[7,\"label\",true],[8],[1,[28,\"i18n\",[\"admin.badges.badge\"],null],false],[9],[0,\"\\n          \"],[1,[28,\"combo-box\",null,[[\"filterable\",\"value\",\"content\",\"onChange\"],[true,[24,[\"selectedBadgeId\"]],[24,[\"grantableBadges\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"selectedBadgeId\"]]],null]],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n          \"],[7,\"label\",true],[8],[1,[28,\"i18n\",[\"admin.badges.reason\"],null],false],[9],[0,\"\\n          \"],[1,[28,\"input\",null,[[\"type\",\"value\"],[\"text\",[24,[\"badgeReason\"]]]]],false],[7,\"br\",true],[8],[9],[7,\"small\",true],[8],[1,[28,\"i18n\",[\"admin.badges.reason_help\"],null],false],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"type\",\"label\"],[\"btn-primary\",[28,\"action\",[[23,0,[]],\"grantBadge\"],null],\"submit\",\"admin.badges.grant\"]]],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n    \"],[7,\"table\",true],[10,\"id\",\"user-badges\"],[8],[0,\"\\n      \"],[7,\"tbody\",true],[8],[0,\"\\n        \"],[7,\"tr\",true],[8],[0,\"\\n          \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.badges.badge\"],null],false],[9],[0,\"\\n          \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.badges.granted_by\"],null],false],[9],[0,\"\\n          \"],[7,\"th\",true],[10,\"class\",\"reason\"],[8],[1,[28,\"i18n\",[\"admin.badges.reason\"],null],false],[9],[0,\"\\n          \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.badges.granted_at\"],null],false],[9],[0,\"\\n          \"],[7,\"th\",true],[8],[9],[0,\"\\n        \"],[9],[0,\"\\n\"],[4,\"each\",[[24,[\"groupedBadges\"]]],null,{\"statements\":[[0,\"          \"],[7,\"tr\",true],[8],[0,\"\\n            \"],[7,\"td\",true],[8],[1,[28,\"user-badge\",null,[[\"badge\",\"count\"],[[23,1,[\"badge\"]],[23,1,[\"count\"]]]]],false],[9],[0,\"\\n            \"],[7,\"td\",true],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[23,1,[\"badge\",\"granted_by\"]]]],{\"statements\":[[0,\"                \"],[1,[28,\"avatar\",[[23,1,[\"granted_by\"]]],[[\"imageSize\"],[\"tiny\"]]],false],[0,\"\\n                \"],[1,[23,1,[\"granted_by\",\"username\"]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"            \"],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"reason\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"postUrl\"]]],null,{\"statements\":[[0,\"                \"],[7,\"a\",true],[11,\"href\",[23,1,[\"postUrl\"]]],[8],[1,[23,1,[\"topic_title\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"            \"],[9],[0,\"\\n            \"],[7,\"td\",true],[8],[1,[28,\"age-with-tooltip\",[[23,1,[\"granted_at\"]]],null],false],[9],[0,\"\\n            \"],[7,\"td\",true],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"grouped\"]]],null,{\"statements\":[[0,\"                \"],[1,[28,\"d-button\",null,[[\"action\",\"label\"],[[28,\"action\",[[23,0,[]],\"expandGroup\",[23,1,[]]],null],\"admin.badges.expand\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"label\"],[\"btn-danger\",[28,\"action\",[[23,0,[]],\"revokeBadge\",[23,1,[]]],null],\"admin.badges.revoke\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[1]},{\"statements\":[[0,\"          \"],[7,\"tr\",true],[8],[0,\"\\n            \"],[7,\"td\",true],[10,\"colspan\",\"5\"],[8],[0,\"\\n              \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.badges.no_user_badges\"],[[\"name\"],[[24,[\"user\",\"username\"]]]]],false],[9],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/user-badges"}});
Ember.TEMPLATES["admin/templates/user-fields"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"uf\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"user-fields\"],[8],[0,\"\\n  \"],[7,\"h2\",true],[8],[1,[28,\"i18n\",[\"admin.user_fields.title\"],null],false],[9],[0,\"\\n\\n  \"],[7,\"p\",true],[10,\"class\",\"desc\"],[8],[1,[28,\"i18n\",[\"admin.user_fields.help\"],null],false],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"model\"]]],null,{\"statements\":[[4,\"each\",[[24,[\"sortedFields\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"admin-user-field-item\",null,[[\"userField\",\"fieldTypes\",\"firstField\",\"lastField\",\"destroyAction\",\"moveUpAction\",\"moveDownAction\"],[[23,1,[]],[24,[\"fieldTypes\"]],[24,[\"sortedFields\",\"firstObject\"]],[24,[\"sortedFields\",\"lastObject\"]],[28,\"action\",[[23,0,[]],\"destroy\"],null],[28,\"action\",[[23,0,[]],\"moveUp\"],null],[28,\"action\",[[23,0,[]],\"moveDown\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null]],\"parameters\":[]},null],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"disabled\",\"class\",\"action\",\"label\",\"icon\"],[[24,[\"createDisabled\"]],\"btn-primary\",[28,\"action\",[[23,0,[]],\"createField\"],null],\"admin.user_fields.create\",\"plus\"]]],false],[0,\"\\n\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/user-fields"}});
Ember.TEMPLATES["admin/templates/user-index"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"sso\",\"line\",\"uf\",\"email\"],\"statements\":[[7,\"section\",true],[11,\"class\",[29,[\"details \",[28,\"unless\",[[24,[\"model\",\"active\"]],\"not-activated\"],null]]]],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"user-controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"canViewProfile\"]]],null,{\"statements\":[[4,\"link-to\",null,[[\"class\",\"route\",\"model\"],[\"btn btn-default\",\"user\",[24,[\"model\"]]]],{\"statements\":[[0,\"        \"],[1,[28,\"d-icon\",[\"user\"],null],false],[0,\"\\n        \"],[1,[28,\"i18n\",[\"admin.user.show_public_profile\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"can_view_action_logs\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"actionParam\",\"icon\",\"label\"],[[28,\"action\",[[23,0,[]],\"viewActionLogs\"],null],\"btn-default\",[24,[\"model\",\"username\"]],\"far-list-alt\",\"admin.user.action_logs\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"model\",\"active\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"currentUser\",\"admin\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"logOut\"],null],\"power-off\",\"admin.user.log_out\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"    \"],[1,[28,\"plugin-outlet\",null,[[\"name\",\"args\",\"tagName\",\"connectorTagName\"],[\"admin-user-controls-after\",[28,\"hash\",null,[[\"model\"],[[24,[\"model\"]]]]],\"\",\"\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row username\"],[8],[0,\"\\n    \"],[1,[28,\"admin-editable-field\",null,[[\"name\",\"value\",\"action\",\"editing\"],[\"user.username.title\",[24,[\"model\",\"username\"]],[28,\"action\",[[23,0,[]],\"saveUsername\"],null],[24,[\"editingUsername\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row name\"],[8],[0,\"\\n    \"],[1,[28,\"admin-editable-field\",null,[[\"name\",\"value\",\"action\",\"editing\"],[\"user.name.title\",[24,[\"model\",\"name\"]],[28,\"action\",[[23,0,[]],\"saveName\"],null],[24,[\"editingName\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[1,[28,\"plugin-outlet\",null,[[\"name\",\"args\",\"tagName\",\"connectorTagName\"],[\"admin-user-below-names\",[28,\"hash\",null,[[\"user\"],[[24,[\"model\"]]]]],\"\",\"\"]]],false],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"canCheckEmails\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"display-row email\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"user.email.primary\"],null],false],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n\"],[4,\"unless\",[[24,[\"model\",\"active\"]]],null,{\"statements\":[[0,\"          \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[1,[28,\"i18n\",[\"admin.users.not_verified\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"model\",\"email\"]]],null,{\"statements\":[[0,\"          \"],[7,\"a\",true],[11,\"href\",[29,[\"mailto:\",[24,[\"model\",\"email\"]]]]],[8],[1,[24,[\"model\",\"email\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"actionParam\",\"icon\",\"label\",\"title\"],[\"btn-default\",[28,\"route-action\",[\"checkEmail\"],null],[24,[\"model\"]],\"far-envelope\",\"admin.users.check_email.text\",\"admin.users.check_email.title\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"siteSettings\",\"auth_overrides_email\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"i18n\",[\"user.email.auth_override_instructions\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"model\",\"email\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"html-safe\",[[28,\"i18n\",[\"admin.user.visit_profile\"],[[\"url\"],[[24,[\"preferencesPath\"]]]]]],null],false],[0,\"\\n        \"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"display-row secondary-emails\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"user.email.secondary\"],null],false],[9],[0,\"\\n\\n      \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"email\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"model\",\"secondary_emails\"]]],null,{\"statements\":[[0,\"            \"],[7,\"ul\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\",\"secondary_emails\"]]],null,{\"statements\":[[0,\"                \"],[7,\"li\",true],[8],[7,\"a\",true],[11,\"href\",[29,[\"mailto:\",[23,4,[]]]]],[8],[1,[23,4,[]],false],[9],[9],[0,\"\\n\"]],\"parameters\":[4]},null],[0,\"            \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"            \"],[1,[28,\"i18n\",[\"user.email.no_secondary\"],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"actionParam\",\"icon\",\"label\",\"title\"],[[28,\"route-action\",[\"checkEmail\"],null],\"btn-default\",[24,[\"model\"]],\"far-envelope\",\"admin.users.check_email.text\",\"admin.users.check_email.title\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n\\n      \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"email\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"model\",\"secondary_emails\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"siteSettings\",\"auth_overrides_email\"]]],null,{\"statements\":[[0,\"              \"],[1,[28,\"i18n\",[\"user.email.auth_override_instructions\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"              \"],[1,[28,\"html-safe\",[[28,\"i18n\",[\"admin.user.visit_profile\"],[[\"url\"],[[24,[\"preferencesPath\"]]]]]],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"display-row bounce-score\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[7,\"a\",true],[11,\"href\",[24,[\"model\",\"bounceLink\"]]],[8],[1,[28,\"i18n\",[\"admin.user.bounce_score\"],null],false],[9],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[24,[\"model\",\"bounceScore\"]],false],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"canResetBounceScore\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"label\",\"title\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"resetBounceScore\"],null],\"admin.user.reset_bounce_score.label\",\"admin.user.reset_bounce_score.title\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[1,[24,[\"model\",\"bounceScoreExplanation\"]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"display-row associations\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"user.associated_accounts.title\"],null],false],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"associatedAccountsLoaded\"]]],null,{\"statements\":[[0,\"          \"],[1,[22,\"associatedAccounts\"],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"actionParam\",\"icon\",\"label\",\"title\"],[\"btn-default\",[28,\"route-action\",[\"checkEmail\"],null],[24,[\"model\"]],\"far-envelope\",\"admin.users.check_email.text\",\"admin.users.check_email.title\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"user.avatar.title\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[28,\"avatar\",[[24,[\"model\"]]],[[\"imageSize\"],[\"large\"]]],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n      \"],[1,[28,\"html-safe\",[[28,\"i18n\",[\"admin.user.visit_profile\"],[[\"url\"],[[24,[\"preferencesPath\"]]]]]],null],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[1,[28,\"admin-editable-field\",null,[[\"name\",\"value\",\"action\",\"editing\"],[\"user.title.title\",[24,[\"model\",\"title\"]],[28,\"action\",[[23,0,[]],\"saveTitle\"],null],[24,[\"editingTitle\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row last-ip\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"user.ip_address.title\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[24,[\"model\",\"ip_address\"]],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"currentUser\",\"staff\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"ip-lookup\",null,[[\"ip\",\"userId\"],[[24,[\"model\",\"ip_address\"]],[24,[\"model\",\"id\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row registration-ip\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"user.registration_ip_address.title\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[24,[\"model\",\"registration_ip_address\"]],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"currentUser\",\"staff\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"ip-lookup\",null,[[\"ip\",\"userId\"],[[24,[\"model\",\"registration_ip_address\"]],[24,[\"model\",\"id\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"showBadges\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.badges.title\"],null],false],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n        \"],[1,[28,\"i18n\",[\"badges.badge_count\"],[[\"count\"],[[24,[\"model\",\"badge_count\"]]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"route\",\"model\"],[\"btn btn-default\",\"adminUser.badges\",[24,[\"model\"]]]],{\"statements\":[[0,\"          \"],[1,[28,\"d-icon\",[\"certificate\"],null],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.badges.edit_badges\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"user.second_factor.title\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"second_factor_enabled\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"i18n\",[\"yes_value\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[1,[28,\"i18n\",[\"no_value\"],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"canDisableSecondFactor\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"disableSecondFactor\"],null],\"unlock-alt\",\"user.second_factor.disable\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"userFields\"]]],null,{\"statements\":[[0,\"  \"],[7,\"section\",true],[10,\"class\",\"details\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"userFields\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[23,3,[\"name\"]],false],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n\"],[4,\"if\",[[23,3,[\"value\"]]],null,{\"statements\":[[0,\"            \"],[1,[23,3,[\"value\"]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"            —\\n\"]],\"parameters\":[]}],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[3]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"plugin-outlet\",null,[[\"name\",\"args\"],[\"admin-user-details\",[28,\"hash\",null,[[\"model\"],[[24,[\"model\"]]]]]]]],false],[0,\"\\n\\n\"],[7,\"section\",true],[10,\"class\",\"details\"],[8],[0,\"\\n  \"],[7,\"h1\",true],[8],[1,[28,\"i18n\",[\"admin.user.permissions\"],null],false],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"siteSettings\",\"must_approve_users\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.users.approved\"],null],false],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"approved\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"i18n\",[\"admin.user.approved_by\"],null],false],[0,\"\\n\"],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[24,[\"model\",\"approvedBy\"]]]],{\"statements\":[[0,\"            \"],[1,[28,\"avatar\",[[24,[\"model\",\"approvedBy\"]]],[[\"imageSize\"],[\"small\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[24,[\"model\",\"approvedBy\"]]]],{\"statements\":[[0,\"            \"],[1,[24,[\"model\",\"approvedBy\",\"username\"]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[1,[28,\"i18n\",[\"no_value\"],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"approved\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"i18n\",[\"admin.user.approve_success\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"model\",\"can_approve\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"approve\"],null],\"check\",\"admin.user.approve\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.users.active\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[28,\"i18n-yes-no\",[[24,[\"model\",\"active\"]]],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"active\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"model\",\"can_deactivate\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"deactivate\"],null],\"admin.user.deactivate_account\"]]],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.user.deactivate_explanation\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"model\",\"can_send_activation_email\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"sendActivationEmail\"],null],\"envelope\",\"admin.user.send_activation_email\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"model\",\"can_activate\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"activate\"],null],\"check\",\"admin.user.activate\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.staged\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[28,\"i18n-yes-no\",[[24,[\"model\",\"staged\"]]],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[1,[28,\"i18n\",[\"admin.user.staged_explanation\"],null],false],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"currentUser\",\"admin\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.api.active_keys\"],null],false],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n        \"],[1,[24,[\"model\",\"api_key_count\"]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n        \"],[1,[28,\"d-button\",null,[[\"class\",\"href\",\"label\"],[\"btn-default\",\"/admin/api/keys\",\"admin.api.manage_keys\"]]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.admin\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[28,\"i18n-yes-no\",[[24,[\"model\",\"admin\"]]],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"can_revoke_admin\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"revokeAdmin\"],null],\"shield-alt\",\"admin.user.revoke_admin\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"model\",\"can_grant_admin\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-default grant-admin\",[28,\"action\",[[23,0,[]],\"grantAdmin\"],null],\"shield-alt\",\"admin.user.grant_admin\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.moderator\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[28,\"i18n-yes-no\",[[24,[\"model\",\"moderator\"]]],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"can_revoke_moderation\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"revokeModeration\"],null],\"shield-alt\",\"admin.user.revoke_moderation\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[24,[\"model\",\"can_grant_moderation\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"grantModeration\"],null],\"shield-alt\",\"admin.user.grant_moderation\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"trust_level\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n      \"],[1,[28,\"combo-box\",null,[[\"content\",\"nameProperty\",\"value\",\"onChange\"],[[24,[\"site\",\"trustLevels\"]],\"detailedName\",[24,[\"model\",\"trustLevel\",\"id\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"model\",\"trust_level\"]]],null]],null]]]],false],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"model\",\"dirty\"]]],null,{\"statements\":[[0,\"        \"],[7,\"div\",true],[8],[0,\"\\n          \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\"],[\"ok no-text\",[28,\"action\",[[23,0,[]],\"saveTrustLevel\"],null],\"check\"]]],false],[0,\"\\n          \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\"],[\"cancel no-text\",[28,\"action\",[[23,0,[]],\"restoreTrustLevel\"],null],\"times\"]]],false],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"canLockTrustLevel\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"hasLockedTrustLevel\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-icon\",[\"lock\"],[[\"title\"],[\"admin.user.trust_level_locked_tip\"]]],false],[0,\"\\n          \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"actionParam\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"lockTrustLevel\"],null],false,\"admin.user.unlock_trust_level\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[1,[28,\"d-icon\",[\"unlock\"],[[\"title\"],[\"admin.user.trust_level_unlocked_tip\"]]],false],[0,\"\\n          \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"actionParam\",\"label\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"lockTrustLevel\"],null],true,\"admin.user.lock_trust_level\"]]],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[4,\"if\",[[24,[\"model\",\"tl3Requirements\"]]],null,{\"statements\":[[4,\"link-to\",null,[[\"class\",\"route\",\"model\"],[\"btn btn-default\",\"adminUser.tl3Requirements\",[24,[\"model\"]]]],{\"statements\":[[0,\"          \"],[1,[28,\"i18n\",[\"admin.user.trust_level_3_requirements\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[11,\"class\",[29,[\"user-suspended display-row \",[28,\"if\",[[24,[\"model\",\"suspended\"]],\"highlight-danger\"],null]]]],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.suspended\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n      \"],[1,[28,\"i18n-yes-no\",[[24,[\"model\",\"suspended\"]]],null],false],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"suspended\"]]],null,{\"statements\":[[4,\"unless\",[[24,[\"model\",\"suspendedForever\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"i18n\",[\"admin.user.suspended_until\"],[[\"until\"],[[24,[\"model\",\"suspendedTillDate\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"suspended\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-danger unsuspend-user\",[28,\"action\",[[23,0,[]],\"unsuspend\"],null],\"ban\",\"admin.user.unsuspend\"]]],false],[0,\"\\n        \"],[1,[28,\"i18n\",[\"admin.user.suspended_explanation\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"model\",\"canSuspend\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-danger suspend-user\",[28,\"action\",[[23,0,[]],\"showSuspendModal\"],null],\"ban\",\"admin.user.suspend\"]]],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.user.suspended_explanation\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"model\",\"suspended\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"display-row highlight-danger suspension-info\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.suspended_by\"],null],false],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[24,[\"model\",\"suspendedBy\"]]]],{\"statements\":[[0,\"          \"],[1,[28,\"avatar\",[[24,[\"model\",\"suspendedBy\"]]],[[\"imageSize\"],[\"tiny\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[24,[\"model\",\"suspendedBy\"]]]],{\"statements\":[[0,\"          \"],[1,[24,[\"model\",\"suspendedBy\",\"username\"]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n        \"],[7,\"b\",true],[8],[1,[28,\"i18n\",[\"admin.user.suspend_reason\"],null],false],[9],[0,\":\\n        \"],[7,\"div\",true],[10,\"class\",\"full-reason\"],[8],[1,[24,[\"model\",\"full_suspend_reason\"]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n  \"],[7,\"div\",true],[11,\"class\",[29,[\"display-row \",[28,\"if\",[[24,[\"model\",\"silenced\"]],\"highlight-danger\"],null]]]],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.silenced\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n      \"],[1,[28,\"i18n-yes-no\",[[24,[\"model\",\"silenced\"]]],null],false],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"silenced\"]]],null,{\"statements\":[[4,\"unless\",[[24,[\"model\",\"silencedForever\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"i18n\",[\"admin.user.suspended_until\"],[[\"until\"],[[24,[\"model\",\"silencedTillDate\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"conditional-loading-spinner\",null,[[\"size\",\"condition\"],[\"small\",[24,[\"model\",\"silencingUser\"]]]],{\"statements\":[[4,\"if\",[[24,[\"model\",\"silenced\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-danger unsilence-user\",[28,\"action\",[[23,0,[]],\"unsilence\"],null],\"microphone-slash\",\"admin.user.unsilence\"]]],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.user.silence_explanation\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-danger silence-user\",[28,\"action\",[[23,0,[]],\"showSilenceModal\"],null],\"microphone-slash\",\"admin.user.silence\"]]],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.user.silence_explanation\"],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"model\",\"silenced\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"display-row highlight-danger silence-info\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.silenced_by\"],null],false],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[24,[\"model\",\"silencedBy\"]]]],{\"statements\":[[0,\"          \"],[1,[28,\"avatar\",[[24,[\"model\",\"silencedBy\"]]],[[\"imageSize\"],[\"tiny\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[24,[\"model\",\"silencedBy\"]]]],{\"statements\":[[0,\"          \"],[1,[24,[\"model\",\"silencedBy\",\"username\"]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n        \"],[7,\"b\",true],[8],[1,[28,\"i18n\",[\"admin.user.silence_reason\"],null],false],[9],[0,\":\\n        \"],[7,\"div\",true],[10,\"class\",\"full-reason\"],[8],[1,[24,[\"model\",\"silence_reason\"]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"tl3_requirements\",\"penalty_counts\",\"total\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"display-row clear-penalty-history\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.penalty_count\"],null],false],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[24,[\"model\",\"tl3_requirements\",\"penalty_counts\",\"total\"]],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"currentUser\",\"admin\"]]],null,{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n          \"],[1,[28,\"d-button\",null,[[\"label\",\"class\",\"icon\",\"action\"],[\"admin.user.clear_penalty_history.title\",\"btn-default\",\"times\",[28,\"action\",[[23,0,[]],\"clearPenaltyHistory\"],null]]]],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.user.clear_penalty_history.description\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"currentUser\",\"admin\"]]],null,{\"statements\":[[0,\"  \"],[7,\"section\",true],[10,\"class\",\"details\"],[8],[0,\"\\n    \"],[7,\"h1\",true],[8],[1,[28,\"i18n\",[\"admin.groups.title\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.groups.automatic\"],null],false],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[28,\"html-safe\",[[24,[\"automaticGroups\"]]],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.groups.custom\"],null],false],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n        \"],[1,[28,\"group-chooser\",null,[[\"content\",\"value\",\"labelProperty\",\"onChange\"],[[24,[\"availableGroups\"]],[24,[\"customGroupIdsBuffer\"]],\"name\",[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"customGroupIdsBuffer\"]]],null]],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"customGroupsDirty\"]]],null,{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n          \"],[1,[28,\"d-button\",null,[[\"icon\",\"class\",\"action\"],[\"check\",\"ok\",[28,\"action\",[[23,0,[]],\"saveCustomGroups\"],null]]]],false],[0,\"\\n          \"],[1,[28,\"d-button\",null,[[\"icon\",\"class\",\"action\"],[\"times\",\"cancel\",[28,\"action\",[[23,0,[]],\"resetCustomGroups\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"customGroups\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.groups.primary\"],null],false],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n          \"],[1,[28,\"combo-box\",null,[[\"content\",\"value\",\"none\",\"onChange\"],[[24,[\"model\",\"customGroups\"]],[24,[\"model\",\"primary_group_id\"]],\"admin.groups.no_primary\",[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"model\",\"primary_group_id\"]]],null]],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"primaryGroupDirty\"]]],null,{\"statements\":[[0,\"          \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n            \"],[1,[28,\"d-button\",null,[[\"icon\",\"class\",\"action\"],[\"check\",\"ok\",[28,\"action\",[[23,0,[]],\"savePrimaryGroup\"],null]]]],false],[0,\"\\n            \"],[1,[28,\"d-button\",null,[[\"icon\",\"class\",\"action\"],[\"times\",\"cancel\",[28,\"action\",[[23,0,[]],\"resetPrimaryGroup\"],null]]]],false],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"section\",true],[10,\"class\",\"details\"],[8],[0,\"\\n  \"],[7,\"h1\",true],[8],[1,[28,\"i18n\",[\"admin.user.activity\"],null],false],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"created\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[28,\"format-date\",[[24,[\"model\",\"created_at\"]]],[[\"leaveAgo\"],[\"true\"]]],false],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.users.last_emailed\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[28,\"format-date\",[[24,[\"model\",\"last_emailed_at\"]]],null],false],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"last_seen\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[28,\"format-date\",[[24,[\"model\",\"last_seen_at\"]]],[[\"leaveAgo\"],[\"true\"]]],false],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.like_count\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[24,[\"model\",\"like_given_count\"]],false],[0,\" / \"],[1,[24,[\"model\",\"like_count\"]],false],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.topics_entered\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[24,[\"model\",\"topics_entered\"]],false],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.post_count\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[24,[\"model\",\"post_count\"]],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"can_delete_all_posts\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"model\",\"post_count\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-danger\",[28,\"action\",[[23,0,[]],\"showDeletePostsConfirmation\"],null],\"far-trash-alt\",\"admin.user.delete_posts.button\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[1,[22,\"deleteAllPostsExplanation\"],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.posts_read_count\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[24,[\"model\",\"posts_read_count\"]],false],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.warnings_received_count\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[24,[\"model\",\"warnings_received_count\"]],false],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.flags_given_received_count\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n      \"],[1,[24,[\"model\",\"flags_given_count\"]],false],[0,\" / \"],[1,[24,[\"model\",\"flags_received_count\"]],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"flags_received_count\"]]],null,{\"statements\":[[4,\"link-to\",null,[[\"class\",\"query\",\"route\"],[\"btn\",[28,\"hash\",null,[[\"username\",\"type\",\"status\"],[[24,[\"model\",\"username\"]],\"ReviewableFlaggedPost\",\"all\"]]],\"review\"]],{\"statements\":[[0,\"          \"],[1,[28,\"i18n\",[\"admin.user.show_flags_received\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.private_topics_count\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[24,[\"model\",\"private_topics_count\"]],false],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.time_read\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[28,\"format-duration\",[[24,[\"model\",\"time_read\"]]],null],false],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"user.invited.days_visited\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[28,\"html-safe\",[[24,[\"model\",\"days_visited\"]]],null],false],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"display-row post-edits-count\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.post_edits_count\"],null],false],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n      \"],[1,[28,\"if\",[[28,\"gt\",[[24,[\"model\",\"post_edits_count\"]],0],null],[24,[\"model\",\"post_edits_count\"]],\"0\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n\"],[4,\"if\",[[28,\"gt\",[[24,[\"model\",\"post_edits_count\"]],0],null]],null,{\"statements\":[[4,\"link-to\",null,[[\"class\",\"query\",\"route\",\"model\"],[\"btn btn-icon\",[28,\"hash\",null,[[\"filters\"],[[24,[\"postEditsByEditorFilter\"]]]]],\"adminReports.show\",\"post_edits\"]],{\"statements\":[[0,\"          \"],[1,[28,\"d-icon\",[\"far-eye\"],null],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.user.view_edits\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"model\",\"single_sign_on_record\"]]],null,{\"statements\":[[0,\"  \"],[7,\"section\",true],[10,\"class\",\"details\"],[8],[0,\"\\n    \"],[7,\"h1\",true],[8],[1,[28,\"i18n\",[\"admin.user.discourse_connect.title\"],null],false],[9],[0,\"\\n\\n\"],[4,\"with\",[[24,[\"model\",\"single_sign_on_record\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.discourse_connect.external_id\"],null],false],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[23,1,[\"external_id\"]],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"can_delete_sso_record\"]]],null,{\"statements\":[[0,\"          \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n            \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\"],[\"btn-danger\",[28,\"action\",[[23,0,[]],\"deleteSSORecord\"],null],\"far-trash-alt\",\"admin.user.discourse_connect.delete_sso_record\"]]],false],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.discourse_connect.external_username\"],null],false],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[23,1,[\"external_username\"]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.discourse_connect.external_name\"],null],false],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[23,1,[\"external_name\"]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"canAdminCheckEmails\"]]],null,{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.discourse_connect.external_email\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"ssoExternalEmail\"]]],null,{\"statements\":[[0,\"            \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[22,\"ssoExternalEmail\"],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"            \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"actionParam\",\"icon\",\"label\",\"title\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"checkSsoEmail\"],null],[24,[\"model\"]],\"far-envelope\",\"admin.users.check_email.text\",\"admin.users.check_email.title\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.discourse_connect.external_avatar_url\"],null],false],[9],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[1,[23,1,[\"external_avatar_url\"]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"canAdminCheckEmails\"]]],null,{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"display-row\"],[8],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"field\"],[8],[1,[28,\"i18n\",[\"admin.user.discourse_connect.last_payload\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"ssoLastPayload\"]]],null,{\"statements\":[[0,\"            \"],[7,\"div\",true],[10,\"class\",\"value\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"ssoPayload\"]]],null,{\"statements\":[[0,\"                \"],[1,[23,2,[]],false],[7,\"br\",true],[8],[9],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"            \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"            \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"actionParam\",\"icon\",\"label\",\"title\"],[\"btn-default\",[28,\"action\",[[23,0,[]],\"checkSsoPayload\"],null],[24,[\"model\"]],\"far-list-alt\",\"admin.users.check_sso.text\",\"admin.users.check_sso.title\"]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[1]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"plugin-outlet\",null,[[\"name\",\"args\"],[\"after-user-details\",[28,\"hash\",null,[[\"model\"],[[24,[\"model\"]]]]]]]],false],[0,\"\\n\\n\"],[7,\"section\",true],[8],[0,\"\\n  \"],[7,\"hr\",true],[8],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"pull-right\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"active\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"model\",\"can_impersonate\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"icon\",\"label\",\"title\"],[\"btn-danger\",[28,\"action\",[[23,0,[]],\"impersonate\"],null],\"crosshairs\",\"admin.impersonate.title\",\"admin.impersonate.help\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"can_be_anonymized\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"d-button\",null,[[\"label\",\"icon\",\"class\",\"action\"],[\"admin.user.anonymize\",\"exclamation-triangle\",\"btn-danger\",[28,\"action\",[[23,0,[]],\"anonymize\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"canBeDeleted\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"d-button\",null,[[\"label\",\"icon\",\"class\",\"action\"],[\"admin.user.delete\",\"trash-alt\",\"btn-danger\",[28,\"action\",[[23,0,[]],\"destroy\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"can_be_merged\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"d-button\",null,[[\"label\",\"icon\",\"class\",\"action\"],[\"admin.user.merge.button\",\"arrows-alt-h\",\"btn-danger\",[28,\"action\",[[23,0,[]],\"promptTargetUser\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"deleteExplanation\"]]],null,{\"statements\":[[0,\"    \"],[7,\"div\",true],[10,\"class\",\"clearfix\"],[8],[9],[0,\"\\n    \"],[7,\"br\",true],[8],[9],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"pull-right\"],[8],[0,\"\\n      \"],[1,[28,\"d-icon\",[\"exclamation-triangle\"],null],false],[0,\" \"],[1,[22,\"deleteExplanation\"],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"clearfix\"],[8],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/user-index"}});
Ember.TEMPLATES["admin/templates/user-tl3-requirements"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"admin-controls\"],[8],[0,\"\\n  \"],[7,\"nav\",true],[8],[0,\"\\n    \"],[7,\"ul\",true],[10,\"class\",\"nav nav-pills\"],[8],[0,\"\\n      \"],[7,\"li\",true],[8],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[24,[\"model\"]]]],{\"statements\":[[1,[28,\"d-icon\",[\"caret-left\"],null],false],[0,\"  \"],[1,[24,[\"model\",\"username\"]],false]],\"parameters\":[]},null],[9],[0,\"\\n      \"],[7,\"li\",true],[8],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUsersList.show\",\"member\"]],{\"statements\":[[1,[28,\"i18n\",[\"admin.user.trust_level_2_users\"],null],false]],\"parameters\":[]},null],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"admin-container tl3-requirements\"],[8],[0,\"\\n  \"],[7,\"h2\",true],[8],[1,[24,[\"model\",\"username\"]],false],[0,\" - \"],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.title\"],null],false],[9],[0,\"\\n  \"],[7,\"br\",true],[8],[9],[0,\"\\n  \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.table_title\"],[[\"count\"],[[24,[\"model\",\"tl3Requirements\",\"time_period\"]]]]],false],[9],[0,\"\\n\\n  \"],[7,\"table\",true],[10,\"class\",\"table\"],[10,\"style\",\"width: auto;\"],[8],[0,\"\\n    \"],[7,\"thead\",true],[8],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.value_heading\"],null],false],[9],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.requirement_heading\"],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"tbody\",true],[8],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.visits\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"check-icon\",[[24,[\"model\",\"tl3Requirements\",\"met\",\"days_visited\"]]],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[0,\"\\n          \"],[1,[24,[\"model\",\"tl3Requirements\",\"days_visited_percent\"]],false],[0,\"% (\"],[1,[24,[\"model\",\"tl3Requirements\",\"days_visited\"]],false],[0,\" / \"],[1,[24,[\"model\",\"tl3Requirements\",\"time_period\"]],false],[0,\" \"],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.days\"],null],false],[0,\")\\n        \"],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"min_days_visited_percent\"]],false],[0,\"%\"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.topics_replied_to\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"check-icon\",[[24,[\"model\",\"tl3Requirements\",\"met\",\"topics_replied_to\"]]],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[4,\"if\",[[24,[\"model\",\"tl3Requirements\",\"capped_topics_replied_to\"]]],null,{\"statements\":[[0,\"≥ \"]],\"parameters\":[]},null],[1,[24,[\"model\",\"tl3Requirements\",\"num_topics_replied_to\"]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"min_topics_replied_to\"]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.topics_viewed\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"check-icon\",[[24,[\"model\",\"tl3Requirements\",\"met\",\"topics_viewed\"]]],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"topics_viewed\"]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"min_topics_viewed\"]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.topics_viewed_all_time\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"check-icon\",[[24,[\"model\",\"tl3Requirements\",\"met\",\"topics_viewed_all_time\"]]],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"topics_viewed_all_time\"]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"min_topics_viewed_all_time\"]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.posts_read\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"check-icon\",[[24,[\"model\",\"tl3Requirements\",\"met\",\"posts_read\"]]],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"posts_read\"]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"min_posts_read\"]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.posts_read_all_time\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"check-icon\",[[24,[\"model\",\"tl3Requirements\",\"met\",\"posts_read_all_time\"]]],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"posts_read_all_time\"]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"min_posts_read_all_time\"]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.flagged_posts\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"check-icon\",[[24,[\"model\",\"tl3Requirements\",\"met\",\"flagged_posts\"]]],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"num_flagged_posts\"]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"i18n\",[\"max_of_count\"],[[\"count\"],[[24,[\"model\",\"tl3Requirements\",\"max_flagged_posts\"]]]]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.flagged_by_users\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"check-icon\",[[24,[\"model\",\"tl3Requirements\",\"met\",\"flagged_by_users\"]]],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"num_flagged_by_users\"]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"i18n\",[\"max_of_count\"],[[\"count\"],[[24,[\"model\",\"tl3Requirements\",\"max_flagged_by_users\"]]]]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.likes_given\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"check-icon\",[[24,[\"model\",\"tl3Requirements\",\"met\",\"likes_given\"]]],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"num_likes_given\"]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"min_likes_given\"]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.likes_received\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"check-icon\",[[24,[\"model\",\"tl3Requirements\",\"met\",\"likes_received\"]]],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"num_likes_received\"]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"min_likes_received\"]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.likes_received_days\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"check-icon\",[[24,[\"model\",\"tl3Requirements\",\"met\",\"likes_received_days\"]]],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"num_likes_received_days\"]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"min_likes_received_days\"]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.likes_received_users\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"check-icon\",[[24,[\"model\",\"tl3Requirements\",\"met\",\"likes_received_users\"]]],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"num_likes_received_users\"]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"min_likes_received_users\"]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.silenced\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"check-icon\",[[24,[\"model\",\"tl3Requirements\",\"met\",\"silenced\"]]],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"penalty_counts\",\"silenced\"]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[0,\"0\"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tr\",true],[8],[0,\"\\n        \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.suspended\"],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[28,\"check-icon\",[[24,[\"model\",\"tl3Requirements\",\"met\",\"suspended\"]]],null],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[1,[24,[\"model\",\"tl3Requirements\",\"penalty_counts\",\"suspended\"]],false],[9],[0,\"\\n        \"],[7,\"td\",true],[8],[0,\"0\"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"br\",true],[8],[9],[0,\"\\n  \"],[7,\"p\",true],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"istl3\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"model\",\"tl3Requirements\",\"requirements_lost\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"model\",\"tl3Requirements\",\"on_grace_period\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-icon\",[\"times\"],null],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.on_grace_period\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[1,[28,\"d-icon\",[\"times\"],null],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.does_not_qualify\"],null],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.will_be_demoted\"],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"model\",\"tl3Requirements\",\"trust_level_locked\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-icon\",[\"lock\"],null],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.locked_will_not_be_demoted\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[1,[28,\"d-icon\",[\"check\"],null],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.qualifies\"],null],false],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"tl3Requirements\",\"on_grace_period\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.on_grace_period\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}]],\"parameters\":[]}]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"model\",\"tl3Requirements\",\"requirements_met\"]]],null,{\"statements\":[[0,\"        \"],[1,[28,\"d-icon\",[\"check\"],null],false],[0,\"\\n        \"],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.qualifies\"],null],false],[0,\"\\n        \"],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.will_be_promoted\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[24,[\"model\",\"tl3Requirements\",\"trust_level_locked\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-icon\",[\"lock\"],null],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.locked_will_not_be_promoted\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[1,[28,\"d-icon\",[\"times\"],null],false],[0,\"\\n          \"],[1,[28,\"i18n\",[\"admin.user.tl3_requirements.does_not_qualify\"],null],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]}]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/user-tl3-requirements"}});
Ember.TEMPLATES["admin/templates/user"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[4,\"d-section\",null,null,{\"statements\":[[0,\"  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/user"}});
Ember.TEMPLATES["admin/templates/users-list-show"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"user\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"admin-title\"],[8],[0,\"\\n  \"],[7,\"h2\",true],[8],[1,[22,\"title\"],false],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"canCheckEmails\"]]],null,{\"statements\":[[4,\"if\",[[24,[\"showEmails\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"label\"],[[28,\"action\",[[23,0,[]],\"toggleEmailVisibility\"],null],\"hide-emails btn-default\",\"admin.users.hide_emails\"]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"label\"],[[28,\"action\",[[23,0,[]],\"toggleEmailVisibility\"],null],\"show-emails btn-default\",\"admin.users.show_emails\"]]],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"username controls\"],[8],[0,\"\\n  \"],[1,[28,\"text-field\",null,[[\"value\",\"placeholder\",\"title\"],[[24,[\"listFilter\"]],[24,[\"searchHint\"]],[24,[\"searchHint\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"load-more\",null,[[\"class\",\"selector\",\"action\"],[\"users-list-container\",\".users-list tr\",[28,\"action\",[[23,0,[]],\"loadMore\"],null]]],{\"statements\":[[4,\"if\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"    \"],[7,\"table\",true],[10,\"class\",\"table users-list grid\"],[8],[0,\"\\n      \"],[7,\"thead\",true],[8],[0,\"\\n        \"],[1,[28,\"table-header-toggle\",null,[[\"field\",\"labelKey\",\"order\",\"asc\",\"automatic\"],[\"username\",\"username\",[24,[\"order\"]],[24,[\"asc\"]],true]]],false],[0,\"\\n        \"],[1,[28,\"table-header-toggle\",null,[[\"class\",\"field\",\"labelKey\",\"order\",\"asc\",\"automatic\"],[[28,\"if\",[[24,[\"showEmails\"]],\"\",\"hidden\"],null],\"email\",\"email\",[24,[\"order\"]],[24,[\"asc\"]],true]]],false],[0,\"\\n        \"],[1,[28,\"table-header-toggle\",null,[[\"field\",\"labelKey\",\"order\",\"asc\",\"automatic\"],[\"last_emailed\",\"admin.users.last_emailed\",[24,[\"order\"]],[24,[\"asc\"]],true]]],false],[0,\"\\n        \"],[1,[28,\"table-header-toggle\",null,[[\"field\",\"labelKey\",\"order\",\"asc\",\"automatic\"],[\"seen\",\"last_seen\",[24,[\"order\"]],[24,[\"asc\"]],true]]],false],[0,\"\\n        \"],[1,[28,\"table-header-toggle\",null,[[\"field\",\"labelKey\",\"order\",\"asc\",\"automatic\"],[\"topics_viewed\",\"admin.user.topics_entered\",[24,[\"order\"]],[24,[\"asc\"]],true]]],false],[0,\"\\n        \"],[1,[28,\"table-header-toggle\",null,[[\"field\",\"labelKey\",\"order\",\"asc\",\"automatic\"],[\"posts_read\",\"admin.user.posts_read_count\",[24,[\"order\"]],[24,[\"asc\"]],true]]],false],[0,\"\\n        \"],[1,[28,\"table-header-toggle\",null,[[\"field\",\"labelKey\",\"order\",\"asc\",\"automatic\"],[\"read_time\",\"admin.user.time_read\",[24,[\"order\"]],[24,[\"asc\"]],true]]],false],[0,\"\\n        \"],[1,[28,\"table-header-toggle\",null,[[\"field\",\"labelKey\",\"order\",\"asc\",\"automatic\"],[\"created\",\"created\",[24,[\"order\"]],[24,[\"asc\"]],true]]],false],[0,\"\\n\"],[4,\"if\",[[24,[\"siteSettings\",\"must_approve_users\"]]],null,{\"statements\":[[0,\"          \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.users.approved\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[7,\"th\",true],[8],[0,\" \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"          \"],[7,\"tr\",true],[11,\"class\",[29,[\"user \",[23,1,[\"selected\"]],\" \",[28,\"unless\",[[23,1,[\"active\"]],\"not-activated\"],null]]]],[8],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"username\"],[8],[0,\"\\n              \"],[7,\"a\",true],[11,\"href\",[23,1,[\"path\"]]],[11,\"data-user-card\",[23,1,[\"username\"]]],[8],[0,\"\\n                \"],[1,[28,\"avatar\",[[23,1,[]]],[[\"imageSize\"],[\"small\"]]],false],[0,\"\\n              \"],[9],[0,\"\\n              \"],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminUser\",[23,1,[]]]],{\"statements\":[[1,[23,1,[\"username\"]],false]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[23,1,[\"staged\"]]],null,{\"statements\":[[0,\"                \"],[1,[28,\"d-icon\",[\"far-envelope\"],[[\"title\"],[\"user.staged\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"            \"],[9],[0,\"\\n            \"],[7,\"td\",true],[11,\"class\",[29,[\"email \",[28,\"if\",[[24,[\"showEmails\"]],\"\",\"hidden\"],null]]]],[8],[1,[23,1,[\"email\"]],false],[9],[0,\"\\n\\n\"],[4,\"if\",[[23,1,[\"last_emailed_at\"]]],null,{\"statements\":[[0,\"              \"],[7,\"td\",true],[10,\"class\",\"last-emailed\"],[11,\"title\",[28,\"raw-date\",[[23,1,[\"last_emailed_at\"]]],null]],[8],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.users.last_emailed\"],null],false],[9],[0,\"\\n                \"],[7,\"div\",true],[8],[1,[28,\"format-duration\",[[23,1,[\"last_emailed_age\"]]],null],false],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"              \"],[7,\"td\",true],[10,\"class\",\"last-emailed\"],[8],[0,\"\\n                \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.users.last_emailed\"],null],false],[9],[0,\"\\n                \"],[7,\"div\",true],[8],[1,[28,\"format-duration\",[[23,1,[\"last_emailed_age\"]]],null],false],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"last-seen\"],[11,\"title\",[28,\"raw-date\",[[23,1,[\"last_seen_at\"]]],null]],[8],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"last_seen\"],null],false],[9],[0,\"\\n              \"],[7,\"div\",true],[8],[1,[28,\"format-duration\",[[23,1,[\"last_seen_age\"]]],null],false],[9],[0,\"\\n            \"],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"topics-entered\"],[8],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.user.topics_entered\"],null],false],[9],[0,\"\\n              \"],[7,\"div\",true],[8],[1,[28,\"number\",[[23,1,[\"topics_entered\"]]],null],false],[9],[0,\"\\n            \"],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"posts-read\"],[8],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.user.posts_read_count\"],null],false],[9],[0,\"\\n              \"],[7,\"div\",true],[8],[1,[28,\"number\",[[23,1,[\"posts_read_count\"]]],null],false],[9],[0,\"\\n            \"],[9],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"time-read\"],[8],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"admin.user.time_read\"],null],false],[9],[0,\"\\n              \"],[7,\"div\",true],[8],[1,[28,\"format-duration\",[[23,1,[\"time_read\"]]],null],false],[9],[0,\"\\n            \"],[9],[0,\"\\n\\n            \"],[7,\"td\",true],[10,\"class\",\"created\"],[11,\"title\",[28,\"raw-date\",[[23,1,[\"created_at\"]]],null]],[8],[0,\"\\n              \"],[7,\"div\",true],[10,\"class\",\"label\"],[8],[1,[28,\"i18n\",[\"created\"],null],false],[9],[0,\"\\n              \"],[7,\"div\",true],[8],[1,[28,\"format-duration\",[[23,1,[\"created_at_age\"]]],null],false],[9],[0,\"\\n            \"],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"siteSettings\",\"must_approve_users\"]]],null,{\"statements\":[[0,\"              \"],[7,\"td\",true],[8],[1,[28,\"i18n-yes-no\",[[23,1,[\"approved\"]]],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n            \"],[7,\"td\",true],[10,\"class\",\"user-status\"],[8],[0,\"\\n\"],[4,\"if\",[[23,1,[\"admin\"]]],null,{\"statements\":[[0,\"                \"],[1,[28,\"d-icon\",[\"shield-alt\"],[[\"title\"],[\"admin.title\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[23,1,[\"moderator\"]]],null,{\"statements\":[[0,\"                \"],[1,[28,\"d-icon\",[\"shield-alt\"],[[\"title\"],[\"admin.moderator\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[23,1,[\"second_factor_enabled\"]]],null,{\"statements\":[[0,\"                \"],[1,[28,\"d-icon\",[\"lock\"],[[\"title\"],[\"admin.user.second_factor_enabled\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"              \"],[1,[28,\"plugin-outlet\",null,[[\"name\",\"tagName\",\"args\"],[\"admin-users-list-icon\",\"\",[28,\"hash\",null,[[\"user\",\"query\"],[[23,1,[]],[24,[\"query\"]]]]]]]],false],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[1,[28,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"refreshing\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"search.no_results\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/users-list-show"}});
Ember.TEMPLATES["admin/templates/users-list"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[7,\"div\",true],[10,\"class\",\"admin-controls\"],[8],[0,\"\\n  \"],[7,\"nav\",true],[8],[0,\"\\n    \"],[7,\"ul\",true],[10,\"class\",\"nav nav-pills\"],[8],[0,\"\\n      \"],[1,[28,\"nav-item\",null,[[\"route\",\"routeParam\",\"label\",\"class\"],[\"adminUsersList.show\",\"active\",\"admin.users.nav.active\",\"active-users\"]]],false],[0,\"\\n      \"],[1,[28,\"nav-item\",null,[[\"route\",\"routeParam\",\"label\",\"class\"],[\"adminUsersList.show\",\"new\",\"admin.users.nav.new\",\"new-users\"]]],false],[0,\"\\n      \"],[1,[28,\"nav-item\",null,[[\"route\",\"routeParam\",\"label\",\"class\"],[\"adminUsersList.show\",\"staff\",\"admin.users.nav.staff\",\"staff-users\"]]],false],[0,\"\\n      \"],[1,[28,\"nav-item\",null,[[\"route\",\"routeParam\",\"label\",\"class\"],[\"adminUsersList.show\",\"suspended\",\"admin.users.nav.suspended\",\"suspended-users\"]]],false],[0,\"\\n      \"],[1,[28,\"nav-item\",null,[[\"route\",\"routeParam\",\"label\",\"class\"],[\"adminUsersList.show\",\"silenced\",\"admin.users.nav.silenced\",\"silenced-users\"]]],false],[0,\"\\n      \"],[1,[28,\"nav-item\",null,[[\"route\",\"routeParam\",\"label\",\"class\"],[\"adminUsersList.show\",\"staged\",\"admin.users.nav.staged\",\"staged-users\"]]],false],[0,\"\\n      \"],[1,[28,\"nav-item\",null,[[\"route\",\"label\",\"class\"],[\"groups\",\"groups.index.title\",\"groups\"]]],false],[0,\"\\n      \"],[1,[28,\"plugin-outlet\",null,[[\"name\",\"tagName\",\"connectorTagName\"],[\"admin-users-list-nav-after\",\"\",\"\"]]],false],[0,\"\\n\\n      \"],[7,\"li\",true],[10,\"class\",\"admin-actions\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"currentUser\",\"can_invite_to_forum\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"title\",\"icon\",\"label\"],[\"btn-default\",[28,\"route-action\",[\"sendInvites\"],null],\"admin.invite.button_title\",\"user-plus\",\"admin.invite.button_text\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"currentUser\",\"admin\"]]],null,{\"statements\":[[0,\"          \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"title\",\"icon\",\"label\"],[\"btn-default\",[28,\"route-action\",[\"exportUsers\"],null],\"admin.export_csv.button_title.user\",\"download\",\"admin.export_csv.button_text\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"admin-container\"],[8],[0,\"\\n  \"],[1,[22,\"outlet\"],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/users-list"}});
Ember.TEMPLATES["admin/templates/watched-words-action"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"word\"],\"statements\":[[4,\"if\",[[24,[\"regexpError\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[10,\"class\",\"alert alert-error\"],[8],[1,[22,\"regexpError\"],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"watched-word-controls\"],[8],[0,\"\\n  \"],[1,[28,\"d-button\",null,[[\"class\",\"href\",\"icon\",\"label\"],[\"btn-default download-link\",[24,[\"downloadLink\"]],\"download\",\"admin.watched_words.download\"]]],false],[0,\"\\n\\n  \"],[1,[28,\"watched-word-uploader\",null,[[\"uploading\",\"actionKey\",\"done\"],[[24,[\"uploading\"]],[24,[\"actionNameKey\"]],[28,\"action\",[[23,0,[]],\"uploadComplete\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"d-button\",null,[[\"class\",\"label\",\"icon\",\"action\"],[\"watched-word-test\",\"admin.watched_words.test.button_label\",\"far-eye\",[28,\"action\",[[23,0,[]],\"test\"],null]]]],false],[0,\"\\n\\n  \"],[1,[28,\"d-button\",null,[[\"class\",\"label\",\"icon\",\"action\"],[\"btn-danger clear-all\",\"admin.watched_words.clear_all\",\"trash-alt\",[28,\"action\",[[23,0,[]],\"clearAll\"],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[7,\"p\",true],[10,\"class\",\"about\"],[8],[1,[22,\"actionDescription\"],false],[9],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"siteSettings\",\"watched_words_regular_expressions\"]]],null,{\"statements\":[[0,\"  \"],[7,\"p\",true],[8],[1,[28,\"html-safe\",[[28,\"i18n\",[\"admin.watched_words.regex_warning\"],[[\"basePath\"],[[28,\"base-path\",null,null]]]]],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[1,[28,\"watched-word-form\",null,[[\"actionKey\",\"action\",\"filteredContent\"],[[24,[\"actionNameKey\"]],[28,\"action\",[[23,0,[]],\"recordAdded\"],null],[24,[\"currentAction\",\"words\"]]]]],false],[0,\"\\n\\n\"],[4,\"if\",[[24,[\"currentAction\",\"words\"]]],null,{\"statements\":[[0,\"  \"],[7,\"label\",true],[10,\"class\",\"show-words-checkbox\"],[8],[0,\"\\n    \"],[1,[28,\"input\",null,[[\"type\",\"checked\",\"disabled\"],[\"checkbox\",[24,[\"adminWatchedWords\",\"showWords\"]],[24,[\"adminWatchedWords\",\"disableShowWords\"]]]]],false],[0,\"\\n    \"],[1,[28,\"i18n\",[\"admin.watched_words.show_words\"],[[\"count\"],[[24,[\"currentAction\",\"words\",\"length\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[24,[\"showWordsList\"]]],null,{\"statements\":[[0,\"  \"],[7,\"div\",true],[11,\"class\",[29,[\"watched-words-list watched-words-\",[22,\"actionNameKey\"]]]],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"currentAction\",\"words\"]]],null,{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"watched-word-box\"],[8],[1,[28,\"admin-watched-word\",null,[[\"actionKey\",\"word\",\"action\"],[[24,[\"actionNameKey\"]],[23,1,[]],[28,\"action\",[[23,0,[]],\"recordRemoved\"],null]]]],false],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/watched-words-action"}});
Ember.TEMPLATES["admin/templates/watched-words"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"action\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"admin-contents\"],[8],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"admin-controls\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"inline-form\"],[8],[0,\"\\n        \"],[1,[28,\"d-button\",null,[[\"action\",\"class\",\"icon\"],[[28,\"action\",[[23,0,[]],\"toggleMenu\"],null],\"menu-toggle\",\"bars\"]]],false],[0,\"\\n        \"],[1,[28,\"text-field\",null,[[\"value\",\"placeholderKey\",\"class\"],[[24,[\"filter\"]],\"admin.watched_words.search\",\"no-blur\"]]],false],[0,\"\\n        \"],[1,[28,\"d-button\",null,[[\"action\",\"label\"],[[28,\"action\",[[23,0,[]],\"clearFilter\"],null],\"admin.watched_words.clear_filter\"]]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"admin-nav pull-left\"],[8],[0,\"\\n    \"],[7,\"ul\",true],[10,\"class\",\"nav nav-stacked\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"        \"],[7,\"li\",true],[11,\"class\",[23,1,[\"nameKey\"]]],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminWatchedWords.action\",[23,1,[\"nameKey\"]]]],{\"statements\":[[0,\"            \"],[1,[23,1,[\"name\"]],false],[0,\"\\n            \"],[4,\"if\",[[23,1,[\"words\"]]],null,{\"statements\":[[7,\"span\",true],[10,\"class\",\"count\"],[8],[0,\"(\"],[1,[23,1,[\"words\",\"length\"]],false],[0,\")\"],[9]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"admin-detail pull-left mobile-closed watched-words-detail\"],[8],[0,\"\\n    \"],[1,[22,\"outlet\"],false],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"clearfix\"],[8],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/watched-words"}});
Ember.TEMPLATES["admin/templates/web-hooks-show-events"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"webHookEvent\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"web-hook-direction\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"tagName\",\"classNames\",\"route\"],[\"button\",\"btn\",\"adminWebHooks\"]],{\"statements\":[[0,\"    \"],[1,[28,\"d-icon\",[\"list\"],null],false],[0,\" \"],[1,[28,\"i18n\",[\"admin.web_hooks.events.go_list\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[28,\"d-button\",null,[[\"icon\",\"label\",\"action\",\"disabled\"],[\"paper-plane\",\"admin.web_hooks.events.ping\",[28,\"action\",[[23,0,[]],\"ping\"],null],[24,[\"pingDisabled\"]]]]],false],[0,\"\\n\"],[4,\"link-to\",null,[[\"tagName\",\"classNames\",\"route\",\"model\"],[\"button\",\"btn\",\"adminWebHooks.show\",[24,[\"model\",\"extras\",\"web_hook_id\"]]]],{\"statements\":[[0,\"    \"],[1,[28,\"d-icon\",[\"far-edit\"],null],false],[0,\" \"],[1,[28,\"i18n\",[\"admin.web_hooks.events.go_details\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\\n\"],[7,\"div\",true],[10,\"class\",\"web-hook-events-listing\"],[8],[0,\"\\n\"],[4,\"if\",[[24,[\"model\"]]],null,{\"statements\":[[4,\"load-more\",null,[[\"selector\",\"action\"],[\".web-hook-events li\",[28,\"action\",[[23,0,[]],\"loadMore\"],null]]],{\"statements\":[[0,\"      \"],[7,\"div\",true],[10,\"class\",\"web-hook-events content-list\"],[8],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"heading-container\"],[8],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"col heading first status\"],[8],[1,[28,\"i18n\",[\"admin.web_hooks.events.status\"],null],false],[9],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"col heading event-id\"],[8],[1,[28,\"i18n\",[\"admin.web_hooks.events.event_id\"],null],false],[9],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"col heading timestamp\"],[8],[1,[28,\"i18n\",[\"admin.web_hooks.events.timestamp\"],null],false],[9],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"col heading completion\"],[8],[1,[28,\"i18n\",[\"admin.web_hooks.events.completion\"],null],false],[9],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"col heading actions\"],[8],[1,[28,\"i18n\",[\"admin.web_hooks.events.actions\"],null],false],[9],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"clearfix\"],[8],[9],[0,\"\\n        \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"hasIncoming\"]]],null,{\"statements\":[[0,\"          \"],[7,\"a\",false],[12,\"href\",\"\"],[12,\"tabindex\",\"0\"],[12,\"class\",\"alert alert-info clickable\"],[3,\"action\",[[23,0,[]],\"showInserted\"]],[8],[0,\"\\n            \"],[1,[28,\"count-i18n\",null,[[\"key\",\"count\"],[\"admin.web_hooks.events.incoming\",[24,[\"incomingCount\"]]]]],false],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[7,\"ul\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"admin-web-hook-event\",null,[[\"model\"],[[23,1,[]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[1,[28,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"model\",\"loadingMore\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.web_hooks.events.none\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]}],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/web-hooks-show-events"}});
Ember.TEMPLATES["admin/templates/web-hooks-show"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"type\"],\"statements\":[[4,\"link-to\",null,[[\"class\",\"route\"],[\"go-back\",\"adminWebHooks\"]],{\"statements\":[[0,\"  \"],[1,[28,\"d-icon\",[\"arrow-left\"],null],false],[0,\"\\n  \"],[1,[28,\"i18n\",[\"admin.web_hooks.go_back\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[7,\"div\",true],[10,\"class\",\"web-hook-container\"],[8],[0,\"\\n  \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.web_hooks.detailed_instruction\"],null],false],[9],[0,\"\\n  \"],[7,\"form\",true],[10,\"class\",\"web-hook form-horizontal\"],[8],[0,\"\\n    \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"for\",\"payload-url\"],[8],[1,[28,\"i18n\",[\"admin.web_hooks.payload_url\"],null],false],[9],[0,\"\\n      \"],[1,[28,\"text-field\",null,[[\"name\",\"value\",\"placeholderKey\"],[\"payload-url\",[24,[\"model\",\"payload_url\"]],\"admin.web_hooks.payload_url_placeholder\"]]],false],[0,\"\\n      \"],[1,[28,\"input-tip\",null,[[\"validation\"],[[24,[\"urlValidation\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"for\",\"content-type\"],[8],[1,[28,\"i18n\",[\"admin.web_hooks.content_type\"],null],false],[9],[0,\"\\n      \"],[1,[28,\"combo-box\",null,[[\"content\",\"name\",\"value\",\"onChange\"],[[24,[\"contentTypes\"]],\"content-type\",[24,[\"model\",\"content_type\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"model\",\"content_type\"]]],null]],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n      \"],[7,\"label\",true],[10,\"for\",\"secret\"],[8],[1,[28,\"i18n\",[\"admin.web_hooks.secret\"],null],false],[9],[0,\"\\n      \"],[1,[28,\"text-field\",null,[[\"name\",\"value\",\"placeholderKey\"],[\"secret\",[24,[\"model\",\"secret\"]],\"admin.web_hooks.secret_placeholder\"]]],false],[0,\"\\n      \"],[1,[28,\"input-tip\",null,[[\"validation\"],[[24,[\"secretValidation\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"control-group\"],[8],[0,\"\\n      \"],[7,\"label\",true],[8],[1,[28,\"i18n\",[\"admin.web_hooks.event_chooser\"],null],false],[9],[0,\"\\n      \"],[7,\"div\",true],[8],[0,\"\\n        \"],[1,[28,\"radio-button\",null,[[\"class\",\"name\",\"value\",\"selection\"],[\"subscription-choice\",\"subscription-choice\",\"individual\",[24,[\"model\",\"webHookType\"]]]]],false],[0,\"\\n        \"],[1,[28,\"i18n\",[\"admin.web_hooks.individual_event\"],null],false],[0,\"\\n        \"],[1,[28,\"input-tip\",null,[[\"validation\"],[[24,[\"eventTypeValidation\"]]]]],false],[0,\"\\n      \"],[9],[0,\"\\n\"],[4,\"unless\",[[24,[\"model\",\"wildcard_web_hook\"]]],null,{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"event-selector\"],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"eventTypes\"]]],null,{\"statements\":[[0,\"            \"],[1,[28,\"admin-web-hook-event-chooser\",null,[[\"type\",\"model\"],[[23,1,[]],[24,[\"model\",\"web_hook_event_types\"]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[7,\"div\",true],[8],[0,\"\\n        \"],[1,[28,\"radio-button\",null,[[\"class\",\"name\",\"value\",\"selection\"],[\"subscription-choice\",\"subscription-choice\",\"wildcard\",[24,[\"model\",\"webHookType\"]]]]],false],[0,\"\\n        \"],[1,[28,\"i18n\",[\"admin.web_hooks.wildcard_event\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[7,\"div\",true],[10,\"class\",\"filters control-group\"],[8],[0,\"\\n      \"],[7,\"div\",true],[10,\"class\",\"filter\"],[8],[0,\"\\n        \"],[7,\"label\",true],[8],[1,[28,\"d-icon\",[\"circle\"],[[\"class\"],[\"tracking\"]]],false],[1,[28,\"i18n\",[\"admin.web_hooks.categories_filter\"],null],false],[9],[0,\"\\n        \"],[1,[28,\"category-selector\",null,[[\"categories\",\"onChange\"],[[24,[\"model\",\"categories\"]],[28,\"action\",[[23,0,[]],[28,\"mut\",[[24,[\"model\",\"categories\"]]],null]],null]]]],false],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"instructions\"],[8],[1,[28,\"i18n\",[\"admin.web_hooks.categories_filter_instructions\"],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"showTagsFilter\"]]],null,{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"filter\"],[8],[0,\"\\n          \"],[7,\"label\",true],[8],[1,[28,\"d-icon\",[\"circle\"],[[\"class\"],[\"tracking\"]]],false],[1,[28,\"i18n\",[\"admin.web_hooks.tags_filter\"],null],false],[9],[0,\"\\n          \"],[1,[28,\"tag-chooser\",null,[[\"tags\",\"everyTag\",\"excludeSynonyms\"],[[24,[\"model\",\"tag_names\"]],true,true]]],false],[0,\"\\n          \"],[7,\"div\",true],[10,\"class\",\"instructions\"],[8],[1,[28,\"i18n\",[\"admin.web_hooks.tags_filter_instructions\"],null],false],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[7,\"div\",true],[10,\"class\",\"filter\"],[8],[0,\"\\n        \"],[7,\"label\",true],[8],[1,[28,\"d-icon\",[\"circle\"],[[\"class\"],[\"tracking\"]]],false],[1,[28,\"i18n\",[\"admin.web_hooks.groups_filter\"],null],false],[9],[0,\"\\n        \"],[1,[28,\"group-selector\",null,[[\"groupNames\",\"groupFinder\"],[[24,[\"model\",\"groupsFilterInName\"]],[24,[\"model\",\"groupFinder\"]]]]],false],[0,\"\\n        \"],[7,\"div\",true],[10,\"class\",\"instructions\"],[8],[1,[28,\"i18n\",[\"admin.web_hooks.groups_filter_instructions\"],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[1,[28,\"plugin-outlet\",null,[[\"name\",\"args\"],[\"web-hook-fields\",[28,\"hash\",null,[[\"model\"],[[24,[\"model\"]]]]]]]],false],[0,\"\\n\\n    \"],[7,\"div\",true],[8],[0,\"\\n      \"],[1,[28,\"input\",null,[[\"type\",\"name\",\"checked\"],[\"checkbox\",\"verify_certificate\",[24,[\"model\",\"verify_certificate\"]]]]],false],[0,\" \"],[1,[28,\"i18n\",[\"admin.web_hooks.verify_certificate\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[7,\"div\",true],[8],[0,\"\\n      \"],[7,\"div\",true],[8],[0,\"\\n        \"],[1,[28,\"input\",null,[[\"type\",\"name\",\"checked\"],[\"checkbox\",\"active\",[24,[\"model\",\"active\"]]]]],false],[0,\" \"],[1,[28,\"i18n\",[\"admin.web_hooks.active\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"model\",\"active\"]]],null,{\"statements\":[[0,\"        \"],[7,\"div\",true],[10,\"class\",\"instructions\"],[8],[1,[28,\"i18n\",[\"admin.web_hooks.active_notice\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[7,\"div\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n    \"],[1,[28,\"d-button\",null,[[\"class\",\"translatedLabel\",\"action\",\"disabled\"],[\"btn-default\",[24,[\"saveButtonText\"]],[28,\"action\",[[23,0,[]],\"save\"],null],[24,[\"saveButtonDisabled\"]]]]],false],[0,\"\\n\\n\"],[4,\"unless\",[[24,[\"model\",\"isNew\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"d-button\",null,[[\"class\",\"label\",\"action\"],[\"btn-danger\",\"admin.web_hooks.destroy\",[28,\"action\",[[23,0,[]],\"destroy\"],null]]]],false],[0,\"\\n\"],[4,\"link-to\",null,[[\"class\",\"route\",\"model\"],[\"btn\",\"adminWebHooks.showEvents\",[24,[\"model\",\"id\"]]]],{\"statements\":[[0,\"        \"],[1,[28,\"i18n\",[\"admin.web_hooks.events.go_events\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"    \"],[7,\"span\",true],[10,\"class\",\"saving\"],[8],[1,[22,\"savingStatus\"],false],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/web-hooks-show"}});
Ember.TEMPLATES["admin/templates/web-hooks"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[\"webHook\"],\"statements\":[[7,\"div\",true],[10,\"class\",\"web-hooks-listing\"],[8],[0,\"\\n  \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.web_hooks.instruction\"],null],false],[9],[0,\"\\n  \"],[7,\"div\",true],[10,\"class\",\"new-webhook\"],[8],[0,\"\\n\"],[4,\"link-to\",null,[[\"tagName\",\"classNames\",\"route\",\"model\"],[\"button\",\"btn btn-default\",\"adminWebHooks.show\",\"new\"]],{\"statements\":[[0,\"      \"],[1,[28,\"d-icon\",[\"plus\"],null],false],[0,\" \"],[1,[28,\"i18n\",[\"admin.web_hooks.new\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[4,\"if\",[[24,[\"model\"]]],null,{\"statements\":[[4,\"load-more\",null,[[\"selector\",\"action\"],[\".web-hooks tr\",[28,\"action\",[[23,0,[]],\"loadMore\"],null]]],{\"statements\":[[0,\"      \"],[7,\"table\",true],[10,\"class\",\"web-hooks grid\"],[8],[0,\"\\n        \"],[7,\"thead\",true],[8],[0,\"\\n          \"],[7,\"tr\",true],[8],[0,\"\\n            \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.web_hooks.delivery_status.title\"],null],false],[9],[0,\"\\n            \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.web_hooks.payload_url\"],null],false],[9],[0,\"\\n            \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.web_hooks.description\"],null],false],[9],[0,\"\\n            \"],[7,\"th\",true],[8],[1,[28,\"i18n\",[\"admin.web_hooks.controls\"],null],false],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[7,\"tbody\",true],[8],[0,\"\\n\"],[4,\"each\",[[24,[\"model\"]]],null,{\"statements\":[[0,\"            \"],[7,\"tr\",true],[8],[0,\"\\n              \"],[7,\"td\",true],[10,\"class\",\"delivery-status\"],[8],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminWebHooks.showEvents\",[23,1,[\"id\"]]]],{\"statements\":[[1,[28,\"admin-web-hook-status\",null,[[\"deliveryStatuses\",\"model\"],[[24,[\"deliveryStatuses\"]],[23,1,[]]]]],false]],\"parameters\":[]},null],[9],[0,\"\\n              \"],[7,\"td\",true],[10,\"class\",\"payload-url\"],[8],[4,\"link-to\",null,[[\"route\",\"model\"],[\"adminWebHooks.show\",[23,1,[]]]],{\"statements\":[[1,[23,1,[\"payload_url\"]],false]],\"parameters\":[]},null],[9],[0,\"\\n              \"],[7,\"td\",true],[10,\"class\",\"description\"],[8],[1,[23,1,[\"description\"]],false],[9],[0,\"\\n              \"],[7,\"td\",true],[10,\"class\",\"controls\"],[8],[0,\"\\n                \"],[4,\"link-to\",null,[[\"tagName\",\"classNames\",\"route\",\"model\"],[\"button\",\"btn btn-default no-text\",\"adminWebHooks.show\",[23,1,[]]]],{\"statements\":[[1,[28,\"d-icon\",[\"far-edit\"],null],false]],\"parameters\":[]},null],[0,\"\\n                \"],[1,[28,\"d-button\",null,[[\"class\",\"action\",\"actionParam\",\"icon\"],[\"destroy btn-danger\",[28,\"action\",[[23,0,[]],\"destroy\"],null],[23,1,[]],\"times\"]]],false],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[1,[28,\"conditional-loading-spinner\",null,[[\"condition\"],[[24,[\"model\",\"loadingMore\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[7,\"p\",true],[8],[1,[28,\"i18n\",[\"admin.web_hooks.none\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]}],[9],[0,\"\\n\"]],\"hasEval\":false}","meta":{"moduleName":"admin/templates/web-hooks"}});
/*
* MIT Licensed
* http://www.23developer.com/opensource
* http://github.com/23/resumable.js
* Steffen Tiedemann Christensen, steffen@23company.com
*/


(function(){
"use strict";

  var Resumable = function(opts){
    if ( !(this instanceof Resumable) ) {
      return new Resumable(opts);
    }
    this.version = 1.0;
    // SUPPORTED BY BROWSER?
    // Check if these features are support by the browser:
    // - File object type
    // - Blob object type
    // - FileList object type
    // - slicing files
    this.support = (
                   (typeof(File)!=='undefined')
                   &&
                   (typeof(Blob)!=='undefined')
                   &&
                   (typeof(FileList)!=='undefined')
                   &&
                   (!!Blob.prototype.webkitSlice||!!Blob.prototype.mozSlice||!!Blob.prototype.slice||false)
                   );
    if(!this.support) return(false);


    // PROPERTIES
    var $ = this;
    $.files = [];
    $.defaults = {
      chunkSize:1*1024*1024,
      forceChunkSize:false,
      simultaneousUploads:3,
      fileParameterName:'file',
      chunkNumberParameterName: 'resumableChunkNumber',
      chunkSizeParameterName: 'resumableChunkSize',
      currentChunkSizeParameterName: 'resumableCurrentChunkSize',
      totalSizeParameterName: 'resumableTotalSize',
      typeParameterName: 'resumableType',
      identifierParameterName: 'resumableIdentifier',
      fileNameParameterName: 'resumableFilename',
      relativePathParameterName: 'resumableRelativePath',
      totalChunksParameterName: 'resumableTotalChunks',
      throttleProgressCallbacks: 0.5,
      query:{},
      headers:{},
      preprocess:null,
      method:'multipart',
      uploadMethod: 'POST',
      testMethod: 'GET',
      prioritizeFirstAndLastChunk:false,
      target:'/',
      testTarget: null,
      parameterNamespace:'',
      testChunks:true,
      generateUniqueIdentifier:null,
      getTarget:null,
      maxChunkRetries:100,
      chunkRetryInterval:undefined,
      permanentErrors:[400, 404, 415, 500, 501],
      maxFiles:undefined,
      withCredentials:false,
      xhrTimeout:0,
      clearInput:true,
      chunkFormat:'blob',
      setChunkTypeFromFile:false,
      maxFilesErrorCallback:function (files, errorCount) {
        var maxFiles = $.getOpt('maxFiles');
        alert('Please upload no more than ' + maxFiles + ' file' + (maxFiles === 1 ? '' : 's') + ' at a time.');
      },
      minFileSize:1,
      minFileSizeErrorCallback:function(file, errorCount) {
        alert(file.fileName||file.name +' is too small, please upload files larger than ' + $h.formatSize($.getOpt('minFileSize')) + '.');
      },
      maxFileSize:undefined,
      maxFileSizeErrorCallback:function(file, errorCount) {
        alert(file.fileName||file.name +' is too large, please upload files less than ' + $h.formatSize($.getOpt('maxFileSize')) + '.');
      },
      fileType: [],
      fileTypeErrorCallback: function(file, errorCount) {
        alert(file.fileName||file.name +' has type not allowed, please upload files of type ' + $.getOpt('fileType') + '.');
      }
    };
    $.opts = opts||{};
    $.getOpt = function(o) {
      var $opt = this;
      // Get multiple option if passed an array
      if(o instanceof Array) {
        var options = {};
        $h.each(o, function(option){
          options[option] = $opt.getOpt(option);
        });
        return options;
      }
      // Otherwise, just return a simple option
      if ($opt instanceof ResumableChunk) {
        if (typeof $opt.opts[o] !== 'undefined') { return $opt.opts[o]; }
        else { $opt = $opt.fileObj; }
      }
      if ($opt instanceof ResumableFile) {
        if (typeof $opt.opts[o] !== 'undefined') { return $opt.opts[o]; }
        else { $opt = $opt.resumableObj; }
      }
      if ($opt instanceof Resumable) {
        if (typeof $opt.opts[o] !== 'undefined') { return $opt.opts[o]; }
        else { return $opt.defaults[o]; }
      }
    };

    // EVENTS
    // catchAll(event, ...)
    // fileSuccess(file), fileProgress(file), fileAdded(file, event), filesAdded(files, filesSkipped), fileRetry(file),
    // fileError(file, message), complete(), progress(), error(message, file), pause()
    $.events = [];
    $.on = function(event,callback){
      $.events.push(event.toLowerCase(), callback);
    };
    $.fire = function(){
      // `arguments` is an object, not array, in FF, so:
      var args = [];
      for (var i=0; i<arguments.length; i++) args.push(arguments[i]);
      // Find event listeners, and support pseudo-event `catchAll`
      var event = args[0].toLowerCase();
      for (var i=0; i<=$.events.length; i+=2) {
        if($.events[i]==event) $.events[i+1].apply($,args.slice(1));
        if($.events[i]=='catchall') $.events[i+1].apply(null,args);
      }
      if(event=='fileerror') $.fire('error', args[2], args[1]);
      if(event=='fileprogress') $.fire('progress');
    };


    // INTERNAL HELPER METHODS (handy, but ultimately not part of uploading)
    var $h = {
      stopEvent: function(e){
        e.stopPropagation();
        e.preventDefault();
      },
      each: function(o,callback){
        if(typeof(o.length)!=='undefined') {
          for (var i=0; i<o.length; i++) {
            // Array or FileList
            if(callback(o[i])===false) return;
          }
        } else {
          for (i in o) {
            // Object
            if(callback(i,o[i])===false) return;
          }
        }
      },
      generateUniqueIdentifier:function(file, event){
        var custom = $.getOpt('generateUniqueIdentifier');
        if(typeof custom === 'function') {
          return custom(file, event);
        }
        var relativePath = file.webkitRelativePath||file.fileName||file.name; // Some confusion in different versions of Firefox
        var size = file.size;
        return(size + '-' + relativePath.replace(/[^0-9a-zA-Z_-]/img, ''));
      },
      contains:function(array,test) {
        var result = false;

        $h.each(array, function(value) {
          if (value == test) {
            result = true;
            return false;
          }
          return true;
        });

        return result;
      },
      formatSize:function(size){
        if(size<1024) {
          return size + ' bytes';
        } else if(size<1024*1024) {
          return (size/1024.0).toFixed(0) + ' KB';
        } else if(size<1024*1024*1024) {
          return (size/1024.0/1024.0).toFixed(1) + ' MB';
        } else {
          return (size/1024.0/1024.0/1024.0).toFixed(1) + ' GB';
        }
      },
      getTarget:function(request, params){
        var target = $.getOpt('target');

        if (request === 'test' && $.getOpt('testTarget')) {
          target = $.getOpt('testTarget') === '/' ? $.getOpt('target') : $.getOpt('testTarget');
        }

        if (typeof target === 'function') {
          return target(params);
        }

        var separator = target.indexOf('?') < 0 ? '?' : '&';
        var joinedParams = params.join('&');

        return target + separator + joinedParams;
      }
    };

    var onDrop = function(event){
      $h.stopEvent(event);

      //handle dropped things as items if we can (this lets us deal with folders nicer in some cases)
      if (event.dataTransfer && event.dataTransfer.items) {
        loadFiles(event.dataTransfer.items, event);
      }
      //else handle them as files
      else if (event.dataTransfer && event.dataTransfer.files) {
        loadFiles(event.dataTransfer.files, event);
      }
    };
    var preventDefault = function(e) {
      e.preventDefault();
    };

    /**
     * processes a single upload item (file or directory)
     * @param {Object} item item to upload, may be file or directory entry
     * @param {string} path current file path
     * @param {File[]} items list of files to append new items to
     * @param {Function} cb callback invoked when item is processed
     */
    function processItem(item, path, items, cb) {
      var entry;
      if(item.isFile){
        // file provided
        return item.file(function(file){
          file.relativePath = path + file.name;
          items.push(file);
          cb();
        });
      }else if(item.isDirectory){
        // item is already a directory entry, just assign
        entry = item;
      }else if(item instanceof File) {
        items.push(item);
      }
      if('function' === typeof item.webkitGetAsEntry){
        // get entry from file object
        entry = item.webkitGetAsEntry();
      }
      if(entry && entry.isDirectory){
        // directory provided, process it
        return processDirectory(entry, path + entry.name + '/', items, cb);
      }
      if('function' === typeof item.getAsFile){
        // item represents a File object, convert it
        item = item.getAsFile();
        if(item instanceof File) {
          item.relativePath = path + item.name;
          items.push(item);
        }
      }
      cb(); // indicate processing is done
    }


    /**
     * cps-style list iteration.
     * invokes all functions in list and waits for their callback to be
     * triggered.
     * @param  {Function[]}   items list of functions expecting callback parameter
     * @param  {Function} cb    callback to trigger after the last callback has been invoked
     */
    function processCallbacks(items, cb){
      if(!items || items.length === 0){
        // empty or no list, invoke callback
        return cb();
      }
      // invoke current function, pass the next part as continuation
      items[0](function(){
        processCallbacks(items.slice(1), cb);
      });
    }

    /**
     * recursively traverse directory and collect files to upload
     * @param  {Object}   directory directory to process
     * @param  {string}   path      current path
     * @param  {File[]}   items     target list of items
     * @param  {Function} cb        callback invoked after traversing directory
     */
    function processDirectory (directory, path, items, cb) {
      var dirReader = directory.createReader();
      dirReader.readEntries(function(entries){
        if(!entries.length){
          // empty directory, skip
          return cb();
        }
        // process all conversion callbacks, finally invoke own one
        processCallbacks(
          entries.map(function(entry){
            // bind all properties except for callback
            return processItem.bind(null, entry, path, items);
          }),
          cb
        );
      });
    }

    /**
     * process items to extract files to be uploaded
     * @param  {File[]} items items to process
     * @param  {Event} event event that led to upload
     */
    function loadFiles(items, event) {
      if(!items.length){
        return; // nothing to do
      }
      $.fire('beforeAdd');
      var files = [];
      processCallbacks(
          Array.prototype.map.call(items, function(item){
            // bind all properties except for callback
            return processItem.bind(null, item, "", files);
          }),
          function(){
            if(files.length){
              // at least one file found
              appendFilesFromFileList(files, event);
            }
          }
      );
    };

    var appendFilesFromFileList = function(fileList, event){
      // check for uploading too many files
      var errorCount = 0;
      var o = $.getOpt(['maxFiles', 'minFileSize', 'maxFileSize', 'maxFilesErrorCallback', 'minFileSizeErrorCallback', 'maxFileSizeErrorCallback', 'fileType', 'fileTypeErrorCallback']);
      if (typeof(o.maxFiles)!=='undefined' && o.maxFiles<(fileList.length+$.files.length)) {
        // if single-file upload, file is already added, and trying to add 1 new file, simply replace the already-added file
        if (o.maxFiles===1 && $.files.length===1 && fileList.length===1) {
          $.removeFile($.files[0]);
        } else {
          o.maxFilesErrorCallback(fileList, errorCount++);
          return false;
        }
      }
      var files = [], filesSkipped = [], remaining = fileList.length;
      var decreaseReamining = function(){
        if(!--remaining){
          // all files processed, trigger event
          if(!files.length && !filesSkipped.length){
            // no succeeded files, just skip
            return;
          }
          window.setTimeout(function(){
            $.fire('filesAdded', files, filesSkipped);
          },0);
        }
      };
      $h.each(fileList, function(file){
        var fileName = file.name;
        if(o.fileType.length > 0){
          var fileTypeFound = false;
          for(var index in o.fileType){
            var extension = '.' + o.fileType[index];
			if(fileName.toLowerCase().indexOf(extension.toLowerCase(), fileName.length - extension.length) !== -1){
              fileTypeFound = true;
              break;
            }
          }
          if (!fileTypeFound) {
            o.fileTypeErrorCallback(file, errorCount++);
            return false;
          }
        }

        if (typeof(o.minFileSize)!=='undefined' && file.size<o.minFileSize) {
          o.minFileSizeErrorCallback(file, errorCount++);
          return false;
        }
        if (typeof(o.maxFileSize)!=='undefined' && file.size>o.maxFileSize) {
          o.maxFileSizeErrorCallback(file, errorCount++);
          return false;
        }

        function addFile(uniqueIdentifier){
          if (!$.getFromUniqueIdentifier(uniqueIdentifier)) {(function(){
            file.uniqueIdentifier = uniqueIdentifier;
            var f = new ResumableFile($, file, uniqueIdentifier);
            $.files.push(f);
            files.push(f);
            f.container = (typeof event != 'undefined' ? event.srcElement : null);
            window.setTimeout(function(){
              $.fire('fileAdded', f, event)
            },0);
          })()} else {
            filesSkipped.push(file);
          };
          decreaseReamining();
        }
        // directories have size == 0
        var uniqueIdentifier = $h.generateUniqueIdentifier(file, event);
        if(uniqueIdentifier && typeof uniqueIdentifier.then === 'function'){
          // Promise or Promise-like object provided as unique identifier
          uniqueIdentifier
          .then(
            function(uniqueIdentifier){
              // unique identifier generation succeeded
              addFile(uniqueIdentifier);
            },
           function(){
              // unique identifier generation failed
              // skip further processing, only decrease file count
              decreaseReamining();
            }
          );
        }else{
          // non-Promise provided as unique identifier, process synchronously
          addFile(uniqueIdentifier);
        }
      });
    };

    // INTERNAL OBJECT TYPES
    function ResumableFile(resumableObj, file, uniqueIdentifier){
      var $ = this;
      $.opts = {};
      $.getOpt = resumableObj.getOpt;
      $._prevProgress = 0;
      $.resumableObj = resumableObj;
      $.file = file;
      $.fileName = file.fileName||file.name; // Some confusion in different versions of Firefox
      $.size = file.size;
      $.relativePath = file.relativePath || file.webkitRelativePath || $.fileName;
      $.uniqueIdentifier = uniqueIdentifier;
      $._pause = false;
      $.container = '';
      var _error = uniqueIdentifier !== undefined;

      // Callback when something happens within the chunk
      var chunkEvent = function(event, message){
        // event can be 'progress', 'success', 'error' or 'retry'
        switch(event){
        case 'progress':
          $.resumableObj.fire('fileProgress', $, message);
          break;
        case 'error':
          $.abort();
          _error = true;
          $.chunks = [];
          $.resumableObj.fire('fileError', $, message);
          break;
        case 'success':
          if(_error) return;
          $.resumableObj.fire('fileProgress', $); // it's at least progress
          if($.isComplete()) {
            $.resumableObj.fire('fileSuccess', $, message);
          }
          break;
        case 'retry':
          $.resumableObj.fire('fileRetry', $);
          break;
        }
      };

      // Main code to set up a file object with chunks,
      // packaged to be able to handle retries if needed.
      $.chunks = [];
      $.abort = function(){
        // Stop current uploads
        var abortCount = 0;
        $h.each($.chunks, function(c){
          if(c.status()=='uploading') {
            c.abort();
            abortCount++;
          }
        });
        if(abortCount>0) $.resumableObj.fire('fileProgress', $);
      };
      $.cancel = function(){
        // Reset this file to be void
        var _chunks = $.chunks;
        $.chunks = [];
        // Stop current uploads
        $h.each(_chunks, function(c){
          if(c.status()=='uploading')  {
            c.abort();
            $.resumableObj.uploadNextChunk();
          }
        });
        $.resumableObj.removeFile($);
        $.resumableObj.fire('fileProgress', $);
      };
      $.retry = function(){
        $.bootstrap();
        var firedRetry = false;
        $.resumableObj.on('chunkingComplete', function(){
          if(!firedRetry) $.resumableObj.upload();
          firedRetry = true;
        });
      };
      $.bootstrap = function(){
        $.abort();
        _error = false;
        // Rebuild stack of chunks from file
        $.chunks = [];
        $._prevProgress = 0;
        var round = $.getOpt('forceChunkSize') ? Math.ceil : Math.floor;
        var maxOffset = Math.max(round($.file.size/$.getOpt('chunkSize')),1);
        for (var offset=0; offset<maxOffset; offset++) {(function(offset){
            window.setTimeout(function(){
                $.chunks.push(new ResumableChunk($.resumableObj, $, offset, chunkEvent));
                $.resumableObj.fire('chunkingProgress',$,offset/maxOffset);
            },0);
        })(offset)}
        window.setTimeout(function(){
            $.resumableObj.fire('chunkingComplete',$);
        },0);
      };
      $.progress = function(){
        if(_error) return(1);
        // Sum up progress across everything
        var ret = 0;
        var error = false;
        $h.each($.chunks, function(c){
          if(c.status()=='error') error = true;
          ret += c.progress(true); // get chunk progress relative to entire file
        });
        ret = (error ? 1 : (ret>0.99999 ? 1 : ret));
        ret = Math.max($._prevProgress, ret); // We don't want to lose percentages when an upload is paused
        $._prevProgress = ret;
        return(ret);
      };
      $.isUploading = function(){
        var uploading = false;
        $h.each($.chunks, function(chunk){
          if(chunk.status()=='uploading') {
            uploading = true;
            return(false);
          }
        });
        return(uploading);
      };
      $.isComplete = function(){
        var outstanding = false;
        $h.each($.chunks, function(chunk){
          var status = chunk.status();
          if(status=='pending' || status=='uploading' || chunk.preprocessState === 1) {
            outstanding = true;
            return(false);
          }
        });
        return(!outstanding);
      };
      $.pause = function(pause){
          if(typeof(pause)==='undefined'){
              $._pause = ($._pause ? false : true);
          }else{
              $._pause = pause;
          }
      };
      $.isPaused = function() {
        return $._pause;
      };


      // Bootstrap and return
      $.resumableObj.fire('chunkingStart', $);
      $.bootstrap();
      return(this);
    }


    function ResumableChunk(resumableObj, fileObj, offset, callback){
      var $ = this;
      $.opts = {};
      $.getOpt = resumableObj.getOpt;
      $.resumableObj = resumableObj;
      $.fileObj = fileObj;
      $.fileObjSize = fileObj.size;
      $.fileObjType = fileObj.file.type;
      $.offset = offset;
      $.callback = callback;
      $.lastProgressCallback = (new Date);
      $.tested = false;
      $.retries = 0;
      $.pendingRetry = false;
      $.preprocessState = 0; // 0 = unprocessed, 1 = processing, 2 = finished

      // Computed properties
      var chunkSize = $.getOpt('chunkSize');
      $.loaded = 0;
      $.startByte = $.offset*chunkSize;
      $.endByte = Math.min($.fileObjSize, ($.offset+1)*chunkSize);
      if ($.fileObjSize-$.endByte < chunkSize && !$.getOpt('forceChunkSize')) {
        // The last chunk will be bigger than the chunk size, but less than 2*chunkSize
        $.endByte = $.fileObjSize;
      }
      $.xhr = null;

      // test() makes a GET request without any data to see if the chunk has already been uploaded in a previous session
      $.test = function(){
        // Set up request and listen for event
        $.xhr = new XMLHttpRequest();

        var testHandler = function(e){
          $.tested = true;
          var status = $.status();
          if(status=='success') {
            $.callback(status, $.message());
            $.resumableObj.uploadNextChunk();
          } else {
            $.send();
          }
        };
        $.xhr.addEventListener('load', testHandler, false);
        $.xhr.addEventListener('error', testHandler, false);
        $.xhr.addEventListener('timeout', testHandler, false);

        // Add data from the query options
        var params = [];
        var parameterNamespace = $.getOpt('parameterNamespace');
        var customQuery = $.getOpt('query');
        if(typeof customQuery == 'function') customQuery = customQuery($.fileObj, $);
        $h.each(customQuery, function(k,v){
          params.push([encodeURIComponent(parameterNamespace+k), encodeURIComponent(v)].join('='));
        });
        // Add extra data to identify chunk
        params = params.concat(
          [
            // define key/value pairs for additional parameters
            ['chunkNumberParameterName', $.offset + 1],
            ['chunkSizeParameterName', $.getOpt('chunkSize')],
            ['currentChunkSizeParameterName', $.endByte - $.startByte],
            ['totalSizeParameterName', $.fileObjSize],
            ['typeParameterName', $.fileObjType],
            ['identifierParameterName', $.fileObj.uniqueIdentifier],
            ['fileNameParameterName', $.fileObj.fileName],
            ['relativePathParameterName', $.fileObj.relativePath],
            ['totalChunksParameterName', $.fileObj.chunks.length]
          ].filter(function(pair){
            // include items that resolve to truthy values
            // i.e. exclude false, null, undefined and empty strings
            return $.getOpt(pair[0]);
          })
          .map(function(pair){
            // map each key/value pair to its final form
            return [
              parameterNamespace + $.getOpt(pair[0]),
              encodeURIComponent(pair[1])
            ].join('=');
          })
        );
        // Append the relevant chunk and send it
        $.xhr.open($.getOpt('testMethod'), $h.getTarget('test', params));
        $.xhr.timeout = $.getOpt('xhrTimeout');
        $.xhr.withCredentials = $.getOpt('withCredentials');
        // Add data from header options
        var customHeaders = $.getOpt('headers');
        if(typeof customHeaders === 'function') {
          customHeaders = customHeaders($.fileObj, $);
        }
        $h.each(customHeaders, function(k,v) {
          $.xhr.setRequestHeader(k, v);
        });
        $.xhr.send(null);
      };

      $.preprocessFinished = function(){
        $.preprocessState = 2;
        $.send();
      };

      // send() uploads the actual data in a POST call
      $.send = function(){
        var preprocess = $.getOpt('preprocess');
        if(typeof preprocess === 'function') {
          switch($.preprocessState) {
          case 0: $.preprocessState = 1; preprocess($); return;
          case 1: return;
          case 2: break;
          }
        }
        if($.getOpt('testChunks') && !$.tested) {
          $.test();
          return;
        }

        // Set up request and listen for event
        $.xhr = new XMLHttpRequest();

        // Progress
        $.xhr.upload.addEventListener('progress', function(e){
          if( (new Date) - $.lastProgressCallback > $.getOpt('throttleProgressCallbacks') * 1000 ) {
            $.callback('progress');
            $.lastProgressCallback = (new Date);
          }
          $.loaded=e.loaded||0;
        }, false);
        $.loaded = 0;
        $.pendingRetry = false;
        $.callback('progress');

        // Done (either done, failed or retry)
        var doneHandler = function(e){
          var status = $.status();
          if(status=='success'||status=='error') {
            $.callback(status, $.message());
            $.resumableObj.uploadNextChunk();
          } else {
            $.callback('retry', $.message());
            $.abort();
            $.retries++;
            var retryInterval = $.getOpt('chunkRetryInterval');
            if(retryInterval !== undefined) {
              $.pendingRetry = true;
              setTimeout($.send, retryInterval);
            } else {
              $.send();
            }
          }
        };
        $.xhr.addEventListener('load', doneHandler, false);
        $.xhr.addEventListener('error', doneHandler, false);
        $.xhr.addEventListener('timeout', doneHandler, false);

        // Set up the basic query data from Resumable
        var query = [
          ['chunkNumberParameterName', $.offset + 1],
          ['chunkSizeParameterName', $.getOpt('chunkSize')],
          ['currentChunkSizeParameterName', $.endByte - $.startByte],
          ['totalSizeParameterName', $.fileObjSize],
          ['typeParameterName', $.fileObjType],
          ['identifierParameterName', $.fileObj.uniqueIdentifier],
          ['fileNameParameterName', $.fileObj.fileName],
          ['relativePathParameterName', $.fileObj.relativePath],
          ['totalChunksParameterName', $.fileObj.chunks.length],
        ].filter(function(pair){
          // include items that resolve to truthy values
          // i.e. exclude false, null, undefined and empty strings
          return $.getOpt(pair[0]);
        })
        .reduce(function(query, pair){
          // assign query key/value
          query[$.getOpt(pair[0])] = pair[1];
          return query;
        }, {});
        // Mix in custom data
        var customQuery = $.getOpt('query');
        if(typeof customQuery == 'function') customQuery = customQuery($.fileObj, $);
        $h.each(customQuery, function(k,v){
          query[k] = v;
        });

        var func = ($.fileObj.file.slice ? 'slice' : ($.fileObj.file.mozSlice ? 'mozSlice' : ($.fileObj.file.webkitSlice ? 'webkitSlice' : 'slice')));
        var bytes = $.fileObj.file[func]($.startByte, $.endByte, $.getOpt('setChunkTypeFromFile') ? $.fileObj.file.type : "");
        var data = null;
        var params = [];

        var parameterNamespace = $.getOpt('parameterNamespace');
                if ($.getOpt('method') === 'octet') {
                    // Add data from the query options
                    data = bytes;
                    $h.each(query, function (k, v) {
                        params.push([encodeURIComponent(parameterNamespace + k), encodeURIComponent(v)].join('='));
                    });
                } else {
                    // Add data from the query options
                    data = new FormData();
                    $h.each(query, function (k, v) {
                        data.append(parameterNamespace + k, v);
                        params.push([encodeURIComponent(parameterNamespace + k), encodeURIComponent(v)].join('='));
                    });
                    if ($.getOpt('chunkFormat') == 'blob') {
                        data.append(parameterNamespace + $.getOpt('fileParameterName'), bytes, $.fileObj.fileName);
                    }
                    else if ($.getOpt('chunkFormat') == 'base64') {
                        var fr = new FileReader();
                        fr.onload = function (e) {
                            data.append(parameterNamespace + $.getOpt('fileParameterName'), fr.result);
                            $.xhr.send(data);
                        }
                        fr.readAsDataURL(bytes);
                    }
                }

        var target = $h.getTarget('upload', params);
        var method = $.getOpt('uploadMethod');

        $.xhr.open(method, target);
        if ($.getOpt('method') === 'octet') {
          $.xhr.setRequestHeader('Content-Type', 'application/octet-stream');
        }
        $.xhr.timeout = $.getOpt('xhrTimeout');
        $.xhr.withCredentials = $.getOpt('withCredentials');
        // Add data from header options
        var customHeaders = $.getOpt('headers');
        if(typeof customHeaders === 'function') {
          customHeaders = customHeaders($.fileObj, $);
        }

        $h.each(customHeaders, function(k,v) {
          $.xhr.setRequestHeader(k, v);
        });

                if ($.getOpt('chunkFormat') == 'blob') {
                    $.xhr.send(data);
                }
      };
      $.abort = function(){
        // Abort and reset
        if($.xhr) $.xhr.abort();
        $.xhr = null;
      };
      $.status = function(){
        // Returns: 'pending', 'uploading', 'success', 'error'
        if($.pendingRetry) {
          // if pending retry then that's effectively the same as actively uploading,
          // there might just be a slight delay before the retry starts
          return('uploading');
        } else if(!$.xhr) {
          return('pending');
        } else if($.xhr.readyState<4) {
          // Status is really 'OPENED', 'HEADERS_RECEIVED' or 'LOADING' - meaning that stuff is happening
          return('uploading');
        } else {
          if($.xhr.status == 200 || $.xhr.status == 201) {
            // HTTP 200, 201 (created)
            return('success');
          } else if($h.contains($.getOpt('permanentErrors'), $.xhr.status) || $.retries >= $.getOpt('maxChunkRetries')) {
            // HTTP 415/500/501, permanent error
            return('error');
          } else {
            // this should never happen, but we'll reset and queue a retry
            // a likely case for this would be 503 service unavailable
            $.abort();
            return('pending');
          }
        }
      };
      $.message = function(){
        return($.xhr ? $.xhr.responseText : '');
      };
      $.progress = function(relative){
        if(typeof(relative)==='undefined') relative = false;
        var factor = (relative ? ($.endByte-$.startByte)/$.fileObjSize : 1);
        if($.pendingRetry) return(0);
        if(!$.xhr || !$.xhr.status) factor*=.95;
        var s = $.status();
        switch(s){
        case 'success':
        case 'error':
          return(1*factor);
        case 'pending':
          return(0*factor);
        default:
          return($.loaded/($.endByte-$.startByte)*factor);
        }
      };
      return(this);
    }

    // QUEUE
    $.uploadNextChunk = function(){
      var found = false;

      // In some cases (such as videos) it's really handy to upload the first
      // and last chunk of a file quickly; this let's the server check the file's
      // metadata and determine if there's even a point in continuing.
      if ($.getOpt('prioritizeFirstAndLastChunk')) {
        $h.each($.files, function(file){
          if(file.chunks.length && file.chunks[0].status()=='pending' && file.chunks[0].preprocessState === 0) {
            file.chunks[0].send();
            found = true;
            return(false);
          }
          if(file.chunks.length>1 && file.chunks[file.chunks.length-1].status()=='pending' && file.chunks[file.chunks.length-1].preprocessState === 0) {
            file.chunks[file.chunks.length-1].send();
            found = true;
            return(false);
          }
        });
        if(found) return(true);
      }

      // Now, simply look for the next, best thing to upload
      $h.each($.files, function(file){
        if(file.isPaused()===false){
         $h.each(file.chunks, function(chunk){
           if(chunk.status()=='pending' && chunk.preprocessState === 0) {
             chunk.send();
             found = true;
             return(false);
           }
          });
        }
        if(found) return(false);
      });
      if(found) return(true);

      // The are no more outstanding chunks to upload, check is everything is done
      var outstanding = false;
      $h.each($.files, function(file){
        if(!file.isComplete()) {
          outstanding = true;
          return(false);
        }
      });
      if(!outstanding) {
        // All chunks have been uploaded, complete
        $.fire('complete');
      }
      return(false);
    };


    // PUBLIC METHODS FOR RESUMABLE.JS
    $.assignBrowse = function(domNodes, isDirectory){
      if(typeof(domNodes.length)=='undefined') domNodes = [domNodes];

      $h.each(domNodes, function(domNode) {
        var input;
        if(domNode.tagName==='INPUT' && domNode.type==='file'){
          input = domNode;
        } else {
          input = document.createElement('input');
          input.setAttribute('type', 'file');
          input.style.display = 'none';
          domNode.addEventListener('click', function(){
            input.style.opacity = 0;
            input.style.display='block';
            input.focus();
            input.click();
            input.style.display='none';
          }, false);
          domNode.appendChild(input);
        }
        var maxFiles = $.getOpt('maxFiles');
        if (typeof(maxFiles)==='undefined'||maxFiles!=1){
          input.setAttribute('multiple', 'multiple');
        } else {
          input.removeAttribute('multiple');
        }
        if(isDirectory){
          input.setAttribute('webkitdirectory', 'webkitdirectory');
        } else {
          input.removeAttribute('webkitdirectory');
        }
        var fileTypes = $.getOpt('fileType');
        if (typeof (fileTypes) !== 'undefined' && fileTypes.length >= 1) {
          input.setAttribute('accept', fileTypes.map(function (e) { return '.' + e }).join(','));
        }
        else {
          input.removeAttribute('accept');
        }
        // When new files are added, simply append them to the overall list
        input.addEventListener('change', function(e){
          appendFilesFromFileList(e.target.files,e);
          var clearInput = $.getOpt('clearInput');
          if (clearInput) {
            e.target.value = '';
          }
        }, false);
      });
    };
    $.assignDrop = function(domNodes){
      if(typeof(domNodes.length)=='undefined') domNodes = [domNodes];

      $h.each(domNodes, function(domNode) {
        domNode.addEventListener('dragover', preventDefault, false);
        domNode.addEventListener('dragenter', preventDefault, false);
        domNode.addEventListener('drop', onDrop, false);
      });
    };
    $.unAssignDrop = function(domNodes) {
      if (typeof(domNodes.length) == 'undefined') domNodes = [domNodes];

      $h.each(domNodes, function(domNode) {
        domNode.removeEventListener('dragover', preventDefault);
        domNode.removeEventListener('dragenter', preventDefault);
        domNode.removeEventListener('drop', onDrop);
      });
    };
    $.isUploading = function(){
      var uploading = false;
      $h.each($.files, function(file){
        if (file.isUploading()) {
          uploading = true;
          return(false);
        }
      });
      return(uploading);
    };
    $.upload = function(){
      // Make sure we don't start too many uploads at once
      if($.isUploading()) return;
      // Kick off the queue
      $.fire('uploadStart');
      for (var num=1; num<=$.getOpt('simultaneousUploads'); num++) {
        $.uploadNextChunk();
      }
    };
    $.pause = function(){
      // Resume all chunks currently being uploaded
      $h.each($.files, function(file){
        file.abort();
      });
      $.fire('pause');
    };
    $.cancel = function(){
      $.fire('beforeCancel');
      for(var i = $.files.length - 1; i >= 0; i--) {
        $.files[i].cancel();
      }
      $.fire('cancel');
    };
    $.progress = function(){
      var totalDone = 0;
      var totalSize = 0;
      // Resume all chunks currently being uploaded
      $h.each($.files, function(file){
        totalDone += file.progress()*file.size;
        totalSize += file.size;
      });
      return(totalSize>0 ? totalDone/totalSize : 0);
    };
    $.addFile = function(file, event){
      appendFilesFromFileList([file], event);
    };
    $.addFiles = function(files, event){
      appendFilesFromFileList(files, event);
    };
    $.removeFile = function(file){
      for(var i = $.files.length - 1; i >= 0; i--) {
        if($.files[i] === file) {
          $.files.splice(i, 1);
        }
      }
    };
    $.getFromUniqueIdentifier = function(uniqueIdentifier){
      var ret = false;
      $h.each($.files, function(f){
        if(f.uniqueIdentifier==uniqueIdentifier) ret = f;
      });
      return(ret);
    };
    $.getSize = function(){
      var totalSize = 0;
      $h.each($.files, function(file){
        totalSize += file.size;
      });
      return(totalSize);
    };
    $.handleDropEvent = function (e) {
      onDrop(e);
    };
    $.handleChangeEvent = function (e) {
      appendFilesFromFileList(e.target.files, e);
      e.target.value = '';
    };
    $.updateQuery = function(query){
        $.opts.query = query;
    };

    return(this);
  };


  // Node.js-style export for Node and Component
  if (typeof module != 'undefined') {
    module.exports = Resumable;
  } else if (typeof define === "function" && define.amd) {
    // AMD/requirejs: Define the module
    define(function(){
      return Resumable;
    });
  } else {
    // Browser: Expose to window
    window.Resumable = Resumable;
  }

})();




