// Instantiate the object
var I18n = I18n || {};

// Set default locale to english
I18n.defaultLocale = "en";

// Set default pluralization rule
I18n.pluralizationRules = {
  en: function(n) {
    return n === 0 ? ["zero", "none", "other"] : n === 1 ? "one" : "other";
  }
};

// Set current locale to null
I18n.locale = null;
I18n.fallbackLocale = null;

// Set the placeholder format. Accepts `{{placeholder}}` and `%{placeholder}`.
I18n.PLACEHOLDER = /(?:\{\{|%\{)(.*?)(?:\}\}?)/gm;

I18n.SEPARATOR = ".";

I18n.noFallbacks = false;

I18n.isValidNode = function(obj, node, undefined) {
  return obj[node] !== null && obj[node] !== undefined;
};

I18n.lookup = function(scope, options) {
  options = options || {};

  var translations = this.prepareOptions(I18n.translations),
    locale = options.locale || I18n.currentLocale(),
    messages = translations[locale] || {},
    currentScope;

  options = this.prepareOptions(options);

  if (typeof scope === "object") {
    scope = scope.join(this.SEPARATOR);
  }

  if (options.scope) {
    scope = options.scope.toString() + this.SEPARATOR + scope;
  }

  var originalScope = scope;
  scope = scope.split(this.SEPARATOR);

  if (scope.length > 0 && scope[0] !== "js") {
    scope.unshift("js");
  }

  while (messages && scope.length > 0) {
    currentScope = scope.shift();
    messages = messages[currentScope];
  }

  if (messages === undefined && this.extras && this.extras[locale]) {
    messages = this.extras[locale];
    scope = originalScope.split(this.SEPARATOR);

    while (messages && scope.length > 0) {
      currentScope = scope.shift();
      messages = messages[currentScope];
    }
  }

  if (messages === undefined) {
    messages = options.defaultValue;
  }

  return messages;
};

// Merge serveral hash options, checking if value is set before
// overwriting any value. The precedence is from left to right.
//
//   I18n.prepareOptions({name: "John Doe"}, {name: "Mary Doe", role: "user"});
//   #=> {name: "John Doe", role: "user"}
//
I18n.prepareOptions = function() {
  var options = {},
    opts,
    count = arguments.length;

  for (var i = 0; i < count; i++) {
    opts = arguments[i];

    if (!opts) {
      continue;
    }

    for (var key in opts) {
      if (!this.isValidNode(options, key)) {
        options[key] = opts[key];
      }
    }
  }

  return options;
};

I18n.interpolate = function(message, options) {
  options = this.prepareOptions(options);

  var matches = message.match(this.PLACEHOLDER),
    placeholder,
    value,
    name;

  if (!matches) {
    return message;
  }

  for (var i = 0; (placeholder = matches[i]); i++) {
    name = placeholder.replace(this.PLACEHOLDER, "$1");

    if (typeof options[name] === "string") {
      // The dollar sign (`$`) is a special replace pattern, and `$&` inserts
      // the matched string. Thus dollars signs need to be escaped with the
      // special pattern `$$`, which inserts a single `$`.
      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter
      value = options[name].replace(/\$/g, "$$$$");
    } else {
      value = options[name];
    }

    if (!this.isValidNode(options, name)) {
      value = "[missing " + placeholder + " value]";
    }

    var regex = new RegExp(
      placeholder.replace(/\{/gm, "\\{").replace(/\}/gm, "\\}")
    );
    message = message.replace(regex, value);
  }

  return message;
};

I18n.translate = function(scope, options) {
  options = this.prepareOptions(options);
  options.needsPluralization = typeof options.count === "number";
  options.ignoreMissing = !this.noFallbacks;

  var translation = this.findTranslation(scope, options);

  if (!this.noFallbacks) {
    if (!translation && this.fallbackLocale) {
      options.locale = this.fallbackLocale;
      translation = this.findTranslation(scope, options);
    }

    options.ignoreMissing = false;

    if (!translation && this.currentLocale() !== this.defaultLocale) {
      options.locale = this.defaultLocale;
      translation = this.findTranslation(scope, options);
    }

    if (!translation && this.currentLocale() !== "en") {
      options.locale = "en";
      translation = this.findTranslation(scope, options);
    }
  }

  try {
    return this.interpolate(translation, options);
  } catch (error) {
    return this.missingTranslation(scope);
  }
};

I18n.findTranslation = function(scope, options) {
  var translation = this.lookup(scope, options);

  if (translation && options.needsPluralization) {
    translation = this.pluralize(translation, scope, options);
  }

  return translation;
};

I18n.toNumber = function(number, options) {
  options = this.prepareOptions(options, this.lookup("number.format"), {
    precision: 3,
    separator: this.SEPARATOR,
    delimiter: ",",
    strip_insignificant_zeros: false
  });

  var negative = number < 0,
    string = Math.abs(number)
      .toFixed(options.precision)
      .toString(),
    parts = string.split(this.SEPARATOR),
    buffer = [],
    formattedNumber;

  number = parts[0];

  while (number.length > 0) {
    buffer.unshift(number.substr(Math.max(0, number.length - 3), 3));
    number = number.substr(0, number.length - 3);
  }

  formattedNumber = buffer.join(options.delimiter);

  if (options.precision > 0) {
    formattedNumber += options.separator + parts[1];
  }

  if (negative) {
    formattedNumber = "-" + formattedNumber;
  }

  if (options.strip_insignificant_zeros) {
    var regex = {
      separator: new RegExp(options.separator.replace(/\./, "\\.") + "$"),
      zeros: /0+$/
    };

    formattedNumber = formattedNumber
      .replace(regex.zeros, "")
      .replace(regex.separator, "");
  }

  return formattedNumber;
};

I18n.toHumanSize = function(number, options) {
  var kb = 1024,
    size = number,
    iterations = 0,
    unit,
    precision;

  while (size >= kb && iterations < 4) {
    size = size / kb;
    iterations += 1;
  }

  if (iterations === 0) {
    unit = this.t("number.human.storage_units.units.byte", { count: size });
    precision = 0;
  } else {
    unit = this.t(
      "number.human.storage_units.units." +
        [null, "kb", "mb", "gb", "tb"][iterations]
    );
    precision = size - Math.floor(size) === 0 ? 0 : 1;
  }

  options = this.prepareOptions(options, {
    precision: precision,
    format: this.t("number.human.storage_units.format"),
    delimiter: ""
  });

  number = this.toNumber(size, options);
  number = options.format.replace("%u", unit).replace("%n", number);

  return number;
};

I18n.pluralizer = function(locale) {
  var pluralizer = this.pluralizationRules[locale];
  if (pluralizer !== undefined) return pluralizer;
  return this.pluralizationRules["en"];
};

I18n.findAndTranslateValidNode = function(keys, translation) {
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (this.isValidNode(translation, key)) return translation[key];
  }
  return null;
};

I18n.pluralize = function(translation, scope, options) {
  if (typeof translation !== "object") return translation;

  options = this.prepareOptions(options);
  var count = options.count.toString();

  var pluralizer = this.pluralizer(options.locale || this.currentLocale());
  var key = pluralizer(Math.abs(count));
  var keys = typeof key === "object" && key instanceof Array ? key : [key];

  var message = this.findAndTranslateValidNode(keys, translation);

  if (message !== null || options.ignoreMissing) {
    return message;
  }

  return this.missingTranslation(scope, keys[0]);
};

I18n.missingTranslation = function(scope, key) {
  var message = "[" + this.currentLocale() + this.SEPARATOR + scope;
  if (key) {
    message += this.SEPARATOR + key;
  }
  return message + "]";
};

I18n.currentLocale = function() {
  return I18n.locale || I18n.defaultLocale;
};

I18n.enableVerboseLocalization = function() {
  var counter = 0;
  var keys = {};
  var t = I18n.t;

  I18n.noFallbacks = true;

  I18n.t = I18n.translate = function(scope, value) {
    var current = keys[scope];
    if (!current) {
      current = keys[scope] = ++counter;
      var message = "Translation #" + current + ": " + scope;
      if (value && Object.keys(value).length > 0) {
        message += ", parameters: " + JSON.stringify(value);
      }
      // eslint-disable-next-line no-console
      console.info(message);
    }
    return t.apply(I18n, [scope, value]) + " (#" + current + ")";
  };
};

I18n.enableVerboseLocalizationSession = function() {
  sessionStorage.setItem("verbose_localization", "true");
  I18n.enableVerboseLocalization();

  return "Verbose localization is enabled. Close the browser tab to turn it off. Reload the page to see the translation keys.";
};

// shortcuts
I18n.t = I18n.translate;


MessageFormat = {locale: {}};
I18n._compiledMFs = {"too_few_topics_and_posts_notice_MF" : function(d){
var r = "";
r += "Laitetaanpa <a href=\"https://blog.discourse.org/2014/08/building-a-discourse-community/\">keskustelu alulle!</a> Ketjuja ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "currentTopics";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "on <strong>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</strong>";
return r;
},
"other" : function(d){
var r = "";
r += "on <strong>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</strong>";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += " ja viestej√§ ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "currentPosts";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "<strong>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</strong>";
return r;
},
"other" : function(d){
var r = "";
r += "<strong>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</strong>";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += ". Vierailijoilla tulisi olla enemm√§n vastauksia innoittavaa luettavaa ‚Äì suositamme ainakin ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "requiredTopics";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "<strong>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</strong> ketjua";
return r;
},
"other" : function(d){
var r = "";
r += "<strong>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</strong> ketjua";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += " ja ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "requiredPosts";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "<strong>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</strong> viesti√§";
return r;
},
"other" : function(d){
var r = "";
r += "<strong>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</strong> viesti√§";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += ". T√§m√§ viesti n√§kyy vain henkil√∂kunnalle.";
return r;
}, "too_few_topics_notice_MF" : function(d){
var r = "";
r += "Laitetaanpa <a href=\"https://blog.discourse.org/2014/08/building-a-discourse-community/\">keskustelu alulle!</a> Ketjuja ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "currentTopics";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "on <strong>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</strong>";
return r;
},
"other" : function(d){
var r = "";
r += "on <strong>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</strong>";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += ". Vierailijoilla tulisi olla enemm√§n vastauksia innoittavaa luettavaa ‚Äì suositamme ainakin ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "requiredTopics";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "<strong>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</strong> ketjua";
return r;
},
"other" : function(d){
var r = "";
r += "<strong>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</strong> ketjua";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += ". T√§m√§ viesti n√§kyy vain henkil√∂kunnalle.";
return r;
}, "too_few_posts_notice_MF" : function(d){
var r = "";
r += "Laitetaanpa <a href=\"https://blog.discourse.org/2014/08/building-a-discourse-community/\">keskustelu alulle!</a> Viestej√§ ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "currentPosts";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "on <strong>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</strong>";
return r;
},
"other" : function(d){
var r = "";
r += "are <strong>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</strong>";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += ". Vierailijoilla tulisi olla enemm√§n vastauksia innoittavaa luettavaa ‚Äì suositamme ainakin ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "requiredPosts";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "<strong>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</strong> viesti√§";
return r;
},
"other" : function(d){
var r = "";
r += "<strong>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</strong> viesti√§";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += ". T√§m√§ viesti n√§kyy vain henkil√∂kunnalle.";
return r;
}, "logs_error_rate_notice.reached_hour_MF" : function(d){
var r = "";
r += "<b>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["relativeAge"];
r += "</b> ‚Äì <a href='";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["url"];
r += "' target='_blank'>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "rate";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " virhe/tunti";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " virhett√§/tunti";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += "</a> saavutti sivustoasetuskynnyksen ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "limit";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " virhe/tunti";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " virhett√§/tunti";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += ".";
return r;
}, "logs_error_rate_notice.reached_minute_MF" : function(d){
var r = "";
r += "<b>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["relativeAge"];
r += "</b> ‚Äì <a href='";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["url"];
r += "' target='_blank'>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "rate";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " virhe/minuutti";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " virhett√§/minuutti";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += "</a> saavutti sivustoasetuskynnyksen ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "limit";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " virhe/minuutti";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " virhett√§/minuutti";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += ".";
return r;
}, "logs_error_rate_notice.exceeded_hour_MF" : function(d){
var r = "";
r += "<b>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["relativeAge"];
r += "</b> ‚Äì <a href='";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["url"];
r += "' target='_blank'>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "rate";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " virhe/tunti";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " virhett√§/tunti";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += "</a> ylitti sivustoasetuskynnyksen ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "limit";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " virhe/tunti";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " virhett√§/tunti";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += ".";
return r;
}, "logs_error_rate_notice.exceeded_minute_MF" : function(d){
var r = "";
r += "<b>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["relativeAge"];
r += "</b> ‚Äì <a href='";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["url"];
r += "' target='_blank'>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "rate";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " virhe/minuutti";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " virhett√§/minuutti";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += "</a> ylitti sivustoasetuskynnyksen ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "limit";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " virhe/minuutti";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " virhett√§/minuutti";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += ".";
return r;
}, "topic.read_more_MF" : function(d){
var r = "";
r += "Sinulla on ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "UNREAD";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"0" : function(d){
var r = "";
return r;
},
"one" : function(d){
var r = "";
r += "<a href='";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["basePath"];
r += "/unread'>1 ketju</a>, jossa on viestej√§ ";
return r;
},
"other" : function(d){
var r = "";
r += "<a href='";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["basePath"];
r += "/unread'>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " ketjua</a>, joissa on viestej√§ ";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += " ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "NEW";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"0" : function(d){
var r = "";
return r;
},
"one" : function(d){
var r = "";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_2 = "BOTH";
var k_2=d[lastkey_2];
var off_1 = 0;
var pf_1 = { 
"true" : function(d){
var r = "";
r += "ja ";
return r;
},
"false" : function(d){
var r = "";
return r;
},
"other" : function(d){
var r = "";
return r;
}
};
r += (pf_1[ k_2 ] || pf_1[ "other" ])( d );
r += " <a href='";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["basePath"];
r += "/new'>1 uusi</a> ketju";
return r;
},
"other" : function(d){
var r = "";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_2 = "BOTH";
var k_2=d[lastkey_2];
var off_1 = 0;
var pf_1 = { 
"true" : function(d){
var r = "";
r += "ja ";
return r;
},
"false" : function(d){
var r = "";
return r;
},
"other" : function(d){
var r = "";
return r;
}
};
r += (pf_1[ k_2 ] || pf_1[ "other" ])( d );
r += " <a href='";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["basePath"];
r += "/new'>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " uutta ketjua</a>";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += " lukematta. Tai ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "CATEGORY";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"true" : function(d){
var r = "";
r += "selaile aluetta ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["catLink"];
return r;
},
"false" : function(d){
var r = "";
r += "katsele ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["latestLink"];
r += ".";
return r;
},
"other" : function(d){
var r = "";
return r;
}
};
r += (pf_0[ k_1 ] || pf_0[ "other" ])( d );
return r;
}, "topic.bumped_at_title_MF" : function(d){
var r = "";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["FIRST_POST"];
r += ": ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["CREATED_AT"];
r += "\n";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["LAST_POST"];
r += ": ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["BUMPED_AT"];
return r;
}, "summary.description_time_MF" : function(d){
var r = "";
r += "There ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "replyCount";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "is <b>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</b> reply";
return r;
},
"other" : function(d){
var r = "";
r += "are <b>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</b> replies";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += " with an estimated read time of <b>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "readingTime";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " minute";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " minutes";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += "</b>.";
return r;
}, "flagging.delete_confirm_MF" : function(d){
var r = "";
r += "You are about to delete ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "POSTS";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "<b>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</b> post";
return r;
},
"other" : function(d){
var r = "";
r += "<b>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</b> posts";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += " and ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "TOPICS";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "<b>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</b> topic";
return r;
},
"other" : function(d){
var r = "";
r += "<b>" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + "</b> topics";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += " from this user, remove their account, block signups from their IP address <b>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["ip_address"];
r += "</b>, and add their email address <b>";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
r += d["email"];
r += "</b> to a permanent block list. Are you sure this user is really a spammer?";
return r;
}, "posts_likes_MF" : function(d){
var r = "";
r += "This topic has ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "count";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " reply";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " replies";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += " ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "ratio";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"low" : function(d){
var r = "";
r += "with a high like to post ratio";
return r;
},
"med" : function(d){
var r = "";
r += "with a very high like to post ratio";
return r;
},
"high" : function(d){
var r = "";
r += "with an extremely high like to post ratio";
return r;
},
"other" : function(d){
var r = "";
return r;
}
};
r += (pf_0[ k_1 ] || pf_0[ "other" ])( d );
r += "\n";
return r;
}, "admin.user.delete_all_posts_confirm_MF" : function(d){
var r = "";
r += "You are about to delete ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "POSTS";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " post";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " posts";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += " and ";
if(!d){
throw new Error("MessageFormat: No data passed to function.");
}
var lastkey_1 = "TOPICS";
var k_1=d[lastkey_1];
var off_0 = 0;
var pf_0 = { 
"one" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " topic";
return r;
},
"other" : function(d){
var r = "";
r += "" + (function(){ var x = k_1 - off_0;
if( isNaN(x) ){
throw new Error("MessageFormat: `"+lastkey_1+"` isnt a number.");
}
return x;
})() + " topics";
return r;
}
};
if ( pf_0[ k_1 + "" ] ) {
r += pf_0[ k_1 + "" ]( d ); 
}
else {
r += (pf_0[ MessageFormat.locale["fi"]( k_1 - off_0 ) ] || pf_0[ "other" ] )( d );
}
r += ". Are you sure?";
return r;
}};
MessageFormat.locale.fi = function ( n ) {
  if ( n === 1 ) {
    return "one";
  }
  return "other";
};

(function() {
  I18n.messageFormat = function(key, options) {
    var fn = I18n._compiledMFs[key];
    if (fn) {
      try {
        return fn(options);
      } catch (err) {
        return err.message;
      }
    } else {
      return "Missing Key: " + key;
    }
  };
})();

I18n.translations = {"fi":{"js":{"number":{"format":{"separator":",","delimiter":" "},"human":{"storage_units":{"format":"%n %u","units":{"byte":{"one":"Tavu","other":"Tavua"},"gb":"Gt","kb":"Kt","mb":"Mt","tb":"Tt"}}},"short":{"thousands":"%{number}k","millions":"%{number}M"}},"dates":{"time":"H:mm","time_with_zone":"HH.mm (z)","time_short_day":"ddd HH:mm","timeline_date":"MMM YYYY","long_no_year":"D. MMM, HH.mm","long_no_year_no_time":"D. MMMM[ta]","full_no_year_no_time":"Do MMMM[ta]","long_with_year":"D. MMMM[ta] YYYY H:mm","long_with_year_no_time":"D. MMMM[ta] YYYY","full_with_year_no_time":"Do MMMM[ta] YYYY","long_date_with_year":"D. MMMM[ta] YYYY LT","long_date_without_year":"D. MMMM[ta] LT","long_date_with_year_without_time":"D. MMMM[ta] YYYY","long_date_without_year_with_linebreak":"D. MMMM[ta] \u003cbr/\u003eLT","long_date_with_year_with_linebreak":"D. MMMM[ta] YYYY \u003cbr/\u003eLT","wrap_ago":"%{date} sitten","tiny":{"half_a_minute":"\u003c 1 min","less_than_x_seconds":{"one":"\u003c %{count} s","other":"\u003c %{count} s"},"x_seconds":{"one":"%{count} s","other":"%{count} s"},"less_than_x_minutes":{"one":"\u003c %{count} min","other":"\u003c %{count}min"},"x_minutes":{"one":"%{count} min","other":"%{count} min"},"about_x_hours":{"one":"%{count} t","other":"%{count} t"},"x_days":{"one":"%{count} pv","other":"%{count} pv"},"x_months":{"one":"%{count} kk","other":"%{count} kk"},"about_x_years":{"one":"%{count} v","other":"%{count} v"},"over_x_years":{"one":"\u003e %{count} v","other":"\u003e %{count} v"},"almost_x_years":{"one":"%{count} v","other":"%{count} v"},"date_month":"D. MMM","date_year":"MMM -YY"},"medium":{"x_minutes":{"one":"%{count} minuutti","other":"%{count} minuuttia"},"x_hours":{"one":"tunti","other":"%{count} tuntia"},"x_days":{"one":"%{count} p√§iv√§","other":"%{count} p√§iv√§√§"},"date_year":"MMMM YYYY"},"medium_with_ago":{"x_minutes":{"one":"minuutti sitten","other":"%{count} minuuttia sitten"},"x_hours":{"one":"tunti sitten","other":"%{count} tuntia sitten"},"x_days":{"one":"%{count} p√§iv√§ sitten","other":"%{count} p√§iv√§√§ sitten"},"x_months":{"one":"%{count} kuukausi sitten","other":"%{count} kuukautta sitten"},"x_years":{"one":"%{count} vuosi sitten","other":"%{count} vuotta sitten"}},"later":{"x_days":{"one":"%{count} p√§iv√§ my√∂hemmin","other":"%{count} p√§iv√§√§ my√∂hemmin"},"x_months":{"one":"%{count} kuukausi my√∂hemmin","other":"%{count} kuukautta my√∂hemmin"},"x_years":{"one":"%{count} vuosi my√∂hemmin","other":"%{count} vuotta my√∂hemmin"}},"previous_month":"Edellinen kuukausi","next_month":"Seuraava kuukausi","placeholder":"p√§iv√§m√§√§r√§"},"share":{"topic_html":"Ketju: \u003cspan class=\"topic-title\"\u003e%{topicTitle}\u003c/span\u003e","post":"%{postNumber}. viesti","close":"sulje","twitter":"Jaa Twitteriss√§","facebook":"Jaa Facebookissa","email":"L√§het√§ s√§hk√∂postitse","url":"Kopioi ja jaa URL"},"action_codes":{"public_topic":"teki ketjusta julkisen %{when}","private_topic":"muutti ketjun yksityiskeskusteluksi %{when}","split_topic":"pilkkoi t√§m√§n ketjun %{when}","invited_user":"kutsui k√§ytt√§j√§n %{who} %{when}","invited_group":"kutsui k√§ytt√§j√§n %{who} %{when}","user_left":"%{who} poisti itsens√§ t√§st√§ yksityiskeskustelusta %{when}","removed_user":"poisti k√§ytt√§j√§n %{who} %{when}","removed_group":"poisti k√§ytt√§j√§n %{who} %{when}","autobumped":"nousi automaattisesti %{when}","autoclosed":{"enabled":"sulki %{when}","disabled":"avasi %{when}"},"closed":{"enabled":"sulki %{when}","disabled":"avasi %{when}"},"archived":{"enabled":"arkistoi %{when}","disabled":"palautti %{when}"},"pinned":{"enabled":"kiinnitti %{when}","disabled":"poisti kiinnityksen %{when}"},"pinned_globally":{"enabled":"kiinnitti koko palstalle %{when}","disabled":"poisti kiinnityksen %{when}"},"visible":{"enabled":"listasi %{when}","disabled":"poisti listauksista %{when}"},"banner":{"enabled":"teki t√§st√§ bannerin %{when}. Se n√§ytet√§√§n jokaisen sivun yl√§laidassa, kunnes k√§ytt√§j√§ kuittaa sen n√§hdyksi.","disabled":"poisti t√§m√§n bannerin %{when}. Sit√§ ei en√§√§ n√§ytet√§ jokaisen sivun yl√§laidassa."},"forwarded":"v√§litti yll√§ olevan s√§hk√∂postin"},"topic_admin_menu":"ketjun ty√∂kalut","wizard_required":"Tervetuloa uuteen Discourseesi! Aloitetaan \u003ca href='%{url}' data-auto-route='true'\u003eohjattu asennus\u003c/a\u003e ‚ú®","emails_are_disabled":"Yll√§pit√§j√§ on est√§nyt kaiken l√§htev√§n s√§hk√∂postiliikenteen. Mit√§√§n s√§hk√∂posti-ilmoituksia ei l√§hetet√§.","bootstrap_mode_enabled":{"one":"Jotta sivusto saisi lent√§v√§mm√§n l√§hd√∂n, olet bootstrap-tilassa. Kaikki k√§ytt√§j√§t nousevat heti luottamustasolle 1, ja p√§ivitt√§iset s√§hk√∂postitiivistelm√§t kytket√§√§n p√§√§lle. Tila kytkeytyy pois p√§√§lt√§, kun %{count} k√§ytt√§j√§ on liittynyt.","other":"Jotta sivusto saisi lent√§v√§mm√§n l√§hd√∂n, olet bootstrap-tilassa. Kaikki k√§ytt√§j√§t nousevat heti luottamustasolle 1, ja p√§ivitt√§iset s√§hk√∂postitiivistelm√§t kytket√§√§n p√§√§lle. Tila kytkeytyy pois p√§√§lt√§, kun %{count} k√§ytt√§j√§√§ on liittynyt."},"bootstrap_mode_disabled":"Aloitustila poistetaan seuraavan 24 tunnin aikana.","themes":{"default_description":"Oletus","broken_theme_alert":"Teemassa / komponentissa %{theme} on virheit√§, jotka voivat aiheuttaa sen, ettei sivustosi toimi. Voit ottaa sen k√§yt√∂st√§ t√§√§ll√§: %{path}."},"s3":{"regions":{"ap_northeast_1":"Aasia ja Tyynimeri (Tokio)","ap_northeast_2":"Aasia ja Tyynimeri (Soul)","ap_south_1":"Aasia ja Tyynimeri (Mumbai)","ap_southeast_1":"Aasia ja Tyynimeri (Singapore)","ap_southeast_2":"Aasia ja Tyynimeri (Sydney)","ca_central_1":"Kanada (keskinen)","cn_north_1":"Kiina (Peking)","cn_northwest_1":"Kiina (Ningxia)","eu_central_1":"EU (Frankfurt)","eu_north_1":"EU (Tukholma)","eu_west_1":"EU (Irlanti)","eu_west_2":"EU (Lontoo)","eu_west_3":"EU (Pariisi)","sa_east_1":"Etel√§-Amerikka (S√£o Paulo)","us_east_1":"it√§inen USA (Pohjois-Virginia)","us_east_2":"It√§inen USA (Ohio)","us_gov_east_1":"AWS GovCloud (it√§inen USA)","us_gov_west_1":"AWS GovCloud (l√§ntinen USA)","us_west_1":"L√§ntinen USA (Pohjois-Kalifornia)","us_west_2":"L√§ntinen USA (Oregon)"}},"edit":"muokkaa ketjun otsikkoa ja aluetta","expand":"Laajenna","not_implemented":"T√§t√§ toimintoa ei ole viel√§ toteutettu, pahoittelut!","no_value":"Ei","yes_value":"Kyll√§","submit":"L√§het√§","generic_error":"On tapahtunut virhe.","generic_error_with_reason":"Tapahtui virhe: %{error}","go_ahead":"Jatka","sign_up":"Luo tili","log_in":"Kirjaudu","age":"Ik√§","joined":"Liittynyt","admin_title":"Yll√§pito","show_more":"n√§yt√§ lis√§√§","show_help":"valinnat","links":"Linkit","links_lowercase":{"one":"linkki","other":"linkit"},"faq":"UKK","guidelines":"Ohjeet","privacy_policy":"Tietosuojaseloste","privacy":"Tietosuoja","tos":"K√§ytt√∂ehdot","rules":"S√§√§nn√∂t","conduct":"K√§yt√∂ss√§√§nn√∂t","mobile_view":"Mobiilin√§kym√§","desktop_view":"Ty√∂p√∂yt√§n√§kym√§","you":"Sin√§","or":"tai","now":"juuri √§sken","read_more":"lue lis√§√§","more":"Lis√§√§","less":"V√§hemm√§n","never":"ei koskaan","every_30_minutes":"puolen tunnin v√§lein","every_hour":"tunnin v√§lein","daily":"p√§ivitt√§in","weekly":"viikottain","every_month":"kuukausittain","every_six_months":"puolen vuoden v√§lein","max_of_count":"korkeintaan %{count}","alternation":"tai","character_count":{"one":"%{count} merkki","other":"%{count} merkki√§"},"related_messages":{"title":"Aiheeseen liittyvi√§ keskusteluja","see_all":"Katso \u003ca href=\"%{path}\"\u003ekaikki viestit\u003c/a\u003e k√§ytt√§j√§lt√§ @%{username}..."},"suggested_topics":{"title":"Ketjuehdotuksia","pm_title":"Keskusteluehdotuksia"},"about":{"simple_title":"Tietoja","title":"Tietoja sivustosta %{title}","stats":"Sivuston tilastot","our_admins":"Yll√§pit√§j√§t","our_moderators":"Valvojat","moderators":"Valvojat","stat":{"all_time":"Yhteens√§"},"like_count":"Tykk√§yksi√§","topic_count":"Ketjuja","post_count":"Viestej√§","user_count":"K√§ytt√§j√§t","active_user_count":"Aktiivisia k√§ytt√§ji√§","contact":"Yhteystiedot","contact_info":"Sivustoon liittyviss√§ kiireellisiss√§ asioissa, ota yhteytt√§ osoitteeseen %{contact_info}."},"bookmarked":{"title":"Kirjanmerkki","clear_bookmarks":"Tyhjenn√§ kirjanmerkit","help":{"bookmark":"Klikkaa lis√§t√§ksesi ketjun ensimm√§isen viestin kirjanmerkkeihin","unbookmark":"Klikkaa poistaaksesi kaikki t√§m√§n ketjun kirjanmerkit","unbookmark_with_reminder":"Poista kaikki kirjanmerkkisi ja muistutuksesi t√§st√§ ketjusta klikkaamalla. Olet asettanut muistutuksen t√§st√§ ketjusta ajankohtaan %{reminder_at}."}},"bookmarks":{"created":"Olet kirjanmerkinnyt t√§m√§n viestin. %{name}","not_bookmarked":"lis√§√§ viesti kirjanmerkkeihin","created_with_reminder":"Olet kirjanmerkinnyt t√§m√§n viestin muistutuksen kera %{date}. %{name}","remove":"Poista kirjanmerkki","delete":"Poista kirjanmerkki","confirm_delete":"Oletko varma, ett√§ haluat poistaa t√§m√§n kirjanmerkin? Muistutus poistetaan my√∂s.","confirm_clear":"Haluatko varmasti poistaa kaikki kirjanmerkkisi t√§st√§ ketjusta?","save":"Tallenna","no_timezone":"Et ole valinnut aikavy√∂hykett√§, joten et voi asettaa muistutuksia. Aseta se  \u003ca href=\"%{basePath}/my/preferences/profile\"\u003eprofiilisivullasi\u003c/a\u003e.","invalid_custom_datetime":"Antamasi p√§iv√§m√§√§r√§ ja kellonaika ei kelpaa, yrit√§ uudelleen.","list_permission_denied":"Et voi n√§hd√§ t√§m√§n k√§ytt√§j√§n kirjanmerkkej√§.","no_user_bookmarks":"Kirjanmerkeiss√§si ei ole mit√§√§n. Kirjanmerkitsem√§ll√§ viestin l√∂yd√§t sen my√∂hemmin helposti.","auto_delete_preference":{"label":"Poista automaattisesti","never":"Ei koskaan","when_reminder_sent":"Kun muistutus on l√§hetetty","on_owner_reply":"Kun olen vastannut t√§h√§n ketjuun"},"search_placeholder":"Etsi kirjanmerkkej√§ nimen, ketjun otsikon tai viestin sis√§ll√∂n perusteella","search":"Haku","reminders":{"later_today":"My√∂hemmin t√§n√§√§n","next_business_day":"Seuraavana arkip√§iv√§n√§","tomorrow":"Huomenna","next_week":"Ensi viikolla","later_this_week":"My√∂hemmin t√§ll√§ viikolla","start_of_next_business_week":"Maanantaina","start_of_next_business_week_alt":"Ensi maanantaina","next_month":"Ensi kuussa","custom":"Valitse p√§iv√§m√§√§r√§ ja kellonaika","last_custom":"Viimeisin","none":"Muistutus ei tarpeen","today_with_time":"t√§n√§√§n klo %{time}","tomorrow_with_time":"huomenna klo %{time}","at_time":"%{date_time}","existing_reminder":"Olet pyyt√§nyt muistutuksen t√§st√§ kirjanmerkist√§, joka l√§hetet√§√§n %{at_date_time}"}},"copy_codeblock":{"copied":"kopioitiin!"},"drafts":{"resume":"Jatka","remove":"Poista","remove_confirmation":"Haluatko varmasti poistaa luonnoksen?","new_topic":"Uusi ketjuluonnos","new_private_message":"Uusi yksityisviestiluonnos","topic_reply":"Vastausluonnos"},"topic_count_latest":{"one":"Katso %{count}¬†uusi tai p√§ivittynyt ketju","other":"Katso %{count} uutta tai p√§ivittynytt√§ ketjua"},"topic_count_unread":{"one":"N√§yt√§ %{count}¬†lukematon ketju","other":"N√§yt√§ %{count}¬†lukematonta ketjua"},"topic_count_new":{"one":"N√§yt√§ %{count}¬†uusi ketju","other":"N√§yt√§ %{count} uutta ketjua"},"preview":"esikatselu","cancel":"peruuta","deleting":"Poistetaan...","save":"Tallenna muutokset","saving":"Tallennetaan...","saved":"Tallennettu!","upload":"Liit√§","uploading":"L√§hett√§√§...","uploading_filename":"Ladataan: %{filename}","clipboard":"leikep√∂yt√§","uploaded":"L√§hetetty!","pasting":"Liitet√§√§n...","enable":"Ota k√§ytt√∂√∂n","disable":"Poista k√§yt√∂st√§","continue":"Jatka","undo":"Peru","revert":"Palauta","failed":"Ep√§onnistui","switch_to_anon":"Siirry anonyymitilaan","switch_from_anon":"Poistu anonyymitilasta","banner":{"close":"Sulje t√§m√§ banneri.","edit":"Muokkaa banneria \u003e\u003e"},"pwa":{"install_banner":"Haluatko \u003ca href\u003easentaa sivuston %{title} t√§lle laitteelle?\u003c/a\u003e"},"choose_topic":{"none_found":"Yht√§√§n ketjua ei l√∂ydetty.","title":{"search":"Etsi ketjua","placeholder":"Sy√∂t√§ ketjun otsikko, url tai id t√§h√§n"}},"choose_message":{"none_found":"Keskusteluja ei l√∂ytynyt.","title":{"search":"Etsi yksityiskeskustelua","placeholder":"Sy√∂t√§ keskustelun otsikko, url tai id t√§h√§n"}},"review":{"order_by":"J√§rjest√§","in_reply_to":"vastauksena","explain":{"why":"selit√§ miksi t√§m√§ p√§√§tyi jonoon","title":"K√§sittelypisteytys","formula":"Kaava","subtotal":"V√§lisumma","total":"Yhteens√§","min_score_visibility":"N√§kymisen v√§himm√§ispistem√§√§r√§","score_to_hide":"Pistem√§√§r√§, joka piilottaa viestin","take_action_bonus":{"name":"ryhtyi toimiin","title":"Kun henkil√∂kunnnan j√§sen ryhtyy toimiin, lippu saa bonuspisteit√§."},"user_accuracy_bonus":{"name":"k√§ytt√§j√§n tarkkuus","title":"K√§ytt√§j√§t joiden aiemmista lipuista on oltu samaa mielt√§ saavat bonuspisteit√§."},"trust_level_bonus":{"name":"luottamustaso","title":"Korkeampien luottamustasojen k√§ytt√§jien luomat k√§sitelt√§v√§t saavat korkeammat pisteet."},"type_bonus":{"name":"tyyppibonus","title":"Tietylle k√§sitelt√§v√§lle lajityypille voi henkil√∂kunta m√§√§ritell√§ bonuksen, jotta ne saavat korkeamman prioriteetin."}},"claim_help":{"optional":"Voit vaatia t√§m√§n itsellesi, jolloin muut eiv√§t voi k√§sitell√§ sit√§.","required":"Sinun t√§ytyy osoittaa asia itsellesi ennen kuin voit k√§sitell√§ sen.","claimed_by_you":"Osoitit t√§m√§n itsellesi ja voit nyt k√§sitell√§ sen.","claimed_by_other":"T√§m√§n voi k√§sitell√§ vain \u003cb\u003e%{username}\u003c/b\u003e."},"claim":{"title":"osoita ketju itsellesi"},"unclaim":{"help":"peru osoitus"},"awaiting_approval":"Odottaa hyv√§ksynt√§","delete":"Poista","settings":{"saved":"Tallennettu","save_changes":"Tallenna muutokset","title":"Asetukset","priorities":{"title":"K√§sittelyprioriteetit"}},"moderation_history":"Valvontahistoria","view_all":"Katso kaikki","grouped_by_topic":"J√§rjestetty ketjun mukaan","none":"Ei ole tarkastettavaa.","view_pending":"tarkastele jonoa","topic_has_pending":{"one":"\u003cb\u003e%{count}\u003c/b\u003e viesti t√§h√§n ketjuun odottaa hyv√§ksynt√§√§","other":"\u003cb\u003e%{count}\u003c/b\u003e viesti√§ t√§h√§n ketjuun odottaa hyv√§ksynt√§√§"},"title":"K√§sittele","topic":"Ketju:","filtered_topic":"Olet suodattanut k√§sitelt√§v√§n sis√§ll√∂n yhdest√§ ketjusta.","filtered_user":"K√§ytt√§j√§","filtered_reviewed_by":"K√§sittelij√§","show_all_topics":"n√§yt√§ kaikki ketjut","deleted_post":"(viesti poistettu)","deleted_user":"(k√§ytt√§j√§ poistettu)","user":{"bio":"K√§ytt√§j√§tiedot","website":"Nettisivu","username":"K√§ytt√§j√§tunnus","email":"S√§hk√∂posti","name":"Nimi","fields":"Kent√§t","reject_reason":"Syy"},"user_percentage":{"agreed":{"one":"%{count}% samaa mielt√§","other":"%{count}% samaa mielt√§"},"disagreed":{"one":"%{count}% eri mielt√§","other":"%{count}% eri mielt√§"},"ignored":{"one":"%{count}% sivuutettu","other":"%{count}% sivuutettu"}},"topics":{"topic":"Ketju","reviewable_count":"Lukum√§√§r√§","reported_by":"Ilmoittaja","deleted":"[Ketju poistettu]","original":"(alkuper√§inen ketju)","details":"yksityiskohdat","unique_users":{"one":"%{count} k√§ytt√§j√§","other":"%{count} k√§ytt√§j√§√§"}},"replies":{"one":"%{count} vastaus","other":"%{count} vastausta"},"edit":"Muokkaa","save":"Tallenna","cancel":"Peru","new_topic":"T√§m√§n hyv√§ksyminen aloittaa uuden ketjun","filters":{"all_categories":"(kaikki alueet)","type":{"title":"Tyyppi","all":"(kaikki tyypit)"},"minimum_score":"V√§himm√§ispisteet:","refresh":"Lataa sivu uudelleen","status":"Tila","category":"Alue","orders":{"score":"Arvo","score_asc":"Arvo (k√§√§nteinen)","created_at":"Luotu","created_at_asc":"Luotu (k√§√§nteinen)"},"priority":{"title":"V√§himm√§isprioriteetti","low":"(mik√§ tahansa)","medium":"Keskiverto","high":"Korkea"}},"conversation":{"view_full":"katso koko keskustel"},"scores":{"about":"Pisteet perustuvat ilmoittajan luottamustasoon, heid√§n aiempien liputusten osuvuuteen ja raportoidun asian prioriteettiin.","score":"Luku","date":"P√§iv√§m√§√§r√§","type":"Tyyppi","status":"Tila","submitted_by":"L√§hett√§j√§","reviewed_by":"K√§sittelij√§"},"statuses":{"pending":{"title":"Odottaa"},"approved":{"title":"Hyv√§ksytty"},"rejected":{"title":"Hyl√§tyt"},"ignored":{"title":"Sivuutettu"},"deleted":{"title":"Poistett"},"reviewed":{"title":"(kaikki k√§sitellyt)"},"all":{"title":"(kaikki)"}},"types":{"reviewable_flagged_post":{"title":"Liputettu viesti","flagged_by":"Liputtaja"},"reviewable_queued_topic":{"title":"Jonossa oleva ketju"},"reviewable_queued_post":{"title":"Jonossa oleva viesti"},"reviewable_user":{"title":"K√§ytt√§j√§"}},"approval":{"title":"Viesti odottaa hyv√§ksynt√§√§","description":"Viestisi saapui perille, mutta valvojan on viel√§ hyv√§ksytt√§v√§ se, jotta se n√§kyy sivustolla. Ole k√§rsiv√§llinen.","pending_posts":{"one":"Jonossa on \u003cstrong\u003e%{count}\u003c/strong\u003e viesti.","other":"Jonossa on \u003cstrong\u003e%{count}\u003c/strong\u003e viesti√§."},"ok":"OK"},"example_username":"k√§ytt√§j√§nimi","reject_reason":{"title":"Miksi olet hylk√§√§m√§ss√§ kyseist√§ k√§ytt√§j√§√§?","send_email":"L√§het√§ s√§hk√∂posti hylk√§√§misest√§"}},"user_action":{"user_posted_topic":"\u003ca href='%{userUrl}'\u003e%{user}\u003c/a\u003e kirjoitti \u003ca href='%{topicUrl}'\u003eketjuun\u003c/a\u003e","you_posted_topic":"\u003ca href='%{userUrl}'\u003eSin√§\u003c/a\u003e kirjoitit \u003ca href='%{topicUrl}'\u003eketjuun\u003c/a\u003e","user_replied_to_post":"\u003ca href='%{userUrl}'\u003e%{user}\u003c/a\u003e vastasi \u003ca href='%{postUrl}'\u003e%{post_number}\u003c/a\u003e","you_replied_to_post":"\u003ca href='%{userUrl}'\u003eSin√§\u003c/a\u003e vastasit \u003ca href='%{postUrl}'\u003e%{post_number}\u003c/a\u003e","user_replied_to_topic":"\u003ca href='%{userUrl}'\u003e%{user}\u003c/a\u003e vastasi \u003ca href='%{topicUrl}'\u003eketjuun\u003c/a\u003e","you_replied_to_topic":"\u003ca href='%{userUrl}'\u003eSin√§\u003c/a\u003e vastasit \u003ca href='%{topicUrl}'\u003eketjuun\u003c/a\u003e","user_mentioned_user":"\u003ca href='%{user1Url}'\u003e%{user}\u003c/a\u003e mainitsi k√§ytt√§j√§n \u003ca href='%{user2Url}'\u003e%{another_user}\u003c/a\u003e","user_mentioned_you":"\u003ca href='%{user1Url}'\u003e%{user}\u003c/a\u003e mainitsi \u003ca href='%{user2Url}'\u003esinut\u003c/a\u003e","you_mentioned_user":"\u003ca href='%{user1Url}'\u003eSin√§\u003c/a\u003e mainitsit k√§ytt√§j√§n \u003ca href='%{user2Url}'\u003e%{another_user}\u003c/a\u003e","posted_by_user":"Kirjoittaja \u003ca href='%{userUrl}'\u003e%{user}\u003c/a\u003e","posted_by_you":"Kirjoittaja \u003ca href='%{userUrl}'\u003esin√§\u003c/a\u003e","sent_by_user":"L√§hett√§j√§ \u003ca href='%{userUrl}'\u003e%{user}\u003c/a\u003e","sent_by_you":"L√§hett√§j√§ \u003ca href='%{userUrl}'\u003esin√§\u003c/a\u003e"},"directory":{"username":"K√§ytt√§j√§tunnus","filter_name":"suodata tunnuksen perusteella","title":"K√§ytt√§j√§t","likes_given":"Annetut","likes_received":"Saadut","topics_entered":"Katsellut","topics_entered_long":"Katseltuja ketjuja","time_read":"Lukuaika","topic_count":"Ketjut","topic_count_long":"Ketjunaloituksia","post_count":"Vastauksia","post_count_long":"Kirjoitettuja vastauksia","no_results":"Ei tuloksia.","days_visited":"Vierailut","days_visited_long":"P√§ivi√§ vierailtu","posts_read":"Luetut","posts_read_long":"Luettuja viestej√§","last_updated":"Viimeksi p√§ivitetty:","total_rows":{"one":"%{count} k√§ytt√§j√§","other":"%{count} k√§ytt√§j√§√§"}},"group_histories":{"actions":{"change_group_setting":"Muuta ryhm√§n asetusta","add_user_to_group":"Lis√§√§ k√§ytt√§j√§","remove_user_from_group":"Poista k√§ytt√§j√§","make_user_group_owner":"My√∂nn√§ is√§nnyys","remove_user_as_group_owner":"Peru is√§nnyys"}},"groups":{"member_added":"Lis√§ttiin","member_requested":"Pyynt√∂ ryhm√§ss√§","add_members":{"title":"Lis√§√§ j√§seni√§ ryhm√§√§n %{group_name}","description":"Voit my√∂s liitt√§√§ pilkuin erotellun luettelon.","usernames":"Anna k√§ytt√§j√§tunnukset tai s√§hk√∂postiosoitteet","input_placeholder":"K√§ytt√§j√§tunnukset tai s√§hk√∂postit","notify_users":"Ilmoita k√§ytt√§jille"},"requests":{"title":"Pyynn√∂t","reason":"Syy","accept":"Hyv√§ksy","accepted":"hyv√§ksyi","deny":"Hylk√§√§","denied":"hyl√§ttiin","undone":"pyynt√∂ peruttu","handle":"k√§sittele j√§senyyshakemus"},"manage":{"title":"Hallinnoi","name":"Nimi","full_name":"T√§ysmittainen nimi","add_members":"Lis√§√§ j√§seni√§","delete_member_confirm":"Poista '%{username}' ryhm√§st√§ '%{group}'?","profile":{"title":"Profiili"},"interaction":{"title":"Vuorovaikutus","posting":"Kirjoittaminen","notification":"Ilmoitus"},"email":{"title":"S√§hk√∂posti","credentials":{"username":"K√§ytt√§j√§tunnus","password":"Salasana"}},"membership":{"title":"J√§senyys","access":"P√§√§sy"},"categories":{"title":"Alueet","long_title":"Alueen oletusilmoitustaso","description":"Kun k√§ytt√§j√§ lis√§t√§√§n t√§h√§n ryhm√§√§n, h√§nen ilmoitustasoasetuksensa asetetaan automaattisesti n√§iden oletusarvojen mukaisiksi. H√§n voi muokata arvoja j√§lkik√§teen.","watched_categories_instructions":"Tarkkaile kaikkia ketjuja n√§ill√§ alueilla. Ryhm√§n j√§senet saavat ilmoituksen kaikista uusista viesteist√§ ja ketjunaloituksista, ja uusien viestien m√§√§r√§t my√∂s n√§kyv√§t ketjujen yhteydess√§.","tracked_categories_instructions":"Seuraa kaikkia ketjuja n√§ill√§ alueilla. Uusien viestien m√§√§r√§t n√§kyv√§t ketjujen yhteydess√§.","watching_first_post_categories_instructions":"K√§ytt√§j√§t saavat ilmoituksen n√§iden alueiden ketjujen ensimm√§isist√§ viesteist√§.","regular_categories_instructions":"Jos n√§m√§ alueet on vaimennettu, vaimennus perutaan ryhm√§n j√§senilt√§. K√§ytt√§j√§lle ilmoitetaan, jos h√§net mainitaan tai joku vastaa h√§nelle.","muted_categories_instructions":"K√§ytt√§jille ei ilmoiteta mill√§√§n lailla n√§iden alueiden uusista ketjuista, eik√§ niit√§ n√§ytet√§ Alueet- eik√§ Tuoreimmat-listauksissa."},"logs":{"title":"Lokit","when":"Milloin","action":"Toimi","acting_user":"Toimija","target_user":"Kohdek√§ytt√§j√§","subject":"Aihe","details":"Yksityiskohdat","from":"Mist√§","to":"Minne"}},"public_admission":"Salli k√§ytt√§jien liitty√§ ryhm√§√§n vapaasti (Ryhm√§n t√§ytyy olla julkinen)","public_exit":"Salli k√§ytt√§jien poistua ryhm√§st√§ vapaasti","empty":{"posts":"Ryhm√§n j√§senet eiv√§t ole l√§hett√§neet viestej√§.","members":"Ryhm√§ss√§ ei ole j√§seni√§.","requests":"Ryhm√§√§n ei ole hakemuksia.","mentions":"Ryhm√§√§ ei ole mainittu.","messages":"Ryhm√§lle ei ole yksityisviestej√§.","topics":"Ryhm√§n j√§senet eiv√§t ole aloittaneet ketjuja.","logs":"Ryhm√§lle ei ole lokitietoja."},"add":"Lis√§√§","join":"Liity","leave":"Poistu","request":"Pyynt√∂","message":"Viesti","confirm_leave":"Haluatko varmasti poistua ryhm√§st√§?","allow_membership_requests":"Salli k√§ytt√§j√§n l√§hett√§√§ j√§senhakemuksia ryhmien is√§nnille (Vaatii sen, ett√§ ryhm√§ on julkinen)","membership_request_template":"Viestipohja, joka n√§ytet√§√§n k√§ytt√§j√§lle, kun h√§n l√§hett√§√§ j√§senhakemusta ryhm√§√§n.","membership_request":{"submit":"L√§het√§ hakemus","title":"Hakemus ryhm√§√§n @%{group_name}","reason":"Kerro ryhm√§n is√§nnille, miksi haluat kuulua t√§h√§n ryhm√§√§n"},"membership":"J√§senyys","name":"Nimi","group_name":"Ryhm√§n nimi","user_count":"K√§ytt√§j√§t","bio":"Tietoa ryhm√§st√§","selector_placeholder":"sy√∂t√§ k√§ytt√§j√§nimi","owner":"is√§nt√§","index":{"title":"Ryhm√§t","all":"Kaikki ryhm√§t","empty":"N√§kyvill√§ olevia ryhmi√§ ei ole.","filter":"Suodata ryhm√§n tyypin mukaan","owner_groups":"Ryhm√§t joita is√§nn√∂in","close_groups":"Suljetut ryhm√§t","automatic_groups":"Automaattiset ryhm√§t","automatic":"Automaattinen","closed":"Suljettu","public":"Julkinen","private":"Yksityinen","public_groups":"Julkiset ryhm√§t","automatic_group":"Automaattinen ryhm√§","close_group":"Sulje ryhm√§","my_groups":"Minun ryhm√§ni","group_type":"Ryhm√§n tyyppi","is_group_user":"J√§sen","is_group_owner":"Is√§nt√§"},"title":{"one":"Ryhm√§","other":"Ryhm√§t"},"activity":"Toiminta","members":{"title":"J√§senet","filter_placeholder_admin":"k√§ytt√§j√§nimi tai s√§hk√∂posti","filter_placeholder":"k√§ytt√§j√§nimi","remove_member":"Poista j√§sen","remove_member_description":"Poista \u003cb\u003e%{username}\u003c/b\u003e ryhm√§st√§","make_owner":"My√∂nn√§ is√§nnyys","make_owner_description":"Tee k√§ytt√§j√§st√§ \u003cb\u003e%{username}\u003c/b\u003e ryhm√§n is√§nt√§","remove_owner":"Peru is√§nnyys","remove_owner_description":"Peru k√§ytt√§j√§lt√§ \u003cb\u003e%{username}\u003c/b\u003e ryhm√§n is√§nnyys","owner":"Is√§nt√§","forbidden":"Et voi tarkastella j√§seni√§."},"topics":"Ketjut","posts":"Viestit","mentions":"Maininnat","messages":"Viestit","notification_level":"Ryhm√§viestien oletusilmoitusasetus","alias_levels":{"mentionable":"Ketk√§ voivat @mainita ryhm√§n?","messageable":"Ketk√§ voivat l√§hett√§√§ ryhm√§lle viestin?","nobody":"Ei kukaan","only_admins":"Vain yll√§pit√§j√§t","mods_and_admins":"Vain yll√§pit√§j√§t ja valvojat","members_mods_and_admins":"Vain ryhm√§n j√§senet, valvojat ja yll√§pit√§j√§t","owners_mods_and_admins":"Vain ryhm√§n is√§nn√§t, valvojat ja yll√§pito","everyone":"Kaikki"},"notifications":{"watching":{"title":"Tarkkailussa","description":"Saat ilmoituksen uusista viesteist√§ jokaisessa viestiketjussa, ja uusien vastausten lukum√§√§r√§ n√§ytet√§√§n."},"watching_first_post":{"title":"Uudet ketjut tarkkailussa","description":"Saat ilmoituksen uusista ryhm√§n yksityisviestiketjuista, muttet vastauksista niihin."},"tracking":{"title":"Seurannassa","description":"Saat ilmoituksen, jos joku mainitsee @nimesi tai vastaa sinulle, ja uusien vastausten lukum√§√§r√§ n√§ytet√§√§n."},"regular":{"title":"Tavallinen","description":"Saat ilmoituksen, jos joku mainitsee @nimesi tai vastaa sinulle."},"muted":{"title":"Vaimennettu","description":"Et saa ilmoituksia ryhm√§n yksityiskeskusteluista."}},"flair_url":"Avatarpinssin kuva","flair_upload_description":"K√§yt√§ neli√∂nmuotoisia kuvia, joiden koko on v√§hint√§√§n 20px kertaa 20px.","flair_bg_color":"Avatar-pinssin taustav√§ri","flair_bg_color_placeholder":"(Ei-pakollinen) v√§rin Hex-arvo","flair_color":"Avatarpinssin v√§ri","flair_color_placeholder":"(Ei-pakollinen) v√§rin Hex-arvo","flair_preview_icon":"Ikonin esikatselu","flair_preview_image":"Kuvan esikatselu","flair_type":{"icon":"Valitse ikoni","image":"Lataa kuva"}},"user_action_groups":{"1":"Annetut tykk√§ykset","2":"Saadut tykk√§ykset","3":"Kirjanmerkit","4":"Ketjut","5":"Vastaukset","6":"Vastaukset","7":"Maininnat","9":"Lainaukset","11":"Muokkaukset","12":"L√§hetetyt","13":"Postilaatikko","14":"Odottaa","15":"Luonnokset"},"categories":{"all":"kaikki alueet","all_subcategories":"kaikki","no_subcategory":"vain p√§√§alue","category":"Alue","category_list":"N√§yt√§ alueet","reorder":{"title":"J√§rjest√§ alueet uudelleen","title_long":"J√§rjest√§ alueiden lista uudelleen","save":"Tallenna j√§rjestys","apply_all":"Aseta","position":"Paikka"},"posts":"Viestit","topics":"Ketjut","latest":"Tuoreimmat","toggle_ordering":"vaihda j√§rjestyst√§","subcategories":"Tyt√§ralueet","muted":"Vaimennetut alueet","topic_sentence":{"one":"%{count} ketju","other":"%{count} ketjua"},"topic_stat_sentence_week":{"one":"%{count} uusi ketju viimeisimm√§n viikon aikana","other":"%{count} uutta ketjua viimeisimm√§n viikon aikana"},"topic_stat_sentence_month":{"one":"%{count} uusi ketju viimeisimm√§n kuukauden aikana","other":"%{count} uutta ketjua viimeisimm√§n kuukauden aikana"},"n_more":"Alueet (%{count} muuta)..."},"ip_lookup":{"title":"IP-osoitteen haku","hostname":"Is√§nt√§nimi","location":"Sijainti","location_not_found":"(tuntematon)","organisation":"Yritys","phone":"Puhelin","other_accounts":"Muut tilit samasta IP-osoitteesta:","delete_other_accounts":"Poista %{count}","username":"k√§ytt√§j√§tunnus","trust_level":"LT","read_time":"lukuaika","topics_entered":"katseltuja ketjuja","post_count":"# viesti√§","confirm_delete_other_accounts":"Oletko varma, ett√§ haluat poistaa n√§m√§ tunnukset?","powered_by":"\u003ca href='https://maxmind.com'\u003eMaxMindDB\u003c/a\u003e:n avulla","copied":"kopioitu"},"user_fields":{"none":"(valitse vaihtoehto)","required":"\"%{name}\" on pakollinen"},"user":{"said":"%{username}:","profile":"Profiili","mute":"Vaimenna","edit":"Muokkaa asetuksia","download_archive":{"button_text":"Lataa kaikki","confirm":"Haluatko varmasti ladata viestisi?","success":"Lataus aloitettu. Saat ilmoituksen yksityisviestin√§, kun prosessi on valmis.","rate_limit_error":"Viestit voi ladata kerran vuorokaudessa. Yrit√§ huomenna uudelleen."},"new_private_message":"Uusi viesti","private_message":"Viesti","private_messages":"Viestit","user_notifications":{"filters":{"filter_by":"Suodata","all":"Kaikki","read":"Luetut","unread":"Lukematta"},"ignore_duration_username":"K√§ytt√§j√§tunnus","ignore_duration_when":"Kesto:","ignore_duration_save":"Sivuuta","ignore_duration_note":"Huomioi ett√§ estot poistuvat automaattisesti, kun estolle m√§√§ritelty kesto umpeutuu.","ignore_duration_time_frame_required":"Valitse ajanjakso","ignore_no_users":"Et ole est√§nyt ket√§√§n.","ignore_option":"Sivuutettu","ignore_option_title":"Et saa k√§ytt√§j√§√§n liittyvi√§ ilmoituksia ja kaikki h√§nen aloittamansa ketjut ja vastaukset piilotetaan.","add_ignored_user":"Lis√§√§...","mute_option":"Vaimenna","mute_option_title":"Et saa k√§ytt√§j√§√§n liittyvi√§ ilmoituksia.","normal_option":"Normaali","normal_option_title":"Saat ilmoituksen jos k√§ytt√§j√§ vastaa sinulle, lainaa sinua tai mainitsee sinut."},"activity_stream":"Toiminta","preferences":"Asetukset","feature_topic_on_profile":{"open_search":"Valitse uusi ketju","title":"Valitse ketju","search_label":"Etsi ketjua nimell√§","save":"Tallenna","clear":{"title":"Tyhjenn√§","warning":"Haluatko varmasti nollata valikoimasi ketjun?"}},"use_current_timezone":"K√§yt√§ nykyist√§ aikavy√∂hykett√§ni","profile_hidden":"K√§ytt√§j√§n julkinen profiili ei ole n√§ht√§vill√§.","expand_profile":"Laajenna","collapse_profile":"Supista","bookmarks":"Kirjanmerkit","bio":"Tietoa minusta","timezone":"Aikavy√∂hyke","invited_by":"Kutsuja","trust_level":"Luottamustaso","notifications":"Ilmoitukset","statistics":"Tilastot","desktop_notifications":{"label":"Live-ilmoitukset","not_supported":"T√§m√§ selain ei tue ilmoituksia, pahoittelut.","perm_default":"N√§yt√§ ilmoituksia","perm_denied_btn":"Ei oikeuksia","perm_denied_expl":"Olet kielt√§nyt ilmoitukset. Salli ilmoitukset selaimesi asetuksista.","disable":"Poista ilmoitukset k√§yt√∂st√§","enable":"N√§yt√§ ilmoituksia","consent_prompt":"Haluatko liveilmoituksia kun muut vastaavat viesteihisi?"},"dismiss":"Unohda","dismiss_notifications":"Unohda kaikki","dismiss_notifications_tooltip":"Merkitse kaikki lukemattomat ilmoitukset luetuiksi","first_notification":"Ensimm√§inen ilmoitus sinulle! Valitse se niin aloitetaan.","dynamic_favicon":"N√§yt√§ m√§√§ri√§ selainkuvakkeessa","skip_new_user_tips":{"description":"Ohita uuden k√§ytt√§j√§n aloittamisvinkit ja -ansiomerkit","not_first_time":"Ei ole ensikertasi?","skip_link":"Ohita n√§m√§ vinkit"},"theme_default_on_all_devices":"Tee t√§st√§ oletusteema kaikille laitteilleni","text_size_default_on_all_devices":"Tee t√§st√§ oletusfonttikoko kaikille laitteilleni","allow_private_messages":"Salli toisten k√§ytt√§jien l√§hett√§√§ minulle yksityisviestej√§","external_links_in_new_tab":"Avaa sivuston ulkopuoliset linkit uudessa v√§lilehdess√§","enable_quoting":"Ota k√§ytt√∂√∂n viestin lainaaminen teksti√§ valitsemalla","enable_defer":"Ota k√§ytt√∂√∂n lykk√§ystoiminto, jolla voi merkit√§ ketjun lukemattomaksi","change":"vaihda","featured_topic":"Valikoitu ketju","moderator":"%{user} on valvoja","admin":"%{user} on yll√§pit√§j√§","moderator_tooltip":"T√§m√§ k√§ytt√§j√§ on valvoja","admin_tooltip":"T√§m√§ k√§ytt√§j√§ on yll√§pit√§j√§","silenced_tooltip":"K√§ytt√§j√§ on hiljennetty","suspended_notice":"T√§m√§ k√§ytt√§j√§tili on hyllytetty %{date} asti.","suspended_permanently":"K√§ytt√§j√§ on hyllytetty.","suspended_reason":"Syy:","email_activity_summary":"Kooste tapahtumista","mailing_list_mode":{"label":"Postituslistatila","enabled":"Ota k√§ytt√∂√∂n postituslistatila","instructions":"Asetus syrj√§ytt√§√§ koosteet tapahtumista.\u003cbr /\u003e\nVaimennettujen ketjujen ja alueiden viestej√§ ei sis√§llytet√§ s√§hk√∂posteihin.\n","individual":"L√§het√§ s√§hk√∂postia jokaisesta uudesta viestist√§","individual_no_echo":"L√§het√§ s√§hk√∂posti jokaisesta uudesta viestist√§ lukuun ottamatta omiani","many_per_day":"L√§het√§ minulle s√§hk√∂postia jokaisesta uudesta viestist√§ (noin %{dailyEmailEstimate} p√§iv√§ss√§)","few_per_day":"L√§het√§ minulle s√§hk√∂postia jokaisesta uudesta viestist√§ (noin 2 p√§iv√§ss√§)","warning":"Postituslistatila k√§yt√∂ss√§. S√§hk√∂posti-ilmoitusasetukset syrj√§ytetty."},"tag_settings":"Tunnisteet","watched_tags":"Tarkkailtavat","watched_tags_instructions":"Ketjut joilla on joku n√§ist√§ tunnisteista asetetaan automaattisesti tarkkailuun. Saat ilmoituksen kaikista uusista viesteist√§ ja ketjuista, ja uusien viestien lukum√§√§r√§ n√§ytet√§√§n ketjun otsikon vieress√§. ","tracked_tags":"Seurattavat","tracked_tags_instructions":"Ketjut, joilla on joku n√§ist√§ tunnisteista, asetetaan automaattisesti seurantaan. Uusien viestien lukum√§√§r√§ n√§ytet√§√§n ketjun otsikon vieress√§. ","muted_tags":"Vaimennettavat","muted_tags_instructions":"Et saa ilmoituksia ketjuista, joilla on joku n√§ist√§ tunnisteista, eiv√§tk√§ ne n√§y tuoreimmissa.","watched_categories":"Tarkkaillut","watched_categories_instructions":"N√§iden alueiden kaikki uudet ketjut asetetaan automaattisesti tarkkailuun. Saat ilmoituksen kaikista uusista viesteist√§ ja ketjuista, ja uusien viestien lukum√§√§r√§ n√§ytet√§√§n ketjun otsikon vieress√§. ","tracked_categories":"Seuratut","tracked_categories_instructions":"N√§iden alueiden ketjut asetetaan automaattisesti seurantaan. Uusien viestien lukum√§√§r√§ n√§ytet√§√§n ketjun yhteydess√§.","watched_first_post_categories":"Tarkkaillaan uusia ketjuja","watched_first_post_categories_instructions":"Saat ilmoituksen n√§iden alueiden ketjujen ensimm√§isist√§ viesteist√§.","watched_first_post_tags":"Tarkkaillaan uusia ketjuja","watched_first_post_tags_instructions":"Saat ilmoituksen uusista ketjuista, joilla on joku n√§ist√§ tunnisteista.","muted_categories":"Vaimennetut","muted_categories_instructions":"Et saa mink√§√§nlaisia ilmoituksia n√§ille alueille luoduista uusista ketjuista. Ketjut eiv√§t n√§y aluelistauksissa eiv√§tk√§ tuoreimmissa.","muted_categories_instructions_dont_hide":"Et saa ilmoituksia mist√§√§n t√§m√§n alueen uusiin ketjuihin liittyv√§st√§.","no_category_access":"Valvojana sinulla on rajoitetut oikeudet alueisiin, et voi tallentaa.","delete_account":"Poista tilini","delete_account_confirm":"Oletko varma, ett√§ haluat lopullisesti poistaa k√§ytt√§j√§tilisi? T√§t√§ toimintoa ei voi perua!","deleted_yourself":"K√§ytt√§j√§tilisi on poistettu.","delete_yourself_not_allowed":"Ota yhteytt√§ henkil√∂kuntaan jos haluat ett√§ tilisi poistetaan.","unread_message_count":"Viestit","admin_delete":"Poista","users":"K√§ytt√§j√§t","muted_users":"Vaimennetut","muted_users_instructions":"√Ñl√§ n√§yt√§ ilmoituksia tai vastaanota yksityisviestej√§ n√§ilt√§ k√§ytt√§jilt√§.","allow_private_messages_from_specific_users":"Salli vain tiettyjen k√§ytt√§jien l√§hett√§√§ minulle yksityisviestej√§.","ignored_users":"Sivuutettu","ignored_users_instructions":"√Ñl√§ n√§yt√§ n√§iden k√§ytt√§jien viestej√§, n√§yt√§ heilt√§ ilmoituksia √§l√§k√§ vastaanota heilt√§ yksityisviestej√§.","tracked_topics_link":"N√§yt√§","automatically_unpin_topics":"Poista kiinnitetyn ketjun kiinnitys automaattisesti, kun olen selannut sen loppuun.","apps":"Sovellukset","revoke_access":"Peru k√§ytt√∂oikeus","undo_revoke_access":"Peru k√§ytt√∂oikeuden peruminen","api_approved":"Sallittu:","api_last_used_at":"Viimeksi k√§ytetty:","theme":"Teema","save_to_change_theme":"Teema p√§ivittyy kun klikkaat \"%{save_text}\"","home":"Oletusn√§kym√§","staged":"Esik√§ytt√§j√§","staff_counters":{"flags_given":"hy√∂dyllist√§ liputusta","flagged_posts":"liputettua viesti√§","deleted_posts":"poistettua viesti√§","suspensions":"hyllytyksi√§","warnings_received":"varoituksia","rejected_posts":"hyl√§ttyj√§ viestej√§"},"messages":{"all":"Kaikki","inbox":"Saapuneet","sent":"L√§hetetyt","archive":"Arkisto","groups":"Omat ryhm√§ni","bulk_select":"Valitse viestej√§","move_to_inbox":"Siirr√§ saapuneisiin","move_to_archive":"Arkisto","failed_to_move":"Viestien siirto ep√§onnistui (vika saattaa olla internetyhteydess√§si)","select_all":"Valitse kaikki","tags":"Tunnisteet"},"preferences_nav":{"account":"Tili","profile":"Profiili","emails":"S√§hk√∂postit","notifications":"Ilmoitukset","categories":"Alueet","users":"K√§ytt√§j√§t","tags":"Tunnisteet","interface":"K√§ytt√∂liittym√§","apps":"Sovellukset"},"change_password":{"success":"(s√§hk√∂posti l√§hetetty)","in_progress":"(l√§hett√§√§ s√§hk√∂postia)","error":"(virhe)","emoji":"lukkoemoji","action":"L√§het√§ s√§hk√∂posti salasanan uusimista varten","set_password":"Aseta salasana","choose_new":"Valitse uusi salasana","choose":"Valitse salasana"},"second_factor_backup":{"title":"Kaksivaiheisen tunnistautumisen varakoodit","regenerate":"Tee uusi","disable":"Poista k√§yt√∂st√§","enable":"Ota k√§ytt√∂√∂n","enable_long":"Ota varakoodit k√§ytt√∂√∂n","manage":{"one":"Hallinnoi varakoodeja. Sinulla on \u003cstrong\u003e%{count}\u003c/strong\u003e varakoodi j√§ljell√§.","other":"Hallinnoi varakoodeja. Sinulla on \u003cstrong\u003e%{count}\u003c/strong\u003e varakoodia j√§ljell√§."},"copy_to_clipboard":"Kopioi leikep√∂yd√§lle","copy_to_clipboard_error":"Virhe kopioimisessa leikep√∂yd√§lle","copied_to_clipboard":"Kopioitiin leikep√∂yd√§lle","download_backup_codes":"Lataa varakoodit","remaining_codes":{"one":"Sinulla on \u003cstrong\u003e%{count}\u003c/strong\u003e varakoodi j√§ljell√§.","other":"Sinulla on \u003cstrong\u003e%{count}\u003c/strong\u003e varakoodia j√§ljell√§."},"use":"K√§yt√§ varakoodi","enable_prerequisites":"T√§ytyy ottaa k√§ytt√∂√∂n ensisijainen kaksivaiheinen tapa, jotta voi luoda varakoodeja.","codes":{"title":"Varakoodit luotiin","description":"Jokaista n√§ist√§ varakoodeista voi k√§ytt√§√§ vain kerran. S√§il√∂ ne johonkin turvalliseen paikkaan, mist√§ kuitenkin l√∂yd√§t ne."}},"second_factor":{"title":"Kaksivaiheinen tunnistautuminen","enable":"Hallinnoi kaksivaiheista tunnistautumista","disable_all":"Poista kaikki k√§yt√∂st√§","forgot_password":"Unohditko salasanan?","confirm_password_description":"Jatka vahvistamalla salasanasi","name":"Nimi","label":"Koodi","rate_limit":"Odota hetki ennen toisen todennuskoodin tarjoamista.","enable_description":"Skannaa QR-koodi laitteellesi sopivalla sovelluksella (\u003ca href=\"https://www.google.com/search?q=authenticator+apps+for+android\" target=\"_blank\"\u003eAndroid\u003c/a\u003e ‚Äì \u003ca href=\"https://www.google.com/search?q=authenticator+apps+for+ios\" target=\"_blank\"\u003eiOS\u003c/a\u003e) ja sy√∂t√§ todennuskoodi.\n","disable_description":"Sy√∂t√§ sovelluksen tarjoama tunnistautumiskoodi","show_key_description":"Sy√∂t√§ manuaalisesti","short_description":"Suojaa k√§ytt√§j√§tilisi kertak√§ytt√∂isill√§ turvakoodeilla.\n","extended_description":"Kaksivaiheinen tunnistautuminen lis√§√§ tilisi tietoturvaa vaatimalla kertak√§ytt√∂isen koodin salasanasi lis√§ksi. Koodeja voi luoda \u003ca href=\"https://www.google.com/search?q=authenticator+apps+for+android\" target='_blank'\u003eAndroid-\u003c/a\u003e ja \u003ca href=\"https://www.google.com/search?q=authenticator+apps+for+ios\"\u003eiOS\u003c/a\u003e-laitteilla.\n","oauth_enabled_warning":"Huomioi, ettet voi kirjautua some-tilien avulla, jos kaksivaiheinen tunnistautuminen on k√§yt√∂ss√§.","use":"K√§yt√§ Authenticator-sovellusta","enforced_notice":"Kaksivaiheinen tunnistautuminen t√§ytyy ottaa k√§ytt√∂√∂n, jotta voi k√§ytt√§√§ sivustoa.","disable":"Poista k√§yt√∂st√§","disable_confirm":"Oletko varma, ett√§ haluat ottaa kaikki kaksivaiheiset tunnistautumismuodot k√§yt√∂st√§?","save":"Tallenna","edit":"Muokkaa","edit_title":"Muokkaa todentajaa","edit_description":"Todentajan nimi","enable_security_key_description":"Kun \u003ca href=\"https://www.google.com/search?q=hardware+security+key\" target=\"_blank\"\u003etunnistautumislaite\u003c/a\u003e on valmiina, paina alla olevaaa rekister√∂i-nappia.\n","totp":{"title":"V√§lineeseen perustuvat tunnistautumiset","add":"Lis√§√§ todentaja","default_name":"Oma todentajani","name_and_code_required_error":"Anna nimi sek√§ todentajasovelluksesta l√∂ytyv√§ koodi."},"security_key":{"register":"Rekister√∂idy","title":"Turva-avaimet","add":"Lis√§√§ tunnistautumislaite","default_name":"P√§√§tunnistautumislaite","not_allowed_error":"Tunnistautumislaitteen rekister√∂intiprosessi joko vanheni tai peruutettiin.","already_added_error":"Olet jo rekister√∂inyt t√§m√§n tunnistautumislaitteen. Sit√§ ei tarvitse rekister√∂id√§ uudelleen.","edit":"Muokkaa tunnistautumislaitetta","save":"Tallenna","edit_description":"Tunnistautumislaitteen nimi","name_required_error":"Tunnistautumislaite tarvitsee nimen."}},"change_about":{"title":"Muokkaa kuvaustasi","error":"Arvon muuttamisessa tapahtui virhe."},"change_username":{"title":"Vaihda k√§ytt√§j√§tunnus","confirm":"Oletko aivan varma ett√§ haluat vaihtaa k√§ytt√§j√§nimesi?","taken":"Tuo nimi on valitettavasti jo k√§yt√∂ss√§.","invalid":"K√§ytt√§j√§tunnus ei kelpaa. Siin√§ saa olla ainoastaan numeroita ja kirjaimia."},"add_email":{"title":"Lis√§√§ s√§hk√∂postiosoite","add":"lis√§√§"},"change_email":{"title":"Vaihda s√§hk√∂posti","taken":"T√§m√§ s√§hk√∂postiosoite ei valitettavasti ole saatavilla.","error":"S√§hk√∂postiosoitteen vaihdossa tapahtui virhe. Ehk√§p√§ sama s√§hk√∂postiosoite on jo k√§yt√∂ss√§?","success":"Annettuun osoitteeseen on l√§hetetty viesti. Seuraa sen ohjeita s√§hk√∂postiosoitteen varmentamiseksi.","success_staff":"L√§hetimme s√§hk√∂postia nykyiseen osoitteeseesi. Noudata vahvistusohjeita."},"change_avatar":{"title":"Vaihda profiilikuvasi","gravatar_title":"Muuta avatariasi %{gravatarName} -sivustolla","gravatar_failed":"%{gravatarName}-gravataria ei l√∂ytynyt s√§hk√∂postiosoitteella.","refresh_gravatar_title":"P√§ivit√§ %{gravatarName}","letter_based":"Sivuston luoma profiilikuva","uploaded_avatar":"Oma kuva","uploaded_avatar_empty":"Lis√§√§ oma kuva","upload_title":"Lataa oma kuva","image_is_not_a_square":"Varoitus: olemme rajanneet kuvaasti; korkeus ja leveys eiv√§t olleet samoja"},"change_profile_background":{"title":"Profiilin yl√§kuva","instructions":"Profiilin yl√§kuva keskitet√§√§n ja sen oletusleveys on 1110 px."},"change_card_background":{"title":"K√§ytt√§j√§kortin taustakuva","instructions":"Taustakuvan leveys on 590 pikseli√§."},"change_featured_topic":{"title":"Valikoitu ketju","instructions":"K√§ytt√§j√§korttiisi ja profiilisivullesi tulee linkki t√§h√§n ketjuun."},"email":{"title":"S√§hk√∂posti","primary":"Ensisijainen s√§hk√∂postiosoite","secondary":"Toissijaiset s√§hk√∂postiosoitteet","primary_label":"ensisijainen","unconfirmed_label":"vahvistamaton","resend_label":"l√§het√§ vahvistuss√§hk√∂posti uudelleen","resending_label":"l√§hetet√§√§n...","resent_label":"s√§hk√∂posti l√§hetetty","update_email":"Vaihda s√§hk√∂posti","set_primary":"Aseta ensisijainen s√§hk√∂postiosoite","destroy":"Poista s√§hk√∂postiosoite","add_email":"Lis√§√§ vaihtoehtoinen s√§hk√∂postiosoite","no_secondary":"Ei toissijaisia s√§hk√∂postiosoitteita","instructions":"Ei tule julkiseksi.","ok":"L√§het√§mme sinulle s√§hk√∂postin varmistukseksi.","required":"Sy√∂t√§ s√§hk√∂postiosoitteesi","invalid":"S√§hk√∂postiosoite ei kelpaa.","authenticated":"%{provider} on todentanut s√§hk√∂postiosoitteesi","frequency_immediately":"Saat s√§hk√∂postia v√§litt√∂m√§sti, jollet ole jo lukenut asiaa, jota s√§hk√∂postiviesti koskee.","frequency":{"one":"L√§het√§mme s√§hk√∂postia vain, jos emme ole n√§hneet sinua edellisen minuutin aikana.","other":"L√§het√§mme s√§hk√∂postia vain, jos emme ole n√§hneet sinua edellisen %{count} minuutin aikana."}},"associated_accounts":{"title":"Liitetyt k√§ytt√§j√§tilit","connect":"Yhdist√§","revoke":"Kumoa yhdist√§minen","cancel":"Peru","not_connected":"(ei liitetty)","confirm_modal_title":"Yhdist√§ %{provider}-tili","confirm_description":{"account_specific":"%{provider}-tili√§si \"%{account_description}\" k√§ytet√§√§n tunnistautumiseen.","generic":"%{provider}-tili√§si k√§ytet√§√§n tunnistautumiseen."}},"name":{"title":"Nimi","instructions":"koko nimesi (ei pakollinen)","instructions_required":"Koko nimesi","required":"Sy√∂t√§ nimesi","too_short":"Nimesi on liian lyhyt","ok":"Nimesi vaikuttaa hyv√§lt√§"},"username":{"title":"K√§ytt√§j√§tunnus","instructions":"uniikki, ei v√§lily√∂ntej√§, lyhyt","short_instructions":"Muut k√§ytt√§j√§t voivat viitata sinuun nimell√§ @%{username}","available":"K√§ytt√§j√§tunnus on vapaana","not_available":"Ei saatavilla. Kokeile %{suggestion}?","not_available_no_suggestion":"Ei saatavilla","too_short":"K√§ytt√§j√§tunnus on liian lyhyt","too_long":"K√§ytt√§j√§tunnus on liian pitk√§","checking":"Tarkistetaan k√§ytt√§j√§tunnusta...","prefilled":"S√§hk√∂posti vastaa t√§t√§ k√§ytt√§j√§nime√§","required":"Sy√∂t√§ k√§ytt√§j√§nimi"},"locale":{"title":"K√§ytt√∂liittym√§n kieli","instructions":"K√§ytt√∂liittym√§n kieli. Kieli vaihtuu sivun uudelleen lataamisen yhteydess√§.","default":"(oletus)","any":"mik√§ tahansa"},"password_confirmation":{"title":"Salasana uudelleen"},"invite_code":{"title":"Kutsukoodi","instructions":"Tarvitaan kutsukoodi, jotta voi luoda tunnuksen"},"auth_tokens":{"title":"Viimeksi k√§ytetyt laitteet","details":"Yksityiskohdat","log_out_all":"Kirjaudu ulos kaikkialta","not_you":"Et ole sin√§?","show_all":"N√§yt√§ kaikki (%{count})","show_few":"N√§yt√§ v√§hemm√§n","was_this_you":"Olitko sin√§?","was_this_you_description":"Jos sis√§√§nkirjautuja et ollut sin√§, suosittelemme salasanan vaihtamista ja uloskirjautumista kaikilta laitteiltasi.","browser_and_device":"%{browser} laitteella %{device}","secure_account":"Turvaa k√§ytt√§j√§tilini","latest_post":"Kirjoitit viimeksi..."},"last_posted":"Viimeisin viesti","last_emailed":"Viimeksi l√§hetetty s√§hk√∂postitse","last_seen":"N√§hty","created":"Liittynyt","log_out":"Kirjaudu ulos","location":"Sijainti","website":"Nettisivu","email_settings":"S√§hk√∂posti","hide_profile_and_presence":"Piilota julkinen profiilini ja l√§sn√§olo-ominaisuudet","enable_physical_keyboard":"Ota k√§ytt√∂√∂n valmius iPadin fyysiselle n√§pp√§imist√∂lle","text_size":{"title":"Tekstikoko","smaller":"Pienempi","normal":"Normaali","larger":"Suurempi","largest":"Suurin"},"title_count_mode":{"title":"M√§√§r√§, jonka taustalla olevan sivun otsikko n√§ytt√§√§:","notifications":"Uudet ilmoitukset","contextual":"Uusi sivusis√§lt√∂"},"like_notification_frequency":{"title":"Ilmoita, kun viestist√§ni tyk√§t√§√§n","always":"Aina","first_time_and_daily":"Ensimm√§ist√§ kertaa ja p√§ivitt√§in","first_time":"Ensimm√§ist√§ kertaa","never":"Ei koskaan"},"email_previous_replies":{"title":"Liit√§ aiemmat vastaukset mukaan s√§hk√∂postin alaosaan","unless_emailed":"ellei aiemmin l√§hetetty","always":"aina","never":"ei koskaan"},"email_digests":{"title":"Kun en k√§y t√§√§ll√§, l√§het√§ s√§hk√∂postiini kooste suosituista ketjuista ja vastauksista","every_30_minutes":"puolen tunnin v√§lein","every_hour":"tunneittain","daily":"p√§ivitt√§in","weekly":"viikottain","every_month":"kuukausittain","every_six_months":"puolen vuoden v√§lein"},"email_level":{"title":"L√§het√§ minulle s√§hk√∂posti, jos joku lainaa viesti√§ni, vastaa viestiini, maintsee @nimeni tai kutsuu minut viestiketjuun","always":"aina","only_when_away":"vain kun olen poissa","never":"ei koskaan"},"email_messages_level":"L√§het√§ minulle s√§hk√∂posti, kun joku l√§hett√§√§ minulle viestin","include_tl0_in_digests":"Sis√§llyt√§ uusien k√§ytt√§jien viestit s√§hk√∂postikoosteisiin","email_in_reply_to":"Liit√§ s√§hk√∂postiin lyhennelm√§ viestist√§, johon vastataan","other_settings":"Muut","categories_settings":"Keskustelualueet","new_topic_duration":{"label":"Tulkitse ketju uudeksi, jos","not_viewed":"en ole avannut sit√§ viel√§","last_here":"se on luotu edellisen k√§yntini j√§lkeen","after_1_day":"se on luotu p√§iv√§n aikana","after_2_days":"se on luotu 2 p√§iv√§n aikana","after_1_week":"se on luotu viikon aikana","after_2_weeks":"se on luotu 2 viikon aikana"},"auto_track_topics":"Seuraa automaattisesti ketjuja, jotka avaan","auto_track_options":{"never":"ei koskaan","immediately":"heti","after_30_seconds":"30 sekunnin j√§lkeen","after_1_minute":"1 minuutin j√§lkeen","after_2_minutes":"2 minuutin j√§lkeen","after_3_minutes":"3 minuutin j√§lkeen","after_4_minutes":"4 minuutin j√§lkeen","after_5_minutes":"5 minuutin j√§lkeen","after_10_minutes":"10 minuutin j√§lkeen"},"notification_level_when_replying":"Kun kirjoitan ketjuun, aseta se ","invited":{"title":"Kutsut","pending_tab":"Odottavat","pending_tab_with_count":"Avoimet (%{count})","redeemed_tab":"Hyv√§ksytyt","redeemed_tab_with_count":"Hyv√§ksytyt (%{count})","reinvited":"Kutsu l√§hetetty uudestaan","search":"kirjoita etsi√§ksesi kutsuja...","user":"Kutsuttu k√§ytt√§j√§","none":"Ei kutsuja, joita n√§ytt√§√§.","truncated":{"one":"N√§ytet√§√§n ensimm√§inen kutsu.","other":"N√§ytet√§√§n ensimm√§iset %{count} kutsua."},"redeemed":"Hyv√§ksytyt kutsut","redeemed_at":"Hyv√§ksytty","pending":"Odottavat kutsut","topics_entered":"Avatut ketjut","posts_read_count":"Luetut viestit","expired":"T√§m√§ kutsu on rauennut.","reinvite_all_confirm":"Haluatko varmasti l√§hett√§√§ kaikki kutsut uudelleen?","time_read":"Lukuaika","days_visited":"P√§ivi√§ vierailtu","account_age_days":"Tilin ik√§ p√§iviss√§","create":"Kutsu","generate_link":"Luo kutsulinkki","link_generated":"T√§ss√§ kutsulinkkisi!","valid_for":"Kutsulinkki on k√§yp√§ t√§lle s√§hk√∂postiosoitteelle: %{email}","single_user":"Kutsu s√§hk√∂postitse","multiple_user":"Kutsu linkin avulla","invite_link":{"title":"Kutsulinkki","success":"Kutsulinkki luotiin onnistuneesti!","error":"Kutsulinkin luominen ep√§onnistui","max_redemptions_allowed_label":"Kuinka moni voi enint√§√§n liitty√§ t√§m√§ linkin avulla?","expires_at":"Koska t√§m√§ linkki vanhenee?"},"bulk_invite":{"none":"Ei kutsuja n√§ytett√§v√§ksi t√§ll√§ sivulla.","text":"Massakutsu","error":"Tiedoston tulee olla CSV-muodossa."}},"password":{"title":"Salasana","too_short":"Salasanasi on liian lyhyt.","common":"Annettu salasana on liian yleinen.","same_as_username":"Salasanasi on sama kuin k√§ytt√§j√§tunnuksesi.","same_as_email":"Salasanasi on sama kuin s√§hk√∂postisi.","ok":"Salasana vaikuttaa hyv√§lt√§.","instructions":"v√§hint√§√§n %{count} merkki√§.","required":"Sy√∂t√§ salasana"},"summary":{"title":"Yhteenveto","stats":"Tilastot","time_read":"lukenut palstaa","recent_time_read":"lukenut hiljattain","topic_count":{"one":"avattu ketju","other":"aloitettua ketjua"},"post_count":{"one":"kirjoitettu viesti","other":"kirjoitettua viesti√§"},"likes_given":{"one":"annettu","other":"annettu"},"likes_received":{"one":"saatu","other":"saatu"},"days_visited":{"one":"p√§iv√§n√§ vieraillut","other":"p√§iv√§n√§ vieraillut"},"topics_entered":{"one":"ketjua lukenut","other":"ketjua lukenut"},"posts_read":{"one":"luettu viesti","other":"luettua viesti√§"},"bookmark_count":{"one":"kirjanmerkki","other":"kirjanmerkki√§"},"top_replies":"Parhaat viestit","no_replies":"Ei vastauksia toistaiseksi.","more_replies":"Lis√§√§ viestej√§","top_topics":"Parhaat ketjut","no_topics":"Ei avattuja ketjuja toistaiseksi.","more_topics":"Lis√§√§ ketjuja","top_badges":"Parhaat ansiomerkit","no_badges":"Ei ansiomerkkej√§ toistaiseksi.","more_badges":"Lis√§√§ ansiomerkkej√§","top_links":"Suosituimmat linkit","no_links":"Ei linkkej√§ toistaiseksi.","most_liked_by":"Eniten tykk√§yksi√§ saatu","most_liked_users":"Eniten tykk√§yksi√§ annettu","most_replied_to_users":"Useimmin vastannut","no_likes":"Ei tykk√§yksi√§ toistaiseksi.","top_categories":"Suositut alueet","topics":"Ketjut","replies":"Vastaukset"},"ip_address":{"title":"Viimeinen IP-osoite"},"registration_ip_address":{"title":"IP-osoite rekister√∂ityess√§"},"avatar":{"title":"Profiilikuva","header_title":"profiili, viestit, kirjanmerkit ja asetukset"},"title":{"title":"Titteli","none":"(ei mit√§√§n)"},"primary_group":{"title":"Ensisijainen ryhm√§","none":"(ei mit√§√§n)"},"filters":{"all":"Kaikki"},"stream":{"posted_by":"Viestin kirjoittaja","sent_by":"L√§hett√§nyt","private_message":"viesti","the_topic":"ketju"},"date_of_birth":{"user_title":"T√§n√§√§n on syntym√§p√§iv√§si!","title":"T√§n√§√§n on h√§nen syntym√§p√§iv√§ns√§!","label":"Syntym√§p√§iv√§"},"anniversary":{"user_title":"T√§n√§√§n on liittymisesi vuosip√§iv√§!","title":"T√§n√§√§n on h√§nen liittymisens√§ vuosip√§iv√§!"}},"loading":"Lataa...","errors":{"prev_page":"yritt√§ess√§ ladata","reasons":{"network":"Verkkovirhe","server":"Palvelinvirhe","forbidden":"P√§√§sy estetty","unknown":"Virhe","not_found":"Sivua ei l√∂ytynyt"},"desc":{"network":"Tarkasta internetyhteytesi.","network_fixed":"N√§ytt√§isi palanneen takaisin.","server":"Virhekoodi: %{status}","forbidden":"Sinulla ei ole oikeutta katsoa t√§t√§.","not_found":"Hups, ohjelma yritti ladata osoitteen, jota ei ole olemassa","unknown":"Jotain meni pieleen."},"buttons":{"back":"Mene takaisin","again":"Yrit√§ uudestaan","fixed":"Lataa sivu"}},"modal":{"close":"sulje","dismiss_error":"Hylk√§√§ virhe"},"close":"Sulje","logout":"Sinut kirjattiin ulos.","refresh":"Lataa sivu uudelleen","home":"Koti","read_only_mode":{"enabled":"Sivusto on vain luku -tilassa. Voit jatkaa selailua, mutta vastaaminen, tykk√§√§minen ja muita toimintoja on toistaiseksi poissa k√§yt√∂st√§.","login_disabled":"Et voi kirjautua sis√§√§n, kun sivusto on vain luku -tilassa.","logout_disabled":"Et voi kirjautua ulos, kun sivusto on vain luku -tilassa."},"logs_error_rate_notice":{},"learn_more":"opi lis√§√§...","first_post":"Ensimm√§inen viesti","mute":"Vaienna","unmute":"Poista vaimennus","last_post":"Kirjoitti","local_time":"Paikallinen aika","time_read":"Lukenut","time_read_recently":"%{time_read} viime aikoina","time_read_tooltip":"%{time_read} lukenut kaikkiaan","time_read_recently_tooltip":"%{time_read} lukenut kaikkiaan (%{recent_time_read} edellisen 60 p√§iv√§n aikana)","last_reply_lowercase":"edellinen vastaus","replies_lowercase":{"one":"vastaus","other":"vastauksia"},"signup_cta":{"sign_up":"Luo tili","hide_session":"Muistuta huomenna","hide_forever":"ei kiitos","hidden_for_session":"OK, kysyn huomenna uudestaan. Voit aina my√∂s k√§ytt√§√§ 'Kirjaudu sis√§√§n' -linkki√§ luodaksesi tilin.","intro":"Hei! Vaikuttaa silt√§, ett√§ olet pit√§nyt keskusteluista, muttet ole luonut k√§ytt√§j√§tili√§.","value_prop":"Kun luot tilin, muistamme mit√§ olet lukenut, jotta voit aina palata keskusteluissa takaisin oikeaan kohtaan. Saat my√∂s ilmoituksia - palstalla n√§kyvi√§ ja s√§hk√∂postiisi saapuvia - kun joku vastaa sinulle. Ja voit my√∂s tyk√§t√§ viesteist√§. :heartbeat:"},"summary":{"enabled_description":"Tarkastelet tiivistelm√§√§ t√§st√§ ketjusta, sen mielenkiintoisimpia viestej√§ k√§ytt√§jien toiminnan perusteella.","enable":"N√§yt√§ ketjun tiivistelm√§","disable":"N√§yt√§ kaikki viestit"},"deleted_filter":{"enabled_description":"T√§m√§ ketju sis√§lt√§√§ poistettuja viestej√§, jotka on piilotettu.","disabled_description":"N√§ytet√§√§n my√∂s poistetut viestit.","enable":"Piilota poistetut viestit","disable":"N√§yt√§ poistetut viestit"},"private_message_info":{"title":"Viesti","invite":"Kutsu muita...","edit":"Lis√§√§ tai poista...","remove":"Poista...","add":"Lis√§√§...","leave_message":"Haluatko varmasti poistua yksityiskeskustelusta?","remove_allowed_user":"Haluatko varmasti poistaa k√§ytt√§j√§n %{name} t√§st√§ keskustelusta?","remove_allowed_group":"Haluatko varmasti poistaa k√§ytt√§j√§n %{name} t√§st√§ viestiketjusta?"},"email":"S√§hk√∂posti","username":"K√§ytt√§j√§tunnus","last_seen":"N√§hty","created":"Luotu","created_lowercase":"luotu","trust_level":"Luottamustaso","search_hint":"k√§ytt√§j√§tunnus, s√§hk√∂posti tai IP-osoite","create_account":{"disclaimer":"Kun rekister√∂idyt, hyv√§ksyt \u003ca href='%{privacy_link}' target='blank'\u003etietosuojaselosteen\u003c/a\u003e ja \u003ca href='%{tos_link}' target='blank'\u003ek√§ytt√∂ehdot\u003c/a\u003e.","failed":"Jotain meni pieleen. Ehk√§p√§ t√§m√§ s√§hk√∂postiosoite on jo rekister√∂ity, kokeile salasana unohtui -linkki√§."},"forgot_password":{"title":"Salasanan uusiminen","action":"Unohdin salasanani","invite":"Sy√∂t√§ k√§ytt√§j√§tunnuksesi tai s√§hk√∂postiosoitteesi, niin l√§het√§mme sinulle salasanan uusimisviestin.","reset":"Uusi salasana","complete_username":"Jos k√§ytt√§j√§tunnusta \u003cb\u003e%{username}\u003c/b\u003e vastaava tili l√∂ytyy, saat kohta s√§hk√∂postin, jossa on lis√§ohjeet salasanan uusimiseen.","complete_email":"Jos s√§hk√∂postiosoitetta \u003cb\u003e%{email}\u003c/b\u003e vastaava tili l√∂ytyy, saat kohta s√§hk√∂postin, jossa on lis√§ohjeet salasanan uusimiseen.","complete_username_found":"K√§ytt√§j√§tunnusta \u003cb\u003e%{username}\u003c/b\u003e vastaava tili l√∂ytyi. Saat kohta s√§hk√∂postin, jossa on lis√§ohjeet salasanan uusimiseen.","complete_email_found":"S√§hk√∂postiosoitetta \u003cb\u003e%{email}\u003c/b\u003e vastaava tili l√∂ytyi. Saat kohta s√§hk√∂postin, jossa on lis√§ohjeet salasanan uusimiseen.","complete_username_not_found":"K√§ytt√§j√§nime√§ \u003cb\u003e%{username}\u003c/b\u003e ei ole rekister√∂ity","complete_email_not_found":"S√§hk√∂postiosoitetta \u003cb\u003e%{email}\u003c/b\u003e vastaavaa tili√§ ei ole","help":"Eik√∂ s√§hk√∂posti saavu? Ensiksi tarkasta roskapostikansiosi.\u003cp\u003eEtk√∂ ole varma s√§hk√∂postiosoitteesta? Sy√∂t√§ s√§hk√∂postiosoite niin saat tiet√§√§ onko sill√§ luotu tunnusta.\u003c/p\u003e\u003cp\u003eJos et en√§√§ hallitse s√§hk√∂postiosoitettasi, ota yhteytt√§ \u003ca href='%{basePath}/about'\u003eavuliaaseen henkil√∂kuntaamme.\u003c/a\u003e\u003c/p\u003e","button_ok":"OK","button_help":"Apua"},"email_login":{"link_label":"L√§het√§ minulle kirjautumislinkki","button_label":"s√§hk√∂postilla","emoji":"lukkoemoji","complete_username":"Jos on olemassa k√§ytt√§j√§tili k√§ytt√§j√§nimell√§ \u003cb\u003e%{username}\u003c/b\u003e, kirjautumislinkin sis√§lt√§v√§n s√§hk√∂postiviestin pit√§isi saapua sinulle tuota pikaa.","complete_email":"Jos on olemassa k√§ytt√§j√§tili s√§hk√∂postiosoitteella \u003cb\u003e%{email}\u003c/b\u003e, kirjautumislinkin sis√§lt√§v√§n s√§hk√∂postiviestin pit√§isi saapua sinulle tuota pikaa.","complete_username_found":"K√§ytt√§j√§tili k√§ytt√§j√§nimell√§ \u003cb\u003e%{username}\u003c/b\u003e l√∂ytyi. Kirjautumislinkin sis√§lt√§v√§n s√§hk√∂postiviestin pit√§isi saapua sinulle tuota pikaa.","complete_email_found":"K√§ytt√§j√§tili s√§hk√∂postiosoitteella \u003cb\u003e%{email}\u003c/b\u003e l√∂ytyi. Kirjautumislinkin sis√§lt√§v√§n s√§hk√∂postiviestin pit√§isi saapua sinulle tuota pikaa.","complete_username_not_found":"Ei l√∂ytynyt k√§ytt√§j√§nime√§ \u003cb\u003e%{username}\u003c/b\u003e","complete_email_not_found":"Ei l√∂ytynyt s√§hk√∂postiosoitetta \u003cb\u003e%{email}\u003c/b\u003e","confirm_title":"Jatka sivustolle %{site_name}","logging_in_as":"Kirjaudutaan k√§ytt√§j√§n√§ %{email}","confirm_button":"Kirjaudu"},"login":{"username":"K√§ytt√§j√§","password":"Salasana","second_factor_title":"Kaksivaiheinen tunnistautuminen","second_factor_description":"Sy√∂t√§ sovelluksen antama todennuskoodi:","second_factor_backup":"Kirjaudu k√§ytt√§en varakoodia","second_factor_backup_title":"Kaksivaiheisuuden varakoodit","second_factor_backup_description":"Sy√∂t√§ yksi varakoodeistasi:","second_factor":"Kirjaudu todentajasovelluksella","security_key_description":"Kun fyysinen tunnistautumislaite on k√§tesi ulottuvilla, klikkaa alla olevaa \"Tunnistaudu tunnistautumislaitteella\" -painiketta.","security_key_alternative":"Kokeile muuta tapaa","security_key_authenticate":"Tunnistaudu tunnistautumislaitteen avulla","security_key_not_allowed_error":"Tunnistaumislaitteella tunnistautumisprosessi joko vanheni tai peruutettiin.","security_key_no_matching_credential_error":"Tunnistautumislaitteelta ei l√∂ytynyt kelpaavia p√§√§sytietoja.","security_key_support_missing_error":"T√§m√§ laitteesi tai selaimesi ei tue tunnistaumislaitteita. K√§yt√§ muuta tapaa.","caps_lock_warning":"Caps Lock on p√§√§ll√§","error":"Tuntematon virhe","cookies_error":"Vaikuttaa silt√§, ett√§ selaimessasi ei ole ev√§steet k√§yt√∂ss√§. Et ehk√§ pysty kirjautumaan sis√§√§n ottamatta niit√§ k√§ytt√∂√∂n ensin.","rate_limit":"Odota hetki ennen kuin yrit√§t kirjautua uudelleen.","blank_username":"Sy√∂t√§ s√§hk√∂postiosoitteesi tai k√§ytt√§j√§nimesi.","blank_username_or_password":"Kirjoita s√§hk√∂postiosoite tai k√§ytt√§j√§nimi ja salasana.","reset_password":"Uusi salasana","logging_in":"Kirjaudutaan...","or":"Tai","authenticating":"Autentikoidaan...","awaiting_activation":"Tilisi odottaa aktivointia; unohdin salasanani -linkin kautta voit pyyt√§√§ uuden aktivointis√§hk√∂postin.","awaiting_approval":"Henkil√∂kunta ei ole viel√§ hyv√§ksynyt k√§ytt√§j√§tili√§si. Saat s√§hk√∂postiviestin, kun tunnuksesi on hyv√§ksytty.","requires_invite":"T√§m√§ palsta on valitettavasti vain kutsutuille k√§ytt√§jille.","not_activated":"Et voi viel√§ kirjautua sis√§√§n. L√§hetimme aiemmin vahvistusviestin osoitteeseen \u003cb\u003e%{sentTo}\u003c/b\u003e. Seuraa viestin ohjeita ottaaksesi tunnuksen k√§ytt√∂√∂n.","not_allowed_from_ip_address":"T√§st√§ IP-osoitteesta ei voi kirjautua.","admin_not_allowed_from_ip_address":"Et voi kirjautua yll√§pit√§j√§n√§ t√§st√§ IP-osoitteesta.","resend_activation_email":"Klikkaa t√§st√§ l√§hett√§√§ksesi vahvistusviestin uudelleen.","omniauth_disallow_totp":"K√§ytt√§j√§tilill√§si on kaksivaiheinen tunnistautuminen k√§yt√∂ss√§. Kirjaudu salasanallasi.","resend_title":"L√§het√§ aktivointis√§hk√∂posti uudelleen","change_email":"Vaihda s√§hk√∂postiosoitetta","provide_new_email":"Anna uusi osoite niin l√§het√§mme sinulle vahvistamiss√§hk√∂postin.","submit_new_email":"P√§ivit√§ s√§hk√∂postiosoite","sent_activation_email_again":"L√§hetimme uuden vahvistusviestin sinulle osoitteeseen \u003cb\u003e%{currentEmail}\u003c/b\u003e. Viestin saapumisessa voi kest√§√§ muutama minuutti; muista tarkastaa my√∂s roskapostikansio.","sent_activation_email_again_generic":"L√§hetimme uuden aktivointis√§hk√∂postin. Sen saapumisessa voi kest√§√§ joitakin minuutteja; tarkistathan my√∂s roskapostikansiosi.","to_continue":"Ole hyv√§ ja kirjaudu sis√§√§n","preferences":"Sinun t√§ytyy olla kirjautuneena sis√§√§n muokataksesi tilisi asetuksia","not_approved":"Tili√§si ei ole viel√§ hyv√§ksytty. Saat ilmoituksen s√§hk√∂postilla, kun voit kirjautua sis√§√§n.","google_oauth2":{"name":"Google","title":"Googlella"},"twitter":{"name":"Twitter","title":"Twitterill√§"},"instagram":{"name":"Instagram","title":"Instagramilla"},"facebook":{"name":"Facebook","title":"Facebookilla"},"github":{"name":"GitHub","title":"GitHubilla"},"discord":{"name":"Discord","title":"Discordilla"},"second_factor_toggle":{"totp":"K√§yt√§ todentajasovellusta t√§m√§n sijaan","backup_code":"K√§yt√§ varmuuskoodia t√§m√§n sijaan"}},"invites":{"accept_title":"Kutsu","emoji":"kuoriemoji","welcome_to":"Tervetuloa sivustolle %{site_name}!","invited_by":"Sinut kutsui","social_login_available":"Voit my√∂s kirjautua some-tilin avulla, joka on saman s√§hk√∂postiosoitteen alainen.","your_email":"Tilisi s√§hk√∂postiosoite on \u003cb\u003e%{email}\u003c/b\u003e.","accept_invite":"Hyv√§ksy kutsu","success":"Tili luotiin, ja olet nyt kirjautunut sis√§√§n.","name_label":"Nimi","password_label":"Salasana","optional_description":"(ei pakollinen)"},"password_reset":{"continue":"Jatka sivustolle %{site_name}"},"emoji_set":{"apple_international":"Apple/Kansainv√§linen","google":"Google","twitter":"Twitter","win10":"Win10","google_classic":"Google Classic","facebook_messenger":"Facebook Messenger"},"category_page_style":{"categories_only":"Vain alueet","categories_with_featured_topics":"Alueet ja esiteltyj√§ ketjuja","categories_and_latest_topics":"Alueet ja tuoreimmat ketjut","categories_and_top_topics":"Alueet ja kuumia ketjuja","categories_boxes":"Laatikot, joissa tyt√§ralueet","categories_boxes_with_topics":"Laatikot, joissa esiteltyj√§ ketjuja"},"shortcut_modifier_key":{"shift":"Shift","ctrl":"Ctrl","alt":"Alt","enter":"Enter"},"conditional_loading_section":{"loading":"Ladataan..."},"category_row":{"topic_count":{"one":"%{count} ketju t√§ll√§ alueella","other":"%{count} ketjua t√§ll√§ alueella"},"plus_subcategories_title":{"one":"%{name} ja yksi tyt√§ralue","other":"%{name} ja %{count} tyt√§raluetta"},"plus_subcategories":{"one":"+ %{count} tyt√§ralue","other":"+ %{count} tyt√§raluetta"}},"select_kit":{"default_header_text":"Valitse...","no_content":"Ei osumia","filter_placeholder":"Hae...","filter_placeholder_with_any":"Etsi tai luo...","create":"Luo: '%{content}'","max_content_reached":{"one":"Voit valita vain %{count} kohteen.","other":"Voit valita enint√§√§n %{count} kohdetta."},"min_content_not_reached":{"one":"Valitse ainakin %{count} kohde.","other":"Valitse ainakin %{count} kohdetta."},"invalid_selection_length":{"one":"T√§ytyy valita ainakin %{count} merkki.","other":"T√§ytyy valita ainakin %{count} merkki√§."},"components":{"categories_admin_dropdown":{"title":"Hallinnoi alueita"}}},"date_time_picker":{"from":"Mist√§","to":"Vastaanottaja"},"emoji_picker":{"filter_placeholder":"Etsi emojia","smileys_\u0026_emotion":"Hymi√∂t ja tunteet","people_\u0026_body":"Ihmiset ja kehot","animals_\u0026_nature":"El√§imet ja luonto","food_\u0026_drink":"Ruoka ja juoma","travel_\u0026_places":"Matkustaminen ja paikat","activities":"Harrasteet","objects":"Esineet","symbols":"Symbolit","flags":"Liputukset","recent":"Hiljattain k√§ytetyt","default_tone":"Ei ihons√§vy√§","light_tone":"Vaalea ihonv√§ri","medium_light_tone":"Vaaleanruskea ihonv√§ri","medium_tone":"Ruskea ihonv√§ri","medium_dark_tone":"Tummanruskea ihonv√§ri","dark_tone":"Tumma ihonv√§ri","default":"Mukautetut emojit"},"shared_drafts":{"title":"Jaetut luonnokset","destination_category":"Kohdealue","publish":"Julkaise jaettu luonnos","confirm_publish":"Haluatko varmasti julkaista luonnoksen?","publishing":"Julkaistaan ketjua..."},"composer":{"emoji":"Emoji :)","more_emoji":"lis√§√§...","options":"Asetukset","whisper":"kuiskaus","unlist":"listaamaton","add_warning":"T√§m√§ on virallinen varoitus.","toggle_whisper":"Vaihda kuiskaus","toggle_unlisted":"Listauksissa n√§kyminen","posting_not_on_topic":"Mihin ketjuun haluat vastata?","saved_local_draft_tip":"tallennettu omalla koneella","similar_topics":"T√§m√§ ketju vaikuttaa samalta kuin..","drafts_offline":"offline luonnokset","edit_conflict":"muokkauskonflikti","group_mentioned_limit":{"one":"\u003cb\u003eVaroitus!\u003c/b\u003e Olet maininnut \u003ca href='%{group_link}'\u003e%{group}\u003c/a\u003e, mutta ryhm√§ss√§ on yli %{count} k√§ytt√§j√§, mik√§ on yll√§pit√§j√§n asettama rajoitus maininnoille. Kukaan ei saa ilmoitusta.","other":"\u003cb\u003eVaroitus!\u003c/b\u003e Olet maininnut \u003ca href='%{group_link}'\u003e%{group}\u003c/a\u003e, mutta ryhm√§ss√§ on yli %{count} k√§ytt√§j√§√§, mik√§ on yll√§pit√§j√§n asettama rajoitus maininnoille. Kukaan ei saa ilmoitusta."},"group_mentioned":{"one":"Jos mainitset ryhm√§n %{group}, \u003ca href='%{group_link}'\u003e%{count} k√§ytt√§j√§\u003c/a\u003e saa ilmoituksen ‚Äì oletko varma?","other":"Jos mainitset ryhm√§n %{group}, \u003ca href='%{group_link}'\u003e%{count} k√§ytt√§j√§√§\u003c/a\u003e saa ilmoituksen ‚Äì oletko varma?"},"cannot_see_mention":{"category":"Mainitsit k√§ytt√§j√§n %{username} mutta h√§n ei saa ilmoitusta, koska h√§nell√§ ei ole p√§√§sy√§ t√§lle alueelle. H√§net tulee lis√§t√§ ryhm√§√§n, jolla on p√§√§sy alueelle.","private":"Mainitsit k√§ytt√§j√§n %{username} mutta h√§n ei saa ilmoitusta, koska h√§n ei n√§e t√§t√§ yksityiskeskustelua. H√§net tulee kutsua t√§h√§n yksityiskeskusteluun."},"duplicate_link":"N√§ytt√§√§ silt√§, ett√§ \u003cb\u003e@%{username}\u003c/b\u003e linkitti jo samaan kohteeseen \u003cb\u003e%{domain}\u003c/b\u003e ketjun \u003ca href='%{post_url}'\u003eaiemmassa viestiss√§ %{ago}\u003c/a\u003e ‚Äì oletko varma, ett√§ haluat l√§hett√§√§ sen uudestaan?","reference_topic_title":"RE: %{title}","error":{"title_missing":"Otsikko on pakollinen","post_missing":"Viesti ei voi olla tyhj√§","try_like":"Oletko kokeillut %{heart}-nappia?","category_missing":"Sinun t√§ytyy valita viestille alue","tags_missing":{"one":"On valittava ainakin %{count} tunniste","other":"On valittava ainakin %{count} tunnistetta"},"topic_template_not_modified":"Lis√§√§ tietoa ketjunaloitukseesi muokkaamalla ketjusapluunaa."},"save_edit":"Tallenna","overwrite_edit":"P√§√§llekirjoita","reply_original":"Vastaa alkuper√§iseen ketjuun","reply_here":"Vastaa t√§nne","reply":"Vastaa","cancel":"Peruuta","create_topic":"Aloita ketju","create_pm":"Viesti","create_whisper":"Kuiskaa","create_shared_draft":"Luo jaettu luonnos","edit_shared_draft":"Muokkaa jaettua luonnosta","title":"Tai paina Ctrl+Enter","users_placeholder":"Lis√§√§ k√§ytt√§j√§","title_placeholder":"Kuvaile lyhyesti mist√§ t√§ss√§ ketjussa on kyse?","title_or_link_placeholder":"Kirjoita otsikko tai liit√§ linkki t√§h√§n","edit_reason_placeholder":"miksi muokkaat viesti√§?","topic_featured_link_placeholder":"T√§h√§n linkki, joka n√§ytet√§√§n otsikon yhteydess√§.","remove_featured_link":"Poista ketjulinkki","reply_placeholder":"Kirjoita t√§h√§n. K√§yt√§ Markdownia, BBCodea tai HTML:√§√§ muotoiluun. Raahaa tai liit√§ kuvia.","reply_placeholder_no_images":"Kirjoita t√§h√§n. Muotoile Markdown, BBCode tai HTML-syntaksilla.","reply_placeholder_choose_category":"Valitse alue ennen kuin kirjoitat t√§h√§n.","view_new_post":"Katsele uutta viesti√§si.","saving":"Tallennetaan","saved":"Tallennettu!","saved_draft":"Viestiluonnos kesken. Jatka klikkaamalla.","uploading":"L√§hett√§√§...","quote_post_title":"Lainaa koko viesti","bold_label":"B","bold_title":"Lihavoitu","bold_text":"lihavoitu teksti","italic_label":"I","italic_title":"Kursiivi","italic_text":"kursivoitu teksti","link_title":"Hyperlinkki","link_description":"kirjoita linkin kuvaus t√§h√§n","link_dialog_title":"Lis√§√§ linkki","link_optional_text":"ei-pakollinen kuvaus","link_url_placeholder":"Liit√§ URL tai etsi ketjua kirjoittamalla","blockquote_text":"Sitaatti","code_title":"Teksti ilman muotoiluja","code_text":"Sisenn√§ teksti nelj√§ll√§ v√§lily√∂nnill√§ poistaaksesi automaattisen muotoilun","paste_code_text":"kirjoita tai liit√§ koodia t√§h√§n","upload_title":"L√§het√§","upload_description":"kirjoita ladatun tiedoston kuvaus t√§h√§n","olist_title":"Numeroitu lista","ulist_title":"Luettelomerkillinen luettelo","list_item":"Listan alkio","toggle_direction":"Vaihda suuntaa","help":"Markdown apu","collapse":"pienenn√§ kirjoitusalue","open":"avaa viestikentt√§","abandon":"sulje kirjoitusalue ja poista luonnos","enter_fullscreen":"siirry koko ruudun kirjoitustilaan","exit_fullscreen":"poistu koko ruudun kirjoitustilasta","show_toolbar":"n√§yt√§ viestikent√§n ty√∂kalurivi","hide_toolbar":"piilota viestikent√§n ty√∂kalurivi","modal_ok":"OK","modal_cancel":"Peruuta","cant_send_pm":"Et voi valitettavasti l√§hett√§√§ viesti√§ k√§ytt√§j√§lle %{username}.","yourself_confirm":{"title":"Unohditko lis√§t√§ vastaanottajia?","body":"Olet l√§hett√§m√§ss√§ viesti√§ vain itsellesi!"},"admin_options_title":"T√§m√§n ketjun vain henkil√∂kunnalle n√§ytett√§v√§t asetukset","composer_actions":{"reply":"Vastaa","draft":"Luonnos","edit":"Muokkaa","reply_to_post":{"label":"Vastaa k√§yt√§j√§n %{postUsername} viestiin","desc":"Vastaa tiettyyn viestiin"},"reply_as_new_topic":{"label":"Vastaa sivuavassa ketjussa","desc":"Aloita uusi, t√§h√§n ketjuun linkittyv√§ ketju","confirm":"Tallennettuna on yksi sinun ketjunaloitusluonnos, joka poistetaan, jos vastaat uudessa ketjussa."},"reply_as_new_group_message":{"label":"Vastaa uudessa ryhm√§yksityiskeskustelussa","desc":"Luo uusi yksityiskeskustelu, jossa samat vastaanottajat"},"reply_as_private_message":{"label":"Uusi viesti","desc":"Aloita uusi yksityiskeskustelu"},"reply_to_topic":{"label":"Vastaa ketjuun","desc":"Vastaa ketjuun muttei mihink√§√§n tiettyyn viestiin"},"toggle_whisper":{"label":"Kuiskaus p√§√§lle/pois","desc":"Kuiskaukset n√§kyv√§t vain henkil√∂kuntalaisille"},"create_topic":{"label":"Uusi ketju"},"shared_draft":{"label":"Jaettu luonnos","desc":"Luonnostele ketju, joka n√§kyy vain m√§√§r√§tyille k√§ytt√§jille"},"toggle_topic_bump":{"label":"Ketjun nosto p√§√§lle/pois","desc":"Vastaa muuttamatta ketjun viimeisin viesti -aikaleimaa"}},"reload":"Lataa uudelleen","details_title":"Yhteenveto","details_text":"T√§m√§ teksti piilotetaan otsikon alle."},"notifications":{"tooltip":{"regular":{"one":"Uusi ilmoitus","other":"%{count} uutta ilmoitusta"},"message":{"one":"Uusi yksityisviesti","other":"%{count} uutta yksityisviesti√§"},"high_priority":{"one":"%{count} korkean prioriteetin ilmoitus","other":"%{count} lukematonta korkean prioriteetin ilmoitusta"}},"title":"ilmoitukset @nimeen viittauksista, vastauksista omiin viesteihin ja ketjuihin, viesteist√§ ym.","none":"Ilmoitusten lataaminen ei onnistunut.","empty":"Ilmoituksia ei l√∂ydetty.","post_approved":"Viestisi hyv√§ksyttiin","reviewable_items":"k√§sittely√§ odottavaa asiaa","mentioned":"\u003cspan\u003e%{username}\u003c/span\u003e %{description}","group_mentioned":"\u003cspan\u003e%{username}\u003c/span\u003e %{description}","quoted":"\u003cspan\u003e%{username}\u003c/span\u003e %{description}","bookmark_reminder":"\u003cspan\u003e%{username}\u003c/span\u003e %{description}","replied":"\u003cspan\u003e%{username}\u003c/span\u003e %{description}","posted":"\u003cspan\u003e%{username}\u003c/span\u003e %{description}","edited":"\u003cspan\u003e%{username}\u003c/span\u003e %{description}","liked":"\u003cspan\u003e%{username}\u003c/span\u003e %{description}","liked_2":"\u003cspan class='double-user'\u003e%{username}, %{username2}\u003c/span\u003e %{description}","liked_many":{"one":"\u003cspan class='multi-user'\u003e%{username}, %{username2} ja %{count} muu\u003c/span\u003e %{description}","other":"\u003cspan class='multi-user'\u003e%{username}, %{username2} ja %{count} muuta\u003c/span\u003e %{description}"},"liked_consolidated_description":{"one":"tykk√§si %{count} viestist√§si","other":"tykk√§si %{count} viestist√§si"},"liked_consolidated":"\u003cspan\u003e%{username}\u003c/span\u003e %{description}","private_message":"\u003cspan\u003e%{username}\u003c/span\u003e %{description}","invited_to_private_message":"\u003cp\u003e\u003cspan\u003e%{username}\u003c/span\u003e %{description}","invited_to_topic":"\u003cspan\u003e%{username}\u003c/span\u003e %{description}","invitee_accepted":"\u003cspan\u003e%{username}\u003c/span\u003e hyv√§ksyi kutsusi","moved_post":"\u003cspan\u003e%{username}\u003c/span\u003e siirsi %{description}","linked":"\u003cspan\u003e%{username}\u003c/span\u003e %{description}","granted_badge":"Ansaitsit '%{description}'","topic_reminder":"\u003cspan\u003e%{username}\u003c/span\u003e %{description}","watching_first_post":"\u003cspan\u003eUusi ketju\u003c/span\u003e %{description}","membership_request_accepted":"Hyv√§ksyttiin ryhm√§√§n '%{group_name}'","membership_request_consolidated":{"one":"%{count} avoin j√§senhakemus ryhm√§√§n '%{group_name}'","other":"%{count} avointa j√§senhakemusta ryhm√§√§n '%{group_name}'"},"reaction":"\u003cspan\u003e%{username}\u003c/span\u003e %{description}","reaction_2":"\u003cspan\u003e%{username}, %{username2}\u003c/span\u003e %{description}","votes_released":"%{description} - valmis","group_message_summary":{"one":"%{count} viesti ryhm√§n %{group_name} saapuneissa","other":"%{count} viesti√§ ryhm√§n %{group_name} saapuneissa"},"popup":{"mentioned":"%{username} mainitsi sinut ketjussa \"%{topic}\" - %{site_title}","group_mentioned":"%{username} mainitsi sinut ketjussa \"%{topic}\" - %{site_title}","quoted":"%{username} lainasi sinua ketjussa \"%{topic}\" - %{site_title}","replied":"%{username} vastasi sinulle ketjussa \"%{topic}\" - %{site_title}","posted":"%{username} vastasi ketjuun \"%{topic}\" - %{site_title}","private_message":"%{username} l√§hetti sinulle yksityisviestin keskustelussa \"%{topic}\" - %{site_title}","linked":"%{username} linkitti viestiisi ketjusta \"%{topic}\" - %{site_title}","watching_first_post":"%{username} loi uuden ketjun \"%{topic}\" - %{site_title}","confirm_title":"Ilmoitukset k√§yt√∂ss√§ - %{site_title}","confirm_body":"Onnistui! Ilmoitukset ovat nyt k√§yt√∂ss√§.","custom":"Ilmoitus k√§ytt√§j√§lt√§ %{username} sivustolla %{site_title}"},"titles":{"mentioned":"mainitsi","replied":"uusi vastaus","quoted":"lainasi","edited":"muokkasi","liked":"uusi tykk√§ys","private_message":"uusi yksityisviesti","invited_to_private_message":"kutsuttiin yksityiskeskusteluun","invitee_accepted":"kutsu hyv√§ksyttiin","posted":"uusi viesti","moved_post":"viesti siirrettiin","linked":"linkitti","bookmark_reminder":"kirjanmerkkimuistutus","bookmark_reminder_with_name":"kirjanmerkkimuistutus - %{name}","granted_badge":"ansiomerkki my√∂nnettiin","invited_to_topic":"kutsuttiin ketjuun","group_mentioned":"ryhm√§ mainittiin","group_message_summary":"uusia ryhm√§yksityisviestej√§","watching_first_post":"uusi ketju","topic_reminder":"ketjumuistutus","liked_consolidated":"uusia tykk√§yksi√§","post_approved":"viesti hyv√§ksytty","membership_request_consolidated":"uusia j√§senhakemuksia","reaction":"uusi reaktio","votes_released":"√Ñ√§ni vapautui"}},"upload_selector":{"title":"Lis√§√§ kuva","title_with_attachments":"Lis√§√§ kuva tai tiedosto","from_my_computer":"T√§st√§ laitteesta","from_the_web":"Netist√§","remote_tip":"linkki kuvaan","remote_tip_with_attachments":"linkki kuvaan tai tiedostoon %{authorized_extensions}","local_tip":"valitse kuvia laitteeltasi","local_tip_with_attachments":"valitse kuvia tai tiedostoja laitteeltasi %{authorized_extensions}","hint":"(voit my√∂s raahata ne editoriin ladataksesi ne sivustolle)","hint_for_supported_browsers":"voit my√∂s raahata tai liitt√§√§ kuvia editoriin","uploading":"L√§hett√§√§","select_file":"Valitse tiedosto","default_image_alt_text":"kuva"},"search":{"sort_by":"J√§rjest√§","relevance":"Osuvuus","latest_post":"Uusin viesti","latest_topic":"Uusin ketju","most_viewed":"Katselluin","most_liked":"Tyk√§tyin","select_all":"Valitse kaikki","clear_all":"Tyhjenn√§ kaikki","too_short":"Hakusana on liian lyhyt.","result_count":{"one":"\u003cspan\u003e%{count} tulos haulle\u003c/span\u003e\u003cspan class='term'\u003e%{term}\u003c/span\u003e","other":"\u003cspan\u003e%{count}%{plus} tulosta haulle\u003c/span\u003e\u003cspan class='term'\u003e%{term}\u003c/span\u003e"},"title":"etsi ketjuja, viestej√§, k√§ytt√§ji√§ tai alueita","full_page_title":"etsi ketjuja tai viestej√§","no_results":"Ei tuloksia.","no_more_results":"Enemp√§√§ tuloksia ei l√∂ytynyt.","post_format":"#%{post_number} k√§ytt√§j√§lt√§ %{username}","results_page":"Tulokset hakusanalle '%{term}'","more_results":"Tuloksia olisi enemm√§nkin. Rajaa hakuasi.","cant_find":"Etk√∂ l√∂yd√§ etsim√§√§si?","start_new_topic":"Haluaisitko aloittaa uuden ketjun?","or_search_google":"Tai kokeile Google-hakua:","search_google":"Kokeile Google-hakua:","search_google_button":"Google","context":{"user":"Etsi @%{username} viestej√§","category":"Etsi alueelta #%{category}","tag":"Hae tunnistetta #%{tag}","topic":"Etsi t√§st√§ ketjusta","private_messages":"Etsi viesteist√§"},"advanced":{"title":"Tarkennettu haku","posted_by":{"label":"Kirjoittaja"},"in_category":{"label":"Sijaitsee alueella"},"in_group":{"label":"Kirjoittajan ryhm√§"},"with_badge":{"label":"Kirjoittajalla ansiomerkki"},"with_tags":{"label":"Ketjulla on tunniste"},"filters":{"label":"Tuloksiin vain ketjuja/viestej√§...","title":"Etsi vain otsikoista","likes":"joista olen tyk√§nnyt","posted":"joihin olen kirjoittanut","created":"jotka min√§ aloitin","watching":"joita tarkkailen","tracking":"joita seuraan","private":"yksityiskeskusteluistani","bookmarks":"kirjanmerkeist√§ni","first":"jotka ovat ketjun avausviestej√§","pinned":"jotka on kiinnitettyj√§","seen":"jotka olen lukenut","unseen":"joita en ole lukenut","wiki":"ovat wiki-viestej√§","images":"joissa on kuv(i)a","all_tags":"Ketjulla on kaikki n√§m√§ tunnisteet"},"statuses":{"label":"Ketju/Ketjuun","open":"on avoin","closed":"on suljettu","public":"ovat julkisia","archived":"on arkistoitu","noreplies":"ei ole vastattu","single_user":"on kirjoittanut vain yksi k√§ytt√§j√§"},"post":{"count":{"label":"Viestej√§"},"min":{"placeholder":"v√§hint√§√§n"},"max":{"placeholder":"enint√§√§n"},"time":{"label":"Kirjoitettu","before":"ennen","after":"j√§lkeen"}},"views":{"label":"Katseluita"},"min_views":{"placeholder":"v√§hint√§√§n"},"max_views":{"placeholder":"enint√§√§n"}}},"hamburger_menu":"vaihda ketjulistausta tai siirry toiselle alueelle","new_item":"uusi","go_back":"mene takaisin","not_logged_in_user":"k√§ytt√§j√§sivu, jossa on tiivistelm√§ k√§ytt√§j√§n viimeaikaisesta toiminnasta sek√§ k√§ytt√§j√§asetukset","current_user":"siirry omalle k√§ytt√§j√§sivullesi","topics":{"new_messages_marker":"edellinen vierailu","bulk":{"select_all":"Valitse kaikki","clear_all":"Tyhjenn√§ kaikki","unlist_topics":"Poista ketjuja listauksista","relist_topics":"Palauta ketjuja listauksiin","reset_read":"Palauta lukutila","delete":"Poista ketjut","dismiss":"Unohda","dismiss_read":"Unohda lukemattomat","dismiss_button":"Unohda...","dismiss_tooltip":"Unohda uudet viestit tai lopeta ketjujen seuraaminen","also_dismiss_topics":"√Ñl√§ seuraa n√§it√§ ketjuja en√§√§ - ne eiv√§t jatkossa n√§y Lukematta-v√§lilehdell√§","dismiss_new":"Unohda uudet","toggle":"Vaihda useamman ketjun valintaa","actions":"Massatoiminnot","change_category":"M√§√§rit√§ alue","close_topics":"Sulje ketjut","archive_topics":"Arkistoi ketjut","notification_level":"Ilmoitukset","choose_new_category":"Valitse uusi alue ketjuille:","selected":{"one":"Olet valinnut \u003cb\u003eyhden\u003c/b\u003e ketjun.","other":"Olet valinnut \u003cb\u003e%{count}\u003c/b\u003e ketjua."},"change_tags":"Korvaa tunnisteet","append_tags":"Lis√§√§ tunnisteita","choose_new_tags":"Valitse tunnisteet n√§ille ketjuille:","choose_append_tags":"Valitse ketjuille lis√§tt√§v√§t uudet tunnisteet:","changed_tags":"Ketjujen tunnisteet muutettiin.","progress":{"one":"Edetty: \u003cstrong\u003e%{count}\u003c/strong\u003e ketju","other":"Edetty: \u003cstrong\u003e%{count}\u003c/strong\u003e ketjua"}},"none":{"unread":"Sinulla ei ole ketjuja lukematta.","new":"Sinulla ei ole uusia ketjuja.","read":"Et ole lukenut viel√§ yht√§√§n yht√§√§n ketjua.","posted":"Et ole kirjoittanut viel√§ yhteenk√§√§n ketjuun.","ready_to_create":"Valmis ","latest":"Olet ajan tasalla!","bookmarks":"Et ole viel√§ merkinnyt kirjanmerkkej√§.","category":"Alueella %{category} ei ole ketjua.","top":"Kuumia ketjuja ei ole.","educate":{"new":"\u003cp\u003eSinulle uudet ketjut n√§ytet√§√§n t√§ss√§. Oletuksena, ketju tulkitaan uudeksi ja sen yhteydess√§ n√§ytet√§√§n \u003cspan class=\"badge new-topic badge-notification\" style=\"vertical-align:middle;line-height:inherit;\"\u003e\u003c/span\u003e-merkint√§, jos se on aloitettu edellisten kahden p√§iv√§n aikana.\u003c/p\u003e\u003cp\u003eAikarajaa voit muuttaa \u003ca href=\"%{userPrefsUrl}\"\u003ek√§ytt√§j√§asetuksissasi\u003c/a\u003e.\u003c/p\u003e"}},"bottom":{"latest":"Tuoreimpia ketjuja ei ole enemp√§√§.","posted":"Ketjuja, joihin olet kirjoittanut ei ole enemp√§√§.","read":"Luettuja ketjuja ei ole enemp√§√§.","new":"Uusia ketjuja ei ole enemp√§√§.","unread":"Ketjuja ei ole enemp√§√§ lukematta.","category":"Alueen %{category} ketjuja ei ole enemp√§√§.","tag":"Tunnisteella %{tag} merkittyj√§ ketjuja ei ole enemp√§√§.","top":"Kuumia ketjuja ei ole enemp√§√§.","bookmarks":"Merkattuja ketjuja ei ole enemp√§√§."}},"topic":{"filter_to":{"one":"%{count} viesti ketjussa","other":"%{count} viesti√§ ketjussa"},"create":"Uusi ketju","create_long":"Aloita uusi ketju","open_draft":"Avaa luonnos","private_message":"Luo viesti","archive_message":{"help":"Siirr√§ viesti arkistoosi","title":"Arkistoi"},"move_to_inbox":{"title":"Siirr√§ saapuneisiin","help":"Siirr√§ takaisin saapuneisiin."},"edit_message":{"help":"Muokkaa keskustelun ensimm√§ist√§ viesti√§","title":"Muokkaa"},"defer":{"help":"Merkitse lukemattomaksi","title":"Lykk√§√§"},"feature_on_profile":{"help":"Lis√§√§ k√§ytt√§j√§korttiisi ja profiilisivullesi linkki t√§h√§n ketjuun","title":"Valikoi ketju profiiliisi"},"remove_from_profile":{"warning":"Profiilillesi on jo valikoitu ketju. Jos jatkat, t√§m√§ ketju korvaa aiemman ketjun.","help":"Poista linkki t√§h√§n ketjuun k√§ytt√§j√§profiilissasi","title":"Poista profiilista"},"list":"Ketjut","new":"uusi ketju","unread":"lukematta","new_topics":{"one":"%{count} uusi ketju","other":"%{count} uutta ketjua"},"unread_topics":{"one":"%{count} ketju lukematta","other":"%{count} ketjua lukematta"},"title":"Aihe","invalid_access":{"title":"T√§m√§ ketju on yksityinen","description":"Sinulla ei valitettavasti ole p√§√§sy√§ t√§h√§n ketjuun!","login_required":"Sinun t√§ytyy kirjautua sis√§√§n n√§hd√§ksesi t√§m√§n ketjun."},"server_error":{"title":"Ketjun lataaminen ep√§onnistui","description":"Ketjun lataaminen valitettavasti ep√§onnistui. Kyse saattaa olla yhteysongelmasta. Kokeile sivun lataamista uudestaan ja jos ongelma jatkuu, ota yhteytt√§."},"not_found":{"title":"Ketjua ei l√∂ytynyt","description":"Ketjua ei valitettavasti l√∂ytynyt. Ehk√§p√§ valvoja on siirt√§nyt sen muualle?"},"total_unread_posts":{"one":"sinulla on %{count} lukematon viesti t√§ss√§ ketjussa","other":"sinulla on %{count} lukematonta viesti√§ t√§ss√§ ketjussa"},"unread_posts":{"one":"yksi vanha viesti on lukematta t√§ss√§ ketjussa","other":"%{count} vanhaa viesti√§ on lukematta t√§ss√§ ketjussa"},"new_posts":{"one":"t√§h√§n ketjuun on tullut yksi uusi viesti sen j√§lkeen, kun edellisen kerran luit sen","other":"t√§h√§n ketjuun on tullut %{count} uutta viesti√§ sen j√§lkeen, kun edellisen kerran luit sen"},"likes":{"one":"t√§ss√§ ketjussa on yksi tykk√§ys","other":"t√§ss√§ ketjussa on %{count} tykk√§yst√§"},"back_to_list":"Takaisin ketjulistaan","options":"Ketjun asetukset","show_links":"n√§yt√§ t√§m√§n ketjun linkit","toggle_information":"n√§yt√§/k√§tke ketjun tiedot","read_more_in_category":"Haluatko lukea lis√§√§? Selaile muita alueen %{catLink} ketjuja tai %{latestLink}.","read_more":"Haluatko lukea lis√§√§? Selaa aluetta %{catLink} tai katsele %{latestLink}.","unread_indicator":"Kukaan j√§sen ei ole lukenut ketjun viimeist√§ viesti√§ viel√§.","browse_all_categories":"Selaa keskustelualueita","browse_all_tags":"Selaa kaikkia tunnisteita","view_latest_topics":"tuoreimpia ketjuja","suggest_create_topic":"aloita uusi keskustelu?","jump_reply_up":"hypp√§√§ aiempaan vastaukseen","jump_reply_down":"hypp√§√§ my√∂hemp√§√§n vastaukseen","deleted":"T√§m√§ ketju on poistettu","slow_mode_update":{"title":"Hidas tila","select":"K√§ytt√§j√§n tulee odottaa ennen toisen viestin l√§hett√§mist√§:","description":"Jotta keskustelu kiivaasti etenev√§st√§ tai tulenarasta aiheesta olisi harkitumpaa, viestin l√§hett√§nyt k√§ytt√§j√§ voi l√§hett√§√§ toisen viestin aikaisintaan %{duration} p√§√§st√§.","save":"Ota k√§ytt√∂√∂n","remove":"Poista k√§yt√∂st√§","hours":"Tuntia:","minutes":"Minuuttia:","seconds":"Sekuntia:","durations":{"15_minutes":"15 minuuttia","1_hour":"1 tunti","4_hours":"4 tuntia","custom":"Valitse kesto"}},"topic_status_update":{"title":"Ketjun ajastin","save":"Aseta ajastin","num_of_hours":"Kuinka monta tuntia:","num_of_days":"Montako p√§iv√§√§:","remove":"Poista ajastin","publish_to":"Mihin julkaistaan:","when":"Milloin:","time_frame_required":"Valitse ajanjakso"},"auto_update_input":{"none":"Valitse ajanjakso","now":"Nyt","later_today":"My√∂hemmin t√§n√§√§n","tomorrow":"Huomenna","later_this_week":"My√∂hemmin t√§ll√§ viikolla","this_weekend":"Viikonloppuna","next_week":"Ensi viikolla","next_month":"Ensi kuussa","forever":"Ikuisesti","pick_date_and_time":"Valitse p√§iv√§m√§√§r√§ ja kellonaika","set_based_on_last_post":"Sulje viimeisimm√§n viestin mukaan"},"publish_to_category":{"title":"Julkaise m√§√§r√§ttyn√§ ajankohtana"},"temp_open":{"title":"Avaa v√§liaikaisesti"},"auto_reopen":{"title":"Avaa ketju automaattisesti"},"temp_close":{"title":"Sulje v√§liaikaisesti"},"auto_close":{"title":"Sulje ketju automaattisesti","error":"Arvo ei kelpaa.","based_on_last_post":"√Ñl√§ sulje ennen kuin viimeisin viesti ketjussa on ainakin n√§in vanha."},"auto_delete":{"title":"Poista ketju ajastetusti"},"auto_bump":{"title":"Nosta ketjua ajastetusti"},"reminder":{"title":"Muistuta minua"},"auto_delete_replies":{"title":"Poista vastaukset automaattisesti"},"status_update_notice":{"auto_open":"Ketju avautuu automaattisesti %{timeLeft}.","auto_close":"Ketju suljetaan ajastetusti %{timeLeft}.","auto_publish_to_category":"Ketju julkaistaan alueella \u003ca href=%{categoryUrl}\u003e#%{categoryName}\u003c/a\u003e %{timeLeft}.","auto_delete":"Ketju poistetaan ajastetusti %{timeLeft}.","auto_bump":"Ketjua nostetaan ajastetusti %{timeLeft}.","auto_reminder":"Sinua muistutetaan t√§st√§ ketjusta %{timeLeft}.","auto_delete_replies":"T√§h√§n ketjuun tulevat vastaukset poistetaan automaattisesti %{duration} kuluttua."},"auto_close_title":"Automaattisen sulkemisen asetukset","auto_close_immediate":{"one":"Ketjun viimeisin viesti on jo tunnin vanha, joten ketju suljetaan heti.","other":"Ketjun viimeisin viesti on jo %{hours} tuntia vanha, joten ketju suljetaan heti."},"timeline":{"back":"Takaisin","back_description":"Siirry takaisin ensimm√§iseen lukemattomaan viestiin","replies_short":"%{current} / %{total}"},"progress":{"title":"ketjun edistyminen","go_top":"alkuun","go_bottom":"loppuun","go":"siirry","jump_bottom":"hypp√§√§ viimeisimp√§√§n viestiin","jump_prompt":"hypp√§√§...","jump_prompt_long":"Hypp√§√§...","jump_bottom_with_number":"hypp√§√§ viestiin %{post_number}","jump_prompt_to_date":"p√§iv√§m√§√§r√§√§n","jump_prompt_or":"tai","total":"yhteens√§ viestej√§","current":"t√§m√§nhetkinen viesti"},"notifications":{"title":"muuta sit√§, kuinka usein saat muistutuksia t√§st√§ ketjusta","reasons":{"mailing_list_mode":"Olet postituslistatilassa, joten saat s√§hk√∂postia t√§h√§n ketjuun l√§hetyist√§ vastauksista.","3_10":"Saat ilmoituksia, koska tarkkailet t√§h√§n ketjuun liittyv√§√§ tunnistetta.","3_6":"Saat ilmoituksia, koska olet asettanut t√§m√§n alueen tarkkailuun.","3_5":"Saat ilmoituksia, koska ketju on asetettu tarkkailuun automaattisesti.","3_2":"Saat ilmoituksia, koska olet asettanut ketjun tarkkailuun.","3_1":"Saat ilmoituksia, koska aloitit t√§m√§n ketjun.","3":"Saat ilmoituksia, koska olet asettanut ketjun tarkkailuun.","2_8":"N√§et uusien vastausten m√§√§r√§n, koska olet asettanut t√§m√§n alueen seurantaan.","2_4":"N√§et uusien vastausten m√§√§r√§n, koska olet kirjoittanut ketjuun.","2_2":"N√§et uusien vastausten m√§√§r√§n, koska olet asettanut ketjun seurantaan.","2":"N√§et uusien vastausten m√§√§r√§n, koska \u003ca href=\"%{basePath}/u/%{username}/preferences/notifications\"\u003e luit t√§t√§ ketjua\u003c/a\u003e.","1_2":"Saat ilmoituksen jos joku mainitsee @nimesi tai vastaa sinulle.","1":"Saat ilmoituksen jos joku mainitsee @nimesi tai vastaa sinulle.","0_7":"Et saa mit√§√§n ilmoituksia t√§lt√§ alueelta.","0_2":"Et saa mit√§√§n ilmoituksia t√§st√§ ketjusta.","0":"Et saa mit√§√§n ilmoituksia t√§st√§ ketjusta."},"watching_pm":{"title":"Tarkkaile","description":"Saat ilmoituksen kaikista uusista vastauksista t√§ss√§ viestiketjussa ja uusien vastausten lukum√§√§r√§ n√§ytet√§√§n."},"watching":{"title":"Tarkkaile","description":"Saat ilmoituksen kaikista uusista vastauksista t√§ss√§ viestiketjussa ja uusien vastausten lukum√§√§r√§ n√§ytet√§√§n."},"tracking_pm":{"title":"Seuraa","description":"T√§lle ketjulle n√§ytet√§√§n uusien vastausten lukum√§√§r√§. Saat ilmoituksen jos joku mainitsee @nimesi tai vastaa sinulle."},"tracking":{"title":"Seuraa","description":"T√§lle ketjulle n√§ytet√§√§n uusien vastausten lukum√§√§r√§. Saat ilmoituksen jos joku mainitsee @nimesi tai vastaa sinulle."},"regular":{"title":"Tavallinen","description":"Saat ilmoituksen jos joku mainitsee @nimesi tai vastaa sinulle."},"regular_pm":{"title":"Tavallinen","description":"Saat ilmoituksen jos joku mainitsee @nimesi tai vastaa sinulle."},"muted_pm":{"title":"Vaimenna","description":"Et saa mit√§√§n ilmoituksia t√§st√§ keskustelusta."},"muted":{"title":"Vaimenna","description":"Et saa ilmoituksia mist√§√§n t√§ss√§ ketjussa, eik√§ se n√§y tuoreimmissa."}},"actions":{"title":"Toiminnot","recover":"Peru ketjun poisto","delete":"Poista ketju","open":"Avaa ketju","close":"Sulje ketju","multi_select":"Valitse viestej√§...","slow_mode":"Ota Hidas tila k√§ytt√∂√∂n","timed_update":"Aseta ajastin ketjulle...","pin":"Kiinnit√§ ketju...","unpin":"Poista ketjun kiinnitys...","unarchive":"Poista ketjun arkistointi","archive":"Arkistoi ketju","invisible":"Poista listauksista","visible":"N√§yt√§ listauksissa","reset_read":"Poista tieto lukemisista","make_public":"Tee ketjusta julkinen","make_private":"Muuta yksityiskeskusteluksi","reset_bump_date":"Palauta ketjun p√§iv√§ysleima"},"feature":{"pin":"Kiinnit√§ ketju","unpin":"Poista ketjun kiinnitys","pin_globally":"Kiinnit√§ ketju koko palstalle","make_banner":"Tee ketjusta banneri","remove_banner":"Poista banneri"},"reply":{"title":"Vastaa","help":"aloita kirjoittamaan vastausta t√§h√§n ketjuun"},"clear_pin":{"title":"Poista kiinnitys","help":"Poista kiinnitys, jotta ketju ei en√§√§ pysy listauksen ylimp√§n√§"},"share":{"title":"Jaa","extended_title":"Jaa linkki","help":"jaa linkki t√§h√§n ketjuun"},"print":{"title":"Tulosta","help":"Avaa tulostettava versio t√§st√§ ketjusta"},"flag_topic":{"title":"Liputa","help":"liputa t√§m√§ ketju tai l√§het√§ siit√§ yksityinen ilmoitus valvojalle","success_message":"Ketjun liputus onnistui."},"make_public":{"title":"Muuta julkiseksi ketjuksi","choose_category":"Valitse alue julkiselle ketjulle:"},"feature_topic":{"title":"Nosta t√§m√§ ketju","pin":"Kiinnit√§ t√§m√§ ketju alueen %{categoryLink} ylimm√§iseksi kunnes","unpin":"√Ñl√§ en√§√§ pid√§ t√§t√§ ketjua %{categoryLink}-aluen ylimm√§isen√§.","unpin_until":"Poista nyt t√§m√§n ketjun kiinnitys alueen %{categoryLink} ylimm√§isen√§, tai odota kunnes \u003cstrong\u003e%{until}\u003c/strong\u003e.","pin_note":"K√§ytt√§j√§t voivat poistaa ketjun kiinnityksen itselt√§√§n.","pin_validation":"P√§iv√§m√§√§r√§ vaaditaan kiinnitt√§m√§√§n t√§m√§ ketju","not_pinned":"Alueella %{categoryLink} ei ole kiinnitettyj√§ ketjuja.","already_pinned":{"one":"Kiinnitettyj√§ ketjuja alueella %{categoryLink}: \u003cstrong class='badge badge-notification unread'\u003e%{count}\u003c/strong\u003e","other":"Alueelle %{categoryLink} kiinnitettyj√§ ketjuja: \u003cstrong class='badge badge-notification unread'\u003e%{count}\u003c/strong\u003e"},"pin_globally":"Kiinnit√§ t√§m√§ ketju kaikkien alueiden ylimm√§iseksi, kunnes","confirm_pin_globally":{"one":"Olet jo kiinnitt√§nyt %{count} ketjun koko palstalle. Liian suuri kiinnitettyjen ketjujen m√§√§r√§ voi h√§irit√§ uusia sek√§ anonyymej√§ k√§ytt√§ji√§. Oletko varma, ett√§ haluat kiinnitt√§√§ yhden ketjun lis√§√§ koko palstalle?","other":"Olet jo kiinnitt√§nyt %{count} ketjua koko palstalle. Liian suuri kiinnitettyjen ketjujen m√§√§r√§ voi h√§irit√§ uusia sek√§ anonyymej√§ k√§ytt√§ji√§. Oletko varma, ett√§ haluat kiinnitt√§√§ yhden ketjun lis√§√§ koko palstalle?"},"unpin_globally":"√Ñl√§ en√§√§ pid√§ t√§t√§ ketjua kaikkien alueiden ylimm√§isen√§.","unpin_globally_until":"Poista nyt t√§m√§n ketjun kiinnitys kaikkien alueiden ylimm√§isen√§, tai odota kunnes \u003cstrong\u003e%{until}\u003c/strong\u003e.","global_pin_note":"K√§ytt√§j√§t voivat poistaa ketjun kiinnityksen itselt√§√§n.","not_pinned_globally":"Yht√§√§n ketjua ei ole kiinnitetty koko palstalle.","already_pinned_globally":{"one":"Koko palstalle kiinnitettyj√§ ketjuja: \u003cstrong class='badge badge-notification unread'\u003e%{count}\u003c/strong\u003e","other":"Koko palstalle kiinnitettyj√§ ketjuja: \u003cstrong class='badge badge-notification unread'\u003e%{count}\u003c/strong\u003e"},"make_banner":"Tee t√§st√§ ketjusta banneri, joka n√§ytet√§√§n kaikkien sivujen ylimm√§isen√§.","remove_banner":"Poista banneri, joka n√§ytet√§√§n kaikkien sivujen ylimm√§isen√§.","banner_note":"K√§ytt√§j√§t voivat piilottaa bannerin sulkemalla sen. Vain yksi ketju kerrallaan voi olla banneri.","no_banner_exists":"Banneriketjua ei ole m√§√§ritelty.","banner_exists":"Banneriketju \u003cstrong class='badge badge-notification unread'\u003eon\u003c/strong\u003e m√§√§ritelty."},"inviting":"Kutsutaan...","automatically_add_to_groups":"T√§m√§ kutsu sis√§lt√§√§ my√∂s p√§√§syn n√§ihin ryhmiin:","invite_private":{"title":"Kutsu keskusteluun","email_or_username":"Kutsuttavan s√§hk√∂postiosoite tai k√§ytt√§j√§nimi","email_or_username_placeholder":"s√§hk√∂postiosoite tai k√§ytt√§j√§nimi","action":"Kutsu","success":"K√§ytt√§j√§ on kutsuttu osallistumaan t√§h√§n yksityiseen keskusteluun.","success_group":"Ryhm√§ on kutsuttu osallistumaan t√§h√§n yksityiseen keskusteluun.","error":"Kutsuttaessa k√§ytt√§j√§√§ tapahtui valitettavasti virhe.","not_allowed":"T√§t√§ k√§ytt√§j√§√§ ei valitettavasti voi kutsua.","group_name":"ryhm√§n nimi"},"controls":"Ketjun hallinta","invite_reply":{"title":"Kutsu","username_placeholder":"k√§ytt√§j√§tunnus","action":"L√§het√§ kutsu","help":"Kutsu muita t√§h√§n ketjuun s√§hk√∂postin tai palstan ilmoitusten kautta","to_topic_blank":"Sy√∂t√§ henkil√∂n k√§ytt√§j√§tunnus tai s√§hk√∂postiosoite, jonka haluaisit kutsua t√§h√§n ketjuun.","to_topic_email":"Sy√∂tit s√§hk√∂postiosoitteen. L√§het√§mme yst√§v√§llesi s√§hk√∂postin, jonka avulla h√§n voi heti vastata t√§h√§n ketjuun.","to_topic_username":"Annoit k√§ytt√§j√§nimen. L√§het√§mme h√§nelle ilmoituksen, jossa on linkki ja kutsu t√§h√§n ketjuun.","to_username":"Kirjoita henkil√∂n k√§ytt√§j√§nimi, jonka haluat kutsua. L√§het√§mme h√§nelle ilmoituksen, jossa on linkki ja kutsu t√§h√§n ketjuun.","email_placeholder":"nimi@esimerkki.fi","success_username":"Olemme kutsuneet k√§ytt√§j√§n osallistumaan t√§h√§n ketjuun.","error":"Emme valitettavasti onnistuneet kutsumaan t√§t√§ henkil√∂√§. Ehk√§p√§ h√§net on jo kutsuttu? (Huomaa, ett√§ kutsumistiheytt√§ rajoitetaan)","success_existing_email":"On jo olemassa k√§ytt√§j√§ s√§hk√∂postiosoitteella \u003cb\u003e%{emailOrUsername}\u003c/b\u003e. H√§net kutsuttiin osallistumaan t√§h√§n ketjuun."},"login_reply":"Kirjaudu sis√§√§n vastataksesi","filters":{"n_posts":{"one":"%{count} viesti","other":"%{count} viesti√§"},"cancel":"Poista suodatin"},"move_to":{"title":"Siirr√§","action":"siirr√§","error":"Viestien siirt√§minen ep√§onnistui."},"split_topic":{"title":"Siirr√§ uuteen ketjuun","action":"siirr√§ uuteen ketjuun","topic_name":"Uuden ketjun otsikko","radio_label":"Uusi ketju","error":"Viestien siirt√§misess√§ uuteen ketjuun tapahtui virhe.","instructions":{"one":"Olet luomassa uutta ketjua valitsemastasi viestist√§.","other":"Olet aloittamassa uutta ketjua valitsemistasi \u003cb\u003e%{count}\u003c/b\u003e viestist√§."}},"merge_topic":{"title":"Siirr√§ olemassa olevaan ketjuun","action":"siirr√§ olemassa olevaan ketjuun","error":"Viestien siirt√§misess√§ ketjuun tapahtui virhe.","radio_label":"Olemassa oleva ketju","instructions":{"one":"Valitse ketju, johon haluat siirt√§√§ valitun viestin.","other":"Valitse ketju, johon haluat siirt√§√§ valitut \u003cb\u003e%{count}\u003c/b\u003e viesti√§."}},"move_to_new_message":{"title":"Siirr√§ uuteen yksityiskeskusteluun","action":"siirr√§ uuteen yksityiskeskusteluun","message_title":"Uuden keskustelun otsikko","radio_label":"Uusi yksityiskeskustelu","participants":"Osallistujat","instructions":{"one":"Olet luomassa uutta keskustelua, jossa olisi viesti, jonka olet valinnut.","other":"Olet luomassa uutta keskustelua, jossa olisi \u003cb\u003e%{count}\u003c/b\u003e viesti√§, jotka olet valinnut."}},"move_to_existing_message":{"title":"Siirr√§ olemassa olevaan keskusteluun","action":"siirr√§ olemassa olevaan keskusteluun","radio_label":"Olemassa oleva keskustelu","participants":"Osallistujat","instructions":{"one":"Valitse keskustelu, johon haluat siirt√§√§ t√§m√§n viestin.","other":"Valitse keskustelu, johon haluat siirt√§√§ n√§m√§ \u003cb\u003e%{count}\u003c/b\u003e viesti√§."}},"merge_posts":{"title":"Yhdist√§ valitut viestit","action":"yhdist√§ valitut viestit","error":"Valittuja viestej√§ yhdistett√§ess√§ tapahtui virhe."},"publish_page":{"title":"Sivujulkaisu","publish":"Julkaise","description":"Kun ketju julkaistaan sivuna, sen verkko-osoitteen voi jakaa ja se n√§ytet√§√§n erityisell√§ tavalla muotoiltuna.","slug":"Polkutunnus","public":"Julkinen","public_description":"Ihmiset n√§kev√§t sivun, vaikka siihen liittyv√§ ketju olisi yksityinen.","publish_url":"Sivusi julkaistiin osoitteessa:","topic_published":"Ketjusi julkaistiin osoitteessa;","preview_url":"Sivusi julkaistaan osoitteessa:","invalid_slug":"Et voi valitettavasti julkaista t√§t√§ sivua.","unpublish":"Peru julkaisu","unpublished":"Sivusi julkaisu peruttiin, sille ei ole en√§√§ p√§√§sy√§.","publishing_settings":"Julkaisuasetukset"},"change_owner":{"title":"Vaihda omistajaa","action":"muokkaa omistajuutta","error":"Viestin omistajan vaihdossa tapahtui virhe.","placeholder":"uuden omistajan k√§ytt√§j√§tunnus","instructions":{"one":"Valitse uusi omistaja k√§ytt√§j√§n \u003cb\u003e@%{old_user}\u003c/b\u003e viestille.","other":"Valitse uusi omistaja k√§ytt√§j√§n \u003cb\u003e@%{old_user}\u003c/b\u003e %{count} viestille."},"instructions_without_old_user":{"one":"Valitse uusi omistaja viestille","other":"Valitse uusi omistaja %{count} viestille"}},"change_timestamp":{"title":"Muuta aikaleimaa...","action":"muuta aikaleimaa","invalid_timestamp":"Aikaleima ei voi olla tulevaisuudessa.","error":"Ketjun aikaleiman vaihtamisessa tapahtui virhe","instructions":"Ole hyv√§ ja valitse ketjulle uusi aikaleima. Ketjun viestit p√§ivitet√§√§n samalla aikaerolla."},"multi_select":{"select":"valitse","selected":"valittuna (%{count})","select_post":{"label":"valitse","title":"Lis√§√§ viesti valittuihin"},"selected_post":{"label":"valittu","title":"Poista valituista klikkaamalla"},"select_replies":{"label":"valitse +vastaukset","title":"Lis√§√§ viesti ja vastaukset siihen valittuihin"},"select_below":{"label":"valitse +my√∂hemm√§t","title":"Lis√§√§ viesti ja kaikki my√∂hemm√§t valittuihin"},"delete":"poista valitut","cancel":"kumoa valinta","select_all":"valitse kaikki","deselect_all":"poista kaikkien valinta","description":{"one":"Olet valinnut \u003cb\u003eyhden\u003c/b\u003e viestin.","other":"Olet valinnut \u003cb\u003e%{count}\u003c/b\u003e viesti√§."}},"deleted_by_author":{"one":"(kirjoittaja perui ketjun, poistetaan automaattisesti %{count} tunnin kuluttua, paitsi jos liputetaan)","other":"(kirjoittaja perui ketjun, poistetaan automaattisesti %{count} tunnin kuluttua, paitsi jos liputetaan)"}},"post":{"quote_reply":"Lainaa","quote_share":"Jaa","edit_reason":"Syy:","post_number":"viesti %{number}","ignored":"Sivuutettua sis√§lt√∂√§","reply_as_new_topic":"Vastaa aihetta sivuavassa ketjussa","reply_as_new_private_message":"Vastaa samoille vastaanottajille uudessa yksityisviestiketjussa","continue_discussion":"Jatkoa ketjulle %{postLink}:","follow_quote":"siirry lainattuun viestiin","show_full":"N√§yt√§ koko viesti","show_hidden":"Katso sivuutettu sis√§lt√∂.","deleted_by_author":{"one":"(kirjoittaja on perunut viestin ja se poistetaan automaattisesti tunnin kuluttua, paitsi jos se liputetaan)","other":"(kirjoittaja on perunut viestin ja se poistetaan automaattisesti %{count} tunnin kuluttua, paitsi jos se liputetaan)"},"collapse":"kutista","expand_collapse":"laajenna/pienenn√§","locked":"henkil√∂kunnan j√§sen on est√§nyt t√§m√§n viestin muokkaamisen","gap":{"one":"n√§yt√§ %{count} piilotettu vastaus","other":"n√§yt√§ %{count} piilotettua vastausta"},"notice":{"new_user":"T√§m√§ on ensimm√§inen kerta kun %{user} kirjoittaa ‚Äî toivotetaan h√§net tervetulleeksi yhteis√∂√∂mme!","returning_user":"Siit√§ on aikaa kun %{user} on viimeksi n√§hty ‚Äî h√§n oli viimeksi kirjoittanut %{time}."},"unread":"Viesti on lukematta","has_replies":{"one":"%{count} vastaus","other":"%{count} vastausta"},"has_replies_count":"%{count}","unknown_user":"(tuntematon / poistettu k√§ytt√§j√§)","has_likes_title":{"one":"%{count} k√§ytt√§j√§ tykk√§si t√§st√§ viestist√§","other":"%{count} k√§ytt√§j√§√§ tykk√§si t√§st√§ viestist√§"},"has_likes_title_only_you":"tykk√§sit t√§st√§ viestist√§","has_likes_title_you":{"one":"Sin√§ ja yksi toinen tykk√§si t√§st√§ viestist√§","other":"Sin√§ ja %{count} muuta tykk√§si t√§st√§ viestist√§"},"filtered_replies_hint":{"one":"N√§yt√§ t√§m√§ viesti ja siihen liittyv√§ vastaus","other":"N√§yt√§ t√§m√§ viesti ja %{count} siihen liittyv√§√§ vastausta"},"filtered_replies_viewing":{"one":"Katsellaan %{count} vastausta","other":"Katsellaan %{count} vastausta"},"in_reply_to":"Lataa emoviesti","errors":{"create":"Viestin luonti valitettavasti ep√§onnistui. Ole hyv√§ ja yrit√§ uudelleen.","edit":"Viestin muokkaus valitettavasti ep√§onnistui. Ole hyv√§ ja yrit√§ uudelleen.","upload":"Tiedoston l√§hetys valitettavasti ep√§onnistui. Ole hyv√§ ja yrit√§ uudelleen.","file_too_large":"Tiedosto on valitettavasti liian suuri (enimm√§iskoko on %{max_size_kb}kb). Mit√§p√§ jos lataisit suuren tiedostosi johonkin pilvipalveluun ja sitten jakaisit linkin?","too_many_uploads":"Voit valitettavasti ladata vain yhden tiedoston kerrallaan.","too_many_dragged_and_dropped_files":{"one":"Pahoittelut, voit ladata vain %{count} tiedostoa kerrallaan.","other":"Pahoittelut, voit ladata vain %{count} tiedostoa kerrallaan."},"upload_not_authorized":"Tiedosto jota yrit√§t ladata ei valitettavasti ole sallittu (sallitut laajennukset: %{authorized_extensions}).","image_upload_not_allowed_for_new_user":"Uudet k√§ytt√§j√§t eiv√§t valitettavasti saa ladata kuvia.","attachment_upload_not_allowed_for_new_user":"Uudet k√§ytt√§j√§t valitettavasti eiv√§t saa ladata liitteit√§.","attachment_download_requires_login":"Sinun t√§ytyy valitettavasti kirjautua sis√§√§n, jotta voit ladata liitetiedostoja itsellesi."},"via_email":"t√§m√§ viesti l√§hetettiin s√§hk√∂postitse","via_auto_generated_email":"t√§m√§ viesti saapui automaattisesti generoituna s√§hk√∂postina","whisper":"t√§m√§ viesti on yksityinen kuiskaus valvojille","wiki":{"about":"t√§m√§ viesti on wiki-viesti"},"archetypes":{"save":"Tallennusasetukset"},"few_likes_left":"Kiitos hyv√§n mielen levitt√§misest√§! Sinulla on en√§√§ muutama tykk√§ys j√§ljell√§ t√§lle p√§iv√§lle.","controls":{"reply":"aloita vastaamaan t√§h√§n viestiin","like":"tykk√§√§ viestist√§","has_liked":"tykk√§sit t√§st√§ viestist√§","read_indicator":"j√§senet jotka ovat lukeneet t√§m√§n viestin","undo_like":"peru tykk√§ys","edit":"muokkaa viesti√§","edit_action":"Muokkaa","edit_anonymous":"Sinun t√§ytyy ensin kirjautua sis√§√§n, jotta voit muokata t√§t√§ viesti√§.","flag":"liputa t√§m√§ viesti tai l√§het√§ k√§ytt√§j√§lle yksityisesti siihen liittyv√§ huomio","delete":"poista t√§m√§ viesti","undelete":"peru viestin poistaminen","share":"jaa linkki t√§h√§n viestiin","more":"Lis√§√§","delete_replies":{"confirm":"Haluatko poistaa my√∂s t√§h√§n viestiin liittyv√§t vastaukset?","direct_replies":{"one":"Kyll√§, ja yksi suora vastaus","other":"Kyll√§, ja %{count}¬†suoraa vastausta"},"all_replies":{"one":"Kyll√§, ja yksi vastaus","other":"Kyll√§, ja kaikki %{count} vastausta"},"just_the_post":"Ei, vain t√§m√§ viesti"},"admin":"viestin yll√§pitotoimet","wiki":"Tee wiki","unwiki":"Poista wiki","convert_to_moderator":"Lis√§√§ henkil√∂kunnan taustav√§ri","revert_to_regular":"Poista henkil√∂kunnan taustav√§ri","rebake":"Tee HTML uudelleen","publish_page":"Sivujulkaisu","unhide":"Poista piilotus","change_owner":"Vaihda omistajuutta","grant_badge":"My√∂nn√§ ansiomerkki","lock_post":"Lukitse viesti","lock_post_description":"est√§ kirjoittajaa muokkaamasta t√§t√§ viesti√§","unlock_post":"Vapauta viesti","unlock_post_description":"salli kirjoittajan muokata viesti√§","delete_topic_disallowed_modal":"Et saa poistaa t√§t√§ ketjua. Jos haluat sen poistetuksi, liputa se perustelujen kera, ja valvoja p√§√§tt√§√§ poistamisesta.","delete_topic_disallowed":"et saa poistaa ketjua","delete_topic_confirm_modal_yes":"Kyll√§, poista ketju","delete_topic_confirm_modal_no":"Ei, s√§ilyt√§ ketju","delete_topic_error":"Ketjua poistettaessa tapahtui virhe","delete_topic":"poista ketju","add_post_notice":"Lis√§√§ henkil√∂kuntanootti","change_post_notice":"Muuta henkil√∂kuntanoottia","delete_post_notice":"Poista henkil√∂kuntanootti","remove_timer":"poista ajastin"},"actions":{"people":{"like":{"one":"tykk√§si t√§st√§","other":"tykk√§siv√§t t√§st√§"},"read":{"one":"luki t√§m√§n","other":"lukivat t√§m√§n"},"like_capped":{"one":"ja %{count} muu tykk√§si t√§st√§","other":"ja %{count} muuta tykk√§si t√§st√§"},"read_capped":{"one":"ja %{count} muu lukivat t√§m√§n","other":"ja %{count} muuta lukivat t√§m√§n"}},"by_you":{"off_topic":"Liputit t√§m√§n eksyv√§n aiheesta","spam":"Liputit t√§m√§n roskapostiksi","inappropriate":"Liputit t√§m√§n sopimattomaksi","notify_moderators":"Liputit t√§m√§n valvojille tiedoksi","notify_user":"L√§hetit viestin t√§lle k√§ytt√§j√§lle"}},"delete":{"confirm":{"one":"Oletko varma, ett√§ haluat poistaa viestin?","other":"Oletko varma, ett√§ haluat poistaa %{count} viesti√§?"}},"merge":{"confirm":{"one":"Oletko varma, ett√§ haluat yhdist√§√§ n√§m√§ viestit?","other":"Oletko varma, ett√§ haluat yhdist√§√§ n√§m√§ %{count} viesti√§?"}},"revisions":{"controls":{"first":"Ensimm√§inen revisio","previous":"Edellinen revisio","next":"Seuraava revisio","last":"Viimeinen revisio","hide":"Piilota revisio","show":"N√§yt√§ revisio","revert":"Palaa revisioon %{revision}","edit_wiki":"Muokkaa wiki√§","edit_post":"Muokkaa viesti√§","comparing_previous_to_current_out_of_total":"\u003cstrong\u003e%{previous}\u003c/strong\u003e %{icon} \u003cstrong\u003e%{current}\u003c/strong\u003e / %{total}"},"displays":{"inline":{"title":"N√§yt√§ lis√§ykset ja poistot tekstin osana","button":"HTML"},"side_by_side":{"title":"N√§yt√§ muokkauksen versiot vierekk√§in","button":"HTML"},"side_by_side_markdown":{"title":"N√§yt√§ viestien l√§hdekoodit vierekk√§in","button":"Raaka"}}},"raw_email":{"displays":{"raw":{"title":"N√§yt√§ raaka s√§hk√∂posti","button":"Raaka"},"text_part":{"title":"N√§yt√§ s√§hk√∂postin tekstiosa","button":"Teksti"},"html_part":{"title":"N√§yt√§ s√§hk√∂postin HTML-osa","button":"HTML"}}},"bookmarks":{"create":"Luo kirjanmerkki","edit":"Muokkaa kirjanmerkki√§","created":"Luotu","updated":"P√§ivitetty","name":"Nimi","name_placeholder":"Mit√§ varten kirjanmerkki on?","set_reminder":"Muistuta minua","actions":{"delete_bookmark":{"name":"Poista kirjanmerkki","description":"Poistaa kirjanmerkin profiilistasi ja kumoaa kaikki kirjanmerkkiin liittyv√§t muistutukset"},"edit_bookmark":{"name":"Muokkaa kirjanmerkki√§","description":"Muokkaa kirjanmerkin nime√§ tai s√§√§d√§ muistutuksen p√§iv√§m√§√§r√§√§ ja kellonaikaa"}}},"filtered_replies":{"viewing_posts_by":"Katsellaan %{post_count} viesti√§ k√§ytt√§j√§lt√§","viewing_subset":"Jotkut vastaukset eiv√§t ole n√§kyvill√§","viewing_summary":"Katsellaan ketjutiivistelm√§√§","post_number":"%{username}, viesti #%{post_number}","show_all":"N√§yt√§ kaikki"}},"category":{"can":"voivat\u0026hellip; ","none":"(ei aluetta)","all":"Kaikki alueet","choose":"alue\u0026hellip;","edit":"Muokkaa","edit_dialog_title":"Muokkaa: %{categoryName}","view":"Katsele alueen ketjuja","back":"Takaisin alueelle","general":"Yleist√§","settings":"Asetukset","topic_template":"Ketjun sapluuna","tags":"Tunnisteet","tags_allowed_tags":"Rajaa n√§m√§ tunnisteet t√§lle alueelle:","tags_allowed_tag_groups":"Rajaa n√§m√§ tunnisteryhm√§t t√§lle alueelle:","tags_placeholder":"(Ei-pakollinen) lista sallituista tunnisteista","tags_tab_description":"Yll√§ m√§√§ritellyt tunnisteet ja tunnisteryhm√§t ovat k√§yt√∂ss√§ vain t√§ll√§ alueella sek√§ muilla alueilla, jotka samalla tapaa ovat ne m√§√§ritelleet. Muilla alueilla ne eiv√§t ole k√§ytett√§viss√§.","tag_groups_placeholder":"(Ei-pakollinen) lista sallituista tunnisteryhmist√§","manage_tag_groups_link":"Hallinnoi tunnisteryhmi√§","allow_global_tags_label":"Salli my√∂s muut tunnisteet","tag_group_selector_placeholder":"(Ei-pakollinen) tunnisteryhm√§","required_tag_group_description":"Edellyt√§, ett√§ uudella ketjulla on tunnisteita tunnisteryhm√§st√§:","min_tags_from_required_group_label":"Tunnisteiden m√§√§r√§:","required_tag_group_label":"Tunnisteryhm√§:","topic_featured_link_allowed":"Salli ketjulinkit t√§ll√§ alueella","delete":"Poista alue","create":"Uusi alue","create_long":"Luo uusi alue","save":"Tallenna","slug":"Alueen lyhenne","slug_placeholder":"(Ei-pakollinen) url-lyhenne","creation_error":"Alueen luonnissa tapahtui virhe.","save_error":"Alueen tallennuksessa tapahtui virhe.","name":"Alueen nimi","description":"Kuvaus","topic":"alueen kuvausketju","logo":"Alueen logo","background_image":"Alueen taustakuva","badge_colors":"Alueen tunnusv√§rit","background_color":"Taustav√§ri","foreground_color":"Edustan v√§ri","name_placeholder":"Yksi tai kaksi sanaa enimmill√§√§n","color_placeholder":"Web-v√§ri","delete_confirm":"Oletko varma, ett√§ haluat poistaa t√§m√§n alueen?","delete_error":"Alueen poistossa tapahtui virhe.","list":"Listaa alueet","no_description":"Lis√§√§ alueelle kuvaus.","change_in_category_topic":"Muokkaa kuvausta","already_used":"T√§m√§ v√§ri on jo k√§yt√∂ss√§ toisella alueella","security":"Turvallisuus","security_add_group":"Lis√§√§ ryhm√§","permissions":{"group":"Ryhm√§","see":"Katselu","reply":"Vastaus","create":"Aloitus","no_groups_selected":"Millek√§√§n ryhm√§ll√§ ei ole my√∂nnetty p√§√§sy√§; alue n√§kyy vain henkil√∂kunnalle.","everyone_has_access":"T√§m√§ alue on julkinen: kaikki voivat lukea, vastata ja aloittaa ketjuja. Voit rajoittaa oikeuksia poistamalla yhden tai useamman ryhm√§ll√§ \"kaikki\" annetuista oikeuksista.","toggle_reply":"Muuta vastausoikeutta","toggle_full":"Muuta aloitusoikeutta","inherited":"T√§m√§ oikeus periytyy ryhm√§lt√§ \"kaikki\""},"special_warning":"Varoitus: T√§m√§ on valmiiksi luotu alue, ja sen turvallisuusasetuksia ei voi muuttaa. Jos et n√§e k√§ytt√∂√§ alueelle, √§l√§ muuta sen tarkoitusta vaan poista se.","uncategorized_security_warning":"T√§m√§ alue on erityinen. Se on tarkoitettu s√§ilytyspaikaksi ketjuille, joilla ei ole aluetta; sille ei voi m√§√§ritell√§ turvallisuusasetuksia.","uncategorized_general_warning":"T√§m√§ alue on erityinen. Se on oletusalue uusille ketjuille, joille ei ole valittu aluetta. Jos et kaipaa t√§t√§ ja haluat mieluummin pakottaa valitsemaan alueen, \u003ca href=\"%{settingLink}\"\u003eota asetus pois k√§yt√∂st√§ t√§√§ll√§\u003c/a\u003e. Jos haluat vaihtaa nime√§ tai kuvasta, mene \u003ca href=\"%{customizeLink}\"\u003eMukauta / Tekstit\u003c/a\u003e.","pending_permission_change_alert":"Et ole lis√§nnyt ryhm√§√§ %{group} t√§lle alueelle; lis√§√§ klikkaamalla t√§t√§.","images":"Kuvat","email_in":"Saapuvan postin s√§hk√∂postiosoite:","email_in_allow_strangers":"Hyv√§ksy s√§hk√∂postit anonyymeilt√§ k√§ytt√§jilt√§ joilla ei ole tili√§","email_in_disabled":"Uusien ketjujen aloittaminen s√§hk√∂postitse on otettu pois k√§yt√∂st√§ sivuston asetuksissa. Salliaksesi uusien ketjujen luomisen s√§hk√∂postilla, ","email_in_disabled_click":"ota k√§ytt√∂√∂n \"email in\" asetus.","mailinglist_mirror":"Alue j√§ljittelee postituslistaa","show_subcategory_list":"N√§yt√§ lista tyt√§ralueista ketjujen yl√§puolella t√§ll√§ alueella.","read_only_banner":"Banneriteksti joka n√§ytet√§√§n, jos k√§ytt√§j√§ ei voi aloittaa ketjua t√§lle alueelle:","num_featured_topics":"Kuinka monta ketjua n√§ytet√§√§n Keskustelualueet-sivulla:","subcategory_num_featured_topics":"Kuinka monta ketjua n√§ytet√§√§n emoalueen sivulla:","all_topics_wiki":"Tee uusista ketjuista wiki-viestej√§ oletuksena.","subcategory_list_style":"Tyt√§raluelistan tyyli:","sort_order":"Ketjulistaus j√§rjestet√§√§n:","default_view":"Oletuslistaus:","default_top_period":"Kuumat-listauksen oletusajanjakso:","default_list_filter":"Oletusluettelosuodatin:","allow_badges_label":"Salli ansiomerkkien my√∂nt√§minen t√§lt√§ alueelta","edit_permissions":"Muokkaa oikeuksia","reviewable_by_group":"Henkil√∂kunnan lis√§ksi t√§m√§n alueen sis√§lt√∂√§ voi k√§sitell√§ my√∂s:","review_group_name":"ryhm√§n nimi","require_topic_approval":"Edellyt√§ valvojan hyv√§ksynt√§√§ kaikille uusille ketjuille","require_reply_approval":"Edellyt√§ valvojan hyv√§ksynt√§√§ kaikille uusille vastauksille","this_year":"t√§n√§ vuonna","position":"Sijainti alueet-sivulla:","default_position":"Oletuspaikka","position_disabled":"Alueet n√§ytet√§√§n aktiivisuusj√§rjestyksess√§. Muokataksesi j√§rjestyst√§,","position_disabled_click":"ota k√§ytt√∂√∂n \"pysyv√§ aluej√§rjestys\" asetuksista.","minimum_required_tags":"Kuinka monta tunnistetta ketjulla t√§ytyy v√§hint√§√§n olla:","parent":"Emoalue","num_auto_bump_daily":"Kuinka monta avointa ketjua nostetaan automaattisesti p√§ivitt√§in:","navigate_to_first_post_after_read":"Siirry ensimm√§iseen viestiin, kun kaikki ketjut on luettu","notifications":{"watching":{"title":"Tarkkaile"},"watching_first_post":{"title":"Tarkkaile uusia ketjuja","description":"Saat ilmoituksia uusista t√§m√§n alueen ketjuista, muttet ketjuihin tulevista vastauksista."},"tracking":{"title":"Seuraa"},"regular":{"title":"Tavallinen","description":"Saat ilmoituksen jos joku mainitsee @nimesi tai vastaa sinulle."},"muted":{"title":"Vaimennettu"}},"search_priority":{"label":"Hakuprioriteetti","options":{"normal":"Normaali","ignore":"Sivuuta","very_low":"Eritt√§in matala","low":"Matala","high":"Korkea","very_high":"Eritt√§in korkea"}},"sort_options":{"default":"oletus","likes":"Tykk√§ykset","op_likes":"Avausviestin tykk√§ykset","views":"Katselut","posts":"Viestit","activity":"Toiminta","posters":"Kirjoittajat","category":"Alue","created":"Luomisaika"},"sort_ascending":"Nouseva","sort_descending":"Laskeva","subcategory_list_styles":{"rows":"Rivit","rows_with_featured_topics":"Rivit ja ketjuja","boxes":"Laatikot","boxes_with_featured_topics":"Laatikot ja ketjuja"},"settings_sections":{"general":"Yleist√§","moderation":"Valvonta","appearance":"Ulkoasu","email":"S√§hk√∂posti"},"list_filters":{"all":"kaikki ketjut","none":"ei tyt√§ralueita"}},"flagging":{"title":"Kiitos avustasi yhteis√∂n hyv√§ksi!","action":"Liputa viesti","take_action":"Ryhdy toimiin...","take_action_options":{"default":{"title":"Ryhdy toimiin","details":"Ylit√§ lippujen kynnysm√§√§r√§ v√§litt√∂m√§sti, odottamatta enemp√§√§ yhteis√∂n j√§senten liputuksia"},"suspend":{"title":"Hyllyt√§ k√§ytt√§j√§","details":"Ylit√§ lippujen kynnysm√§√§r√§ ja hyllyt√§ k√§ytt√§j√§"},"silence":{"title":"Hiljenn√§ k√§ytt√§j√§","details":"Ylit√§ lippujen kynnysm√§√§r√§ ja hiljenn√§ k√§ytt√§j√§"}},"notify_action":"Viesti","official_warning":"Virallinen varoitus","delete_spammer":"Poista roskapostittaja","yes_delete_spammer":"Kyll√§, poista roskapostittaja","ip_address_missing":"-","hidden_email_address":"(piilotettu)","submit_tooltip":"Toimita lippu","take_action_tooltip":"Saavuta liputusraja v√§litt√∂m√§sti; ei tarvetta odottaa muiden k√§ytt√§jien liputuksia.","cant":"Et valitettavasti voi liputtaa t√§t√§ viesti√§ t√§ll√§ hetkell√§.","notify_staff":"Ilmoita henkil√∂kunnalle yksityisesti","formatted_name":{"off_topic":"Se eksyy aiheesta","inappropriate":"Se on sopimaton","spam":"Se on roskapostia"},"custom_placeholder_notify_user":"Esit√§ asiasi ymm√§rrett√§v√§sti, ole rakentava ja kohtelias.","custom_placeholder_notify_moderators":"Kerro ymm√§rrett√§v√§sti ja selv√§sti, mist√§ olet huolestunut ja lis√§√§ viestiin oleelliset esimerkit ja linkit, jos mahdollista.","custom_message":{"at_least":{"one":"sy√∂t√§ v√§hint√§√§n %{count} merkki","other":"sy√∂t√§ v√§hint√§√§n %{count} merkki√§"},"more":{"one":"Viel√§ %{count}...","other":"Viel√§ %{count}..."},"left":{"one":"%{count} j√§ljell√§","other":"%{count} j√§ljell√§"}}},"flagging_topic":{"title":"Kiitos avustasi yhteis√∂n hyv√§ksi!","action":"Liputa ketju","notify_action":"Viesti"},"topic_map":{"title":"Ketjun tiivistelm√§","participants_title":"Useimmin kirjoittaneet","links_title":"Suositut linkit","links_shown":"n√§yt√§ enemm√§n linkkej√§...","clicks":{"one":"%{count} klikkaus","other":"%{count} klikkausta"}},"post_links":{"about":"laajenna lis√§√§ linkkej√§ t√§h√§n viestiin","title":{"one":"%{count} lis√§√§","other":"%{count} lis√§√§"}},"topic_statuses":{"warning":{"help":"T√§m√§ on virallinen varoitus."},"bookmarked":{"help":"Olet lis√§nnyt ketjun kirjanmerkkeihisi"},"locked":{"help":"T√§m√§ ketju on suljettu; siihen ei voi en√§√§ vastata."},"archived":{"help":"T√§m√§ ketju on arkistoitu; se on j√§√§dytetty eik√§ sit√§ voi muuttaa"},"locked_and_archived":{"help":"T√§m√§ ketju on suljettu ja arkistoitu, sihen ei voi en√§√§ vastata eik√§ sit√§ muuttaa"},"unpinned":{"title":"Kiinnitys poistettu","help":"Ketjun kiinnitys on poistettu sinulta; se n√§ytet√§√§n tavallisessa j√§rjestyksess√§."},"pinned_globally":{"title":"Kiinnitetty koko palstalle","help":"T√§m√§ ketju on kiinnitetty koko palstalle; se n√§ytet√§√§n tuoreimpien ja oman alueensa ylimp√§n√§"},"pinned":{"title":"Kiinnitetty","help":"T√§m√§ ketju on kiinnitetty sinulle; se n√§ytet√§√§n alueensa ensimm√§isen√§"},"unlisted":{"help":"T√§m√§ ketju on poistettu listauksista; sit√§ ei n√§ytet√§ ketjulistauksissa vaan siihen p√§√§see vain suoran linkin kautta"},"personal_message":{"title":"T√§m√§ ketju on yksityiskeskustelu","help":"T√§m√§ ketju on yksityiskeskustelu"}},"posts":"Viestej√§","original_post":"Aloitusviesti","views":"Katseluita","views_lowercase":{"one":"katselu","other":"katselut"},"replies":"Vastauksia","views_long":{"one":"ketjua on katseltu yhden kerran","other":"ketjua on katseltu %{number} kertaa"},"activity":"Toiminta","likes":"Tykk√§ykset","likes_lowercase":{"one":"tykk√§ys","other":"tykk√§ykset"},"users":"K√§ytt√§j√§t","users_lowercase":{"one":"k√§ytt√§j√§","other":"k√§ytt√§j√§t"},"category_title":"Alue","history":"Historia","changed_by":"k√§ytt√§j√§lt√§ %{author}","raw_email":{"title":"Saapuva s√§hk√∂posti","not_available":"Ei k√§ytett√§viss√§!"},"categories_list":"Lista alueista","filters":{"with_topics":"%{filter} ketjut","with_category":"%{filter} %{category} ketjut","latest":{"title":"Tuoreimmat","title_with_count":{"one":"Tuoreimmat (%{count})","other":"Tuoreimmat (%{count})"},"help":"ketjut, joissa on viimeaikaisia viestej√§"},"read":{"title":"Luetut","help":"lukemasi ketjut, lukemisj√§rjestyksess√§"},"categories":{"title":"Keskustelualueet","title_in":"Alue - %{categoryName}","help":"kaikki ketjut alueen mukaan j√§rjestettyn√§"},"unread":{"title":"Lukematta","title_with_count":{"one":"Lukematta (%{count})","other":"Lukematta (%{count})"},"help":"ketjut, joita seuraat tai tarkkailet t√§ll√§ hetkell√§ ja joissa on lukemattomia viestej√§","lower_title_with_count":{"one":"%{count} lukematta","other":"%{count} lukematta"}},"new":{"lower_title_with_count":{"one":"%{count} uusi","other":"%{count} uutta"},"lower_title":"uusi","title":"Uudet","title_with_count":{"one":"Uudet (%{count})","other":"Uudet (%{count})"},"help":"viime p√§ivin√§ aloitetut ketjut"},"posted":{"title":"Viestini","help":"ketjut, joihin olet kirjoittanut"},"bookmarks":{"title":"Kirjanmerkit","help":"ketjut, jotka olet merkinnyt kirjanmerkill√§"},"category":{"title":"%{categoryName}","title_with_count":{"one":"%{categoryName} (%{count})","other":"%{categoryName} (%{count})"},"help":"Tuoreimmat alueella %{categoryName}"},"top":{"title":"Kuumat","help":"Aktiivisimmat ketjut viimeisen vuoden, kuukauden ja p√§iv√§n ajalta","all":{"title":"Kaikkina aikoina"},"yearly":{"title":"Vuosittain"},"quarterly":{"title":"Vuosinelj√§nnett√§in"},"monthly":{"title":"Kuukausittain"},"weekly":{"title":"Viikoittain"},"daily":{"title":"P√§ivitt√§in"},"all_time":"Kaikkina aikoina","this_year":"Vuosi","this_quarter":"Vuosinelj√§nnes","this_month":"Kuukausi","this_week":"Viikko","today":"T√§n√§√§n","other_periods":"katso kuumat:"}},"browser_update":"Valitettavasti \u003ca href=\"https://www.discourse.org/faq/#browser\"\u003eselaimesi on liian vanha eik√§ siksi toimi t√§ll√§ sivustolla\u003c/a\u003e. \u003ca href=\"https://browsehappy.com\"\u003eP√§ivit√§ selaimesi\u003c/a\u003e niin voit katsella nykyaikaisia sis√§lt√∂j√§, kirjautua sis√§√§n ja vastata.","permission_types":{"full":"Luoda / Vastata / N√§hd√§","create_post":"Vastata / N√§hd√§","readonly":"N√§hd√§"},"lightbox":{"download":"lataa","previous":"Edellinen (vasen nuolin√§pp√§in)","next":"Seuraava (oikea nuolin√§pp√§in)","counter":"%curr% / %total%","close":"Sulje (Esc)","content_load_error":"\u003ca href=\"%url%\"\u003eSis√§ll√∂n\u003c/a\u003e lataaminen ei onnistunut.","image_load_error":"\u003ca href=\"%url%\"\u003eKuvan\u003c/a\u003e lataaminen ei onnistunut."},"keyboard_shortcuts_help":{"shortcut_key_delimiter_comma":", ","shortcut_key_delimiter_plus":"+","shortcut_delimiter_or":"%{shortcut1} tai %{shortcut2}","shortcut_delimiter_slash":"%{shortcut1}/%{shortcut2}","shortcut_delimiter_space":"%{shortcut1} %{shortcut2}","title":"N√§pp√§inoikotiet","jump_to":{"title":"Siirry","home":"%{shortcut} Aloitussivulle","latest":"%{shortcut} Tuoreimmat","new":"%{shortcut} Uudet","unread":"%{shortcut} Lukemattomat","categories":"%{shortcut} Alueet","top":"%{shortcut} Kuumat","bookmarks":"%{shortcut} Kirjanmerkit","profile":"%{shortcut} K√§ytt√§j√§profiili","messages":"%{shortcut} Viestit","drafts":"%{shortcut} Luonnokset","next":"%{shortcut} Seuraava ketju","previous":"%{shortcut} Edellinen ketju"},"navigation":{"title":"Navigointi","jump":"%{shortcut} Siirry viestiin #","back":"%{shortcut} Takaisin","up_down":"%{shortcut} Siirr√§ valintaa \u0026uarr; \u0026darr;","open":"%{shortcut} Avaa valittu ketju","next_prev":"%{shortcut} Seuraava/edellinen valinta","go_to_unread_post":"%{shortcut} Mene ensimm√§iseen lukemattomaan viestiin"},"application":{"title":"Ohjelma","create":"%{shortcut} Aloita uusi ketju","notifications":"%{shortcut} Avaa ilmoitukset","hamburger_menu":"%{shortcut} Avaa hampurilaisvalikko","user_profile_menu":"%{shortcut} Avaa k√§ytt√§j√§valikko","show_incoming_updated_topics":"%{shortcut} N√§yt√§ p√§ivttyneet ketjut","search":"%{shortcut} Haku","help":"%{shortcut} N√§yt√§ n√§pp√§imist√∂oikotiet","dismiss_new_posts":"%{shortcut} Unohda Uudet/Viestit","dismiss_topics":"%{shortcut} Unohda ketjut","log_out":"%{shortcut} Kirjaudu ulos"},"composing":{"title":"Kirjoittaminen","return":"%{shortcut} Palaa viestikentt√§√§n","fullscreen":"%{shortcut} Koko ruudun kirjoitustila"},"bookmarks":{"title":"Kirjanmerkit","enter":"%{shortcut} Tallenna ja sulje","later_today":"%{shortcut} My√∂hemmin t√§n√§√§n","later_this_week":"%{shortcut} My√∂hemmin t√§ll√§ viikolla ","tomorrow":"%{shortcut} Huomenna","next_week":"%{shortcut} Ensi viikolla","next_month":"%{shortcut} Ensi kuussa","next_business_week":"%{shortcut} Ensi viikon alussa","next_business_day":"%{shortcut} Seuraavana arkip√§iv√§n√§","custom":"%{shortcut} Valitse p√§iv√§m√§√§r√§ ja kellonaika","none":"%{shortcut} Ei muistutusta","delete":"%{shortcut} Poista kirjanmerkk"},"actions":{"title":"Toiminnot","bookmark_topic":"%{shortcut} Aseta kirjanmerkkeihin/poista","pin_unpin_topic":"%{shortcut} Kiinnit√§/Poista ketjun kiinnitys","share_topic":"%{shortcut} Jaa ketju","share_post":"%{shortcut} Jaa viesti","reply_as_new_topic":"%{shortcut} Vastaa aihetta sivuavassa ketjussa","reply_topic":"%{shortcut} Vastaa ketjuun","reply_post":"%{shortcut} Vastaa viestiin","quote_post":"%{shortcut} Lainaa viesti","like":"%{shortcut} Tykk√§√§ viestist√§","flag":"%{shortcut} Liputa viesti","bookmark":"%{shortcut} Lis√§√§ viesti kirjanmerkkeihin","edit":"%{shortcut} Muokkaa viesti√§","delete":"%{shortcut} Poista viesti","mark_muted":"%{shortcut} Vaimenna ketju","mark_regular":"%{shortcut} Tavallinen (oletus) ketju","mark_tracking":"%{shortcut} Seuraa ketjua","mark_watching":"%{shortcut} Tarkkaile ketjua","print":"%{shortcut} Tulosta ketju","defer":"%{shortcut} Lykk√§√§ ketjua","topic_admin_actions":"%{shortcut} Avaa ketjun yll√§pitoty√∂kalut"},"search_menu":{"title":"Hakuvalikko","prev_next":"%{shortcut} Siirry valinnassa yl√∂s ja alas","insert_url":"%{shortcut} Lis√§√§ valittu avoinna olevaan viestieditoriin"}},"badges":{"earned_n_times":{"one":"Ansaitsi t√§m√§n ansiomerkin yhden kerran","other":"Ansaitsi t√§m√§n ansiomerkin %{count} kertaa"},"granted_on":"My√∂nnetty %{date}","others_count":"Muita, joilla on t√§m√§ ansiomerkki (%{count})","title":"Ansiomerkit","allow_title":"Voit k√§ytt√§√§ t√§t√§ ansiomerkki√§ tittelin√§","multiple_grant":"Voit ansaita t√§m√§n useasti","badge_count":{"one":"%{count} ansiomerkki","other":"%{count} ansiomerkki√§"},"more_badges":{"one":"+%{count} Lis√§√§","other":"+%{count} Lis√§√§"},"granted":{"one":"%{count} my√∂nnetty","other":"%{count} my√∂nnetty√§"},"select_badge_for_title":"Valitse tittelisi ansiomerkeist√§","none":"(ei mit√§√§n)","successfully_granted":"Ansiomerkin %{badge} my√∂nt√§minen k√§ytt√§j√§lle %{username} onnistui","badge_grouping":{"getting_started":{"name":"Ensiaskeleet"},"community":{"name":"Yhteis√∂"},"trust_level":{"name":"Luottamustaso"},"other":{"name":"Muut"},"posting":{"name":"Kirjoittaminen"}}},"tagging":{"all_tags":"Kaikki tunnisteet","other_tags":"Muut tunnisteet","selector_all_tags":"kaikki tunnisteet","selector_no_tags":"ei tunnisteita","changed":"muutetut tunnisteet","tags":"Tunnisteet","choose_for_topic":"ei-pakolliset tunnisteet","info":"Tietoa","default_info":"T√§t√§ tunnistetta ei ole rajattu millek√§√§n alueelle eik√§ sill√§ ole synonyymej√§.","category_restricted":"T√§m√§ tunniste on rajoitettu alueille, joille sinulla ei ole p√§√§syoikeutta.","synonyms":"Synonyymit","synonyms_description":"Kun n√§it√§ tunnisteita k√§ytet√§√§n, ne korvataan p√§√§synonyymill√§ \u003cb\u003e%{base_tag_name}\u003c/b\u003e.","tag_groups_info":{"one":"Tunniste kuuluu ryhm√§√§n \"%{tag_groups}\".","other":"Tunniste kuuluu n√§ihin ryhmiin: %{tag_groups}"},"category_restrictions":{"one":"Sit√§ voi k√§ytt√§√§ vain t√§ll√§ alueella:","other":"Sit√§ voi k√§ytt√§√§ vain n√§ill√§ alueilla:"},"edit_synonyms":"Hallinnoi synonyymej√§","add_synonyms_label":"Lis√§√§ synonyymej√§:","add_synonyms":"Lis√§√§","add_synonyms_explanation":{"one":"Kaikkialla miss√§ t√§t√§ tunnistetta k√§ytet√§√§n, vaihdetaan tunnisteeksi \u003cb\u003e%{tag_name}\u003c/b\u003e. Haluatko varmasti tehd√§ t√§m√§n vaihdoksen?","other":"Kaikkialla miss√§ n√§it√§ tunnisteita nykyisin k√§ytet√§√§n, vaihdetaan tunnisteeksi \u003cb\u003e%{tag_name}\u003c/b\u003e. Haluatko varmasti tehd√§ t√§m√§n vaihdoksen?"},"add_synonyms_failed":"N√§it√§ tunnisteita ei voitu lis√§t√§ synonyymeiksi: \u003cb\u003e%{tag_names}\u003c/b\u003e. Varmistu, ettei niill√§ itsell√§√§n ole synonyymej√§ ja ettei ne ole synonyymej√§ muulle tunnisteelle.","remove_synonym":"Poista synonyymi","delete_synonym_confirm":"Haluatko varmasti poistaa synonyymin \"%{tag_name}\"?","delete_tag":"Poista tunniste","delete_confirm":{"one":"Haluatko varmasti poistaa tunnisteen, mik√§ poistaa sen my√∂s yhdelt√§ ketjulta, jolla tunniste on?","other":"Haluatko varmasti poistaa tunnisteen, mik√§ poistaa sen my√∂s %{count} ketjulta, joilla tunniste on?"},"delete_confirm_no_topics":"Haluatko varmasti poistaa tunnisteen?","delete_confirm_synonyms":{"one":"Sen synonyymi poistetaan my√∂s.","other":"Sen %{count} muuta synonyymi√§ poistetaan my√∂s."},"rename_tag":"Uudelleennime√§ tunniste","rename_instructions":"Valitse uusi nimi t√§lle tunnisteelle:","sort_by":"J√§rjest√§:","sort_by_count":"lukum√§√§r√§","sort_by_name":"nimi","manage_groups":"Hallinnoi tunnisteryhmi√§","manage_groups_description":"M√§√§rittele ryhmi√§ tunnisteiden j√§rjest√§miseksi","upload":"Lataa tunnisteita","upload_description":"Luo iso joukko tunnisteita kerralla l√§hett√§m√§ll√§ CSV-tiedosto.","upload_instructions":"Yksi per rivi. Mukana voi olla tunnisteryhm√§, t√§ll√∂in muoto on \"tunnisteen_nimi,tunnisteryhm√§\".","upload_successful":"Tunnisteiden lis√§ys onnistui","delete_unused_confirmation":{"one":"%{count} tunniste poistetaan: %{tags}","other":"%{count} tunnistetta poistetaan: %{tags}"},"delete_unused_confirmation_more_tags":{"one":"%{tags} ja %{count} muu","other":"%{tags} ja %{count} muuta"},"delete_no_unused_tags":"K√§ytt√§m√§tt√∂mi√§ tunnisteita ei ole.","delete_unused":"Poista k√§ytt√§m√§tt√∂m√§t tunnisteet","delete_unused_description":"Poista kaikki tunnisteet jotka eiv√§t ole jonkun ketjun tai yksityiskeskustelun k√§yt√∂ss√§","cancel_delete_unused":"Peru","filters":{"without_category":"%{filter} %{tag} ketjut","with_category":"%{filter} %{tag} ketjut alueella %{category}","untagged_without_category":"%{filter} ketjut joilla ei tunnisteita","untagged_with_category":"%{filter} ketjut joilla ei tunnisteita alueella %{category}"},"notifications":{"watching":{"title":"Tarkkaile","description":"Ketjut joilla on t√§m√§ tunniste asetetaan automaattisesti tarkkailuun. Saat ilmoituksen kaikista uusista viesteist√§ ja ketjuista ja uusien viestien lukum√§√§r√§ n√§ytet√§√§n ketjun otsikon vieress√§.\n¬†"},"watching_first_post":{"title":"Tarkkaile uusia ketjuja","description":"Saat ilmoituksia uusista ketjuista, joilla on t√§m√§ tunniste, muttet ketjuihin tulevista vastauksista."},"tracking":{"title":"Seuraa","description":"Seuraat automaattisesti ketjuja joilla on t√§m√§ tunniste. Uusien ja lukemattomien viestien lukum√§√§r√§ n√§ytet√§√§n ketjun yhteydess√§."},"regular":{"title":"Tavallinen","description":"Saat ilmoituksen jos joku mainitsee @nimesi tai vastaa viestiisi."},"muted":{"title":"Vaimennettu","description":"Et saa ilmoituksia ketjusta, jolla on t√§m√§ tunniste, eiv√§tk√§ ne n√§y lukemattomissa."}},"groups":{"title":"Tunnisteryhm√§t","about":"Lis√§√§ tunnisteita ryhmiin, jotta niit√§ on helpompi hallita","new":"Uusi ryhm√§","tags_label":"Tunnisteet t√§ss√§ ryhm√§ss√§","parent_tag_label":"Emotunniste:","parent_tag_description":"T√§m√§n ryhm√§n tunnisteita voi k√§ytt√§√§ vain, jos emotunniste on asetettu","one_per_topic_label":"Rajoita t√§st√§ ryhm√§st√§ yhteen tunnisteeseen per ketju","new_name":"Uusi ryhm√§ tunnisteita","name_placeholder":"Tunnisteryhm√§n nimi","save":"Tallenna","delete":"Poista","confirm_delete":"Oletko varma, ett√§ haluat poistaa t√§m√§n tunnisteryhm√§n?","everyone_can_use":"Kuka vain voi k√§ytt√§√§ tunnisteita","usable_only_by_groups":"Tunnisteet n√§kyv√§t kaikille, mutta vain n√§m√§ ryhm√§t voivat k√§ytt√§√§ niit√§","visible_only_to_groups":"Tunnisteet n√§kyv√§t vain n√§ille ryhmille"},"topics":{"none":{"unread":"Sinulla ei ole lukemattomia ketjuja.","new":"Sinulle uusia ketjuja ei ole.","read":"Et ole lukenut viel√§ yht√§√§n yht√§√§n ketjua.","posted":"Et ole kirjoittanut viel√§ yhteenk√§√§n ketjuun.","latest":"Tuoreimpia ketjuja ei ole.","bookmarks":"Et ole viel√§ merkinnyt kirjanmerkkej√§.","top":"Kuumia ketjuja ei ole."}}},"invite":{"custom_message":"Tee kutsusta persoonallisempi kirjoittamalla \u003ca href\u003eyksil√∂llinen viesti\u003c/a\u003e.","custom_message_placeholder":"Kirjoita henkil√∂kohtainen viestisi","custom_message_template_forum":"Hei, sinun pit√§isi liitty√§ t√§lle palstalle!","custom_message_template_topic":"Hei, ajattelin, ett√§ voisit tyk√§t√§ t√§st√§ ketjusta!"},"forced_anonymous":"Rajun kuormituksen vuoksi t√§m√§ n√§ytet√§√§n v√§liaikaisesti kaikille niin kuin uloskirjautunut k√§ytt√§j√§ n√§kee sen.","footer_nav":{"back":"Edellinen","share":"Jaa","dismiss":"Unohda"},"safe_mode":{"enabled":"Vikasietotila on nyt p√§√§ll√§, sulje selainikkuna lopettaaksesi"},"image_removed":"(kuva poistettu)","do_not_disturb":{"title":"√Ñl√§ h√§iritse...","label":"√Ñl√§ h√§iritse","remaining":"%{remaining} j√§ljell√§","options":{"half_hour":"30 minuuttiin","one_hour":"1 tuntiin","two_hours":"2 tuntiin","tomorrow":"ennen huomista","custom":"Mukautettu"}},"cakeday":{"title":"Merkkip√§iv√§t","today":"T√§n√§√§n","tomorrow":"Huomenna","upcoming":"Tulossa","all":"Kaikki"},"birthdays":{"title":"Syntym√§p√§iv√§t","month":{"title":"Syntym√§p√§iv√§t,","empty":"Kukaan ei viet√§ syntym√§p√§iv√§√§ns√§ t√§ss√§ kuussa."},"upcoming":{"title":"Tulevat syntym√§p√§iv√§t","empty":"Kukaan ei viet√§ syntym√§p√§iv√§√§ns√§ seuraavien 7 p√§iv√§n aikana."},"today":{"title":"Syntym√§p√§iv√§t t√§n√§√§n","empty":"Kukaan ei viet√§ syntym√§p√§iv√§√§ns√§ t√§n√§√§n."},"tomorrow":{"empty":"Kukaan ei viet√§ syntym√§p√§iv√§√§ns√§ huomenna."}},"anniversaries":{"title":"Vuosip√§iv√§t","month":{"title":"Vuosip√§iv√§t,","empty":"Kukaan ei viet√§ vuosip√§iv√§√§ns√§ t√§ss√§ kuussa."},"upcoming":{"title":"Tulevat vuosip√§iv√§t","empty":"Kukaan ei viet√§ vuosip√§iv√§√§ns√§ seuraavien 7 p√§iv√§n aikana."},"today":{"title":"Vuosip√§iv√§t t√§n√§√§n","empty":"Kukaan ei viet√§ vuosip√§iv√§√§ns√§ t√§n√§√§n."},"tomorrow":{"empty":"Kukaan ei viet√§ vuosip√§iv√§√§ns√§ huomenna"}},"details":{"title":"Piilota yksityiskohtia"},"discourse_local_dates":{"relative_dates":{"today":"T√§n√§√§n %{time}","tomorrow":"Huomenna %{time}","yesterday":"Eilen %{time}","countdown":{"passed":"p√§iv√§m√§√§r√§ on mennyt"}},"title":"Lis√§√§ p√§iv√§m√§√§r√§ / aika","create":{"form":{"insert":"Lis√§√§","advanced_mode":"Lis√§asetukset","simple_mode":"Piilota lis√§asetukset","timezones_title":"N√§ytett√§v√§t aikavy√∂hykkeet","timezones_description":"Aikavy√∂hykkeit√§ k√§ytet√§√§n esikatselussa sek√§ varana virhetilanteissa.","recurring_title":"Toistuvuus","recurring_description":"M√§√§rittele tapahtuman toistuvuus. Voit my√∂s manuaalisesti muokata toistuvuusparametri√§, jonka lomake viestiin luo. K√§yt√§ n√§it√§ avainsanoja: years, quarters, months, weeks, days, hours, minutes, seconds, milliseconds.","recurring_none":"Ei toistuvuutta","invalid_date":"P√§iv√§ys ei kelpaa. Tarkista p√§iv√§m√§√§r√§ ja aika.","date_title":"P√§iv√§m√§√§r√§","time_title":"Aika","format_title":"P√§iv√§ysformaatti","timezone":"Aikavy√∂hyke","until":"Asti","recurring":{"every_day":"Joka p√§iv√§","every_week":"Joka viikko","every_two_weeks":"Joka toinen viikko","every_month":"Joka kuukausi","every_two_months":"Joka toinen kuukausi","every_three_months":"Joka kolmas kuukausi","every_six_months":"Puolen vuoden v√§lein","every_year":"Kerran vuodessa"}}}},"discourse_narrative_bot":{"welcome_post_type":{"new_user_track":"Aloita alkeiskurssi kaikkien uusien k√§ytt√§jien kanssa","welcome_message":"L√§het√§ kaikille uusille k√§ytt√§jille tervetuloviesti, jossa on pikaopas palstan k√§ytt√∂√∂n"}},"presence":{"replying_to_topic":{"one":"kirjoittaa vastausta","other":"kirjoittavat vastausta"}},"poll":{"voters":{"one":"√§√§nest√§j√§","other":"√§√§nest√§j√§√§"},"total_votes":{"one":"√§√§ni","other":"√§√§nt√§"},"average_rating":"Keskiarvo: \u003cstrong\u003e%{average}\u003c/strong\u003e","public":{"title":"√Ñ√§net ovat \u003cstrong\u003ejulkisia\u003c/strong\u003e."},"results":{"groups":{"title":"T√§ytyy olla ryhmien %{groups} j√§sen, jotta voi √§√§nest√§√§ t√§ss√§ √§√§nestyksess√§."},"vote":{"title":"N√§et √§√§net, kun \u003cstrong\u003eolet √§√§nest√§nyt\u003c/strong\u003e."},"closed":{"title":"Tulokset n√§ytet√§√§n √§√§nestyksen \u003cstrong\u003esulkeuduttua\u003c/strong\u003e."},"staff":{"title":"Tulokset n√§ytet√§√§n vain \u003cstrong\u003ehenkil√∂kunnan\u003c/strong\u003e j√§senille. "}},"multiple":{"help":{"at_least_min_options":{"one":"Valitse ainakin \u003cstrong\u003e%{count}\u003c/strong\u003e vaihtoehto.","other":"Valitse ainakin \u003cstrong\u003e%{count}\u003c/strong\u003e vaihtoehtoa."},"up_to_max_options":{"one":"Valitse enint√§√§n \u003cstrong\u003e%{count}\u003c/strong\u003e vaihtoehtoa.","other":"Valitse enint√§√§n \u003cstrong\u003e%{count}\u003c/strong\u003e vaihtoehtoa."},"x_options":{"one":"Valitse \u003cstrong\u003e%{count}\u003c/strong\u003e vaihtoehto.","other":"Valitse \u003cstrong\u003e%{count}\u003c/strong\u003e vaihtoehtoa."},"between_min_and_max_options":"Valitse v√§hint√§√§n \u003cstrong\u003e%{min}\u003c/strong\u003e ja enint√§√§n \u003cstrong\u003e%{max}\u003c/strong\u003e vaihtoehtoa."}},"cast-votes":{"title":"Antakaa √§√§nenne","label":"√Ñ√§nest√§ nyt!"},"show-results":{"title":"N√§yt√§ √§√§nestystulos","label":"N√§yt√§ tulos"},"hide-results":{"title":"Palaa √§√§nestysvalintaasi","label":"N√§yt√§ √§√§nestys"},"group-results":{"title":"Lajittele √§√§net k√§ytt√§j√§kent√§n perusteella","label":"N√§yt√§ erittely"},"export-results":{"title":"Vie √§√§nestystulos","label":"Vie"},"open":{"title":"Avaa √§√§nestys","label":"Avaa","confirm":"Avataanko √§√§nestys?"},"close":{"title":"Sulje √§√§nestys","label":"Sulje","confirm":"Suljetaanko √§√§nestys?"},"automatic_close":{"closes_in":"Sulkeutuu \u003cstrong\u003e%{timeLeft}\u003c/strong\u003e kuluttua","age":"Sulkeutui \u003cstrong\u003e%{age}\u003c/strong\u003e"},"breakdown":{"title":"√Ñ√§nestystulokset","votes":"%{count} √§√§nt√§","breakdown":"Erittely","percentage":"Prosenttiosuus","count":"M√§√§r√§"},"error_while_toggling_status":"Pahoittelut, √§√§nestyksen tilaa muutettaessa tapahtui virhe.","error_while_casting_votes":"Pahoittelut, √§√§nt√§ annettaessa tapahtui virhe.","error_while_fetching_voters":"Pahoittelut, √§√§nest√§neiden n√§ytt√§misess√§ tapahtui virhe.","error_while_exporting_results":"Pahoittelut, √§√§nestystuloksen vienti ep√§onnistui.","ui_builder":{"title":"Luo √§√§nestys","insert":"Lis√§√§ √§√§nestys","help":{"options_count":"Sy√∂t√§ ainakin 1 vaihtoehto","invalid_values":"V√§himm√§isarvon t√§ytyy olla enimm√§isarvoa pienempi.","min_step_value":"Askelv√§lin on oltava v√§hint√§√§n 1"},"poll_type":{"label":"Tyyppi","regular":"Valitaan yksi","multiple":"Valitaan useita","number":"Numeroarviointi"},"poll_result":{"always":"N√§kyv√§t aina","staff":"Vain henkil√∂kunta"},"poll_chart_type":{"bar":"Pylv√§s","pie":"Ympyr√§"},"poll_config":{"max":"Enint.","min":"V√§h.","step":"Askelv√§li"},"poll_public":{"label":"N√§yt√§ √§√§nest√§neet"},"poll_title":{"label":"Otsikko (ei-pakollinen)"},"automatic_close":{"label":"Sulje √§√§nestys ajastetusti"}}}}},"en":{"js":{"software_update_prompt":{"message":"We've updated this site, \u003cspan\u003eplease refresh\u003c/span\u003e, or you may experience unexpected behavior.","dismiss":"Dismiss"},"s3":{"regions":{"ap_east_1":"Asia Pacific (Hong Kong)"}},"clear_input":"Clear input","x_more":{"one":"%{count} More","other":"%{count} More"},"about":{"stat":{"last_day":"Last 24 hours","last_7_days":"Last 7 days","last_30_days":"Last 30 days"}},"drafts":{"abandon":{"confirm":"You have a draft in progress for this topic. What would you like to do with it?","yes_value":"Discard","no_value":"Resume editing"}},"review":{"user_percentage":{"summary":{"one":"%{agreed}, %{disagreed}, %{ignored} (of last flag)","other":"%{agreed}, %{disagreed}, %{ignored} (of last %{count} flags)"}},"filters":{"priority":{"any":"(any)"}},"types":{"reviewable_post":{"title":"Post"}}},"relative_time_picker":{"minutes":{"one":"minute","other":"minutes"},"hours":{"one":"hour","other":"hours"},"days":{"one":"day","other":"days"},"months":{"one":"month","other":"months"},"years":{"one":"year","other":"years"},"relative":"Relative"},"time_shortcut":{"later_today":"Later today","next_business_day":"Next business day","tomorrow":"Tomorrow","next_week":"Next week","post_local_date":"Date in post","later_this_week":"Later this week","start_of_next_business_week":"Monday","start_of_next_business_week_alt":"Next Monday","next_month":"Next month","custom":"Custom date and time","relative":"Relative time","none":"None needed","last_custom":"Last custom datetime"},"groups":{"manage":{"email":{"status":"Synchronized %{old_emails} / %{total_emails} emails via IMAP.","credentials":{"title":"Credentials","smtp_server":"SMTP Server","smtp_port":"SMTP Port","smtp_ssl":"Use SSL for SMTP","imap_server":"IMAP Server","imap_port":"IMAP Port","imap_ssl":"Use SSL for IMAP"},"settings":{"title":"Settings","allow_unknown_sender_topic_replies":"Allow unknown sender topic replies.","allow_unknown_sender_topic_replies_hint":"Allows unknown senders to reply to group topics. If this is not enabled, replies from email addresses not already included on the IMAP email thread or invited to the topic will create a new topic."},"mailboxes":{"synchronized":"Synchronized Mailbox","none_found":"No mailboxes were found in this email account.","disabled":"disabled"}},"tags":{"title":"Tags","long_title":"Tags default notifications","description":"When users are added to this group, their tag notification settings will be set to these defaults. Afterwards, they can change them.","watched_tags_instructions":"Automatically watch all topics with these tags. Group members will be notified of all new posts and topics, and a count of new posts will also appear next to the topic.","tracked_tags_instructions":"Automatically track all topics with these tags. A count of new posts will appear next to the topic.","watching_first_post_tags_instructions":"Users will be notified of the first post in each new topic with these tags.","regular_tags_instructions":"If these tags are muted, they will be unmuted for group members. Users will be notified if they are mentioned or someone replies to them.","muted_tags_instructions":"Users will not be notified of anything about new topics with these tags, and they will not appear in latest."}},"permissions":{"title":"Permissions","none":"There are no categories associated with this group.","description":"Members of this group can access these categories"},"members":{"make_primary":"Make Primary","make_primary_description":"Make this the primary group for \u003cb\u003e%{username}\u003c/b\u003e","remove_primary":"Remove as Primary","remove_primary_description":"Remove this as the primary group for \u003cb\u003e%{username}\u003c/b\u003e","remove_members":"Remove Members","remove_members_description":"Remove selected users from this group","make_owners":"Make Owners","make_owners_description":"Make selected users owners of this group","remove_owners":"Remove Owners","remove_owners_description":"Remove selected users as owners of this group","make_all_primary":"Make All Primary","make_all_primary_description":"Make this the primary group for all selected users","remove_all_primary":"Remove as Primary","remove_all_primary_description":"Remove this group as primary","primary":"Primary"}},"categories":{"topic_stat":{"one":"%{number} / %{unit}","other":"%{number} / %{unit}"},"topic_stat_unit":{"week":"week","month":"month"},"topic_stat_all_time":{"one":"%{number} total","other":"%{number} total"}},"user":{"user_notifications":{"ignore_duration_title":"Ignore User"},"notification_schedule":{"title":"Notification Schedule","label":"Enable custom notification schedule","tip":"Outside of these hours you will be put in 'do not disturb' automatically.","midnight":"Midnight","none":"None","monday":"Monday","tuesday":"Tuesday","wednesday":"Wednesday","thursday":"Thursday","friday":"Friday","saturday":"Saturday","sunday":"Sunday","to":"to"},"read":"Read","read_help":"Recently read topics","desktop_notifications":{"each_browser_note":"Note: You have to change this setting on every browser you use. All notifications will be disabled when in \"do not disturb\", regardless of this setting."},"no_messages_title":"You don‚Äôt have any messages","no_messages_body":"Need to have a direct personal conversation with someone, outside the normal conversational flow? Message them by selecting their avatar and using the %{icon} message button.\u003cbr\u003e\u003cbr\u003e If you need help, you can \u003ca href='%{aboutUrl}'\u003emessage a staff member\u003c/a\u003e.\n","no_bookmarks_title":"You haven‚Äôt bookmarked anything yet","no_bookmarks_body":"Start bookmarking posts with the %{icon} button and they will be listed here for easy reference. You can schedule a reminder too!\n","no_notifications_title":"You don‚Äôt have any notifications yet","no_notifications_body":"You will be notified in this panel about activity relevant to you, including replies to topics you are watching and when someone \u003cb\u003e@mentions\u003c/b\u003e you or responds to you. Notifications will be sent to your email when you haven‚Äôt logged in for a while. \u003cbr\u003e\u003cbr\u003e You are in control! Look for the %{icon} button throughout the site to decide which specific topics, categories and tags you want to watch, track or mute. More options available in your \u003ca href='%{preferencesUrl}'\u003euser preferences\u003c/a\u003e.\n","color_scheme_default_on_all_devices":"Set default color scheme(s) on all my devices","color_scheme":"Color Scheme","color_schemes":{"default_description":"Theme default","disable_dark_scheme":"Same as regular","dark_instructions":"You can preview the dark mode color scheme by toggling your device's dark mode.","undo":"Reset","regular":"Regular","dark":"Dark mode","default_dark_scheme":"(site default)"},"dark_mode":"Dark Mode","dark_mode_enable":"Enable automatic dark mode color scheme","github_profile":"GitHub","regular_categories":"Regular","regular_categories_instructions":"You will see these categories in the ‚ÄúLatest‚Äù and ‚ÄúTop‚Äù topic lists.","allowed_pm_users":"Allowed","allowed_pm_users_instructions":"Only allow PMs from these users.","preferences_nav":{"security":"Security"},"change_email":{"success_via_admin":"We've sent an email to that address. The user will need to follow the confirmation instructions in the email."},"change_avatar":{"gravatar":"\u003ca href='//%{gravatarBaseUrl}%{gravatarLoginUrl}' target='_blank'\u003e%{gravatarName}\u003c/a\u003e, based on"},"email":{"auth_override_instructions":"Email can be updated from authentication provider.","admin_note":"Note: An admin user changing another non-admin user's email indicates the user has lost access to their original email account, so a reset password email will be sent to their new address. The user's email will not change until they complete the reset password process.","invite_auth_email_invalid":"Your invitation email does not match the email authenticated by %{provider}"},"username":{"edit":"Edit username"},"auth_tokens":{"device_location":"\u003cspan class=\"auth-token-device\"\u003e%{device}\u003c/span\u003e \u0026ndash; \u003cspan title=\"IP: %{ip}\"\u003e%{location}\u003c/span\u003e","browser_active":"%{browser} | \u003cspan class=\"active\"\u003eactive now\u003c/span\u003e","browser_last_seen":"%{browser} | %{date}"},"text_size":{"smallest":"Smallest"},"invited":{"expired_tab":"Expired","expired_tab_with_count":"Expired (%{count})","invited_via":"Invitation","invited_via_link":"link %{key} (%{count} / %{max} redeemed)","groups":"Groups","topic":"Topic","sent":"Created/Last Sent","expires_at":"Expires","edit":"Edit","remove":"Remove","copy_link":"Get Link","reinvite":"Resend Email","removed":"Removed","remove_all":"Remove Expired Invites","removed_all":"All Expired Invites removed!","remove_all_confirm":"Are you sure you want to remove all expired invites?","reinvite_all":"Resend All Invites","reinvited_all":"All Invites Sent!","invite":{"new_title":"Create Invite","edit_title":"Edit Invite","instructions":"Share this link to instantly grant access to this site:","copy_link":"copy link","expires_in_time":"Expires in %{time}.","expired_at_time":"Expired at %{time}.","show_advanced":"Show Advanced Options","hide_advanced":"Hide Advanced Options","restrict_email":"Restrict the invite to one email address","max_redemptions_allowed":"Max number of uses:","add_to_groups":"Add to groups:","invite_to_topic":"Send to topic on first login:","expires_at":"Expire after:","custom_message":"Optional personal message:","send_invite_email":"Save and Send Email","save_invite":"Save Invite","invite_saved":"Invite saved.","invite_copied":"Invite link copied.","blank_email":"Invite link not copied. Email address is required."},"bulk_invite":{"instructions":"\u003cp\u003eInvite a list of users to get your community going quickly. Prepare a \u003ca href=\"https://en.wikipedia.org/wiki/Comma-separated_values\" target=\"_blank\"\u003eCSV file\u003c/a\u003e containing at least one row per email address of users you want to invite. The following comma separated information can be provided if you want to add people to groups or send them to a specific topic the first time they sign in.\u003c/p\u003e\n\u003cpre\u003ejohn@smith.com,first_group_name;second_group_name,topic_id\u003c/pre\u003e\n\u003cp\u003eEvery email address in your uploaded CSV file will be sent an invitation, and you will be able to manage it later.\u003c/p\u003e\n","progress":"Uploaded %{progress}%...","success":"File uploaded successfully. You will be notified via message when the process is complete."}},"avatar":{"name_and_description":"%{name} - %{description}","edit":"Edit Profile Picture"},"storage_token":{"title":"Storage server access key","instructions":"Secret key used for the authentication on storage.confais.org."}},"assets_changed_confirm":"This site just received a software upgrade. Get the latest version now?","summary":{"description":{"one":"There is \u003cb\u003e%{count}\u003c/b\u003e reply.","other":"There are \u003cb\u003e%{count}\u003c/b\u003e replies."}},"create_account":{"header_title":"Welcome!","subheader_title":"Let's create your account","title":"Create your account"},"email_login":{"login_link":"Skip the password; email me a login link"},"login":{"header_title":"Welcome back","subheader_title":"Log in to your account","title":"Log in","email_placeholder":"Email / Username"},"select_kit":{"filter_by":"Filter by: %{name}","select_to_filter":"Select a value to filter","components":{"tag_drop":{"filter_for_more":"Filter for more..."}}},"shared_drafts":{"notice":"This topic is only visible to those who can publish shared drafts."},"composer":{"error":{"title_too_short":{"one":"Title must be at least %{count} character","other":"Title must be at least %{count} characters"},"title_too_long":{"one":"Title can't be more than %{count} character","other":"Title can't be more than %{count} characters"},"post_length":{"one":"Post must be at least %{count} character","other":"Post must be at least %{count} characters"}},"show_preview":"show preview","hide_preview":"hide preview","blockquote_title":"Blockquote","slow_mode":{"error":"This topic is in slow mode. You already posted recently; you can post again in %{timeLeft}."},"ignore":"Ignore"},"search":{"search_button":"Search"},"view_all":"view all %{tab}","topics":{"bulk":{"move_messages_to_inbox":"Move to Inbox","change_notification_level":"Change Notification Level","remove_tags":"Remove All Tags","confirm_remove_tags":{"one":"All tags will be removed from this topic. Are you sure?","other":"All tags will be removed from \u003cb\u003e%{count}\u003c/b\u003e topics. Are you sure?"}},"none":{"educate":{"unread":"\u003cp\u003eYour unread topics appear here.\u003c/p\u003e\u003cp\u003eBy default, topics are considered unread and will show unread counts \u003cspan class=\"badge new-posts badge-notification\"\u003e1\u003c/span\u003e if you:\u003c/p\u003e\u003cul\u003e\u003cli\u003eCreated the topic\u003c/li\u003e\u003cli\u003eReplied to the topic\u003c/li\u003e\u003cli\u003eRead the topic for more than 4 minutes\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eOr if you have explicitly set the topic to Tracked or Watched via the üîî in each topic.\u003c/p\u003e\u003cp\u003eVisit your \u003ca href=\"%{userPrefsUrl}\"\u003epreferences\u003c/a\u003e to change this.\u003c/p\u003e"}}},"topic":{"slow_mode_update":{"enabled_until":"Enabled until:","durations":{"10_minutes":"10 Minutes","30_minutes":"30 Minutes","45_minutes":"45 Minutes","2_hours":"2 Hours","8_hours":"8 Hours","12_hours":"12 Hours","24_hours":"24 Hours"}},"slow_mode_notice":{"duration":"Please wait %{duration} between posts in this topic"},"topic_status_update":{"min_duration":"Duration must be greater than 0","max_duration":"Duration must be less than 20 years"},"auto_update_input":{"two_weeks":"Two weeks","two_months":"Two months","three_months":"Three months","four_months":"Four months","six_months":"Six months","one_year":"One year"},"auto_close":{"label":"Auto-close topic after:"},"auto_close_after_last_post":{"title":"Auto-Close Topic After Last Post"},"status_update_notice":{"auto_close_after_last_post":"This topic will close %{duration} after the last reply."},"auto_close_momentarily":{"one":"The last post in the topic is already %{count} hour old, so the topic will be closed momentarily.","other":"The last post in the topic is already %{count} hours old, so the topic will be closed momentarily."},"progress":{"jump_prompt_of":{"one":"of %{count} post","other":"of %{count} posts"}},"share":{"instructions":"Share a link to this topic:","copied":"Topic link copied.","notify_users":{"title":"Notify","instructions":"Notify the following users about this topic:","success":{"one":"Successfully notified %{username} about this topic.","other":"Successfully notified all users about this topic."}},"invite_users":"Invite"},"invite_reply":{"to_forum":"We'll send a brief email allowing your friend to immediately join by clicking a link.","discourse_connect_enabled":"Enter the username of the person you'd like to invite to this topic.","success_email":"We mailed out an invitation to \u003cb\u003e%{invitee}\u003c/b\u003e. We'll notify you when the invitation is redeemed. Check the invitations tab on your user page to keep track of your invites."}},"post":{"wiki_last_edited_on":"wiki last edited on %{dateTime}","last_edited_on":"post last edited on %{dateTime}","view_all_posts":"View all posts","cancel_composer":{"confirm":"What would you like to do with your post?","discard":"Discard","save_draft":"Save draft for later","keep_editing":"Keep editing"},"controls":{"delete_topic_confirm_modal":{"one":"This topic currently has over %{count} view and may be a popular search destination. Are you sure you want to delete this topic entirely, instead of editing it to improve it?","other":"This topic currently has over %{count} views and may be a popular search destination. Are you sure you want to delete this topic entirely, instead of editing it to improve it?"},"edit_timer":"edit timer"},"bookmarks":{"actions":{"pin_bookmark":{"name":"Pin bookmark","description":"Pin the bookmark. This will make it appear at the top of your bookmarks list."},"unpin_bookmark":{"name":"Unpin bookmark","description":"Unpin the bookmark. It will no longer appear at the top of your bookmarks list."}}}},"category":{"allow_unlimited_owner_edits_on_first_post":"Allow unlimited owner edits on first post","notifications":{"watching":{"description":"You will automatically watch all topics in this category. You will be notified of every new post in every topic, and a count of new replies will be shown."},"tracking":{"description":"You will automatically track all topics in this category. You will be notified if someone mentions your @name or replies to you, and a count of new replies will be shown."},"muted":{"description":"You will never be notified of anything about new topics in this category, and they will not appear in latest."}},"colors_disabled":"You can‚Äôt select colors because you have a category style of none.","topic_list_previews_settings_heading":"Topic List Previews","topic_list_tiles":"Apply tiles arrangement to selected lists in this category.","topic_list_thumbnail":"Show topic preview thumbnails in selected lists in this category.","topic_list_excerpt":"Show topic excerpts in selected lists in this category.","topic_list_action":"Show like and bookmark buttons in selected lists in this category.","topic_list_default_thumbnail":"Image URL for thumbnail shown if topic in this category has no preview thumbnail set.","topic_list_default_thumbnail_placeholder":"Default thumbnail URL","topic_list_thumbnail_width":"Width of thumbnails in this category (rebake your posts if you change this).","topic_list_thumbnail_height":"Height of thumbnails in this category (rebake your posts if you change this).","topic_list_thumbnail_width_placeholder":"px","topic_list_thumbnail_height_placeholder":"px","topic_list_featured_images":"Enable featured images in this category."},"flagging":{"flag_for_review":"Queue For Review"},"cannot_render_video":"This video cannot be rendered because your browser does not support the codec.","tagging":{"tag_list_joiner":", ","groups":{"cannot_save":"Cannot save tag group. Make sure that there is at least one tag present, tag group name is not empty, and a group is selected for tags permission."}},"invite":{"approval_not_required":"User will be auto-approved as soon as they accept this invite."},"forced_anonymous_login_required":"The site is under extreme load and cannot be loaded at this time, try again in a few minutes.","footer_nav":{"forward":"Forward"},"do_not_disturb":{"set_schedule":"Set a notification schedule"},"cakeday":{"none":" "},"discourse_local_dates":{"create":{"form":{"format_description":"Format used to display the date to the user. Use Z to show the offset and zz for the timezone name."}}},"presence":{"replying":{"one":"replying","other":"replying"},"editing":{"one":"editing","other":"editing"}},"tlp":{"user_prefs":{"title":"Topic List Previews User Preferences","prefer_low_res_thumbnail":"Prefer low res thumbnails in Topic Lists and Featured Images (can be overruled by admin)"}},"user_activity_portfolio":{"title":"Portfolio"},"thumbnail_selector":{"select_preview_button":"Select thumbnail","title":"Select the desired preview thumbnail","topic_title_prefix":"... for Topic:"},"poll":{"ui_builder":{"help":{"options_min_count":"Enter at least 1 option.","options_max_count":"Enter at most %{count} options.","invalid_min_value":"Minimum value must be at least 1.","invalid_max_value":"Maximum value must be at least 1, but less than or equal with the number of options."},"poll_result":{"label":"Show Results...","vote":"Only after voting","closed":"When the poll is closed"},"poll_groups":{"label":"Limit voting to these groups"},"poll_chart_type":{"label":"Result chart"},"poll_options":{"label":"Options (one per line)","add":"Add option"},"show_advanced":"Show Advanced Options","hide_advanced":"Hide Advanced Options"}},"styleguide":{"title":"Styleguide","welcome":"To get started, choose a section from the menu on the left.","categories":{"atoms":"Atoms","molecules":"Molecules","organisms":"Organisms"},"sections":{"typography":{"title":"Typography","example":"Welcome to Discourse","paragraph":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."},"date_time_inputs":{"title":"Date/Time inputs"},"font_scale":{"title":"Font System"},"colors":{"title":"Colors"},"icons":{"title":"Icons","full_list":"See the full list of Font Awesome Icons"},"input_fields":{"title":"Input Fields"},"buttons":{"title":"Buttons"},"dropdowns":{"title":"Dropdowns"},"categories":{"title":"Categories"},"bread_crumbs":{"title":"Bread Crumbs"},"navigation":{"title":"Navigation"},"navigation_bar":{"title":"Navigation Bar"},"navigation_stacked":{"title":"Navigation Stacked"},"categories_list":{"title":"Categories List"},"topic_link":{"title":"Topic Link"},"topic_list_item":{"title":"Topic List Item"},"topic_statuses":{"title":"Topic Statuses"},"topic_list":{"title":"Topic List"},"basic_topic_list":{"title":"Basic Topic List"},"footer_message":{"title":"Footer Message"},"signup_cta":{"title":"Signup CTA"},"topic_timer_info":{"title":"Topic Timers"},"topic_footer_buttons":{"title":"Topic Footer Buttons"},"topic_notifications":{"title":"Topic Notifications"},"post":{"title":"Post"},"topic_map":{"title":"Topic Map"},"site_header":{"title":"Site Header"},"suggested_topics":{"title":"Suggested Topics"},"post_menu":{"title":"Post Menu"},"modal":{"title":"Modal","header":"Modal Title","footer":"Modal Footer"},"user_about":{"title":"User About Box"},"header_icons":{"title":"Header Icons"},"spinners":{"title":"Spinners"}}}}}};
I18n.locale = 'fi';
I18n.pluralizationRules.fi = MessageFormat.locale.fi;
//! moment.js
//! version : 2.29.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

;(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, (function () { 'use strict';

    var hookCallback;

    function hooks() {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback(callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return (
            input instanceof Array ||
            Object.prototype.toString.call(input) === '[object Array]'
        );
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return (
            input != null &&
            Object.prototype.toString.call(input) === '[object Object]'
        );
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return Object.getOwnPropertyNames(obj).length === 0;
        } else {
            var k;
            for (k in obj) {
                if (hasOwnProp(obj, k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return (
            typeof input === 'number' ||
            Object.prototype.toString.call(input) === '[object Number]'
        );
    }

    function isDate(input) {
        return (
            input instanceof Date ||
            Object.prototype.toString.call(input) === '[object Date]'
        );
    }

    function map(arr, fn) {
        var res = [],
            i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty: false,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: false,
            invalidEra: null,
            invalidMonth: null,
            invalidFormat: false,
            userInvalidated: false,
            iso: false,
            parsedDateParts: [],
            era: null,
            meridiem: null,
            rfc2822: false,
            weekdayMismatch: false,
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this),
                len = t.length >>> 0,
                i;

            for (i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m),
                parsedParts = some.call(flags.parsedDateParts, function (i) {
                    return i != null;
                }),
                isNowValid =
                    !isNaN(m._d.getTime()) &&
                    flags.overflow < 0 &&
                    !flags.empty &&
                    !flags.invalidEra &&
                    !flags.invalidMonth &&
                    !flags.invalidWeekday &&
                    !flags.weekdayMismatch &&
                    !flags.nullInput &&
                    !flags.invalidFormat &&
                    !flags.userInvalidated &&
                    (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid =
                    isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            } else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid(flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        } else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = (hooks.momentProperties = []),
        updateInProgress = false;

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment(obj) {
        return (
            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)
        );
    }

    function warn(msg) {
        if (
            hooks.suppressDeprecationWarnings === false &&
            typeof console !== 'undefined' &&
            console.warn
        ) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [],
                    arg,
                    i,
                    key;
                for (i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (key in arguments[0]) {
                            if (hasOwnProp(arguments[0], key)) {
                                arg += key + ': ' + arguments[0][key] + ', ';
                            }
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(
                    msg +
                        '\nArguments: ' +
                        Array.prototype.slice.call(args).join('') +
                        '\n' +
                        new Error().stack
                );
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return (
            (typeof Function !== 'undefined' && input instanceof Function) ||
            Object.prototype.toString.call(input) === '[object Function]'
        );
    }

    function set(config) {
        var prop, i;
        for (i in config) {
            if (hasOwnProp(config, i)) {
                prop = config[i];
                if (isFunction(prop)) {
                    this[i] = prop;
                } else {
                    this['_' + i] = prop;
                }
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.
        this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' +
                /\d{1,2}/.source
        );
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig),
            prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (
                hasOwnProp(parentConfig, prop) &&
                !hasOwnProp(childConfig, prop) &&
                isObject(parentConfig[prop])
            ) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i,
                res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay: '[Today at] LT',
        nextDay: '[Tomorrow at] LT',
        nextWeek: 'dddd [at] LT',
        lastDay: '[Yesterday at] LT',
        lastWeek: '[Last] dddd [at] LT',
        sameElse: 'L',
    };

    function calendar(key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (
            (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +
            absNumber
        );
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
        localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
        formatFunctions = {},
        formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken(token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(
                    func.apply(this, arguments),
                    token
                );
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens),
            i,
            length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '',
                i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i])
                    ? array[i].call(mom, format)
                    : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] =
            formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(
                localFormattingTokens,
                replaceLongDateFormatTokens
            );
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var defaultLongDateFormat = {
        LTS: 'h:mm:ss A',
        LT: 'h:mm A',
        L: 'MM/DD/YYYY',
        LL: 'MMMM D, YYYY',
        LLL: 'MMMM D, YYYY h:mm A',
        LLLL: 'dddd, MMMM D, YYYY h:mm A',
    };

    function longDateFormat(key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper
            .match(formattingTokens)
            .map(function (tok) {
                if (
                    tok === 'MMMM' ||
                    tok === 'MM' ||
                    tok === 'DD' ||
                    tok === 'dddd'
                ) {
                    return tok.slice(1);
                }
                return tok;
            })
            .join('');

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate() {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d',
        defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal(number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future: 'in %s',
        past: '%s ago',
        s: 'a few seconds',
        ss: '%d seconds',
        m: 'a minute',
        mm: '%d minutes',
        h: 'an hour',
        hh: '%d hours',
        d: 'a day',
        dd: '%d days',
        w: 'a week',
        ww: '%d weeks',
        M: 'a month',
        MM: '%d months',
        y: 'a year',
        yy: '%d years',
    };

    function relativeTime(number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return isFunction(output)
            ? output(number, withoutSuffix, string, isFuture)
            : output.replace(/%d/i, number);
    }

    function pastFuture(diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias(unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string'
            ? aliases[units] || aliases[units.toLowerCase()]
            : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [],
            u;
        for (u in unitsObj) {
            if (hasOwnProp(unitsObj, u)) {
                units.push({ unit: u, priority: priorities[u] });
            }
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    function absFloor(number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    function makeGetSet(unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get(mom, unit) {
        return mom.isValid()
            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()
            : NaN;
    }

    function set$1(mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (
                unit === 'FullYear' &&
                isLeapYear(mom.year()) &&
                mom.month() === 1 &&
                mom.date() === 29
            ) {
                value = toInt(value);
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](
                    value,
                    mom.month(),
                    daysInMonth(value, mom.month())
                );
            } else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    // MOMENTS

    function stringGet(units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }

    function stringSet(units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units),
                i;
            for (i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    var match1 = /\d/, //       0 - 9
        match2 = /\d\d/, //      00 - 99
        match3 = /\d{3}/, //     000 - 999
        match4 = /\d{4}/, //    0000 - 9999
        match6 = /[+-]?\d{6}/, // -999999 - 999999
        match1to2 = /\d\d?/, //       0 - 99
        match3to4 = /\d\d\d\d?/, //     999 - 9999
        match5to6 = /\d\d\d\d\d\d?/, //   99999 - 999999
        match1to3 = /\d{1,3}/, //       0 - 999
        match1to4 = /\d{1,4}/, //       0 - 9999
        match1to6 = /[+-]?\d{1,6}/, // -999999 - 999999
        matchUnsigned = /\d+/, //       0 - inf
        matchSigned = /[+-]?\d+/, //    -inf - inf
        matchOffset = /Z|[+-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
        matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z
        matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123
        // any word (or two) characters or numbers including two/three word month in arabic.
        // includes scottish gaelic two word and hyphenated months
        matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
        regexes;

    regexes = {};

    function addRegexToken(token, regex, strictRegex) {
        regexes[token] = isFunction(regex)
            ? regex
            : function (isStrict, localeData) {
                  return isStrict && strictRegex ? strictRegex : regex;
              };
    }

    function getParseRegexForToken(token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(
            s
                .replace('\\', '')
                .replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (
                    matched,
                    p1,
                    p2,
                    p3,
                    p4
                ) {
                    return p1 || p2 || p3 || p4;
                })
        );
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken(token, callback) {
        var i,
            func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken(token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0,
        MONTH = 1,
        DATE = 2,
        HOUR = 3,
        MINUTE = 4,
        SECOND = 5,
        MILLISECOND = 6,
        WEEK = 7,
        WEEKDAY = 8;

    function mod(n, x) {
        return ((n % x) + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1
            ? isLeapYear(year)
                ? 29
                : 28
            : 31 - ((modMonth % 7) % 2);
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M', match1to2);
    addRegexToken('MM', match1to2, match2);
    addRegexToken('MMM', function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
            '_'
        ),
        MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
        defaultMonthsShortRegex = matchWord,
        defaultMonthsRegex = matchWord;

    function localeMonths(m, format) {
        if (!m) {
            return isArray(this._months)
                ? this._months
                : this._months['standalone'];
        }
        return isArray(this._months)
            ? this._months[m.month()]
            : this._months[
                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)
                      ? 'format'
                      : 'standalone'
              ][m.month()];
    }

    function localeMonthsShort(m, format) {
        if (!m) {
            return isArray(this._monthsShort)
                ? this._monthsShort
                : this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort)
            ? this._monthsShort[m.month()]
            : this._monthsShort[
                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'
              ][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i,
            ii,
            mom,
            llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse(monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp(
                    '^' + this.months(mom, '').replace('.', '') + '$',
                    'i'
                );
                this._shortMonthsParse[i] = new RegExp(
                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',
                    'i'
                );
            }
            if (!strict && !this._monthsParse[i]) {
                regex =
                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'MMMM' &&
                this._longMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'MMM' &&
                this._shortMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth(mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth(value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth() {
        return daysInMonth(this.year(), this.month());
    }

    function monthsShortRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict
                ? this._monthsShortStrictRegex
                : this._monthsShortRegex;
        }
    }

    function monthsRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict
                ? this._monthsStrictRegex
                : this._monthsRegex;
        }
    }

    function computeMonthsParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._monthsShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? zeroFill(y, 4) : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY', 4], 0, 'year');
    addFormatToken(0, ['YYYYY', 5], 0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y', matchSigned);
    addRegexToken('YY', match1to2, match2);
    addRegexToken('YYYY', match1to4, match4);
    addRegexToken('YYYYY', match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] =
            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    // HOOKS

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear() {
        return isLeapYear(this.year());
    }

    function createDate(y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date;
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            date = new Date(y + 400, m, d, h, M, s, ms);
            if (isFinite(date.getFullYear())) {
                date.setFullYear(y);
            }
        } else {
            date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
    }

    function createUTCDate(y) {
        var date, args;
        // the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            args = Array.prototype.slice.call(arguments);
            // preserve leap years using a full 400 year cycle, then reset
            args[0] = y + 400;
            date = new Date(Date.UTC.apply(null, args));
            if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
            }
        } else {
            date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear,
            resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear,
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek,
            resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear,
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w', match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W', match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (
        input,
        week,
        config,
        token
    ) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek(mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow: 0, // Sunday is the first day of the week.
        doy: 6, // The week that contains Jan 6th is the first week of the year.
    };

    function localeFirstDayOfWeek() {
        return this._week.dow;
    }

    function localeFirstDayOfYear() {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek(input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek(input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d', match1to2);
    addRegexToken('e', match1to2);
    addRegexToken('E', match1to2);
    addRegexToken('dd', function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd', function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd', function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES
    function shiftWeekdays(ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
    }

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        defaultWeekdaysRegex = matchWord,
        defaultWeekdaysShortRegex = matchWord,
        defaultWeekdaysMinRegex = matchWord;

    function localeWeekdays(m, format) {
        var weekdays = isArray(this._weekdays)
            ? this._weekdays
            : this._weekdays[
                  m && m !== true && this._weekdays.isFormat.test(format)
                      ? 'format'
                      : 'standalone'
              ];
        return m === true
            ? shiftWeekdays(weekdays, this._week.dow)
            : m
            ? weekdays[m.day()]
            : weekdays;
    }

    function localeWeekdaysShort(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysShort, this._week.dow)
            : m
            ? this._weekdaysShort[m.day()]
            : this._weekdaysShort;
    }

    function localeWeekdaysMin(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysMin, this._week.dow)
            : m
            ? this._weekdaysMin[m.day()]
            : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i,
            ii,
            mom,
            llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse(weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdays(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._shortWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._minWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
            }
            if (!this._weekdaysParse[i]) {
                regex =
                    '^' +
                    this.weekdays(mom, '') +
                    '|^' +
                    this.weekdaysShort(mom, '') +
                    '|^' +
                    this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'dddd' &&
                this._fullWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'ddd' &&
                this._shortWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'dd' &&
                this._minWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    function weekdaysRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict
                ? this._weekdaysStrictRegex
                : this._weekdaysRegex;
        }
    }

    function weekdaysShortRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict
                ? this._weekdaysShortStrictRegex
                : this._weekdaysShortRegex;
        }
    }

    function weekdaysMinRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict
                ? this._weekdaysMinStrictRegex
                : this._weekdaysMinRegex;
        }
    }

    function computeWeekdaysParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [],
            shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom,
            minp,
            shortp,
            longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, 1]).day(i);
            minp = regexEscape(this.weekdaysMin(mom, ''));
            shortp = regexEscape(this.weekdaysShort(mom, ''));
            longp = regexEscape(this.weekdays(mom, ''));
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._weekdaysShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
        this._weekdaysMinStrictRegex = new RegExp(
            '^(' + minPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return (
            '' +
            hFormat.apply(this) +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return (
            '' +
            this.hours() +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    function meridiem(token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(
                this.hours(),
                this.minutes(),
                lowercase
            );
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem(isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a', matchMeridiem);
    addRegexToken('A', matchMeridiem);
    addRegexToken('H', match1to2);
    addRegexToken('h', match1to2);
    addRegexToken('k', match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM(input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return (input + '').toLowerCase().charAt(0) === 'p';
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i,
        // Setting the hour should keep the time, because the user explicitly
        // specified which hour they want. So trying to maintain the same hour (in
        // a new timezone) makes sense. Adding/subtracting hours does not follow
        // this rule.
        getSetHour = makeGetSet('Hours', true);

    function localeMeridiem(hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse,
    };

    // internal storage for locale config files
    var locales = {},
        localeFamilies = {},
        globalLocale;

    function commonPrefix(arr1, arr2) {
        var i,
            minl = Math.min(arr1.length, arr2.length);
        for (i = 0; i < minl; i += 1) {
            if (arr1[i] !== arr2[i]) {
                return i;
            }
        }
        return minl;
    }

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0,
            j,
            next,
            locale,
            split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (
                    next &&
                    next.length >= j &&
                    commonPrefix(split, next) >= j - 1
                ) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function loadLocale(name) {
        var oldLocale = null,
            aliasedRequire;
        // TODO: Find a better way to register and load all the locales in Node
        if (
            locales[name] === undefined &&
            typeof module !== 'undefined' &&
            module &&
            module.exports
        ) {
            try {
                oldLocale = globalLocale._abbr;
                aliasedRequire = require;
                aliasedRequire('./locale/' + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {
                // mark as not found to avoid repeating expensive file require call causing high CPU
                // when trying to find en-US, en_US, en-us for every format call
                locales[name] = null; // null means not found
            }
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function getSetGlobalLocale(key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            } else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            } else {
                if (typeof console !== 'undefined' && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn(
                        'Locale ' + key + ' not found. Did you forget to load it?'
                    );
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale(name, config) {
        if (config !== null) {
            var locale,
                parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple(
                    'defineLocaleOverride',
                    'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'
                );
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config,
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            // backwards compat for now: also set the locale
            // make sure we set the locale AFTER all child locales have been
            // created, so we won't end up with the child locale set.
            getSetGlobalLocale(name);

            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale,
                tmpLocale,
                parentConfig = baseConfig;

            if (locales[name] != null && locales[name].parentLocale != null) {
                // Update existing child locale in-place to avoid memory-leaks
                locales[name].set(mergeConfigs(locales[name]._config, config));
            } else {
                // MERGE
                tmpLocale = loadLocale(name);
                if (tmpLocale != null) {
                    parentConfig = tmpLocale._config;
                }
                config = mergeConfigs(parentConfig, config);
                if (tmpLocale == null) {
                    // updateLocale is called for creating a new locale
                    // Set abbr so it will have a name (getters return
                    // undefined otherwise).
                    config.abbr = name;
                }
                locale = new Locale(config);
                locale.parentLocale = locales[name];
                locales[name] = locale;
            }

            // backwards compat for now: also set the locale
            getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                    if (name === getSetGlobalLocale()) {
                        getSetGlobalLocale(name);
                    }
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function getLocale(key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow(m) {
        var overflow,
            a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH] < 0 || a[MONTH] > 11
                    ? MONTH
                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
                    ? DATE
                    : a[HOUR] < 0 ||
                      a[HOUR] > 24 ||
                      (a[HOUR] === 24 &&
                          (a[MINUTE] !== 0 ||
                              a[SECOND] !== 0 ||
                              a[MILLISECOND] !== 0))
                    ? HOUR
                    : a[MINUTE] < 0 || a[MINUTE] > 59
                    ? MINUTE
                    : a[SECOND] < 0 || a[SECOND] > 59
                    ? SECOND
                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
                    ? MILLISECOND
                    : -1;

            if (
                getParsingFlags(m)._overflowDayOfYear &&
                (overflow < YEAR || overflow > DATE)
            ) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
        isoDates = [
            ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
            ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
            ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
            ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
            ['YYYY-DDD', /\d{4}-\d{3}/],
            ['YYYY-MM', /\d{4}-\d\d/, false],
            ['YYYYYYMMDD', /[+-]\d{10}/],
            ['YYYYMMDD', /\d{8}/],
            ['GGGG[W]WWE', /\d{4}W\d{3}/],
            ['GGGG[W]WW', /\d{4}W\d{2}/, false],
            ['YYYYDDD', /\d{7}/],
            ['YYYYMM', /\d{6}/, false],
            ['YYYY', /\d{4}/, false],
        ],
        // iso time formats and regexes
        isoTimes = [
            ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
            ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
            ['HH:mm:ss', /\d\d:\d\d:\d\d/],
            ['HH:mm', /\d\d:\d\d/],
            ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
            ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
            ['HHmmss', /\d\d\d\d\d\d/],
            ['HHmm', /\d\d\d\d/],
            ['HH', /\d\d/],
        ],
        aspNetJsonRegex = /^\/?Date\((-?\d+)/i,
        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
        rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
        obsOffsets = {
            UT: 0,
            GMT: 0,
            EDT: -4 * 60,
            EST: -5 * 60,
            CDT: -5 * 60,
            CST: -6 * 60,
            MDT: -6 * 60,
            MST: -7 * 60,
            PDT: -7 * 60,
            PST: -8 * 60,
        };

    // date from iso format
    function configFromISO(config) {
        var i,
            l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime,
            dateFormat,
            timeFormat,
            tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    function extractFromRFC2822Strings(
        yearStr,
        monthStr,
        dayStr,
        hourStr,
        minuteStr,
        secondStr
    ) {
        var result = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10),
        ];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s
            .replace(/\([^)]*\)|[\n\t]/g, ' ')
            .replace(/(\s\s+)/g, ' ')
            .replace(/^\s\s*/, '')
            .replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(
                    parsedInput[0],
                    parsedInput[1],
                    parsedInput[2]
                ).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            // the only allowed military tz is Z
            return 0;
        } else {
            var hm = parseInt(numOffset, 10),
                m = hm % 100,
                h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    // date and time from ref 2822 format
    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i)),
            parsedArray;
        if (match) {
            parsedArray = extractFromRFC2822Strings(
                match[4],
                match[3],
                match[2],
                match[5],
                match[6],
                match[7]
            );
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);
        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        if (config._strict) {
            config._isValid = false;
        } else {
            // Final attempt, use Input Fallback
            hooks.createFromInputFallback(config);
        }
    }

    hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [
                nowValue.getUTCFullYear(),
                nowValue.getUTCMonth(),
                nowValue.getUTCDate(),
            ];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray(config) {
        var i,
            date,
            input = [],
            currentDate,
            expectedWeekday,
            yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (
                config._dayOfYear > daysInYear(yearToUse) ||
                config._dayOfYear === 0
            ) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] =
                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (
            config._a[HOUR] === 24 &&
            config._a[MINUTE] === 0 &&
            config._a[SECOND] === 0 &&
            config._a[MILLISECOND] === 0
        ) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(
            null,
            input
        );
        expectedWeekday = config._useUTC
            ? config._d.getUTCDay()
            : config._d.getDay();

        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        // check for mismatching day of week
        if (
            config._w &&
            typeof config._w.d !== 'undefined' &&
            config._w.d !== expectedWeekday
        ) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(
                w.GG,
                config._a[YEAR],
                weekOfYear(createLocal(), 1, 4).year
            );
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            // Default to current week.
            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to beginning of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // constant that refers to the ISO standard
    hooks.ISO_8601 = function () {};

    // constant that refers to the RFC 2822 form
    hooks.RFC_2822 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i,
            parsedInput,
            tokens,
            token,
            skipped,
            stringLength = string.length,
            totalParsedInputLength = 0,
            era;

        tokens =
            expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) ||
                [])[0];
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(
                    string.indexOf(parsedInput) + parsedInput.length
                );
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                } else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            } else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver =
            stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (
            config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0
        ) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(
            config._locale,
            config._a[HOUR],
            config._meridiem
        );

        // handle era
        era = getParsingFlags(config).era;
        if (era !== null) {
            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
        }

        configFromArray(config);
        checkOverflow(config);
    }

    function meridiemFixWrap(locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,
            scoreToBeat,
            i,
            currentScore,
            validFormatFound,
            bestFormatIsValid = false;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            validFormatFound = false;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (isValid(tempConfig)) {
                validFormatFound = true;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (!bestFormatIsValid) {
                if (
                    scoreToBeat == null ||
                    currentScore < scoreToBeat ||
                    validFormatFound
                ) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                    if (validFormatFound) {
                        bestFormatIsValid = true;
                    }
                }
            } else {
                if (currentScore < scoreToBeat) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                }
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i),
            dayOrDate = i.day === undefined ? i.date : i.day;
        config._a = map(
            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
            function (obj) {
                return obj && parseInt(obj, 10);
            }
        );

        configFromArray(config);
    }

    function createFromConfig(config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig(config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return createInvalid({ nullInput: true });
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        } else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            // from milliseconds
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC(input, format, locale, strict, isUTC) {
        var c = {};

        if (format === true || format === false) {
            strict = format;
            format = undefined;
        }

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if (
            (isObject(input) && isObjectEmpty(input)) ||
            (isArray(input) && input.length === 0)
        ) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other < this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        ),
        prototypeMax = deprecate(
            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other > this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +new Date();
    };

    var ordering = [
        'year',
        'quarter',
        'month',
        'week',
        'day',
        'hour',
        'minute',
        'second',
        'millisecond',
    ];

    function isDurationValid(m) {
        var key,
            unitHasDecimal = false,
            i;
        for (key in m) {
            if (
                hasOwnProp(m, key) &&
                !(
                    indexOf.call(ordering, key) !== -1 &&
                    (m[key] == null || !isNaN(m[key]))
                )
            ) {
                return false;
            }
        }

        for (i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration(duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        // representation for dateAddRemove
        this._milliseconds =
            +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days + weeks * 7;
        // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months + quarters * 3 + years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration(obj) {
        return obj instanceof Duration;
    }

    function absRound(number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if (
                (dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))
            ) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    // FORMATTING

    function offset(token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset(),
                sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return (
                sign +
                zeroFill(~~(offset / 60), 2) +
                separator +
                zeroFill(~~offset % 60, 2)
            );
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z', matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher),
            chunk,
            parts,
            minutes;

        if (matches === null) {
            return null;
        }

        chunk = matches[matches.length - 1] || [];
        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff =
                (isMoment(input) || isDate(input)
                    ? input.valueOf()
                    : createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset(m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset());
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset(input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(
                        this,
                        createDuration(input - offset, 'm'),
                        1,
                        false
                    );
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone(input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC(keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal(keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset() {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            } else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset(input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime() {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted() {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {},
            other;

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted =
                this.isValid() && compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal() {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset() {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
        // and further modified to allow for strings containing both week and day
        isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration(input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms: input._milliseconds,
                d: input._days,
                M: input._months,
            };
        } else if (isNumber(input) || !isNaN(+input)) {
            duration = {};
            if (key) {
                duration[key] = +input;
            } else {
                duration.milliseconds = +input;
            }
        } else if ((match = aspNetRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: 0,
                d: toInt(match[DATE]) * sign,
                h: toInt(match[HOUR]) * sign,
                m: toInt(match[MINUTE]) * sign,
                s: toInt(match[SECOND]) * sign,
                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match
            };
        } else if ((match = isoRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: parseIso(match[2], sign),
                M: parseIso(match[3], sign),
                w: parseIso(match[4], sign),
                d: parseIso(match[5], sign),
                h: parseIso(match[6], sign),
                m: parseIso(match[7], sign),
                s: parseIso(match[8], sign),
            };
        } else if (duration == null) {
            // checks for null or undefined
            duration = {};
        } else if (
            typeof duration === 'object' &&
            ('from' in duration || 'to' in duration)
        ) {
            diffRes = momentsDifference(
                createLocal(duration.from),
                createLocal(duration.to)
            );

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        if (isDuration(input) && hasOwnProp(input, '_isValid')) {
            ret._isValid = input._isValid;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso(inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {};

        res.months =
            other.month() - base.month() + (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +base.clone().add(res.months, 'M');

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return { milliseconds: 0, months: 0 };
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(
                    name,
                    'moment().' +
                        name +
                        '(period, number) is deprecated. Please use moment().' +
                        name +
                        '(number, period). ' +
                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
                );
                tmp = val;
                val = period;
                period = tmp;
            }

            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract(mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add = createAdder(1, 'add'),
        subtract = createAdder(-1, 'subtract');

    function isString(input) {
        return typeof input === 'string' || input instanceof String;
    }

    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
    function isMomentInput(input) {
        return (
            isMoment(input) ||
            isDate(input) ||
            isString(input) ||
            isNumber(input) ||
            isNumberOrStringArray(input) ||
            isMomentInputObject(input) ||
            input === null ||
            input === undefined
        );
    }

    function isMomentInputObject(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'years',
                'year',
                'y',
                'months',
                'month',
                'M',
                'days',
                'day',
                'd',
                'dates',
                'date',
                'D',
                'hours',
                'hour',
                'h',
                'minutes',
                'minute',
                'm',
                'seconds',
                'second',
                's',
                'milliseconds',
                'millisecond',
                'ms',
            ],
            i,
            property;

        for (i = 0; i < properties.length; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function isNumberOrStringArray(input) {
        var arrayTest = isArray(input),
            dataTypeTest = false;
        if (arrayTest) {
            dataTypeTest =
                input.filter(function (item) {
                    return !isNumber(item) && isString(input);
                }).length === 0;
        }
        return arrayTest && dataTypeTest;
    }

    function isCalendarSpec(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'sameDay',
                'nextDay',
                'lastDay',
                'nextWeek',
                'lastWeek',
                'sameElse',
            ],
            i,
            property;

        for (i = 0; i < properties.length; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6
            ? 'sameElse'
            : diff < -1
            ? 'lastWeek'
            : diff < 0
            ? 'lastDay'
            : diff < 1
            ? 'sameDay'
            : diff < 2
            ? 'nextDay'
            : diff < 7
            ? 'nextWeek'
            : 'sameElse';
    }

    function calendar$1(time, formats) {
        // Support for single parameter, formats only overload to the calendar function
        if (arguments.length === 1) {
            if (!arguments[0]) {
                time = undefined;
                formats = undefined;
            } else if (isMomentInput(arguments[0])) {
                time = arguments[0];
                formats = undefined;
            } else if (isCalendarSpec(arguments[0])) {
                formats = arguments[0];
                time = undefined;
            }
        }
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse',
            output =
                formats &&
                (isFunction(formats[format])
                    ? formats[format].call(this, now)
                    : formats[format]);

        return this.format(
            output || this.localeData().calendar(format, this, createLocal(now))
        );
    }

    function clone() {
        return new Moment(this);
    }

    function isAfter(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween(from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
            return false;
        }
        inclusivity = inclusivity || '()';
        return (
            (inclusivity[0] === '('
                ? this.isAfter(localFrom, units)
                : !this.isBefore(localFrom, units)) &&
            (inclusivity[1] === ')'
                ? this.isBefore(localTo, units)
                : !this.isAfter(localTo, units))
        );
    }

    function isSame(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return (
                this.clone().startOf(units).valueOf() <= inputMs &&
                inputMs <= this.clone().endOf(units).valueOf()
            );
        }
    }

    function isSameOrAfter(input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore(input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff(input, units, asFloat) {
        var that, zoneDelta, output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year':
                output = monthDiff(this, that) / 12;
                break;
            case 'month':
                output = monthDiff(this, that);
                break;
            case 'quarter':
                output = monthDiff(this, that) / 3;
                break;
            case 'second':
                output = (this - that) / 1e3;
                break; // 1000
            case 'minute':
                output = (this - that) / 6e4;
                break; // 1000 * 60
            case 'hour':
                output = (this - that) / 36e5;
                break; // 1000 * 60 * 60
            case 'day':
                output = (this - that - zoneDelta) / 864e5;
                break; // 1000 * 60 * 60 * 24, negate dst
            case 'week':
                output = (this - that - zoneDelta) / 6048e5;
                break; // 1000 * 60 * 60 * 24 * 7, negate dst
            default:
                output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff(a, b) {
        if (a.date() < b.date()) {
            // end-of-month calculations work correct when the start month has more
            // days than the end month.
            return -monthDiff(b, a);
        }
        // difference in months
        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2,
            adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString() {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true,
            m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(
                m,
                utc
                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'
            );
        }
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)
                    .toISOString()
                    .replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(
            m,
            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
        );
    }

    /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
    function inspect() {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment',
            zone = '',
            prefix,
            year,
            datetime,
            suffix;
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        prefix = '[' + func + '("]';
        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
        datetime = '-MM-DD[T]HH:mm:ss.SSS';
        suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format(inputString) {
        if (!inputString) {
            inputString = this.isUtc()
                ? hooks.defaultFormatUtc
                : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ to: this, from: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow(withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ from: this, to: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow(withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale(key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData() {
        return this._locale;
    }

    var MS_PER_SECOND = 1000,
        MS_PER_MINUTE = 60 * MS_PER_SECOND,
        MS_PER_HOUR = 60 * MS_PER_MINUTE,
        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

    // actual modulo - handles negative numbers (for dates before 1970):
    function mod$1(dividend, divisor) {
        return ((dividend % divisor) + divisor) % divisor;
    }

    function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return new Date(y, m, d).valueOf();
        }
    }

    function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return Date.UTC(y, m, d);
        }
    }

    function startOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year(), 0, 1);
                break;
            case 'quarter':
                time = startOfDate(
                    this.year(),
                    this.month() - (this.month() % 3),
                    1
                );
                break;
            case 'month':
                time = startOfDate(this.year(), this.month(), 1);
                break;
            case 'week':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - this.weekday()
                );
                break;
            case 'isoWeek':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - (this.isoWeekday() - 1)
                );
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date());
                break;
            case 'hour':
                time = this._d.valueOf();
                time -= mod$1(
                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                    MS_PER_HOUR
                );
                break;
            case 'minute':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_MINUTE);
                break;
            case 'second':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_SECOND);
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function endOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1;
                break;
            case 'quarter':
                time =
                    startOfDate(
                        this.year(),
                        this.month() - (this.month() % 3) + 3,
                        1
                    ) - 1;
                break;
            case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                break;
            case 'week':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - this.weekday() + 7
                    ) - 1;
                break;
            case 'isoWeek':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - (this.isoWeekday() - 1) + 7
                    ) - 1;
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                break;
            case 'hour':
                time = this._d.valueOf();
                time +=
                    MS_PER_HOUR -
                    mod$1(
                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                        MS_PER_HOUR
                    ) -
                    1;
                break;
            case 'minute':
                time = this._d.valueOf();
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                break;
            case 'second':
                time = this._d.valueOf();
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function valueOf() {
        return this._d.valueOf() - (this._offset || 0) * 60000;
    }

    function unix() {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate() {
        return new Date(this.valueOf());
    }

    function toArray() {
        var m = this;
        return [
            m.year(),
            m.month(),
            m.date(),
            m.hour(),
            m.minute(),
            m.second(),
            m.millisecond(),
        ];
    }

    function toObject() {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds(),
        };
    }

    function toJSON() {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2() {
        return isValid(this);
    }

    function parsingFlags() {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt() {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict,
        };
    }

    addFormatToken('N', 0, 0, 'eraAbbr');
    addFormatToken('NN', 0, 0, 'eraAbbr');
    addFormatToken('NNN', 0, 0, 'eraAbbr');
    addFormatToken('NNNN', 0, 0, 'eraName');
    addFormatToken('NNNNN', 0, 0, 'eraNarrow');

    addFormatToken('y', ['y', 1], 'yo', 'eraYear');
    addFormatToken('y', ['yy', 2], 0, 'eraYear');
    addFormatToken('y', ['yyy', 3], 0, 'eraYear');
    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');

    addRegexToken('N', matchEraAbbr);
    addRegexToken('NN', matchEraAbbr);
    addRegexToken('NNN', matchEraAbbr);
    addRegexToken('NNNN', matchEraName);
    addRegexToken('NNNNN', matchEraNarrow);

    addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (
        input,
        array,
        config,
        token
    ) {
        var era = config._locale.erasParse(input, token, config._strict);
        if (era) {
            getParsingFlags(config).era = era;
        } else {
            getParsingFlags(config).invalidEra = input;
        }
    });

    addRegexToken('y', matchUnsigned);
    addRegexToken('yy', matchUnsigned);
    addRegexToken('yyy', matchUnsigned);
    addRegexToken('yyyy', matchUnsigned);
    addRegexToken('yo', matchEraYearOrdinal);

    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);
    addParseToken(['yo'], function (input, array, config, token) {
        var match;
        if (config._locale._eraYearOrdinalRegex) {
            match = input.match(config._locale._eraYearOrdinalRegex);
        }

        if (config._locale.eraYearOrdinalParse) {
            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
        } else {
            array[YEAR] = parseInt(input, 10);
        }
    });

    function localeEras(m, format) {
        var i,
            l,
            date,
            eras = this._eras || getLocale('en')._eras;
        for (i = 0, l = eras.length; i < l; ++i) {
            switch (typeof eras[i].since) {
                case 'string':
                    // truncate time
                    date = hooks(eras[i].since).startOf('day');
                    eras[i].since = date.valueOf();
                    break;
            }

            switch (typeof eras[i].until) {
                case 'undefined':
                    eras[i].until = +Infinity;
                    break;
                case 'string':
                    // truncate time
                    date = hooks(eras[i].until).startOf('day').valueOf();
                    eras[i].until = date.valueOf();
                    break;
            }
        }
        return eras;
    }

    function localeErasParse(eraName, format, strict) {
        var i,
            l,
            eras = this.eras(),
            name,
            abbr,
            narrow;
        eraName = eraName.toUpperCase();

        for (i = 0, l = eras.length; i < l; ++i) {
            name = eras[i].name.toUpperCase();
            abbr = eras[i].abbr.toUpperCase();
            narrow = eras[i].narrow.toUpperCase();

            if (strict) {
                switch (format) {
                    case 'N':
                    case 'NN':
                    case 'NNN':
                        if (abbr === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNN':
                        if (name === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNNN':
                        if (narrow === eraName) {
                            return eras[i];
                        }
                        break;
                }
            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
                return eras[i];
            }
        }
    }

    function localeErasConvertYear(era, year) {
        var dir = era.since <= era.until ? +1 : -1;
        if (year === undefined) {
            return hooks(era.since).year();
        } else {
            return hooks(era.since).year() + (year - era.offset) * dir;
        }
    }

    function getEraName() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].name;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].name;
            }
        }

        return '';
    }

    function getEraNarrow() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].narrow;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].narrow;
            }
        }

        return '';
    }

    function getEraAbbr() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].abbr;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].abbr;
            }
        }

        return '';
    }

    function getEraYear() {
        var i,
            l,
            dir,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            dir = eras[i].since <= eras[i].until ? +1 : -1;

            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (
                (eras[i].since <= val && val <= eras[i].until) ||
                (eras[i].until <= val && val <= eras[i].since)
            ) {
                return (
                    (this.year() - hooks(eras[i].since).year()) * dir +
                    eras[i].offset
                );
            }
        }

        return this.year();
    }

    function erasNameRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNameRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNameRegex : this._erasRegex;
    }

    function erasAbbrRegex(isStrict) {
        if (!hasOwnProp(this, '_erasAbbrRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasAbbrRegex : this._erasRegex;
    }

    function erasNarrowRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNarrowRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNarrowRegex : this._erasRegex;
    }

    function matchEraAbbr(isStrict, locale) {
        return locale.erasAbbrRegex(isStrict);
    }

    function matchEraName(isStrict, locale) {
        return locale.erasNameRegex(isStrict);
    }

    function matchEraNarrow(isStrict, locale) {
        return locale.erasNarrowRegex(isStrict);
    }

    function matchEraYearOrdinal(isStrict, locale) {
        return locale._eraYearOrdinalRegex || matchUnsigned;
    }

    function computeErasParse() {
        var abbrPieces = [],
            namePieces = [],
            narrowPieces = [],
            mixedPieces = [],
            i,
            l,
            eras = this.eras();

        for (i = 0, l = eras.length; i < l; ++i) {
            namePieces.push(regexEscape(eras[i].name));
            abbrPieces.push(regexEscape(eras[i].abbr));
            narrowPieces.push(regexEscape(eras[i].narrow));

            mixedPieces.push(regexEscape(eras[i].name));
            mixedPieces.push(regexEscape(eras[i].abbr));
            mixedPieces.push(regexEscape(eras[i].narrow));
        }

        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');
        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');
        this._erasNarrowRegex = new RegExp(
            '^(' + narrowPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken(token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg', 'weekYear');
    addWeekYearFormatToken('ggggg', 'weekYear');
    addWeekYearFormatToken('GGGG', 'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);

    // PARSING

    addRegexToken('G', matchSigned);
    addRegexToken('g', matchSigned);
    addRegexToken('GG', match1to2, match2);
    addRegexToken('gg', match1to2, match2);
    addRegexToken('GGGG', match1to4, match4);
    addRegexToken('gggg', match1to4, match4);
    addRegexToken('GGGGG', match1to6, match6);
    addRegexToken('ggggg', match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (
        input,
        week,
        config,
        token
    ) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.week(),
            this.weekday(),
            this.localeData()._week.dow,
            this.localeData()._week.doy
        );
    }

    function getSetISOWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.isoWeek(),
            this.isoWeekday(),
            1,
            4
        );
    }

    function getISOWeeksInYear() {
        return weeksInYear(this.year(), 1, 4);
    }

    function getISOWeeksInISOWeekYear() {
        return weeksInYear(this.isoWeekYear(), 1, 4);
    }

    function getWeeksInYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getWeeksInWeekYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter(input) {
        return input == null
            ? Math.ceil((this.month() + 1) / 3)
            : this.month((input - 1) * 3 + (this.month() % 3));
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIORITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D', match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict
            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse
            : locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD', match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear(input) {
        var dayOfYear =
            Math.round(
                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5
            ) + 1;
        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m', match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s', match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });

    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S', match1to3, match1);
    addRegexToken('SS', match1to3, match2);
    addRegexToken('SSS', match1to3, match3);

    var token, getSetMillisecond;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }

    getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z', 0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr() {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName() {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add = add;
    proto.calendar = calendar$1;
    proto.clone = clone;
    proto.diff = diff;
    proto.endOf = endOf;
    proto.format = format;
    proto.from = from;
    proto.fromNow = fromNow;
    proto.to = to;
    proto.toNow = toNow;
    proto.get = stringGet;
    proto.invalidAt = invalidAt;
    proto.isAfter = isAfter;
    proto.isBefore = isBefore;
    proto.isBetween = isBetween;
    proto.isSame = isSame;
    proto.isSameOrAfter = isSameOrAfter;
    proto.isSameOrBefore = isSameOrBefore;
    proto.isValid = isValid$2;
    proto.lang = lang;
    proto.locale = locale;
    proto.localeData = localeData;
    proto.max = prototypeMax;
    proto.min = prototypeMin;
    proto.parsingFlags = parsingFlags;
    proto.set = stringSet;
    proto.startOf = startOf;
    proto.subtract = subtract;
    proto.toArray = toArray;
    proto.toObject = toObject;
    proto.toDate = toDate;
    proto.toISOString = toISOString;
    proto.inspect = inspect;
    if (typeof Symbol !== 'undefined' && Symbol.for != null) {
        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {
            return 'Moment<' + this.format() + '>';
        };
    }
    proto.toJSON = toJSON;
    proto.toString = toString;
    proto.unix = unix;
    proto.valueOf = valueOf;
    proto.creationData = creationData;
    proto.eraName = getEraName;
    proto.eraNarrow = getEraNarrow;
    proto.eraAbbr = getEraAbbr;
    proto.eraYear = getEraYear;
    proto.year = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week = proto.weeks = getSetWeek;
    proto.isoWeek = proto.isoWeeks = getSetISOWeek;
    proto.weeksInYear = getWeeksInYear;
    proto.weeksInWeekYear = getWeeksInWeekYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
    proto.date = getSetDayOfMonth;
    proto.day = proto.days = getSetDayOfWeek;
    proto.weekday = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset = getSetOffset;
    proto.utc = setOffsetToUTC;
    proto.local = setOffsetToLocal;
    proto.parseZone = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST = isDaylightSavingTime;
    proto.isLocal = isLocal;
    proto.isUtcOffset = isUtcOffset;
    proto.isUtc = isUtc;
    proto.isUTC = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates = deprecate(
        'dates accessor is deprecated. Use date instead.',
        getSetDayOfMonth
    );
    proto.months = deprecate(
        'months accessor is deprecated. Use month instead',
        getSetMonth
    );
    proto.years = deprecate(
        'years accessor is deprecated. Use year instead',
        getSetYear
    );
    proto.zone = deprecate(
        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
        getSetZone
    );
    proto.isDSTShifted = deprecate(
        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
        isDaylightSavingTimeShifted
    );

    function createUnix(input) {
        return createLocal(input * 1000);
    }

    function createInZone() {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat(string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar = calendar;
    proto$1.longDateFormat = longDateFormat;
    proto$1.invalidDate = invalidDate;
    proto$1.ordinal = ordinal;
    proto$1.preparse = preParsePostFormat;
    proto$1.postformat = preParsePostFormat;
    proto$1.relativeTime = relativeTime;
    proto$1.pastFuture = pastFuture;
    proto$1.set = set;
    proto$1.eras = localeEras;
    proto$1.erasParse = localeErasParse;
    proto$1.erasConvertYear = localeErasConvertYear;
    proto$1.erasAbbrRegex = erasAbbrRegex;
    proto$1.erasNameRegex = erasNameRegex;
    proto$1.erasNarrowRegex = erasNarrowRegex;

    proto$1.months = localeMonths;
    proto$1.monthsShort = localeMonthsShort;
    proto$1.monthsParse = localeMonthsParse;
    proto$1.monthsRegex = monthsRegex;
    proto$1.monthsShortRegex = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays = localeWeekdays;
    proto$1.weekdaysMin = localeWeekdaysMin;
    proto$1.weekdaysShort = localeWeekdaysShort;
    proto$1.weekdaysParse = localeWeekdaysParse;

    proto$1.weekdaysRegex = weekdaysRegex;
    proto$1.weekdaysShortRegex = weekdaysShortRegex;
    proto$1.weekdaysMinRegex = weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1(format, index, field, setter) {
        var locale = getLocale(),
            utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl(format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i,
            out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl(localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0,
            i,
            out = [];

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths(format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort(format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        eras: [
            {
                since: '0001-01-01',
                until: +Infinity,
                offset: 1,
                name: 'Anno Domini',
                narrow: 'AD',
                abbr: 'AD',
            },
            {
                since: '0000-12-31',
                until: -Infinity,
                offset: 1,
                name: 'Before Christ',
                narrow: 'BC',
                abbr: 'BC',
            },
        ],
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    toInt((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
    });

    // Side effect imports

    hooks.lang = deprecate(
        'moment.lang is deprecated. Use moment.locale instead.',
        getSetGlobalLocale
    );
    hooks.langData = deprecate(
        'moment.langData is deprecated. Use moment.localeData instead.',
        getLocale
    );

    var mathAbs = Math.abs;

    function abs() {
        var data = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days = mathAbs(this._days);
        this._months = mathAbs(this._months);

        data.milliseconds = mathAbs(data.milliseconds);
        data.seconds = mathAbs(data.seconds);
        data.minutes = mathAbs(data.minutes);
        data.hours = mathAbs(data.hours);
        data.months = mathAbs(data.months);
        data.years = mathAbs(data.years);

        return this;
    }

    function addSubtract$1(duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days += direction * other._days;
        duration._months += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function add$1(input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function subtract$1(input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil(number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble() {
        var milliseconds = this._milliseconds,
            days = this._days,
            months = this._months,
            data = this._data,
            seconds,
            minutes,
            hours,
            years,
            monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (
            !(
                (milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0)
            )
        ) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds = absFloor(milliseconds / 1000);
        data.seconds = seconds % 60;

        minutes = absFloor(seconds / 60);
        data.minutes = minutes % 60;

        hours = absFloor(minutes / 60);
        data.hours = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days = days;
        data.months = months;
        data.years = years;

        return this;
    }

    function daysToMonths(days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return (days * 4800) / 146097;
    }

    function monthsToDays(months) {
        // the reverse of daysToMonths
        return (months * 146097) / 4800;
    }

    function as(units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days,
            months,
            milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            switch (units) {
                case 'month':
                    return months;
                case 'quarter':
                    return months / 3;
                case 'year':
                    return months / 12;
            }
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week':
                    return days / 7 + milliseconds / 6048e5;
                case 'day':
                    return days + milliseconds / 864e5;
                case 'hour':
                    return days * 24 + milliseconds / 36e5;
                case 'minute':
                    return days * 1440 + milliseconds / 6e4;
                case 'second':
                    return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond':
                    return Math.floor(days * 864e5) + milliseconds;
                default:
                    throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function valueOf$1() {
        if (!this.isValid()) {
            return NaN;
        }
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs(alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms'),
        asSeconds = makeAs('s'),
        asMinutes = makeAs('m'),
        asHours = makeAs('h'),
        asDays = makeAs('d'),
        asWeeks = makeAs('w'),
        asMonths = makeAs('M'),
        asQuarters = makeAs('Q'),
        asYears = makeAs('y');

    function clone$1() {
        return createDuration(this);
    }

    function get$2(units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds'),
        seconds = makeGetter('seconds'),
        minutes = makeGetter('minutes'),
        hours = makeGetter('hours'),
        days = makeGetter('days'),
        months = makeGetter('months'),
        years = makeGetter('years');

    function weeks() {
        return absFloor(this.days() / 7);
    }

    var round = Math.round,
        thresholds = {
            ss: 44, // a few seconds to seconds
            s: 45, // seconds to minute
            m: 45, // minutes to hour
            h: 22, // hours to day
            d: 26, // days to month/week
            w: null, // weeks to month
            M: 11, // months to year
        };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {
        var duration = createDuration(posNegDuration).abs(),
            seconds = round(duration.as('s')),
            minutes = round(duration.as('m')),
            hours = round(duration.as('h')),
            days = round(duration.as('d')),
            months = round(duration.as('M')),
            weeks = round(duration.as('w')),
            years = round(duration.as('y')),
            a =
                (seconds <= thresholds.ss && ['s', seconds]) ||
                (seconds < thresholds.s && ['ss', seconds]) ||
                (minutes <= 1 && ['m']) ||
                (minutes < thresholds.m && ['mm', minutes]) ||
                (hours <= 1 && ['h']) ||
                (hours < thresholds.h && ['hh', hours]) ||
                (days <= 1 && ['d']) ||
                (days < thresholds.d && ['dd', days]);

        if (thresholds.w != null) {
            a =
                a ||
                (weeks <= 1 && ['w']) ||
                (weeks < thresholds.w && ['ww', weeks]);
        }
        a = a ||
            (months <= 1 && ['M']) ||
            (months < thresholds.M && ['MM', months]) ||
            (years <= 1 && ['y']) || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function getSetRelativeTimeRounding(roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof roundingFunction === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function getSetRelativeTimeThreshold(threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize(argWithSuffix, argThresholds) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var withSuffix = false,
            th = thresholds,
            locale,
            output;

        if (typeof argWithSuffix === 'object') {
            argThresholds = argWithSuffix;
            argWithSuffix = false;
        }
        if (typeof argWithSuffix === 'boolean') {
            withSuffix = argWithSuffix;
        }
        if (typeof argThresholds === 'object') {
            th = Object.assign({}, thresholds, argThresholds);
            if (argThresholds.s != null && argThresholds.ss == null) {
                th.ss = argThresholds.s - 1;
            }
        }

        locale = this.localeData();
        output = relativeTime$1(this, !withSuffix, th, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return (x > 0) - (x < 0) || +x;
    }

    function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000,
            days = abs$1(this._days),
            months = abs$1(this._months),
            minutes,
            hours,
            years,
            s,
            total = this.asSeconds(),
            totalSign,
            ymSign,
            daysSign,
            hmsSign;

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes = absFloor(seconds / 60);
        hours = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';

        totalSign = total < 0 ? '-' : '';
        ymSign = sign(this._months) !== sign(total) ? '-' : '';
        daysSign = sign(this._days) !== sign(total) ? '-' : '';
        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return (
            totalSign +
            'P' +
            (years ? ymSign + years + 'Y' : '') +
            (months ? ymSign + months + 'M' : '') +
            (days ? daysSign + days + 'D' : '') +
            (hours || minutes || seconds ? 'T' : '') +
            (hours ? hmsSign + hours + 'H' : '') +
            (minutes ? hmsSign + minutes + 'M' : '') +
            (seconds ? hmsSign + s + 'S' : '')
        );
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid = isValid$1;
    proto$2.abs = abs;
    proto$2.add = add$1;
    proto$2.subtract = subtract$1;
    proto$2.as = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds = asSeconds;
    proto$2.asMinutes = asMinutes;
    proto$2.asHours = asHours;
    proto$2.asDays = asDays;
    proto$2.asWeeks = asWeeks;
    proto$2.asMonths = asMonths;
    proto$2.asQuarters = asQuarters;
    proto$2.asYears = asYears;
    proto$2.valueOf = valueOf$1;
    proto$2._bubble = bubble;
    proto$2.clone = clone$1;
    proto$2.get = get$2;
    proto$2.milliseconds = milliseconds;
    proto$2.seconds = seconds;
    proto$2.minutes = minutes;
    proto$2.hours = hours;
    proto$2.days = days;
    proto$2.weeks = weeks;
    proto$2.months = months;
    proto$2.years = years;
    proto$2.humanize = humanize;
    proto$2.toISOString = toISOString$1;
    proto$2.toString = toISOString$1;
    proto$2.toJSON = toISOString$1;
    proto$2.locale = locale;
    proto$2.localeData = localeData;

    proto$2.toIsoString = deprecate(
        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
        toISOString$1
    );
    proto$2.lang = lang;

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    //! moment.js

    hooks.version = '2.29.1';

    setHookCallback(createLocal);

    hooks.fn = proto;
    hooks.min = min;
    hooks.max = max;
    hooks.now = now;
    hooks.utc = createUTC;
    hooks.unix = createUnix;
    hooks.months = listMonths;
    hooks.isDate = isDate;
    hooks.locale = getSetGlobalLocale;
    hooks.invalid = createInvalid;
    hooks.duration = createDuration;
    hooks.isMoment = isMoment;
    hooks.weekdays = listWeekdays;
    hooks.parseZone = createInZone;
    hooks.localeData = getLocale;
    hooks.isDuration = isDuration;
    hooks.monthsShort = listMonthsShort;
    hooks.weekdaysMin = listWeekdaysMin;
    hooks.defineLocale = defineLocale;
    hooks.updateLocale = updateLocale;
    hooks.locales = listLocales;
    hooks.weekdaysShort = listWeekdaysShort;
    hooks.normalizeUnits = normalizeUnits;
    hooks.relativeTimeRounding = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat = getCalendarFormat;
    hooks.prototype = proto;

    // currently HTML5 input type only supports 24-hour formats
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD', // <input type="date" />
        TIME: 'HH:mm', // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss', // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS', // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW', // <input type="week" />
        MONTH: 'YYYY-MM', // <input type="month" />
    };

    return hooks;

})));
//! moment-timezone.js
//! version : 0.5.31
//! Copyright (c) JS Foundation and other contributors
//! license : MIT
//! github.com/moment/moment-timezone

(function (root, factory) {
	"use strict";

	/*global define*/
	if (typeof module === 'object' && module.exports) {
		module.exports = factory(require('moment')); // Node
	} else if (typeof define === 'function' && define.amd) {
		define(['moment'], factory);                 // AMD
	} else {
		factory(root.moment);                        // Browser
	}
}(this, function (moment) {
	"use strict";

	// Resolves es6 module loading issue
	if (moment.version === undefined && moment.default) {
		moment = moment.default;
	}

	// Do not load moment-timezone a second time.
	// if (moment.tz !== undefined) {
	// 	logError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);
	// 	return moment;
	// }

	var VERSION = "0.5.31",
		zones = {},
		links = {},
		countries = {},
		names = {},
		guesses = {},
		cachedGuess;

	if (!moment || typeof moment.version !== 'string') {
		logError('Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/');
	}

	var momentVersion = moment.version.split('.'),
		major = +momentVersion[0],
		minor = +momentVersion[1];

	// Moment.js version check
	if (major < 2 || (major === 2 && minor < 6)) {
		logError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');
	}

	/************************************
		Unpacking
	************************************/

	function charCodeToInt(charCode) {
		if (charCode > 96) {
			return charCode - 87;
		} else if (charCode > 64) {
			return charCode - 29;
		}
		return charCode - 48;
	}

	function unpackBase60(string) {
		var i = 0,
			parts = string.split('.'),
			whole = parts[0],
			fractional = parts[1] || '',
			multiplier = 1,
			num,
			out = 0,
			sign = 1;

		// handle negative numbers
		if (string.charCodeAt(0) === 45) {
			i = 1;
			sign = -1;
		}

		// handle digits before the decimal
		for (i; i < whole.length; i++) {
			num = charCodeToInt(whole.charCodeAt(i));
			out = 60 * out + num;
		}

		// handle digits after the decimal
		for (i = 0; i < fractional.length; i++) {
			multiplier = multiplier / 60;
			num = charCodeToInt(fractional.charCodeAt(i));
			out += num * multiplier;
		}

		return out * sign;
	}

	function arrayToInt (array) {
		for (var i = 0; i < array.length; i++) {
			array[i] = unpackBase60(array[i]);
		}
	}

	function intToUntil (array, length) {
		for (var i = 0; i < length; i++) {
			array[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000)); // minutes to milliseconds
		}

		array[length - 1] = Infinity;
	}

	function mapIndices (source, indices) {
		var out = [], i;

		for (i = 0; i < indices.length; i++) {
			out[i] = source[indices[i]];
		}

		return out;
	}

	function unpack (string) {
		var data = string.split('|'),
			offsets = data[2].split(' '),
			indices = data[3].split(''),
			untils  = data[4].split(' ');

		arrayToInt(offsets);
		arrayToInt(indices);
		arrayToInt(untils);

		intToUntil(untils, indices.length);

		return {
			name       : data[0],
			abbrs      : mapIndices(data[1].split(' '), indices),
			offsets    : mapIndices(offsets, indices),
			untils     : untils,
			population : data[5] | 0
		};
	}

	/************************************
		Zone object
	************************************/

	function Zone (packedString) {
		if (packedString) {
			this._set(unpack(packedString));
		}
	}

	Zone.prototype = {
		_set : function (unpacked) {
			this.name       = unpacked.name;
			this.abbrs      = unpacked.abbrs;
			this.untils     = unpacked.untils;
			this.offsets    = unpacked.offsets;
			this.population = unpacked.population;
		},

		_index : function (timestamp) {
			var target = +timestamp,
				untils = this.untils,
				i;

			for (i = 0; i < untils.length; i++) {
				if (target < untils[i]) {
					return i;
				}
			}
		},

		countries : function () {
			var zone_name = this.name;
			return Object.keys(countries).filter(function (country_code) {
				return countries[country_code].zones.indexOf(zone_name) !== -1;
			});
		},

		parse : function (timestamp) {
			var target  = +timestamp,
				offsets = this.offsets,
				untils  = this.untils,
				max     = untils.length - 1,
				offset, offsetNext, offsetPrev, i;

			for (i = 0; i < max; i++) {
				offset     = offsets[i];
				offsetNext = offsets[i + 1];
				offsetPrev = offsets[i ? i - 1 : i];

				if (offset < offsetNext && tz.moveAmbiguousForward) {
					offset = offsetNext;
				} else if (offset > offsetPrev && tz.moveInvalidForward) {
					offset = offsetPrev;
				}

				if (target < untils[i] - (offset * 60000)) {
					return offsets[i];
				}
			}

			return offsets[max];
		},

		abbr : function (mom) {
			return this.abbrs[this._index(mom)];
		},

		offset : function (mom) {
			logError("zone.offset has been deprecated in favor of zone.utcOffset");
			return this.offsets[this._index(mom)];
		},

		utcOffset : function (mom) {
			return this.offsets[this._index(mom)];
		}
	};

	/************************************
		Country object
	************************************/

	function Country (country_name, zone_names) {
		this.name = country_name;
		this.zones = zone_names;
	}

	/************************************
		Current Timezone
	************************************/

	function OffsetAt(at) {
		var timeString = at.toTimeString();
		var abbr = timeString.match(/\([a-z ]+\)/i);
		if (abbr && abbr[0]) {
			// 17:56:31 GMT-0600 (CST)
			// 17:56:31 GMT-0600 (Central Standard Time)
			abbr = abbr[0].match(/[A-Z]/g);
			abbr = abbr ? abbr.join('') : undefined;
		} else {
			// 17:56:31 CST
			// 17:56:31 GMT+0800 (Âè∞ÂåóÊ®ôÊ∫ñÊôÇÈñì)
			abbr = timeString.match(/[A-Z]{3,5}/g);
			abbr = abbr ? abbr[0] : undefined;
		}

		if (abbr === 'GMT') {
			abbr = undefined;
		}

		this.at = +at;
		this.abbr = abbr;
		this.offset = at.getTimezoneOffset();
	}

	function ZoneScore(zone) {
		this.zone = zone;
		this.offsetScore = 0;
		this.abbrScore = 0;
	}

	ZoneScore.prototype.scoreOffsetAt = function (offsetAt) {
		this.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset);
		if (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {
			this.abbrScore++;
		}
	};

	function findChange(low, high) {
		var mid, diff;

		while ((diff = ((high.at - low.at) / 12e4 | 0) * 6e4)) {
			mid = new OffsetAt(new Date(low.at + diff));
			if (mid.offset === low.offset) {
				low = mid;
			} else {
				high = mid;
			}
		}

		return low;
	}

	function userOffsets() {
		var startYear = new Date().getFullYear() - 2,
			last = new OffsetAt(new Date(startYear, 0, 1)),
			offsets = [last],
			change, next, i;

		for (i = 1; i < 48; i++) {
			next = new OffsetAt(new Date(startYear, i, 1));
			if (next.offset !== last.offset) {
				change = findChange(last, next);
				offsets.push(change);
				offsets.push(new OffsetAt(new Date(change.at + 6e4)));
			}
			last = next;
		}

		for (i = 0; i < 4; i++) {
			offsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));
			offsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));
		}

		return offsets;
	}

	function sortZoneScores (a, b) {
		if (a.offsetScore !== b.offsetScore) {
			return a.offsetScore - b.offsetScore;
		}
		if (a.abbrScore !== b.abbrScore) {
			return a.abbrScore - b.abbrScore;
		}
		if (a.zone.population !== b.zone.population) {
			return b.zone.population - a.zone.population;
		}
		return b.zone.name.localeCompare(a.zone.name);
	}

	function addToGuesses (name, offsets) {
		var i, offset;
		arrayToInt(offsets);
		for (i = 0; i < offsets.length; i++) {
			offset = offsets[i];
			guesses[offset] = guesses[offset] || {};
			guesses[offset][name] = true;
		}
	}

	function guessesForUserOffsets (offsets) {
		var offsetsLength = offsets.length,
			filteredGuesses = {},
			out = [],
			i, j, guessesOffset;

		for (i = 0; i < offsetsLength; i++) {
			guessesOffset = guesses[offsets[i].offset] || {};
			for (j in guessesOffset) {
				if (guessesOffset.hasOwnProperty(j)) {
					filteredGuesses[j] = true;
				}
			}
		}

		for (i in filteredGuesses) {
			if (filteredGuesses.hasOwnProperty(i)) {
				out.push(names[i]);
			}
		}

		return out;
	}

	function rebuildGuess () {

		// use Intl API when available and returning valid time zone
		try {
			var intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;
			if (intlName && intlName.length > 3) {
				var name = names[normalizeName(intlName)];
				if (name) {
					return name;
				}
				logError("Moment Timezone found " + intlName + " from the Intl api, but did not have that data loaded.");
			}
		} catch (e) {
			// Intl unavailable, fall back to manual guessing.
		}

		var offsets = userOffsets(),
			offsetsLength = offsets.length,
			guesses = guessesForUserOffsets(offsets),
			zoneScores = [],
			zoneScore, i, j;

		for (i = 0; i < guesses.length; i++) {
			zoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);
			for (j = 0; j < offsetsLength; j++) {
				zoneScore.scoreOffsetAt(offsets[j]);
			}
			zoneScores.push(zoneScore);
		}

		zoneScores.sort(sortZoneScores);

		return zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;
	}

	function guess (ignoreCache) {
		if (!cachedGuess || ignoreCache) {
			cachedGuess = rebuildGuess();
		}
		return cachedGuess;
	}

	/************************************
		Global Methods
	************************************/

	function normalizeName (name) {
		return (name || '').toLowerCase().replace(/\//g, '_');
	}

	function addZone (packed) {
		var i, name, split, normalized;

		if (typeof packed === "string") {
			packed = [packed];
		}

		for (i = 0; i < packed.length; i++) {
			split = packed[i].split('|');
			name = split[0];
			normalized = normalizeName(name);
			zones[normalized] = packed[i];
			names[normalized] = name;
			addToGuesses(normalized, split[2].split(' '));
		}
	}

	function getZone (name, caller) {

		name = normalizeName(name);

		var zone = zones[name];
		var link;

		if (zone instanceof Zone) {
			return zone;
		}

		if (typeof zone === 'string') {
			zone = new Zone(zone);
			zones[name] = zone;
			return zone;
		}

		// Pass getZone to prevent recursion more than 1 level deep
		if (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {
			zone = zones[name] = new Zone();
			zone._set(link);
			zone.name = names[name];
			return zone;
		}

		return null;
	}

	function getNames () {
		var i, out = [];

		for (i in names) {
			if (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {
				out.push(names[i]);
			}
		}

		return out.sort();
	}

	function getCountryNames () {
		return Object.keys(countries);
	}

	function addLink (aliases) {
		var i, alias, normal0, normal1;

		if (typeof aliases === "string") {
			aliases = [aliases];
		}

		for (i = 0; i < aliases.length; i++) {
			alias = aliases[i].split('|');

			normal0 = normalizeName(alias[0]);
			normal1 = normalizeName(alias[1]);

			links[normal0] = normal1;
			names[normal0] = alias[0];

			links[normal1] = normal0;
			names[normal1] = alias[1];
		}
	}

	function addCountries (data) {
		var i, country_code, country_zones, split;
		if (!data || !data.length) return;
		for (i = 0; i < data.length; i++) {
			split = data[i].split('|');
			country_code = split[0].toUpperCase();
			country_zones = split[1].split(' ');
			countries[country_code] = new Country(
				country_code,
				country_zones
			);
		}
	}

	function getCountry (name) {
		name = name.toUpperCase();
		return countries[name] || null;
	}

	function zonesForCountry(country, with_offset) {
		country = getCountry(country);

		if (!country) return null;

		var zones = country.zones.sort();

		if (with_offset) {
			return zones.map(function (zone_name) {
				var zone = getZone(zone_name);
				return {
					name: zone_name,
					offset: zone.utcOffset(new Date())
				};
			});
		}

		return zones;
	}

	function loadData (data) {
		addZone(data.zones);
		addLink(data.links);
		addCountries(data.countries);
		tz.dataVersion = data.version;
	}

	function zoneExists (name) {
		if (!zoneExists.didShowError) {
			zoneExists.didShowError = true;
				logError("moment.tz.zoneExists('" + name + "') has been deprecated in favor of !moment.tz.zone('" + name + "')");
		}
		return !!getZone(name);
	}

	function needsOffset (m) {
		var isUnixTimestamp = (m._f === 'X' || m._f === 'x');
		return !!(m._a && (m._tzm === undefined) && !isUnixTimestamp);
	}

	function logError (message) {
		if (typeof console !== 'undefined' && typeof console.error === 'function') {
			console.error(message);
		}
	}

	/************************************
		moment.tz namespace
	************************************/

	function tz (input) {
		var args = Array.prototype.slice.call(arguments, 0, -1),
			name = arguments[arguments.length - 1],
			zone = getZone(name),
			out  = moment.utc.apply(null, args);

		if (zone && !moment.isMoment(input) && needsOffset(out)) {
			out.add(zone.parse(out), 'minutes');
		}

		out.tz(name);

		return out;
	}

	tz.version      = VERSION;
	tz.dataVersion  = '';
	tz._zones       = zones;
	tz._links       = links;
	tz._names       = names;
	tz._countries	= countries;
	tz.add          = addZone;
	tz.link         = addLink;
	tz.load         = loadData;
	tz.zone         = getZone;
	tz.zoneExists   = zoneExists; // deprecated in 0.1.0
	tz.guess        = guess;
	tz.names        = getNames;
	tz.Zone         = Zone;
	tz.unpack       = unpack;
	tz.unpackBase60 = unpackBase60;
	tz.needsOffset  = needsOffset;
	tz.moveInvalidForward   = true;
	tz.moveAmbiguousForward = false;
	tz.countries    = getCountryNames;
	tz.zonesForCountry = zonesForCountry;

	/************************************
		Interface with Moment.js
	************************************/

	var fn = moment.fn;

	moment.tz = tz;

	moment.defaultZone = null;

	moment.updateOffset = function (mom, keepTime) {
		var zone = moment.defaultZone,
			offset;

		if (mom._z === undefined) {
			if (zone && needsOffset(mom) && !mom._isUTC) {
				mom._d = moment.utc(mom._a)._d;
				mom.utc().add(zone.parse(mom), 'minutes');
			}
			mom._z = zone;
		}
		if (mom._z) {
			offset = mom._z.utcOffset(mom);
			if (Math.abs(offset) < 16) {
				offset = offset / 60;
			}
			if (mom.utcOffset !== undefined) {
				var z = mom._z;
				mom.utcOffset(-offset, keepTime);
				mom._z = z;
			} else {
				mom.zone(offset, keepTime);
			}
		}
	};

	fn.tz = function (name, keepTime) {
		if (name) {
			if (typeof name !== 'string') {
				throw new Error('Time zone name must be a string, got ' + name + ' [' + typeof name + ']');
			}
			this._z = getZone(name);
			if (this._z) {
				moment.updateOffset(this, keepTime);
			} else {
				logError("Moment Timezone has no data for " + name + ". See http://momentjs.com/timezone/docs/#/data-loading/.");
			}
			return this;
		}
		if (this._z) { return this._z.name; }
	};

	function abbrWrap (old) {
		return function () {
			if (this._z) { return this._z.abbr(this); }
			return old.call(this);
		};
	}

	function resetZoneWrap (old) {
		return function () {
			this._z = null;
			return old.apply(this, arguments);
		};
	}

	function resetZoneWrap2 (old) {
		return function () {
			if (arguments.length > 0) this._z = null;
			return old.apply(this, arguments);
		};
	}

	fn.zoneName  = abbrWrap(fn.zoneName);
	fn.zoneAbbr  = abbrWrap(fn.zoneAbbr);
	fn.utc       = resetZoneWrap(fn.utc);
	fn.local     = resetZoneWrap(fn.local);
	fn.utcOffset = resetZoneWrap2(fn.utcOffset);

	moment.tz.setDefault = function(name) {
		if (major < 2 || (major === 2 && minor < 9)) {
			logError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');
		}
		moment.defaultZone = name ? getZone(name) : null;
		return moment;
	};

	// Cloning a moment should include the _z property.
	var momentProperties = moment.momentProperties;
	if (Object.prototype.toString.call(momentProperties) === '[object Array]') {
		// moment 2.8.1+
		momentProperties.push('_z');
		momentProperties.push('_a');
	} else if (momentProperties) {
		// moment 2.7.0
		momentProperties._z = null;
	}

	loadData({
		"version": "2020a",
		"zones": [
			"Africa/Abidjan|GMT|0|0||48e5",
			"Africa/Nairobi|EAT|-30|0||47e5",
			"Africa/Algiers|CET|-10|0||26e5",
			"Africa/Lagos|WAT|-10|0||17e6",
			"Africa/Maputo|CAT|-20|0||26e5",
			"Africa/Cairo|EET|-20|0||15e6",
			"Africa/Casablanca|+00 +01|0 -10|010101010101010101010101010101|1O9e0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0|32e5",
			"Europe/Paris|CET CEST|-10 -20|01010101010101010101010|1O9d0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e6",
			"Africa/Johannesburg|SAST|-20|0||84e5",
			"Africa/Khartoum|EAT CAT|-30 -20|01|1Usl0|51e5",
			"Africa/Sao_Tome|GMT WAT|0 -10|010|1UQN0 2q00|",
			"Africa/Windhoek|CAT WAT|-20 -10|0101010|1Oc00 11B0 1nX0 11B0 1nX0 11B0|32e4",
			"America/Adak|HST HDT|a0 90|01010101010101010101010|1O100 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|326",
			"America/Anchorage|AKST AKDT|90 80|01010101010101010101010|1O0X0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|30e4",
			"America/Santo_Domingo|AST|40|0||29e5",
			"America/Fortaleza|-03|30|0||34e5",
			"America/Asuncion|-03 -04|30 40|01010101010101010101010|1O6r0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0|28e5",
			"America/Panama|EST|50|0||15e5",
			"America/Mexico_City|CST CDT|60 50|01010101010101010101010|1Oc80 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|20e6",
			"America/Managua|CST|60|0||22e5",
			"America/La_Paz|-04|40|0||19e5",
			"America/Lima|-05|50|0||11e6",
			"America/Denver|MST MDT|70 60|01010101010101010101010|1O0V0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e5",
			"America/Campo_Grande|-03 -04|30 40|0101010101|1NTf0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|77e4",
			"America/Cancun|CST EST|60 50|01|1NKU0|63e4",
			"America/Caracas|-0430 -04|4u 40|01|1QMT0|29e5",
			"America/Chicago|CST CDT|60 50|01010101010101010101010|1O0U0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|92e5",
			"America/Chihuahua|MST MDT|70 60|01010101010101010101010|1Oc90 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|81e4",
			"America/Phoenix|MST|70|0||42e5",
			"America/Whitehorse|PST PDT MST|80 70 70|010101010102|1O0W0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|23e3",
			"America/New_York|EST EDT|50 40|01010101010101010101010|1O0T0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e6",
			"America/Los_Angeles|PST PDT|80 70|01010101010101010101010|1O0W0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e6",
			"America/Fort_Nelson|PST MST|80 70|01|1O0W0|39e2",
			"America/Halifax|AST ADT|40 30|01010101010101010101010|1O0S0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|39e4",
			"America/Godthab|-03 -02|30 20|01010101010101010101010|1O9d0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e3",
			"America/Grand_Turk|EST EDT AST|50 40 40|0121010101010101010|1O0T0 1zb0 5Ip0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e2",
			"America/Havana|CST CDT|50 40|01010101010101010101010|1O0R0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0|21e5",
			"America/Metlakatla|PST AKST AKDT|80 90 80|01212120121212121212121|1PAa0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 uM0 jB0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2",
			"America/Miquelon|-03 -02|30 20|01010101010101010101010|1O0R0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|61e2",
			"America/Montevideo|-02 -03|20 30|01|1O0Q0|17e5",
			"America/Noronha|-02|20|0||30e2",
			"America/Port-au-Prince|EST EDT|50 40|010101010101010101010|1O0T0 1zb0 3iN0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5",
			"Antarctica/Palmer|-03 -04|30 40|010|1QSr0 Ap0|40",
			"America/Santiago|-03 -04|30 40|010101010101010101010|1QSr0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0|62e5",
			"America/Sao_Paulo|-02 -03|20 30|0101010101|1NTe0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|20e6",
			"Atlantic/Azores|-01 +00|10 0|01010101010101010101010|1O9d0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|25e4",
			"America/St_Johns|NST NDT|3u 2u|01010101010101010101010|1O0Ru 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4",
			"Antarctica/Casey|+08 +11|-80 -b0|010|1RWg0 3m10|10",
			"Asia/Bangkok|+07|-70|0||15e6",
			"Asia/Vladivostok|+10|-a0|0||60e4",
			"Pacific/Bougainville|+11|-b0|0||18e4",
			"Asia/Tashkent|+05|-50|0||23e5",
			"Pacific/Auckland|NZDT NZST|-d0 -c0|01010101010101010101010|1ObO0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00|14e5",
			"Asia/Baghdad|+03|-30|0||66e5",
			"Antarctica/Troll|+00 +02|0 -20|01010101010101010101010|1O9d0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|40",
			"Asia/Dhaka|+06|-60|0||16e6",
			"Asia/Amman|EET EEST|-20 -30|01010101010101010101010|1O8m0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0|25e5",
			"Asia/Kamchatka|+12|-c0|0||18e4",
			"Asia/Baku|+04 +05|-40 -50|010|1O9c0 1o00|27e5",
			"Asia/Barnaul|+06 +07|-60 -70|01|1QyI0|",
			"Asia/Beirut|EET EEST|-20 -30|01010101010101010101010|1O9a0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0|22e5",
			"Asia/Kuala_Lumpur|+08|-80|0||71e5",
			"Asia/Kolkata|IST|-5u|0||15e6",
			"Asia/Chita|+08 +09|-80 -90|01|1QyG0|33e4",
			"Asia/Ulaanbaatar|+08 +09|-80 -90|01010|1O8G0 1cJ0 1cP0 1cJ0|12e5",
			"Asia/Shanghai|CST|-80|0||23e6",
			"Asia/Colombo|+0530|-5u|0||22e5",
			"Asia/Damascus|EET EEST|-20 -30|01010101010101010101010|1O8m0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0|26e5",
			"Asia/Yakutsk|+09|-90|0||28e4",
			"Asia/Dubai|+04|-40|0||39e5",
			"Asia/Famagusta|EET EEST +03|-20 -30 -30|0101201010101010101010|1O9d0 1o00 11A0 15U0 2Ks0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
			"Asia/Gaza|EET EEST|-20 -30|01010101010101010101010|1O8K0 1nz0 1220 1qL0 WN0 1qL0 WN0 1qL0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0|18e5",
			"Asia/Hong_Kong|HKT|-80|0||73e5",
			"Asia/Hovd|+07 +08|-70 -80|01010|1O8H0 1cJ0 1cP0 1cJ0|81e3",
			"Europe/Istanbul|EET EEST +03|-20 -30 -30|01012|1O9d0 1tA0 U00 15w0|13e6",
			"Asia/Jakarta|WIB|-70|0||31e6",
			"Asia/Jayapura|WIT|-90|0||26e4",
			"Asia/Jerusalem|IST IDT|-20 -30|01010101010101010101010|1O8o0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0|81e4",
			"Asia/Kabul|+0430|-4u|0||46e5",
			"Asia/Karachi|PKT|-50|0||24e6",
			"Asia/Kathmandu|+0545|-5J|0||12e5",
			"Asia/Magadan|+10 +11|-a0 -b0|01|1QJQ0|95e3",
			"Asia/Makassar|WITA|-80|0||15e5",
			"Asia/Manila|PST|-80|0||24e6",
			"Europe/Athens|EET EEST|-20 -30|01010101010101010101010|1O9d0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|35e5",
			"Asia/Novosibirsk|+06 +07|-60 -70|01|1Rmk0|15e5",
			"Asia/Pyongyang|KST KST|-90 -8u|010|1P4D0 6BA0|29e5",
			"Asia/Qyzylorda|+06 +05|-60 -50|01|1Xei0|73e4",
			"Asia/Rangoon|+0630|-6u|0||48e5",
			"Asia/Sakhalin|+10 +11|-a0 -b0|01|1QyE0|58e4",
			"Asia/Seoul|KST|-90|0||23e6",
			"Asia/Tehran|+0330 +0430|-3u -4u|01010101010101010101010|1O6ku 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0|14e6",
			"Asia/Tokyo|JST|-90|0||38e6",
			"Asia/Tomsk|+06 +07|-60 -70|01|1QXU0|10e5",
			"Europe/Lisbon|WET WEST|0 -10|01010101010101010101010|1O9d0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e5",
			"Atlantic/Cape_Verde|-01|10|0||50e4",
			"Australia/Sydney|AEDT AEST|-b0 -a0|01010101010101010101010|1ObQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0|40e5",
			"Australia/Adelaide|ACDT ACST|-au -9u|01010101010101010101010|1ObQu 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0|11e5",
			"Australia/Brisbane|AEST|-a0|0||20e5",
			"Australia/Darwin|ACST|-9u|0||12e4",
			"Australia/Eucla|+0845|-8J|0||368",
			"Australia/Lord_Howe|+11 +1030|-b0 -au|01010101010101010101010|1ObP0 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu|347",
			"Australia/Perth|AWST|-80|0||18e5",
			"Pacific/Easter|-05 -06|50 60|010101010101010101010|1QSr0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0|30e2",
			"Europe/Dublin|GMT IST|0 -10|01010101010101010101010|1O9d0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
			"Etc/GMT-1|+01|-10|0||",
			"Pacific/Fakaofo|+13|-d0|0||483",
			"Pacific/Kiritimati|+14|-e0|0||51e2",
			"Etc/GMT-2|+02|-20|0||",
			"Pacific/Tahiti|-10|a0|0||18e4",
			"Pacific/Niue|-11|b0|0||12e2",
			"Etc/GMT+12|-12|c0|0||",
			"Pacific/Galapagos|-06|60|0||25e3",
			"Etc/GMT+7|-07|70|0||",
			"Pacific/Pitcairn|-08|80|0||56",
			"Pacific/Gambier|-09|90|0||125",
			"Etc/UTC|UTC|0|0||",
			"Europe/Ulyanovsk|+03 +04|-30 -40|01|1QyL0|13e5",
			"Europe/London|GMT BST|0 -10|01010101010101010101010|1O9d0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|10e6",
			"Europe/Chisinau|EET EEST|-20 -30|01010101010101010101010|1O9c0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|67e4",
			"Europe/Moscow|MSK|-30|0||16e6",
			"Europe/Saratov|+03 +04|-30 -40|01|1Sfz0|",
			"Europe/Volgograd|+03 +04|-30 -40|01|1WQL0|10e5",
			"Pacific/Honolulu|HST|a0|0||37e4",
			"MET|MET MEST|-10 -20|01010101010101010101010|1O9d0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
			"Pacific/Chatham|+1345 +1245|-dJ -cJ|01010101010101010101010|1ObO0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00|600",
			"Pacific/Apia|+14 +13|-e0 -d0|01010101010101010101010|1ObO0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00|37e3",
			"Pacific/Fiji|+13 +12|-d0 -c0|01010101010101010101010|1NF20 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 20o0 pc0 20o0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0|88e4",
			"Pacific/Guam|ChST|-a0|0||17e4",
			"Pacific/Marquesas|-0930|9u|0||86e2",
			"Pacific/Pago_Pago|SST|b0|0||37e2",
			"Pacific/Norfolk|+1130 +11 +12|-bu -b0 -c0|012121212121212|1PoCu 9Jcu 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0|25e4",
			"Pacific/Tongatapu|+13 +14|-d0 -e0|010|1S4d0 s00|75e3"
		],
		"links": [
			"Africa/Abidjan|Africa/Accra",
			"Africa/Abidjan|Africa/Bamako",
			"Africa/Abidjan|Africa/Banjul",
			"Africa/Abidjan|Africa/Bissau",
			"Africa/Abidjan|Africa/Conakry",
			"Africa/Abidjan|Africa/Dakar",
			"Africa/Abidjan|Africa/Freetown",
			"Africa/Abidjan|Africa/Lome",
			"Africa/Abidjan|Africa/Monrovia",
			"Africa/Abidjan|Africa/Nouakchott",
			"Africa/Abidjan|Africa/Ouagadougou",
			"Africa/Abidjan|Africa/Timbuktu",
			"Africa/Abidjan|America/Danmarkshavn",
			"Africa/Abidjan|Atlantic/Reykjavik",
			"Africa/Abidjan|Atlantic/St_Helena",
			"Africa/Abidjan|Etc/GMT",
			"Africa/Abidjan|Etc/GMT+0",
			"Africa/Abidjan|Etc/GMT-0",
			"Africa/Abidjan|Etc/GMT0",
			"Africa/Abidjan|Etc/Greenwich",
			"Africa/Abidjan|GMT",
			"Africa/Abidjan|GMT+0",
			"Africa/Abidjan|GMT-0",
			"Africa/Abidjan|GMT0",
			"Africa/Abidjan|Greenwich",
			"Africa/Abidjan|Iceland",
			"Africa/Algiers|Africa/Tunis",
			"Africa/Cairo|Africa/Tripoli",
			"Africa/Cairo|Egypt",
			"Africa/Cairo|Europe/Kaliningrad",
			"Africa/Cairo|Libya",
			"Africa/Casablanca|Africa/El_Aaiun",
			"Africa/Johannesburg|Africa/Maseru",
			"Africa/Johannesburg|Africa/Mbabane",
			"Africa/Lagos|Africa/Bangui",
			"Africa/Lagos|Africa/Brazzaville",
			"Africa/Lagos|Africa/Douala",
			"Africa/Lagos|Africa/Kinshasa",
			"Africa/Lagos|Africa/Libreville",
			"Africa/Lagos|Africa/Luanda",
			"Africa/Lagos|Africa/Malabo",
			"Africa/Lagos|Africa/Ndjamena",
			"Africa/Lagos|Africa/Niamey",
			"Africa/Lagos|Africa/Porto-Novo",
			"Africa/Maputo|Africa/Blantyre",
			"Africa/Maputo|Africa/Bujumbura",
			"Africa/Maputo|Africa/Gaborone",
			"Africa/Maputo|Africa/Harare",
			"Africa/Maputo|Africa/Kigali",
			"Africa/Maputo|Africa/Lubumbashi",
			"Africa/Maputo|Africa/Lusaka",
			"Africa/Nairobi|Africa/Addis_Ababa",
			"Africa/Nairobi|Africa/Asmara",
			"Africa/Nairobi|Africa/Asmera",
			"Africa/Nairobi|Africa/Dar_es_Salaam",
			"Africa/Nairobi|Africa/Djibouti",
			"Africa/Nairobi|Africa/Juba",
			"Africa/Nairobi|Africa/Kampala",
			"Africa/Nairobi|Africa/Mogadishu",
			"Africa/Nairobi|Indian/Antananarivo",
			"Africa/Nairobi|Indian/Comoro",
			"Africa/Nairobi|Indian/Mayotte",
			"America/Adak|America/Atka",
			"America/Adak|US/Aleutian",
			"America/Anchorage|America/Juneau",
			"America/Anchorage|America/Nome",
			"America/Anchorage|America/Sitka",
			"America/Anchorage|America/Yakutat",
			"America/Anchorage|US/Alaska",
			"America/Campo_Grande|America/Cuiaba",
			"America/Chicago|America/Indiana/Knox",
			"America/Chicago|America/Indiana/Tell_City",
			"America/Chicago|America/Knox_IN",
			"America/Chicago|America/Matamoros",
			"America/Chicago|America/Menominee",
			"America/Chicago|America/North_Dakota/Beulah",
			"America/Chicago|America/North_Dakota/Center",
			"America/Chicago|America/North_Dakota/New_Salem",
			"America/Chicago|America/Rainy_River",
			"America/Chicago|America/Rankin_Inlet",
			"America/Chicago|America/Resolute",
			"America/Chicago|America/Winnipeg",
			"America/Chicago|CST6CDT",
			"America/Chicago|Canada/Central",
			"America/Chicago|US/Central",
			"America/Chicago|US/Indiana-Starke",
			"America/Chihuahua|America/Mazatlan",
			"America/Chihuahua|Mexico/BajaSur",
			"America/Denver|America/Boise",
			"America/Denver|America/Cambridge_Bay",
			"America/Denver|America/Edmonton",
			"America/Denver|America/Inuvik",
			"America/Denver|America/Ojinaga",
			"America/Denver|America/Shiprock",
			"America/Denver|America/Yellowknife",
			"America/Denver|Canada/Mountain",
			"America/Denver|MST7MDT",
			"America/Denver|Navajo",
			"America/Denver|US/Mountain",
			"America/Fortaleza|America/Araguaina",
			"America/Fortaleza|America/Argentina/Buenos_Aires",
			"America/Fortaleza|America/Argentina/Catamarca",
			"America/Fortaleza|America/Argentina/ComodRivadavia",
			"America/Fortaleza|America/Argentina/Cordoba",
			"America/Fortaleza|America/Argentina/Jujuy",
			"America/Fortaleza|America/Argentina/La_Rioja",
			"America/Fortaleza|America/Argentina/Mendoza",
			"America/Fortaleza|America/Argentina/Rio_Gallegos",
			"America/Fortaleza|America/Argentina/Salta",
			"America/Fortaleza|America/Argentina/San_Juan",
			"America/Fortaleza|America/Argentina/San_Luis",
			"America/Fortaleza|America/Argentina/Tucuman",
			"America/Fortaleza|America/Argentina/Ushuaia",
			"America/Fortaleza|America/Bahia",
			"America/Fortaleza|America/Belem",
			"America/Fortaleza|America/Buenos_Aires",
			"America/Fortaleza|America/Catamarca",
			"America/Fortaleza|America/Cayenne",
			"America/Fortaleza|America/Cordoba",
			"America/Fortaleza|America/Jujuy",
			"America/Fortaleza|America/Maceio",
			"America/Fortaleza|America/Mendoza",
			"America/Fortaleza|America/Paramaribo",
			"America/Fortaleza|America/Recife",
			"America/Fortaleza|America/Rosario",
			"America/Fortaleza|America/Santarem",
			"America/Fortaleza|Antarctica/Rothera",
			"America/Fortaleza|Atlantic/Stanley",
			"America/Fortaleza|Etc/GMT+3",
			"America/Godthab|America/Nuuk",
			"America/Halifax|America/Glace_Bay",
			"America/Halifax|America/Goose_Bay",
			"America/Halifax|America/Moncton",
			"America/Halifax|America/Thule",
			"America/Halifax|Atlantic/Bermuda",
			"America/Halifax|Canada/Atlantic",
			"America/Havana|Cuba",
			"America/La_Paz|America/Boa_Vista",
			"America/La_Paz|America/Guyana",
			"America/La_Paz|America/Manaus",
			"America/La_Paz|America/Porto_Velho",
			"America/La_Paz|Brazil/West",
			"America/La_Paz|Etc/GMT+4",
			"America/Lima|America/Bogota",
			"America/Lima|America/Eirunepe",
			"America/Lima|America/Guayaquil",
			"America/Lima|America/Porto_Acre",
			"America/Lima|America/Rio_Branco",
			"America/Lima|Brazil/Acre",
			"America/Lima|Etc/GMT+5",
			"America/Los_Angeles|America/Ensenada",
			"America/Los_Angeles|America/Santa_Isabel",
			"America/Los_Angeles|America/Tijuana",
			"America/Los_Angeles|America/Vancouver",
			"America/Los_Angeles|Canada/Pacific",
			"America/Los_Angeles|Mexico/BajaNorte",
			"America/Los_Angeles|PST8PDT",
			"America/Los_Angeles|US/Pacific",
			"America/Los_Angeles|US/Pacific-New",
			"America/Managua|America/Belize",
			"America/Managua|America/Costa_Rica",
			"America/Managua|America/El_Salvador",
			"America/Managua|America/Guatemala",
			"America/Managua|America/Regina",
			"America/Managua|America/Swift_Current",
			"America/Managua|America/Tegucigalpa",
			"America/Managua|Canada/Saskatchewan",
			"America/Mexico_City|America/Bahia_Banderas",
			"America/Mexico_City|America/Merida",
			"America/Mexico_City|America/Monterrey",
			"America/Mexico_City|Mexico/General",
			"America/New_York|America/Detroit",
			"America/New_York|America/Fort_Wayne",
			"America/New_York|America/Indiana/Indianapolis",
			"America/New_York|America/Indiana/Marengo",
			"America/New_York|America/Indiana/Petersburg",
			"America/New_York|America/Indiana/Vevay",
			"America/New_York|America/Indiana/Vincennes",
			"America/New_York|America/Indiana/Winamac",
			"America/New_York|America/Indianapolis",
			"America/New_York|America/Iqaluit",
			"America/New_York|America/Kentucky/Louisville",
			"America/New_York|America/Kentucky/Monticello",
			"America/New_York|America/Louisville",
			"America/New_York|America/Montreal",
			"America/New_York|America/Nassau",
			"America/New_York|America/Nipigon",
			"America/New_York|America/Pangnirtung",
			"America/New_York|America/Thunder_Bay",
			"America/New_York|America/Toronto",
			"America/New_York|Canada/Eastern",
			"America/New_York|EST5EDT",
			"America/New_York|US/East-Indiana",
			"America/New_York|US/Eastern",
			"America/New_York|US/Michigan",
			"America/Noronha|Atlantic/South_Georgia",
			"America/Noronha|Brazil/DeNoronha",
			"America/Noronha|Etc/GMT+2",
			"America/Panama|America/Atikokan",
			"America/Panama|America/Cayman",
			"America/Panama|America/Coral_Harbour",
			"America/Panama|America/Jamaica",
			"America/Panama|EST",
			"America/Panama|Jamaica",
			"America/Phoenix|America/Creston",
			"America/Phoenix|America/Dawson_Creek",
			"America/Phoenix|America/Hermosillo",
			"America/Phoenix|MST",
			"America/Phoenix|US/Arizona",
			"America/Santiago|Chile/Continental",
			"America/Santo_Domingo|America/Anguilla",
			"America/Santo_Domingo|America/Antigua",
			"America/Santo_Domingo|America/Aruba",
			"America/Santo_Domingo|America/Barbados",
			"America/Santo_Domingo|America/Blanc-Sablon",
			"America/Santo_Domingo|America/Curacao",
			"America/Santo_Domingo|America/Dominica",
			"America/Santo_Domingo|America/Grenada",
			"America/Santo_Domingo|America/Guadeloupe",
			"America/Santo_Domingo|America/Kralendijk",
			"America/Santo_Domingo|America/Lower_Princes",
			"America/Santo_Domingo|America/Marigot",
			"America/Santo_Domingo|America/Martinique",
			"America/Santo_Domingo|America/Montserrat",
			"America/Santo_Domingo|America/Port_of_Spain",
			"America/Santo_Domingo|America/Puerto_Rico",
			"America/Santo_Domingo|America/St_Barthelemy",
			"America/Santo_Domingo|America/St_Kitts",
			"America/Santo_Domingo|America/St_Lucia",
			"America/Santo_Domingo|America/St_Thomas",
			"America/Santo_Domingo|America/St_Vincent",
			"America/Santo_Domingo|America/Tortola",
			"America/Santo_Domingo|America/Virgin",
			"America/Sao_Paulo|Brazil/East",
			"America/St_Johns|Canada/Newfoundland",
			"America/Whitehorse|America/Dawson",
			"America/Whitehorse|Canada/Yukon",
			"Antarctica/Palmer|America/Punta_Arenas",
			"Asia/Baghdad|Antarctica/Syowa",
			"Asia/Baghdad|Asia/Aden",
			"Asia/Baghdad|Asia/Bahrain",
			"Asia/Baghdad|Asia/Kuwait",
			"Asia/Baghdad|Asia/Qatar",
			"Asia/Baghdad|Asia/Riyadh",
			"Asia/Baghdad|Etc/GMT-3",
			"Asia/Baghdad|Europe/Kirov",
			"Asia/Baghdad|Europe/Minsk",
			"Asia/Bangkok|Antarctica/Davis",
			"Asia/Bangkok|Asia/Ho_Chi_Minh",
			"Asia/Bangkok|Asia/Krasnoyarsk",
			"Asia/Bangkok|Asia/Novokuznetsk",
			"Asia/Bangkok|Asia/Phnom_Penh",
			"Asia/Bangkok|Asia/Saigon",
			"Asia/Bangkok|Asia/Vientiane",
			"Asia/Bangkok|Etc/GMT-7",
			"Asia/Bangkok|Indian/Christmas",
			"Asia/Dhaka|Antarctica/Vostok",
			"Asia/Dhaka|Asia/Almaty",
			"Asia/Dhaka|Asia/Bishkek",
			"Asia/Dhaka|Asia/Dacca",
			"Asia/Dhaka|Asia/Kashgar",
			"Asia/Dhaka|Asia/Omsk",
			"Asia/Dhaka|Asia/Qostanay",
			"Asia/Dhaka|Asia/Thimbu",
			"Asia/Dhaka|Asia/Thimphu",
			"Asia/Dhaka|Asia/Urumqi",
			"Asia/Dhaka|Etc/GMT-6",
			"Asia/Dhaka|Indian/Chagos",
			"Asia/Dubai|Asia/Muscat",
			"Asia/Dubai|Asia/Tbilisi",
			"Asia/Dubai|Asia/Yerevan",
			"Asia/Dubai|Etc/GMT-4",
			"Asia/Dubai|Europe/Samara",
			"Asia/Dubai|Indian/Mahe",
			"Asia/Dubai|Indian/Mauritius",
			"Asia/Dubai|Indian/Reunion",
			"Asia/Gaza|Asia/Hebron",
			"Asia/Hong_Kong|Hongkong",
			"Asia/Jakarta|Asia/Pontianak",
			"Asia/Jerusalem|Asia/Tel_Aviv",
			"Asia/Jerusalem|Israel",
			"Asia/Kamchatka|Asia/Anadyr",
			"Asia/Kamchatka|Etc/GMT-12",
			"Asia/Kamchatka|Kwajalein",
			"Asia/Kamchatka|Pacific/Funafuti",
			"Asia/Kamchatka|Pacific/Kwajalein",
			"Asia/Kamchatka|Pacific/Majuro",
			"Asia/Kamchatka|Pacific/Nauru",
			"Asia/Kamchatka|Pacific/Tarawa",
			"Asia/Kamchatka|Pacific/Wake",
			"Asia/Kamchatka|Pacific/Wallis",
			"Asia/Kathmandu|Asia/Katmandu",
			"Asia/Kolkata|Asia/Calcutta",
			"Asia/Kuala_Lumpur|Asia/Brunei",
			"Asia/Kuala_Lumpur|Asia/Irkutsk",
			"Asia/Kuala_Lumpur|Asia/Kuching",
			"Asia/Kuala_Lumpur|Asia/Singapore",
			"Asia/Kuala_Lumpur|Etc/GMT-8",
			"Asia/Kuala_Lumpur|Singapore",
			"Asia/Makassar|Asia/Ujung_Pandang",
			"Asia/Rangoon|Asia/Yangon",
			"Asia/Rangoon|Indian/Cocos",
			"Asia/Seoul|ROK",
			"Asia/Shanghai|Asia/Chongqing",
			"Asia/Shanghai|Asia/Chungking",
			"Asia/Shanghai|Asia/Harbin",
			"Asia/Shanghai|Asia/Macao",
			"Asia/Shanghai|Asia/Macau",
			"Asia/Shanghai|Asia/Taipei",
			"Asia/Shanghai|PRC",
			"Asia/Shanghai|ROC",
			"Asia/Tashkent|Antarctica/Mawson",
			"Asia/Tashkent|Asia/Aqtau",
			"Asia/Tashkent|Asia/Aqtobe",
			"Asia/Tashkent|Asia/Ashgabat",
			"Asia/Tashkent|Asia/Ashkhabad",
			"Asia/Tashkent|Asia/Atyrau",
			"Asia/Tashkent|Asia/Dushanbe",
			"Asia/Tashkent|Asia/Oral",
			"Asia/Tashkent|Asia/Samarkand",
			"Asia/Tashkent|Asia/Yekaterinburg",
			"Asia/Tashkent|Etc/GMT-5",
			"Asia/Tashkent|Indian/Kerguelen",
			"Asia/Tashkent|Indian/Maldives",
			"Asia/Tehran|Iran",
			"Asia/Tokyo|Japan",
			"Asia/Ulaanbaatar|Asia/Choibalsan",
			"Asia/Ulaanbaatar|Asia/Ulan_Bator",
			"Asia/Vladivostok|Antarctica/DumontDUrville",
			"Asia/Vladivostok|Asia/Ust-Nera",
			"Asia/Vladivostok|Etc/GMT-10",
			"Asia/Vladivostok|Pacific/Chuuk",
			"Asia/Vladivostok|Pacific/Port_Moresby",
			"Asia/Vladivostok|Pacific/Truk",
			"Asia/Vladivostok|Pacific/Yap",
			"Asia/Yakutsk|Asia/Dili",
			"Asia/Yakutsk|Asia/Khandyga",
			"Asia/Yakutsk|Etc/GMT-9",
			"Asia/Yakutsk|Pacific/Palau",
			"Atlantic/Azores|America/Scoresbysund",
			"Atlantic/Cape_Verde|Etc/GMT+1",
			"Australia/Adelaide|Australia/Broken_Hill",
			"Australia/Adelaide|Australia/South",
			"Australia/Adelaide|Australia/Yancowinna",
			"Australia/Brisbane|Australia/Lindeman",
			"Australia/Brisbane|Australia/Queensland",
			"Australia/Darwin|Australia/North",
			"Australia/Lord_Howe|Australia/LHI",
			"Australia/Perth|Australia/West",
			"Australia/Sydney|Australia/ACT",
			"Australia/Sydney|Australia/Canberra",
			"Australia/Sydney|Australia/Currie",
			"Australia/Sydney|Australia/Hobart",
			"Australia/Sydney|Australia/Melbourne",
			"Australia/Sydney|Australia/NSW",
			"Australia/Sydney|Australia/Tasmania",
			"Australia/Sydney|Australia/Victoria",
			"Etc/UTC|Etc/UCT",
			"Etc/UTC|Etc/Universal",
			"Etc/UTC|Etc/Zulu",
			"Etc/UTC|UCT",
			"Etc/UTC|UTC",
			"Etc/UTC|Universal",
			"Etc/UTC|Zulu",
			"Europe/Athens|Asia/Nicosia",
			"Europe/Athens|EET",
			"Europe/Athens|Europe/Bucharest",
			"Europe/Athens|Europe/Helsinki",
			"Europe/Athens|Europe/Kiev",
			"Europe/Athens|Europe/Mariehamn",
			"Europe/Athens|Europe/Nicosia",
			"Europe/Athens|Europe/Riga",
			"Europe/Athens|Europe/Sofia",
			"Europe/Athens|Europe/Tallinn",
			"Europe/Athens|Europe/Uzhgorod",
			"Europe/Athens|Europe/Vilnius",
			"Europe/Athens|Europe/Zaporozhye",
			"Europe/Chisinau|Europe/Tiraspol",
			"Europe/Dublin|Eire",
			"Europe/Istanbul|Asia/Istanbul",
			"Europe/Istanbul|Turkey",
			"Europe/Lisbon|Atlantic/Canary",
			"Europe/Lisbon|Atlantic/Faeroe",
			"Europe/Lisbon|Atlantic/Faroe",
			"Europe/Lisbon|Atlantic/Madeira",
			"Europe/Lisbon|Portugal",
			"Europe/Lisbon|WET",
			"Europe/London|Europe/Belfast",
			"Europe/London|Europe/Guernsey",
			"Europe/London|Europe/Isle_of_Man",
			"Europe/London|Europe/Jersey",
			"Europe/London|GB",
			"Europe/London|GB-Eire",
			"Europe/Moscow|Europe/Simferopol",
			"Europe/Moscow|W-SU",
			"Europe/Paris|Africa/Ceuta",
			"Europe/Paris|Arctic/Longyearbyen",
			"Europe/Paris|Atlantic/Jan_Mayen",
			"Europe/Paris|CET",
			"Europe/Paris|Europe/Amsterdam",
			"Europe/Paris|Europe/Andorra",
			"Europe/Paris|Europe/Belgrade",
			"Europe/Paris|Europe/Berlin",
			"Europe/Paris|Europe/Bratislava",
			"Europe/Paris|Europe/Brussels",
			"Europe/Paris|Europe/Budapest",
			"Europe/Paris|Europe/Busingen",
			"Europe/Paris|Europe/Copenhagen",
			"Europe/Paris|Europe/Gibraltar",
			"Europe/Paris|Europe/Ljubljana",
			"Europe/Paris|Europe/Luxembourg",
			"Europe/Paris|Europe/Madrid",
			"Europe/Paris|Europe/Malta",
			"Europe/Paris|Europe/Monaco",
			"Europe/Paris|Europe/Oslo",
			"Europe/Paris|Europe/Podgorica",
			"Europe/Paris|Europe/Prague",
			"Europe/Paris|Europe/Rome",
			"Europe/Paris|Europe/San_Marino",
			"Europe/Paris|Europe/Sarajevo",
			"Europe/Paris|Europe/Skopje",
			"Europe/Paris|Europe/Stockholm",
			"Europe/Paris|Europe/Tirane",
			"Europe/Paris|Europe/Vaduz",
			"Europe/Paris|Europe/Vatican",
			"Europe/Paris|Europe/Vienna",
			"Europe/Paris|Europe/Warsaw",
			"Europe/Paris|Europe/Zagreb",
			"Europe/Paris|Europe/Zurich",
			"Europe/Paris|Poland",
			"Europe/Ulyanovsk|Europe/Astrakhan",
			"Pacific/Auckland|Antarctica/McMurdo",
			"Pacific/Auckland|Antarctica/South_Pole",
			"Pacific/Auckland|NZ",
			"Pacific/Bougainville|Antarctica/Macquarie",
			"Pacific/Bougainville|Asia/Srednekolymsk",
			"Pacific/Bougainville|Etc/GMT-11",
			"Pacific/Bougainville|Pacific/Efate",
			"Pacific/Bougainville|Pacific/Guadalcanal",
			"Pacific/Bougainville|Pacific/Kosrae",
			"Pacific/Bougainville|Pacific/Noumea",
			"Pacific/Bougainville|Pacific/Pohnpei",
			"Pacific/Bougainville|Pacific/Ponape",
			"Pacific/Chatham|NZ-CHAT",
			"Pacific/Easter|Chile/EasterIsland",
			"Pacific/Fakaofo|Etc/GMT-13",
			"Pacific/Fakaofo|Pacific/Enderbury",
			"Pacific/Galapagos|Etc/GMT+6",
			"Pacific/Gambier|Etc/GMT+9",
			"Pacific/Guam|Pacific/Saipan",
			"Pacific/Honolulu|HST",
			"Pacific/Honolulu|Pacific/Johnston",
			"Pacific/Honolulu|US/Hawaii",
			"Pacific/Kiritimati|Etc/GMT-14",
			"Pacific/Niue|Etc/GMT+11",
			"Pacific/Pago_Pago|Pacific/Midway",
			"Pacific/Pago_Pago|Pacific/Samoa",
			"Pacific/Pago_Pago|US/Samoa",
			"Pacific/Pitcairn|Etc/GMT+8",
			"Pacific/Tahiti|Etc/GMT+10",
			"Pacific/Tahiti|Pacific/Rarotonga"
		],
		"countries": [
			"AD|Europe/Andorra",
			"AE|Asia/Dubai",
			"AF|Asia/Kabul",
			"AG|America/Port_of_Spain America/Antigua",
			"AI|America/Port_of_Spain America/Anguilla",
			"AL|Europe/Tirane",
			"AM|Asia/Yerevan",
			"AO|Africa/Lagos Africa/Luanda",
			"AQ|Antarctica/Casey Antarctica/Davis Antarctica/DumontDUrville Antarctica/Mawson Antarctica/Palmer Antarctica/Rothera Antarctica/Syowa Antarctica/Troll Antarctica/Vostok Pacific/Auckland Antarctica/McMurdo",
			"AR|America/Argentina/Buenos_Aires America/Argentina/Cordoba America/Argentina/Salta America/Argentina/Jujuy America/Argentina/Tucuman America/Argentina/Catamarca America/Argentina/La_Rioja America/Argentina/San_Juan America/Argentina/Mendoza America/Argentina/San_Luis America/Argentina/Rio_Gallegos America/Argentina/Ushuaia",
			"AS|Pacific/Pago_Pago",
			"AT|Europe/Vienna",
			"AU|Australia/Lord_Howe Antarctica/Macquarie Australia/Hobart Australia/Currie Australia/Melbourne Australia/Sydney Australia/Broken_Hill Australia/Brisbane Australia/Lindeman Australia/Adelaide Australia/Darwin Australia/Perth Australia/Eucla",
			"AW|America/Curacao America/Aruba",
			"AX|Europe/Helsinki Europe/Mariehamn",
			"AZ|Asia/Baku",
			"BA|Europe/Belgrade Europe/Sarajevo",
			"BB|America/Barbados",
			"BD|Asia/Dhaka",
			"BE|Europe/Brussels",
			"BF|Africa/Abidjan Africa/Ouagadougou",
			"BG|Europe/Sofia",
			"BH|Asia/Qatar Asia/Bahrain",
			"BI|Africa/Maputo Africa/Bujumbura",
			"BJ|Africa/Lagos Africa/Porto-Novo",
			"BL|America/Port_of_Spain America/St_Barthelemy",
			"BM|Atlantic/Bermuda",
			"BN|Asia/Brunei",
			"BO|America/La_Paz",
			"BQ|America/Curacao America/Kralendijk",
			"BR|America/Noronha America/Belem America/Fortaleza America/Recife America/Araguaina America/Maceio America/Bahia America/Sao_Paulo America/Campo_Grande America/Cuiaba America/Santarem America/Porto_Velho America/Boa_Vista America/Manaus America/Eirunepe America/Rio_Branco",
			"BS|America/Nassau",
			"BT|Asia/Thimphu",
			"BW|Africa/Maputo Africa/Gaborone",
			"BY|Europe/Minsk",
			"BZ|America/Belize",
			"CA|America/St_Johns America/Halifax America/Glace_Bay America/Moncton America/Goose_Bay America/Blanc-Sablon America/Toronto America/Nipigon America/Thunder_Bay America/Iqaluit America/Pangnirtung America/Atikokan America/Winnipeg America/Rainy_River America/Resolute America/Rankin_Inlet America/Regina America/Swift_Current America/Edmonton America/Cambridge_Bay America/Yellowknife America/Inuvik America/Creston America/Dawson_Creek America/Fort_Nelson America/Vancouver America/Whitehorse America/Dawson",
			"CC|Indian/Cocos",
			"CD|Africa/Maputo Africa/Lagos Africa/Kinshasa Africa/Lubumbashi",
			"CF|Africa/Lagos Africa/Bangui",
			"CG|Africa/Lagos Africa/Brazzaville",
			"CH|Europe/Zurich",
			"CI|Africa/Abidjan",
			"CK|Pacific/Rarotonga",
			"CL|America/Santiago America/Punta_Arenas Pacific/Easter",
			"CM|Africa/Lagos Africa/Douala",
			"CN|Asia/Shanghai Asia/Urumqi",
			"CO|America/Bogota",
			"CR|America/Costa_Rica",
			"CU|America/Havana",
			"CV|Atlantic/Cape_Verde",
			"CW|America/Curacao",
			"CX|Indian/Christmas",
			"CY|Asia/Nicosia Asia/Famagusta",
			"CZ|Europe/Prague",
			"DE|Europe/Zurich Europe/Berlin Europe/Busingen",
			"DJ|Africa/Nairobi Africa/Djibouti",
			"DK|Europe/Copenhagen",
			"DM|America/Port_of_Spain America/Dominica",
			"DO|America/Santo_Domingo",
			"DZ|Africa/Algiers",
			"EC|America/Guayaquil Pacific/Galapagos",
			"EE|Europe/Tallinn",
			"EG|Africa/Cairo",
			"EH|Africa/El_Aaiun",
			"ER|Africa/Nairobi Africa/Asmara",
			"ES|Europe/Madrid Africa/Ceuta Atlantic/Canary",
			"ET|Africa/Nairobi Africa/Addis_Ababa",
			"FI|Europe/Helsinki",
			"FJ|Pacific/Fiji",
			"FK|Atlantic/Stanley",
			"FM|Pacific/Chuuk Pacific/Pohnpei Pacific/Kosrae",
			"FO|Atlantic/Faroe",
			"FR|Europe/Paris",
			"GA|Africa/Lagos Africa/Libreville",
			"GB|Europe/London",
			"GD|America/Port_of_Spain America/Grenada",
			"GE|Asia/Tbilisi",
			"GF|America/Cayenne",
			"GG|Europe/London Europe/Guernsey",
			"GH|Africa/Accra",
			"GI|Europe/Gibraltar",
			"GL|America/Godthab America/Danmarkshavn America/Scoresbysund America/Thule",
			"GM|Africa/Abidjan Africa/Banjul",
			"GN|Africa/Abidjan Africa/Conakry",
			"GP|America/Port_of_Spain America/Guadeloupe",
			"GQ|Africa/Lagos Africa/Malabo",
			"GR|Europe/Athens",
			"GS|Atlantic/South_Georgia",
			"GT|America/Guatemala",
			"GU|Pacific/Guam",
			"GW|Africa/Bissau",
			"GY|America/Guyana",
			"HK|Asia/Hong_Kong",
			"HN|America/Tegucigalpa",
			"HR|Europe/Belgrade Europe/Zagreb",
			"HT|America/Port-au-Prince",
			"HU|Europe/Budapest",
			"ID|Asia/Jakarta Asia/Pontianak Asia/Makassar Asia/Jayapura",
			"IE|Europe/Dublin",
			"IL|Asia/Jerusalem",
			"IM|Europe/London Europe/Isle_of_Man",
			"IN|Asia/Kolkata",
			"IO|Indian/Chagos",
			"IQ|Asia/Baghdad",
			"IR|Asia/Tehran",
			"IS|Atlantic/Reykjavik",
			"IT|Europe/Rome",
			"JE|Europe/London Europe/Jersey",
			"JM|America/Jamaica",
			"JO|Asia/Amman",
			"JP|Asia/Tokyo",
			"KE|Africa/Nairobi",
			"KG|Asia/Bishkek",
			"KH|Asia/Bangkok Asia/Phnom_Penh",
			"KI|Pacific/Tarawa Pacific/Enderbury Pacific/Kiritimati",
			"KM|Africa/Nairobi Indian/Comoro",
			"KN|America/Port_of_Spain America/St_Kitts",
			"KP|Asia/Pyongyang",
			"KR|Asia/Seoul",
			"KW|Asia/Riyadh Asia/Kuwait",
			"KY|America/Panama America/Cayman",
			"KZ|Asia/Almaty Asia/Qyzylorda Asia/Qostanay Asia/Aqtobe Asia/Aqtau Asia/Atyrau Asia/Oral",
			"LA|Asia/Bangkok Asia/Vientiane",
			"LB|Asia/Beirut",
			"LC|America/Port_of_Spain America/St_Lucia",
			"LI|Europe/Zurich Europe/Vaduz",
			"LK|Asia/Colombo",
			"LR|Africa/Monrovia",
			"LS|Africa/Johannesburg Africa/Maseru",
			"LT|Europe/Vilnius",
			"LU|Europe/Luxembourg",
			"LV|Europe/Riga",
			"LY|Africa/Tripoli",
			"MA|Africa/Casablanca",
			"MC|Europe/Monaco",
			"MD|Europe/Chisinau",
			"ME|Europe/Belgrade Europe/Podgorica",
			"MF|America/Port_of_Spain America/Marigot",
			"MG|Africa/Nairobi Indian/Antananarivo",
			"MH|Pacific/Majuro Pacific/Kwajalein",
			"MK|Europe/Belgrade Europe/Skopje",
			"ML|Africa/Abidjan Africa/Bamako",
			"MM|Asia/Yangon",
			"MN|Asia/Ulaanbaatar Asia/Hovd Asia/Choibalsan",
			"MO|Asia/Macau",
			"MP|Pacific/Guam Pacific/Saipan",
			"MQ|America/Martinique",
			"MR|Africa/Abidjan Africa/Nouakchott",
			"MS|America/Port_of_Spain America/Montserrat",
			"MT|Europe/Malta",
			"MU|Indian/Mauritius",
			"MV|Indian/Maldives",
			"MW|Africa/Maputo Africa/Blantyre",
			"MX|America/Mexico_City America/Cancun America/Merida America/Monterrey America/Matamoros America/Mazatlan America/Chihuahua America/Ojinaga America/Hermosillo America/Tijuana America/Bahia_Banderas",
			"MY|Asia/Kuala_Lumpur Asia/Kuching",
			"MZ|Africa/Maputo",
			"NA|Africa/Windhoek",
			"NC|Pacific/Noumea",
			"NE|Africa/Lagos Africa/Niamey",
			"NF|Pacific/Norfolk",
			"NG|Africa/Lagos",
			"NI|America/Managua",
			"NL|Europe/Amsterdam",
			"NO|Europe/Oslo",
			"NP|Asia/Kathmandu",
			"NR|Pacific/Nauru",
			"NU|Pacific/Niue",
			"NZ|Pacific/Auckland Pacific/Chatham",
			"OM|Asia/Dubai Asia/Muscat",
			"PA|America/Panama",
			"PE|America/Lima",
			"PF|Pacific/Tahiti Pacific/Marquesas Pacific/Gambier",
			"PG|Pacific/Port_Moresby Pacific/Bougainville",
			"PH|Asia/Manila",
			"PK|Asia/Karachi",
			"PL|Europe/Warsaw",
			"PM|America/Miquelon",
			"PN|Pacific/Pitcairn",
			"PR|America/Puerto_Rico",
			"PS|Asia/Gaza Asia/Hebron",
			"PT|Europe/Lisbon Atlantic/Madeira Atlantic/Azores",
			"PW|Pacific/Palau",
			"PY|America/Asuncion",
			"QA|Asia/Qatar",
			"RE|Indian/Reunion",
			"RO|Europe/Bucharest",
			"RS|Europe/Belgrade",
			"RU|Europe/Kaliningrad Europe/Moscow Europe/Simferopol Europe/Kirov Europe/Astrakhan Europe/Volgograd Europe/Saratov Europe/Ulyanovsk Europe/Samara Asia/Yekaterinburg Asia/Omsk Asia/Novosibirsk Asia/Barnaul Asia/Tomsk Asia/Novokuznetsk Asia/Krasnoyarsk Asia/Irkutsk Asia/Chita Asia/Yakutsk Asia/Khandyga Asia/Vladivostok Asia/Ust-Nera Asia/Magadan Asia/Sakhalin Asia/Srednekolymsk Asia/Kamchatka Asia/Anadyr",
			"RW|Africa/Maputo Africa/Kigali",
			"SA|Asia/Riyadh",
			"SB|Pacific/Guadalcanal",
			"SC|Indian/Mahe",
			"SD|Africa/Khartoum",
			"SE|Europe/Stockholm",
			"SG|Asia/Singapore",
			"SH|Africa/Abidjan Atlantic/St_Helena",
			"SI|Europe/Belgrade Europe/Ljubljana",
			"SJ|Europe/Oslo Arctic/Longyearbyen",
			"SK|Europe/Prague Europe/Bratislava",
			"SL|Africa/Abidjan Africa/Freetown",
			"SM|Europe/Rome Europe/San_Marino",
			"SN|Africa/Abidjan Africa/Dakar",
			"SO|Africa/Nairobi Africa/Mogadishu",
			"SR|America/Paramaribo",
			"SS|Africa/Juba",
			"ST|Africa/Sao_Tome",
			"SV|America/El_Salvador",
			"SX|America/Curacao America/Lower_Princes",
			"SY|Asia/Damascus",
			"SZ|Africa/Johannesburg Africa/Mbabane",
			"TC|America/Grand_Turk",
			"TD|Africa/Ndjamena",
			"TF|Indian/Reunion Indian/Kerguelen",
			"TG|Africa/Abidjan Africa/Lome",
			"TH|Asia/Bangkok",
			"TJ|Asia/Dushanbe",
			"TK|Pacific/Fakaofo",
			"TL|Asia/Dili",
			"TM|Asia/Ashgabat",
			"TN|Africa/Tunis",
			"TO|Pacific/Tongatapu",
			"TR|Europe/Istanbul",
			"TT|America/Port_of_Spain",
			"TV|Pacific/Funafuti",
			"TW|Asia/Taipei",
			"TZ|Africa/Nairobi Africa/Dar_es_Salaam",
			"UA|Europe/Simferopol Europe/Kiev Europe/Uzhgorod Europe/Zaporozhye",
			"UG|Africa/Nairobi Africa/Kampala",
			"UM|Pacific/Pago_Pago Pacific/Wake Pacific/Honolulu Pacific/Midway",
			"US|America/New_York America/Detroit America/Kentucky/Louisville America/Kentucky/Monticello America/Indiana/Indianapolis America/Indiana/Vincennes America/Indiana/Winamac America/Indiana/Marengo America/Indiana/Petersburg America/Indiana/Vevay America/Chicago America/Indiana/Tell_City America/Indiana/Knox America/Menominee America/North_Dakota/Center America/North_Dakota/New_Salem America/North_Dakota/Beulah America/Denver America/Boise America/Phoenix America/Los_Angeles America/Anchorage America/Juneau America/Sitka America/Metlakatla America/Yakutat America/Nome America/Adak Pacific/Honolulu",
			"UY|America/Montevideo",
			"UZ|Asia/Samarkand Asia/Tashkent",
			"VA|Europe/Rome Europe/Vatican",
			"VC|America/Port_of_Spain America/St_Vincent",
			"VE|America/Caracas",
			"VG|America/Port_of_Spain America/Tortola",
			"VI|America/Port_of_Spain America/St_Thomas",
			"VN|Asia/Bangkok Asia/Ho_Chi_Minh",
			"VU|Pacific/Efate",
			"WF|Pacific/Wallis",
			"WS|Pacific/Apia",
			"YE|Asia/Riyadh Asia/Aden",
			"YT|Africa/Nairobi Indian/Mayotte",
			"ZA|Africa/Johannesburg",
			"ZM|Africa/Maputo Africa/Lusaka",
			"ZW|Africa/Maputo Africa/Harare"
		]
	});


	return moment;
}));
//! moment.js locale configuration
//! locale : Finnish [fi]
//! author : Tarmo Aidantausta : https://github.com/bleadof

;(function (global, factory) {
   typeof exports === 'object' && typeof module !== 'undefined'
       && typeof require === 'function' ? factory(require('../moment')) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var numbersPast = 'nolla yksi kaksi kolme nelj√§ viisi kuusi seitsem√§n kahdeksan yhdeks√§n'.split(
            ' '
        ),
        numbersFuture = [
            'nolla',
            'yhden',
            'kahden',
            'kolmen',
            'nelj√§n',
            'viiden',
            'kuuden',
            numbersPast[7],
            numbersPast[8],
            numbersPast[9],
        ];
    function translate(number, withoutSuffix, key, isFuture) {
        var result = '';
        switch (key) {
            case 's':
                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
            case 'ss':
                result = isFuture ? 'sekunnin' : 'sekuntia';
                break;
            case 'm':
                return isFuture ? 'minuutin' : 'minuutti';
            case 'mm':
                result = isFuture ? 'minuutin' : 'minuuttia';
                break;
            case 'h':
                return isFuture ? 'tunnin' : 'tunti';
            case 'hh':
                result = isFuture ? 'tunnin' : 'tuntia';
                break;
            case 'd':
                return isFuture ? 'p√§iv√§n' : 'p√§iv√§';
            case 'dd':
                result = isFuture ? 'p√§iv√§n' : 'p√§iv√§√§';
                break;
            case 'M':
                return isFuture ? 'kuukauden' : 'kuukausi';
            case 'MM':
                result = isFuture ? 'kuukauden' : 'kuukautta';
                break;
            case 'y':
                return isFuture ? 'vuoden' : 'vuosi';
            case 'yy':
                result = isFuture ? 'vuoden' : 'vuotta';
                break;
        }
        result = verbalNumber(number, isFuture) + ' ' + result;
        return result;
    }
    function verbalNumber(number, isFuture) {
        return number < 10
            ? isFuture
                ? numbersFuture[number]
                : numbersPast[number]
            : number;
    }

    var fi = moment.defineLocale('fi', {
        months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kes√§kuu_hein√§kuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split(
            '_'
        ),
        monthsShort: 'tammi_helmi_maalis_huhti_touko_kes√§_hein√§_elo_syys_loka_marras_joulu'.split(
            '_'
        ),
        weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split(
            '_'
        ),
        weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),
        weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),
        longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD.MM.YYYY',
            LL: 'Do MMMM[ta] YYYY',
            LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',
            LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
            l: 'D.M.YYYY',
            ll: 'Do MMM YYYY',
            lll: 'Do MMM YYYY, [klo] HH.mm',
            llll: 'ddd, Do MMM YYYY, [klo] HH.mm',
        },
        calendar: {
            sameDay: '[t√§n√§√§n] [klo] LT',
            nextDay: '[huomenna] [klo] LT',
            nextWeek: 'dddd [klo] LT',
            lastDay: '[eilen] [klo] LT',
            lastWeek: '[viime] dddd[na] [klo] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s p√§√§st√§',
            past: '%s sitten',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return fi;

})));

// moment-timezone-localization for lang code: fi

;(function (global, factory) {
   typeof exports === 'object' && typeof module !== 'undefined'
       && typeof require === 'function' ? factory(require('../moment')) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


moment.tz.localizedNames = function() {
  return [{"value":"Africa/Abidjan","name":"Abidjan","id":"Africa/Abidjan"},{"value":"Africa/Accra","name":"Accra","id":"Africa/Accra"},{"value":"Africa/Addis_Ababa","name":"Addis Abeba","id":"Africa/Addis_Ababa"},{"value":"Africa/Algiers","name":"Alger","id":"Africa/Algiers"},{"value":"Africa/Asmera","name":"Asmara","id":"Africa/Asmera"},{"value":"Africa/Bamako","name":"Bamako","id":"Africa/Bamako"},{"value":"Africa/Bangui","name":"Bangui","id":"Africa/Bangui"},{"value":"Africa/Banjul","name":"Banjul","id":"Africa/Banjul"},{"value":"Africa/Bissau","name":"Bissau","id":"Africa/Bissau"},{"value":"Africa/Blantyre","name":"Blantyre","id":"Africa/Blantyre"},{"value":"Africa/Brazzaville","name":"Brazzaville","id":"Africa/Brazzaville"},{"value":"Africa/Bujumbura","name":"Bujumbura","id":"Africa/Bujumbura"},{"value":"Africa/Cairo","name":"Kairo","id":"Africa/Cairo"},{"value":"Africa/Casablanca","name":"Casablanca","id":"Africa/Casablanca"},{"value":"Africa/Ceuta","name":"Ceuta","id":"Africa/Ceuta"},{"value":"Africa/Conakry","name":"Conakry","id":"Africa/Conakry"},{"value":"Africa/Dakar","name":"Dakar","id":"Africa/Dakar"},{"value":"Africa/Dar_es_Salaam","name":"Dar es Salaam","id":"Africa/Dar_es_Salaam"},{"value":"Africa/Djibouti","name":"Djibouti","id":"Africa/Djibouti"},{"value":"Africa/Douala","name":"Douala","id":"Africa/Douala"},{"value":"Africa/El_Aaiun","name":"El Aai√∫n","id":"Africa/El_Aaiun"},{"value":"Africa/Freetown","name":"Freetown","id":"Africa/Freetown"},{"value":"Africa/Gaborone","name":"Gaborone","id":"Africa/Gaborone"},{"value":"Africa/Harare","name":"Harare","id":"Africa/Harare"},{"value":"Africa/Johannesburg","name":"Johannesburg","id":"Africa/Johannesburg"},{"value":"Africa/Juba","name":"Juba","id":"Africa/Juba"},{"value":"Africa/Kampala","name":"Kampala","id":"Africa/Kampala"},{"value":"Africa/Khartoum","name":"Khartum","id":"Africa/Khartoum"},{"value":"Africa/Kigali","name":"Kigali","id":"Africa/Kigali"},{"value":"Africa/Kinshasa","name":"Kinshasa","id":"Africa/Kinshasa"},{"value":"Africa/Lagos","name":"Lagos","id":"Africa/Lagos"},{"value":"Africa/Libreville","name":"Libreville","id":"Africa/Libreville"},{"value":"Africa/Lome","name":"Lom√©","id":"Africa/Lome"},{"value":"Africa/Luanda","name":"Luanda","id":"Africa/Luanda"},{"value":"Africa/Lubumbashi","name":"Lubumbashi","id":"Africa/Lubumbashi"},{"value":"Africa/Lusaka","name":"Lusaka","id":"Africa/Lusaka"},{"value":"Africa/Malabo","name":"Malabo","id":"Africa/Malabo"},{"value":"Africa/Maputo","name":"Maputo","id":"Africa/Maputo"},{"value":"Africa/Maseru","name":"Maseru","id":"Africa/Maseru"},{"value":"Africa/Mbabane","name":"Mbabane","id":"Africa/Mbabane"},{"value":"Africa/Mogadishu","name":"Mogadishu","id":"Africa/Mogadishu"},{"value":"Africa/Monrovia","name":"Monrovia","id":"Africa/Monrovia"},{"value":"Africa/Nairobi","name":"Nairobi","id":"Africa/Nairobi"},{"value":"Africa/Ndjamena","name":"N‚ÄôDjamena","id":"Africa/Ndjamena"},{"value":"Africa/Niamey","name":"Niamey","id":"Africa/Niamey"},{"value":"Africa/Nouakchott","name":"Nouakchott","id":"Africa/Nouakchott"},{"value":"Africa/Ouagadougou","name":"Ouagadougou","id":"Africa/Ouagadougou"},{"value":"Africa/Porto-Novo","name":"Porto-Novo","id":"Africa/Porto-Novo"},{"value":"Africa/Sao_Tome","name":"S√£o Tom√©","id":"Africa/Sao_Tome"},{"value":"Africa/Tripoli","name":"Tripoli","id":"Africa/Tripoli"},{"value":"Africa/Tunis","name":"Tunis","id":"Africa/Tunis"},{"value":"Africa/Windhoek","name":"Windhoek","id":"Africa/Windhoek"},{"value":"America/Adak","name":"Adak","id":"America/Adak"},{"value":"America/Anchorage","name":"Anchorage","id":"America/Anchorage"},{"value":"America/Anguilla","name":"Anguilla","id":"America/Anguilla"},{"value":"America/Antigua","name":"Antigua","id":"America/Antigua"},{"value":"America/Araguaina","name":"Aragua√≠na","id":"America/Araguaina"},{"value":"America/Argentina/La_Rioja","name":"La Rioja","id":"America/Argentina/La_Rioja"},{"value":"America/Argentina/Rio_Gallegos","name":"Rio Gallegos","id":"America/Argentina/Rio_Gallegos"},{"value":"America/Argentina/Salta","name":"Salta","id":"America/Argentina/Salta"},{"value":"America/Argentina/San_Juan","name":"San Juan","id":"America/Argentina/San_Juan"},{"value":"America/Argentina/San_Luis","name":"San Luis","id":"America/Argentina/San_Luis"},{"value":"America/Argentina/Tucuman","name":"Tucum√°n","id":"America/Argentina/Tucuman"},{"value":"America/Argentina/Ushuaia","name":"Ushuaia","id":"America/Argentina/Ushuaia"},{"value":"America/Aruba","name":"Aruba","id":"America/Aruba"},{"value":"America/Asuncion","name":"Asunci√≥n","id":"America/Asuncion"},{"value":"America/Bahia","name":"Bahia","id":"America/Bahia"},{"value":"America/Bahia_Banderas","name":"Bah√≠a de Banderas","id":"America/Bahia_Banderas"},{"value":"America/Barbados","name":"Barbados","id":"America/Barbados"},{"value":"America/Belem","name":"Belem","id":"America/Belem"},{"value":"America/Belize","name":"Belize","id":"America/Belize"},{"value":"America/Blanc-Sablon","name":"Blanc-Sablon","id":"America/Blanc-Sablon"},{"value":"America/Boa_Vista","name":"Boa Vista","id":"America/Boa_Vista"},{"value":"America/Bogota","name":"Bogot√°","id":"America/Bogota"},{"value":"America/Boise","name":"Boise","id":"America/Boise"},{"value":"America/Buenos_Aires","name":"Buenos Aires","id":"America/Buenos_Aires"},{"value":"America/Cambridge_Bay","name":"Cambridge Bay","id":"America/Cambridge_Bay"},{"value":"America/Campo_Grande","name":"Campo Grande","id":"America/Campo_Grande"},{"value":"America/Cancun","name":"Canc√∫n","id":"America/Cancun"},{"value":"America/Caracas","name":"Caracas","id":"America/Caracas"},{"value":"America/Catamarca","name":"Catamarca","id":"America/Catamarca"},{"value":"America/Cayenne","name":"Cayenne","id":"America/Cayenne"},{"value":"America/Cayman","name":"Cayman","id":"America/Cayman"},{"value":"America/Chicago","name":"Chicago","id":"America/Chicago"},{"value":"America/Chihuahua","name":"Chihuahua","id":"America/Chihuahua"},{"value":"America/Coral_Harbour","name":"Atikokan","id":"America/Coral_Harbour"},{"value":"America/Cordoba","name":"C√≥rdoba","id":"America/Cordoba"},{"value":"America/Costa_Rica","name":"Costa Rica","id":"America/Costa_Rica"},{"value":"America/Creston","name":"Creston","id":"America/Creston"},{"value":"America/Cuiaba","name":"Cuiab√°","id":"America/Cuiaba"},{"value":"America/Curacao","name":"Cura√ßao","id":"America/Curacao"},{"value":"America/Danmarkshavn","name":"Danmarkshavn","id":"America/Danmarkshavn"},{"value":"America/Dawson","name":"Dawson","id":"America/Dawson"},{"value":"America/Dawson_Creek","name":"Dawson Creek","id":"America/Dawson_Creek"},{"value":"America/Denver","name":"Denver","id":"America/Denver"},{"value":"America/Detroit","name":"Detroit","id":"America/Detroit"},{"value":"America/Dominica","name":"Dominica","id":"America/Dominica"},{"value":"America/Edmonton","name":"Edmonton","id":"America/Edmonton"},{"value":"America/Eirunepe","name":"Eirunep√©","id":"America/Eirunepe"},{"value":"America/El_Salvador","name":"El Salvador","id":"America/El_Salvador"},{"value":"America/Fort_Nelson","name":"Fort Nelson","id":"America/Fort_Nelson"},{"value":"America/Fortaleza","name":"Fortaleza","id":"America/Fortaleza"},{"value":"America/Glace_Bay","name":"Glace Bay","id":"America/Glace_Bay"},{"value":"America/Godthab","name":"NuukGodth√•b","id":"America/Godthab"},{"value":"America/Goose_Bay","name":"Goose Bay","id":"America/Goose_Bay"},{"value":"America/Grand_Turk","name":"Grand Turk","id":"America/Grand_Turk"},{"value":"America/Grenada","name":"Grenada","id":"America/Grenada"},{"value":"America/Guadeloupe","name":"Guadeloupe","id":"America/Guadeloupe"},{"value":"America/Guatemala","name":"Guatemala","id":"America/Guatemala"},{"value":"America/Guayaquil","name":"Guayaquil","id":"America/Guayaquil"},{"value":"America/Guyana","name":"Guyana","id":"America/Guyana"},{"value":"America/Halifax","name":"Halifax","id":"America/Halifax"},{"value":"America/Havana","name":"Havanna","id":"America/Havana"},{"value":"America/Hermosillo","name":"Hermosillo","id":"America/Hermosillo"},{"value":"America/Indiana/Knox","name":"Knox, Indiana","id":"America/Indiana/Knox"},{"value":"America/Indiana/Marengo","name":"Marengo, Indiana","id":"America/Indiana/Marengo"},{"value":"America/Indiana/Petersburg","name":"Petersburg, Indiana","id":"America/Indiana/Petersburg"},{"value":"America/Indiana/Tell_City","name":"Tell City, Indiana","id":"America/Indiana/Tell_City"},{"value":"America/Indiana/Vevay","name":"Vevay, Indiana","id":"America/Indiana/Vevay"},{"value":"America/Indiana/Vincennes","name":"Vincennes, Indiana","id":"America/Indiana/Vincennes"},{"value":"America/Indiana/Winamac","name":"Winamac, Indiana","id":"America/Indiana/Winamac"},{"value":"America/Indianapolis","name":"Indianapolis","id":"America/Indianapolis"},{"value":"America/Inuvik","name":"Inuvik","id":"America/Inuvik"},{"value":"America/Iqaluit","name":"Iqaluit","id":"America/Iqaluit"},{"value":"America/Jamaica","name":"Jamaika","id":"America/Jamaica"},{"value":"America/Jujuy","name":"Jujuy","id":"America/Jujuy"},{"value":"America/Juneau","name":"Juneau","id":"America/Juneau"},{"value":"America/Kentucky/Monticello","name":"Monticello, Kentucky","id":"America/Kentucky/Monticello"},{"value":"America/Kralendijk","name":"Kralendijk","id":"America/Kralendijk"},{"value":"America/La_Paz","name":"La Paz","id":"America/La_Paz"},{"value":"America/Lima","name":"Lima","id":"America/Lima"},{"value":"America/Los_Angeles","name":"Los Angeles","id":"America/Los_Angeles"},{"value":"America/Louisville","name":"Louisville","id":"America/Louisville"},{"value":"America/Lower_Princes","name":"Lower Prince‚Äôs Quarter","id":"America/Lower_Princes"},{"value":"America/Maceio","name":"Macei√≥","id":"America/Maceio"},{"value":"America/Managua","name":"Managua","id":"America/Managua"},{"value":"America/Manaus","name":"Manaus","id":"America/Manaus"},{"value":"America/Marigot","name":"Marigot","id":"America/Marigot"},{"value":"America/Martinique","name":"Martinique","id":"America/Martinique"},{"value":"America/Matamoros","name":"Matamoros","id":"America/Matamoros"},{"value":"America/Mazatlan","name":"Mazatl√°n","id":"America/Mazatlan"},{"value":"America/Mendoza","name":"Mendoza","id":"America/Mendoza"},{"value":"America/Menominee","name":"Menominee","id":"America/Menominee"},{"value":"America/Merida","name":"M√©rida","id":"America/Merida"},{"value":"America/Metlakatla","name":"Metlakatla","id":"America/Metlakatla"},{"value":"America/Mexico_City","name":"Ciudad de M√©xico","id":"America/Mexico_City"},{"value":"America/Miquelon","name":"Miquelon","id":"America/Miquelon"},{"value":"America/Moncton","name":"Moncton","id":"America/Moncton"},{"value":"America/Monterrey","name":"Monterrey","id":"America/Monterrey"},{"value":"America/Montevideo","name":"Montevideo","id":"America/Montevideo"},{"value":"America/Montserrat","name":"Montserrat","id":"America/Montserrat"},{"value":"America/Nassau","name":"Nassau","id":"America/Nassau"},{"value":"America/New_York","name":"New York","id":"America/New_York"},{"value":"America/Nipigon","name":"Nipigon","id":"America/Nipigon"},{"value":"America/Nome","name":"Nome","id":"America/Nome"},{"value":"America/Noronha","name":"Noronha","id":"America/Noronha"},{"value":"America/North_Dakota/Beulah","name":"Beulah, Pohjois-Dakota","id":"America/North_Dakota/Beulah"},{"value":"America/North_Dakota/Center","name":"Center, Pohjois-Dakota","id":"America/North_Dakota/Center"},{"value":"America/North_Dakota/New_Salem","name":"New Salem, Pohjois-Dakota","id":"America/North_Dakota/New_Salem"},{"value":"America/Ojinaga","name":"Ojinaga","id":"America/Ojinaga"},{"value":"America/Panama","name":"Panama","id":"America/Panama"},{"value":"America/Pangnirtung","name":"Pangnirtung","id":"America/Pangnirtung"},{"value":"America/Paramaribo","name":"Paramaribo","id":"America/Paramaribo"},{"value":"America/Phoenix","name":"Phoenix","id":"America/Phoenix"},{"value":"America/Port-au-Prince","name":"Port-au-Prince","id":"America/Port-au-Prince"},{"value":"America/Port_of_Spain","name":"Port of Spain","id":"America/Port_of_Spain"},{"value":"America/Porto_Velho","name":"Porto Velho","id":"America/Porto_Velho"},{"value":"America/Puerto_Rico","name":"Puerto Rico","id":"America/Puerto_Rico"},{"value":"America/Punta_Arenas","name":"Punta Arenas","id":"America/Punta_Arenas"},{"value":"America/Rainy_River","name":"Rainy River","id":"America/Rainy_River"},{"value":"America/Rankin_Inlet","name":"Rankin Inlet","id":"America/Rankin_Inlet"},{"value":"America/Recife","name":"Recife","id":"America/Recife"},{"value":"America/Regina","name":"Regina","id":"America/Regina"},{"value":"America/Resolute","name":"Resolute","id":"America/Resolute"},{"value":"America/Rio_Branco","name":"Rio Branco","id":"America/Rio_Branco"},{"value":"America/Santa_Isabel","name":"Santa Isabel","id":"America/Santa_Isabel"},{"value":"America/Santarem","name":"Santar√©m","id":"America/Santarem"},{"value":"America/Santiago","name":"Santiago de Chile","id":"America/Santiago"},{"value":"America/Santo_Domingo","name":"Santo Domingo","id":"America/Santo_Domingo"},{"value":"America/Sao_Paulo","name":"S√£o Paulo","id":"America/Sao_Paulo"},{"value":"America/Scoresbysund","name":"IttoqqortoormiitScoresbysund","id":"America/Scoresbysund"},{"value":"America/Sitka","name":"Sitka","id":"America/Sitka"},{"value":"America/St_Barthelemy","name":"Saint-Barth√©lemy","id":"America/St_Barthelemy"},{"value":"America/St_Johns","name":"St. John‚Äôs","id":"America/St_Johns"},{"value":"America/St_Kitts","name":"Saint Kitts","id":"America/St_Kitts"},{"value":"America/St_Lucia","name":"Saint Lucia","id":"America/St_Lucia"},{"value":"America/St_Thomas","name":"Saint Thomas","id":"America/St_Thomas"},{"value":"America/St_Vincent","name":"Saint Vincent","id":"America/St_Vincent"},{"value":"America/Swift_Current","name":"Swift Current","id":"America/Swift_Current"},{"value":"America/Tegucigalpa","name":"Tegucigalpa","id":"America/Tegucigalpa"},{"value":"America/Thule","name":"ThuleQaanaaq","id":"America/Thule"},{"value":"America/Thunder_Bay","name":"Thunder Bay","id":"America/Thunder_Bay"},{"value":"America/Tijuana","name":"Tijuana","id":"America/Tijuana"},{"value":"America/Toronto","name":"Toronto","id":"America/Toronto"},{"value":"America/Tortola","name":"Tortola","id":"America/Tortola"},{"value":"America/Vancouver","name":"Vancouver","id":"America/Vancouver"},{"value":"America/Whitehorse","name":"Whitehorse","id":"America/Whitehorse"},{"value":"America/Winnipeg","name":"Winnipeg","id":"America/Winnipeg"},{"value":"America/Yakutat","name":"Yakutat","id":"America/Yakutat"},{"value":"America/Yellowknife","name":"Yellowknife","id":"America/Yellowknife"},{"value":"Antarctica/Casey","name":"Casey","id":"Antarctica/Casey"},{"value":"Antarctica/Davis","name":"Davis","id":"Antarctica/Davis"},{"value":"Antarctica/DumontDUrville","name":"Dumont d‚ÄôUrville","id":"Antarctica/DumontDUrville"},{"value":"Antarctica/Macquarie","name":"Macquariensaari","id":"Antarctica/Macquarie"},{"value":"Antarctica/Mawson","name":"Mawson","id":"Antarctica/Mawson"},{"value":"Antarctica/McMurdo","name":"McMurdo","id":"Antarctica/McMurdo"},{"value":"Antarctica/Palmer","name":"Palmer","id":"Antarctica/Palmer"},{"value":"Antarctica/Rothera","name":"Rothera","id":"Antarctica/Rothera"},{"value":"Antarctica/Syowa","name":"Syowa","id":"Antarctica/Syowa"},{"value":"Antarctica/Troll","name":"Troll","id":"Antarctica/Troll"},{"value":"Antarctica/Vostok","name":"Vostok","id":"Antarctica/Vostok"},{"value":"Arctic/Longyearbyen","name":"Longyearbyen","id":"Arctic/Longyearbyen"},{"value":"Asia/Aden","name":"Aden","id":"Asia/Aden"},{"value":"Asia/Almaty","name":"Almaty","id":"Asia/Almaty"},{"value":"Asia/Amman","name":"Amman","id":"Asia/Amman"},{"value":"Asia/Anadyr","name":"Anadyr","id":"Asia/Anadyr"},{"value":"Asia/Aqtau","name":"Aqtaw","id":"Asia/Aqtau"},{"value":"Asia/Aqtobe","name":"Aqt√∂be","id":"Asia/Aqtobe"},{"value":"Asia/Ashgabat","name":"A≈°gabat","id":"Asia/Ashgabat"},{"value":"Asia/Atyrau","name":"Atƒ±raw","id":"Asia/Atyrau"},{"value":"Asia/Baghdad","name":"Bagdad","id":"Asia/Baghdad"},{"value":"Asia/Bahrain","name":"Bahrain","id":"Asia/Bahrain"},{"value":"Asia/Baku","name":"Baku","id":"Asia/Baku"},{"value":"Asia/Bangkok","name":"Bangkok","id":"Asia/Bangkok"},{"value":"Asia/Barnaul","name":"Barnaul","id":"Asia/Barnaul"},{"value":"Asia/Beirut","name":"Beirut","id":"Asia/Beirut"},{"value":"Asia/Bishkek","name":"Bi≈°kek","id":"Asia/Bishkek"},{"value":"Asia/Brunei","name":"Brunei","id":"Asia/Brunei"},{"value":"Asia/Calcutta","name":"Kalkutta","id":"Asia/Calcutta"},{"value":"Asia/Chita","name":"T≈°ita","id":"Asia/Chita"},{"value":"Asia/Choibalsan","name":"T≈°oibalsa","id":"Asia/Choibalsan"},{"value":"Asia/Colombo","name":"Colombo","id":"Asia/Colombo"},{"value":"Asia/Damascus","name":"Damaskos","id":"Asia/Damascus"},{"value":"Asia/Dhaka","name":"Dhaka","id":"Asia/Dhaka"},{"value":"Asia/Dili","name":"Dili","id":"Asia/Dili"},{"value":"Asia/Dubai","name":"Dubai","id":"Asia/Dubai"},{"value":"Asia/Dushanbe","name":"Du≈°anbe","id":"Asia/Dushanbe"},{"value":"Asia/Famagusta","name":"Famagusta","id":"Asia/Famagusta"},{"value":"Asia/Gaza","name":"Gaza","id":"Asia/Gaza"},{"value":"Asia/Hebron","name":"Hebron","id":"Asia/Hebron"},{"value":"Asia/Hong_Kong","name":"Hongkong","id":"Asia/Hong_Kong"},{"value":"Asia/Hovd","name":"Hovd","id":"Asia/Hovd"},{"value":"Asia/Irkutsk","name":"Irkutsk","id":"Asia/Irkutsk"},{"value":"Asia/Jakarta","name":"Jakarta","id":"Asia/Jakarta"},{"value":"Asia/Jayapura","name":"Jayapura","id":"Asia/Jayapura"},{"value":"Asia/Jerusalem","name":"Jerusalem","id":"Asia/Jerusalem"},{"value":"Asia/Kabul","name":"Kabul","id":"Asia/Kabul"},{"value":"Asia/Kamchatka","name":"Kamt≈°atka","id":"Asia/Kamchatka"},{"value":"Asia/Karachi","name":"Karachi","id":"Asia/Karachi"},{"value":"Asia/Katmandu","name":"Kathmandu","id":"Asia/Katmandu"},{"value":"Asia/Khandyga","name":"Handyga","id":"Asia/Khandyga"},{"value":"Asia/Krasnoyarsk","name":"Krasnojarsk","id":"Asia/Krasnoyarsk"},{"value":"Asia/Kuala_Lumpur","name":"Kuala Lumpur","id":"Asia/Kuala_Lumpur"},{"value":"Asia/Kuching","name":"Kuching","id":"Asia/Kuching"},{"value":"Asia/Kuwait","name":"Kuwait","id":"Asia/Kuwait"},{"value":"Asia/Macau","name":"Macao","id":"Asia/Macau"},{"value":"Asia/Magadan","name":"Magadan","id":"Asia/Magadan"},{"value":"Asia/Makassar","name":"Makassar","id":"Asia/Makassar"},{"value":"Asia/Manila","name":"Manila","id":"Asia/Manila"},{"value":"Asia/Muscat","name":"Masqat","id":"Asia/Muscat"},{"value":"Asia/Nicosia","name":"Nikosia","id":"Asia/Nicosia"},{"value":"Asia/Novokuznetsk","name":"Novokuznetsk","id":"Asia/Novokuznetsk"},{"value":"Asia/Novosibirsk","name":"Novosibirsk","id":"Asia/Novosibirsk"},{"value":"Asia/Omsk","name":"Omsk","id":"Asia/Omsk"},{"value":"Asia/Oral","name":"Uralsk","id":"Asia/Oral"},{"value":"Asia/Phnom_Penh","name":"Phnom Penh","id":"Asia/Phnom_Penh"},{"value":"Asia/Pontianak","name":"Pontianak","id":"Asia/Pontianak"},{"value":"Asia/Pyongyang","name":"Pjongjang","id":"Asia/Pyongyang"},{"value":"Asia/Qatar","name":"Qatar","id":"Asia/Qatar"},{"value":"Asia/Qyzylorda","name":"Qƒ±zƒ±lorda","id":"Asia/Qyzylorda"},{"value":"Asia/Rangoon","name":"Yangon","id":"Asia/Rangoon"},{"value":"Asia/Riyadh","name":"Riad","id":"Asia/Riyadh"},{"value":"Asia/Saigon","name":"H·ªì Ch√≠ Minhin kaupunki","id":"Asia/Saigon"},{"value":"Asia/Sakhalin","name":"Sahalin","id":"Asia/Sakhalin"},{"value":"Asia/Samarkand","name":"Samarkand","id":"Asia/Samarkand"},{"value":"Asia/Seoul","name":"Soul","id":"Asia/Seoul"},{"value":"Asia/Shanghai","name":"Shanghai","id":"Asia/Shanghai"},{"value":"Asia/Singapore","name":"Singapore","id":"Asia/Singapore"},{"value":"Asia/Srednekolymsk","name":"Srednekolymsk","id":"Asia/Srednekolymsk"},{"value":"Asia/Taipei","name":"Taipei","id":"Asia/Taipei"},{"value":"Asia/Tashkent","name":"Ta≈°kent","id":"Asia/Tashkent"},{"value":"Asia/Tbilisi","name":"Tbilisi","id":"Asia/Tbilisi"},{"value":"Asia/Tehran","name":"Teheran","id":"Asia/Tehran"},{"value":"Asia/Thimphu","name":"Thimphu","id":"Asia/Thimphu"},{"value":"Asia/Tokyo","name":"Tokio","id":"Asia/Tokyo"},{"value":"Asia/Tomsk","name":"Tomsk","id":"Asia/Tomsk"},{"value":"Asia/Ulaanbaatar","name":"Ulan Bator","id":"Asia/Ulaanbaatar"},{"value":"Asia/Urumqi","name":"√úr√ºmqi","id":"Asia/Urumqi"},{"value":"Asia/Ust-Nera","name":"Ust-Nera","id":"Asia/Ust-Nera"},{"value":"Asia/Vientiane","name":"Vientiane","id":"Asia/Vientiane"},{"value":"Asia/Vladivostok","name":"Vladivostok","id":"Asia/Vladivostok"},{"value":"Asia/Yakutsk","name":"Jakutsk","id":"Asia/Yakutsk"},{"value":"Asia/Yekaterinburg","name":"Jekaterinburg","id":"Asia/Yekaterinburg"},{"value":"Asia/Yerevan","name":"Jerevan","id":"Asia/Yerevan"},{"value":"Atlantic/Azores","name":"Azorit","id":"Atlantic/Azores"},{"value":"Atlantic/Bermuda","name":"Bermuda","id":"Atlantic/Bermuda"},{"value":"Atlantic/Canary","name":"Kanariansaaret","id":"Atlantic/Canary"},{"value":"Atlantic/Cape_Verde","name":"Kap Verde","id":"Atlantic/Cape_Verde"},{"value":"Atlantic/Faeroe","name":"F√§rsaaret","id":"Atlantic/Faeroe"},{"value":"Atlantic/Madeira","name":"Madeira","id":"Atlantic/Madeira"},{"value":"Atlantic/Reykjavik","name":"Reykjav√≠k","id":"Atlantic/Reykjavik"},{"value":"Atlantic/South_Georgia","name":"Etel√§-Georgia","id":"Atlantic/South_Georgia"},{"value":"Atlantic/St_Helena","name":"Saint Helena","id":"Atlantic/St_Helena"},{"value":"Atlantic/Stanley","name":"Stanley","id":"Atlantic/Stanley"},{"value":"Australia/Adelaide","name":"Adelaide","id":"Australia/Adelaide"},{"value":"Australia/Brisbane","name":"Brisbane","id":"Australia/Brisbane"},{"value":"Australia/Broken_Hill","name":"Broken Hill","id":"Australia/Broken_Hill"},{"value":"Australia/Currie","name":"Currie","id":"Australia/Currie"},{"value":"Australia/Darwin","name":"Darwin","id":"Australia/Darwin"},{"value":"Australia/Eucla","name":"Eucla","id":"Australia/Eucla"},{"value":"Australia/Hobart","name":"Hobart","id":"Australia/Hobart"},{"value":"Australia/Lindeman","name":"Lindeman","id":"Australia/Lindeman"},{"value":"Australia/Lord_Howe","name":"Lord Howe","id":"Australia/Lord_Howe"},{"value":"Australia/Melbourne","name":"Melbourne","id":"Australia/Melbourne"},{"value":"Australia/Perth","name":"Perth","id":"Australia/Perth"},{"value":"Australia/Sydney","name":"Sydney","id":"Australia/Sydney"},{"value":"Etc/UTC","name":"UTC-yleisaika","id":"Etc/UTC"},{"value":"Europe/Amsterdam","name":"Amsterdam","id":"Europe/Amsterdam"},{"value":"Europe/Andorra","name":"Andorra","id":"Europe/Andorra"},{"value":"Europe/Astrakhan","name":"Astrahan","id":"Europe/Astrakhan"},{"value":"Europe/Athens","name":"Ateena","id":"Europe/Athens"},{"value":"Europe/Belgrade","name":"Belgrad","id":"Europe/Belgrade"},{"value":"Europe/Berlin","name":"Berliini","id":"Europe/Berlin"},{"value":"Europe/Bratislava","name":"Bratislava","id":"Europe/Bratislava"},{"value":"Europe/Brussels","name":"Bryssel","id":"Europe/Brussels"},{"value":"Europe/Bucharest","name":"Bukarest","id":"Europe/Bucharest"},{"value":"Europe/Budapest","name":"Budapest","id":"Europe/Budapest"},{"value":"Europe/Busingen","name":"B√ºsingen","id":"Europe/Busingen"},{"value":"Europe/Chisinau","name":"Chi≈üinƒÉu","id":"Europe/Chisinau"},{"value":"Europe/Copenhagen","name":"K√∂√∂penhamina","id":"Europe/Copenhagen"},{"value":"Europe/Dublin","name":"Irlannin kes√§aikaDublin","id":"Europe/Dublin"},{"value":"Europe/Gibraltar","name":"Gibraltar","id":"Europe/Gibraltar"},{"value":"Europe/Guernsey","name":"Guernsey","id":"Europe/Guernsey"},{"value":"Europe/Helsinki","name":"Helsinki","id":"Europe/Helsinki"},{"value":"Europe/Isle_of_Man","name":"Mansaari","id":"Europe/Isle_of_Man"},{"value":"Europe/Istanbul","name":"Istanbul","id":"Europe/Istanbul"},{"value":"Europe/Jersey","name":"Jersey","id":"Europe/Jersey"},{"value":"Europe/Kaliningrad","name":"Kaliningrad","id":"Europe/Kaliningrad"},{"value":"Europe/Kiev","name":"Kiova","id":"Europe/Kiev"},{"value":"Europe/Kirov","name":"Kirov","id":"Europe/Kirov"},{"value":"Europe/Lisbon","name":"Lissabon","id":"Europe/Lisbon"},{"value":"Europe/Ljubljana","name":"Ljubljana","id":"Europe/Ljubljana"},{"value":"Europe/London","name":"Britannian kes√§aikaLontoo","id":"Europe/London"},{"value":"Europe/Luxembourg","name":"Luxemburg","id":"Europe/Luxembourg"},{"value":"Europe/Madrid","name":"Madrid","id":"Europe/Madrid"},{"value":"Europe/Malta","name":"Malta","id":"Europe/Malta"},{"value":"Europe/Mariehamn","name":"MaarianhaminaMariehamn","id":"Europe/Mariehamn"},{"value":"Europe/Minsk","name":"Minsk","id":"Europe/Minsk"},{"value":"Europe/Monaco","name":"Monaco","id":"Europe/Monaco"},{"value":"Europe/Moscow","name":"Moskova","id":"Europe/Moscow"},{"value":"Europe/Oslo","name":"Oslo","id":"Europe/Oslo"},{"value":"Europe/Paris","name":"Pariisi","id":"Europe/Paris"},{"value":"Europe/Podgorica","name":"Podgorica","id":"Europe/Podgorica"},{"value":"Europe/Prague","name":"Praha","id":"Europe/Prague"},{"value":"Europe/Riga","name":"Riika","id":"Europe/Riga"},{"value":"Europe/Rome","name":"Rooma","id":"Europe/Rome"},{"value":"Europe/Samara","name":"Samara","id":"Europe/Samara"},{"value":"Europe/San_Marino","name":"San Marino","id":"Europe/San_Marino"},{"value":"Europe/Sarajevo","name":"Sarajevo","id":"Europe/Sarajevo"},{"value":"Europe/Saratov","name":"Saratov","id":"Europe/Saratov"},{"value":"Europe/Simferopol","name":"Simferopol","id":"Europe/Simferopol"},{"value":"Europe/Skopje","name":"Skopje","id":"Europe/Skopje"},{"value":"Europe/Sofia","name":"Sofia","id":"Europe/Sofia"},{"value":"Europe/Stockholm","name":"Tukholma","id":"Europe/Stockholm"},{"value":"Europe/Tallinn","name":"Tallinna","id":"Europe/Tallinn"},{"value":"Europe/Tirane","name":"Tirana","id":"Europe/Tirane"},{"value":"Europe/Ulyanovsk","name":"Uljanovsk","id":"Europe/Ulyanovsk"},{"value":"Europe/Uzhgorod","name":"U≈ægorod","id":"Europe/Uzhgorod"},{"value":"Europe/Vaduz","name":"Vaduz","id":"Europe/Vaduz"},{"value":"Europe/Vatican","name":"Vatikaani","id":"Europe/Vatican"},{"value":"Europe/Vienna","name":"Wien","id":"Europe/Vienna"},{"value":"Europe/Vilnius","name":"Vilna","id":"Europe/Vilnius"},{"value":"Europe/Volgograd","name":"Volgograd","id":"Europe/Volgograd"},{"value":"Europe/Warsaw","name":"Varsova","id":"Europe/Warsaw"},{"value":"Europe/Zagreb","name":"Zagreb","id":"Europe/Zagreb"},{"value":"Europe/Zaporozhye","name":"Zapori≈æ≈æja","id":"Europe/Zaporozhye"},{"value":"Europe/Zurich","name":"Z√ºrich","id":"Europe/Zurich"},{"value":"Indian/Antananarivo","name":"Antananarivo","id":"Indian/Antananarivo"},{"value":"Indian/Chagos","name":"Chagos","id":"Indian/Chagos"},{"value":"Indian/Christmas","name":"Joulusaari","id":"Indian/Christmas"},{"value":"Indian/Cocos","name":"Kookossaaret","id":"Indian/Cocos"},{"value":"Indian/Comoro","name":"Komorit","id":"Indian/Comoro"},{"value":"Indian/Kerguelen","name":"Kerguelensaaret","id":"Indian/Kerguelen"},{"value":"Indian/Mahe","name":"Mah√©","id":"Indian/Mahe"},{"value":"Indian/Maldives","name":"Malediivit","id":"Indian/Maldives"},{"value":"Indian/Mauritius","name":"Mauritius","id":"Indian/Mauritius"},{"value":"Indian/Mayotte","name":"Mayotte","id":"Indian/Mayotte"},{"value":"Indian/Reunion","name":"R√©union","id":"Indian/Reunion"},{"value":"Pacific/Apia","name":"Apia","id":"Pacific/Apia"},{"value":"Pacific/Auckland","name":"Auckland","id":"Pacific/Auckland"},{"value":"Pacific/Bougainville","name":"Bougainville","id":"Pacific/Bougainville"},{"value":"Pacific/Chatham","name":"Chathamsaaret","id":"Pacific/Chatham"},{"value":"Pacific/Easter","name":"P√§√§si√§issaari","id":"Pacific/Easter"},{"value":"Pacific/Efate","name":"Efate","id":"Pacific/Efate"},{"value":"Pacific/Enderbury","name":"Enderbury","id":"Pacific/Enderbury"},{"value":"Pacific/Fakaofo","name":"Fakaofo","id":"Pacific/Fakaofo"},{"value":"Pacific/Fiji","name":"Fid≈æi","id":"Pacific/Fiji"},{"value":"Pacific/Funafuti","name":"Funafuti","id":"Pacific/Funafuti"},{"value":"Pacific/Galapagos","name":"Galapagos","id":"Pacific/Galapagos"},{"value":"Pacific/Gambier","name":"Gambiersaaret","id":"Pacific/Gambier"},{"value":"Pacific/Guadalcanal","name":"Guadalcanal","id":"Pacific/Guadalcanal"},{"value":"Pacific/Guam","name":"Guam","id":"Pacific/Guam"},{"value":"Pacific/Honolulu","name":"Honolulu","id":"Pacific/Honolulu"},{"value":"Pacific/Johnston","name":"Johnston","id":"Pacific/Johnston"},{"value":"Pacific/Kiritimati","name":"Kiritimati","id":"Pacific/Kiritimati"},{"value":"Pacific/Kosrae","name":"Kosrae","id":"Pacific/Kosrae"},{"value":"Pacific/Kwajalein","name":"Kwajalein","id":"Pacific/Kwajalein"},{"value":"Pacific/Majuro","name":"Majuro","id":"Pacific/Majuro"},{"value":"Pacific/Marquesas","name":"Marquesassaaret","id":"Pacific/Marquesas"},{"value":"Pacific/Midway","name":"Midwaysaaret","id":"Pacific/Midway"},{"value":"Pacific/Nauru","name":"Nauru","id":"Pacific/Nauru"},{"value":"Pacific/Niue","name":"Niue","id":"Pacific/Niue"},{"value":"Pacific/Norfolk","name":"Norfolk","id":"Pacific/Norfolk"},{"value":"Pacific/Noumea","name":"Noum√©a","id":"Pacific/Noumea"},{"value":"Pacific/Pago_Pago","name":"Pago Pago","id":"Pacific/Pago_Pago"},{"value":"Pacific/Palau","name":"Palau","id":"Pacific/Palau"},{"value":"Pacific/Pitcairn","name":"Pitcairn","id":"Pacific/Pitcairn"},{"value":"Pacific/Ponape","name":"Pohnpei","id":"Pacific/Ponape"},{"value":"Pacific/Port_Moresby","name":"Port Moresby","id":"Pacific/Port_Moresby"},{"value":"Pacific/Rarotonga","name":"Rarotonga","id":"Pacific/Rarotonga"},{"value":"Pacific/Saipan","name":"Saipan","id":"Pacific/Saipan"},{"value":"Pacific/Tahiti","name":"Tahiti","id":"Pacific/Tahiti"},{"value":"Pacific/Tarawa","name":"Tarawa","id":"Pacific/Tarawa"},{"value":"Pacific/Tongatapu","name":"Tongatapu","id":"Pacific/Tongatapu"},{"value":"Pacific/Truk","name":"Chuuk","id":"Pacific/Truk"},{"value":"Pacific/Wake","name":"Wake","id":"Pacific/Wake"},{"value":"Pacific/Wallis","name":"Wallis","id":"Pacific/Wallis"}];
};

return moment;
})));

moment.fn.shortDateNoYear = function(){ return this.format('D MMM'); };
moment.fn.shortDate = function(){ return this.format('D MMM, YYYY'); };
moment.fn.longDate = function(){ return this.format('MMMM D, YYYY h:mma'); };
moment.fn.relativeAge = function(opts){ return Discourse.Formatter.relativeAge(this.toDate(), opts)};
